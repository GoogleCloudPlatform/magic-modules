# These resource types are here until the PRs get merged in upstream.  :)
resource_types:
    - name: git-branch
      type: docker-image
      source:
          # Note: resource types cannot use credhub substitution - "nmckinley" is hardcoded here.
          repository: nmckinley/concourse-git-resource
          tag: v0.1.7

    - name: github-pull-request
      type: docker-image
      source:
          repository: nmckinley/concourse-github-pr-resource
          tag: v0.1.4

resources:
    - name: magic-modules
      type: git-branch
      source:
          uri: git@github.com:((github-account.username))/magic-modules.git
          private_key: ((repo-key.private_key))

    - name: magic-modules-gcp
      type: git-branch
      source:
          uri: git@github.com:GoogleCloudPlatform/magic-modules.git
          private_key: ((repo-key.private_key))

    - name: magic-modules-new-prs
      type: github-pull-request
      source:
          repo: GoogleCloudPlatform/magic-modules
          private_key: ((repo-key.private_key))
          access_token: ((github-account.password))
          authorship_restriction: false

    - name: terraform-intermediate
      type: git-branch
      source:
          uri: git@github.com:((github-account.username))/terraform-provider-google.git
          private_key: ((repo-key.private_key))

    - name: mm-approved-prs
      type: github-pull-request
      source:
          repo: GoogleCloudPlatform/magic-modules
          private_key: ((repo-key.private_key))
          access_token: ((github-account.password))
          only_mergeable: true
          require_review_approval: true

    - name: nmckinley-pr
      type: docker-image
      source:
        repository: ((dockerhub-account.username))/concourse-github-pr-resource
        username: ((dockerhub-account.username))
        password: ((dockerhub-account.password))
        
    - name: terraform-pr
      type: github-pull-request
      source:
        repo: terraform-providers/terraform-provider-google
        private_key: ((repo-key.private_key))
        access_token: ((github-account.password))
        label: autogenerated

jobs:
    - name: mm-generate
      plan:
          - aggregate:
              - get: magic-modules
                resource: magic-modules-new-prs
                version: every
                trigger: true
                params:
                    submodules: [build/terraform]
            # consumes: magic-modules (detached HEAD)
            # produces: magic-modules-branched (new branch, with submodule)
          - task: branch-magic-modules
            file: magic-modules/.ci/magic-modules/branch.yml
            # consumes: magic-modules-branched
            # produces: terraform-generated
          - task: generate-terraform
            file: magic-modules-branched/.ci/magic-modules/generate-terraform.yml
            # Puts 'terraform-generated' into the robot's fork.
          - put: terraform-intermediate
            params:
                repository: terraform-generated
                branch_file: magic-modules-branched/branchname
                only_if_diff: true
                force: true
            # consumes: magic-modules-branched
            # produces: magic-modules-submodules
          - task: point-to-submodules
            file: magic-modules-branched/.ci/magic-modules/point-to-submodules.yml
            params:
              # This needs to match the username for the 'terraform-intermediate' resource.
                GH_USERNAME: ((github-account.username))
                CREDS: ((repo-key.private_key))
          # This 'put' needs to go below all the submodules because it has a commit which
          # points to those submodules.
          - put: magic-modules
            params:
                repository: magic-modules-submodules
                branch_file: magic-modules-branched/branchname
                only_if_diff: true

    - name: terraform-test
      plan:
          - aggregate:
              - get: magic-modules
                version: every
                trigger: true
                params:
                    submodules: [build/terraform]
                passed: [mm-generate]
          - task: test
            file: magic-modules/.ci/unit-tests/task.yml

    - name: create-prs
      plan:
          - get: magic-modules
            version: every
            # trigger: true
            params:
                submodules: [build/terraform]
            passed: [terraform-test, mm-generate]
          - get: mm-initial-pr
            resource: magic-modules-new-prs
            passed: [mm-generate]
            version: every
          # TODO(ndmckinley): This will unconditionally attempt to create a PR - before
          # we set it to run automatically, we need to add checks to see if a PR needs
          # to be generated.
          - task: create-pr
            file: magic-modules/.ci/magic-modules/create-pr.yml
            params:
                GITHUB_TOKEN: ((github-account.password))
                # This is what tells us which terraform repo to write PRs against - this
                # is what you change if you want to test this in a non-live environment.
                TERRAFORM_REPO: terraform-providers/terraform-provider-google
            on_failure:
              put: magic-modules-new-prs
              params:
                  status: failure
                  path: mm-initial-pr
          # TODO(ndmckinley): This will work to update the PR *if* the original PR was opened
          # from the magic-modules repository.  That's not always going to be true - figure
          # out what to do if, for instance, we can't modify the PR.
          - put: magic-modules
            params:
                branch_file: mm-initial-pr/.git/branch
                repository: magic-modules
                only_if_diff: true
          - put: magic-modules-new-prs
            params:
                status: success
                path: mm-initial-pr
                comment: magic-modules-with-comment/pr_comment

    - name: merge-prs
      plan:
          - get: mm-approved-prs
          - task: merge-and-update
            file: mm-approved-prs/.ci/magic-modules/merge.yml
            params:
                CREDS: ((repo-key.private_key))
          - put: magic-modules-gcp
            params:
                repository: mm-output
                branch_file: mm-approved-prs/.git/branch
                only_if_diff: true
          - put: mm-approved-prs
            params:
                path: mm-output
                status: success
                merge:
                    method: squash
                    commit_msg: mm-output/commit_message

    - name: create-pr-image
      plan:
          - get: magic-modules
          - put: nmckinley-pr
            params:
              build: magic-modules/.ci/containers/pull-request

    - name: test-terraform-pr
      plan:
          - aggregate:
              - get: magic-modules
              - get: terraform
                resource: terraform-pr
                version: every
                trigger: true
          - task: test
            file: magic-modules/.ci/unit-tests/test-terraform.yml
            on_failure:
              put: terraform-pr
              params:
                path: terraform-pr
                status: failure
            on_success:
              put: terraform-pr
              params:
                path: terraform-pr
                status: success
