diff --git a/assets/lib/filters/dependent_prs.rb b/assets/lib/filters/dependent_prs.rb
new file mode 100644
index 0000000..e50d45b
--- /dev/null
+++ b/assets/lib/filters/dependent_prs.rb
@@ -0,0 +1,16 @@
+module Filters
+  class Dependents 
+    def initialize(pull_requests:, input: Input.instance)
+      @pull_requests = pull_requests
+      @input = input
+    end
+
+    def pull_requests
+      if @input.source.check_dependent_prs
+        @memoized ||= @pull_requests.delete_if {|x| !x.dependent_prs_merged? }
+      else
+        @pull_requests
+      end
+    end
+  end
+end
diff --git a/assets/lib/pull_request.rb b/assets/lib/pull_request.rb
index 8252408..d0c1762 100644
--- a/assets/lib/pull_request.rb
+++ b/assets/lib/pull_request.rb
@@ -29,6 +29,18 @@ class PullRequest
     %w[OWNER COLLABORATOR MEMBER].include? @pr['author_association']
   end
 
+  def dependent_prs_merged?
+    # For all comments on the pull request...
+    Octokit.pull_comments(base_repo, id).all? do |c|
+      # If they're by someone we trust...
+      return true unless %w(OWNER COLLABORATOR MEMBER).include?(c['author_association'])
+      # Confirm that any PR they reference as a dependency is merged.
+      c['body'].scan(/depends: https:\/\/github.com\/(?<user>\w*)\/(?<repo>[\w-]*)\/pull\/(?<pr>\d*)/).all? {
+        |m| Octokit.pull_request(m[0] + "/" + m[1], m[2])['merged']
+      }
+    end
+  end
+
   def equals?(id:, sha:)
     [self.sha, self.id.to_s] == [sha, id.to_s]
   end
