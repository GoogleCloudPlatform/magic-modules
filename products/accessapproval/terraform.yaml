# Copyright 2020 Google Inc.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

--- !ruby/object:Provider::Terraform::Config
overrides: !ruby/object:Overrides::ResourceOverrides
  FolderSettings: !ruby/object:Overrides::Terraform::ResourceOverride
    legacy_name: "google_folder_access_approval_settings"
    import_format: ["folders/{{folder_id}}/accessApprovalSettings"]
    examples:
      - !ruby/object:Provider::Terraform::Examples
        skip_test: true
        name: 'folder_access_approval_full'
        primary_resource_id: 'folder_access_approval'
        vars:
          folder_name: 'my-folder'
        test_env_vars:
          org_id: :ORG_ID
    custom_code: !ruby/object:Provider::Terraform::CustomCode
      custom_delete: templates/terraform/custom_delete/clear_folder_access_approval_settings.go.erb
      pre_create: templates/terraform/update_mask.erb
      constants: templates/terraform/constants/access_approval.go.erb
    properties:
      notificationEmails: !ruby/object:Overrides::Terraform::PropertyOverride
        is_set: true
        default_from_api: true
      enrolledServices: !ruby/object:Overrides::Terraform::PropertyOverride
        is_set: true
        set_hash_func: accessApprovalEnrolledServicesHash
  ProjectSettings: !ruby/object:Overrides::Terraform::ResourceOverride
    legacy_name: "google_project_access_approval_settings"
    import_format: ["projects/{{project}}/accessApprovalSettings"]
    examples:
      - !ruby/object:Provider::Terraform::Examples
        skip_test: true
        name: 'project_access_approval_full'
        primary_resource_id: 'project_access_approval'
        test_env_vars:
          project: :PROJECT_NAME
          org_id: :ORG_ID
    custom_code: !ruby/object:Provider::Terraform::CustomCode
      custom_delete: templates/terraform/custom_delete/clear_project_access_approval_settings.go.erb
      pre_create: templates/terraform/update_mask.erb
    properties:
      notificationEmails: !ruby/object:Overrides::Terraform::PropertyOverride
        is_set: true
        default_from_api: true
      enrolledServices: !ruby/object:Overrides::Terraform::PropertyOverride
        is_set: true
        set_hash_func: accessApprovalEnrolledServicesHash
  OrganizationSettings: !ruby/object:Overrides::Terraform::ResourceOverride
    legacy_name: "google_organization_access_approval_settings"
    import_format: ["organizations/{{organization_id}}/accessApprovalSettings"]
    examples:
      - !ruby/object:Provider::Terraform::Examples
        skip_test: true
        name: 'organization_access_approval_full'
        primary_resource_id: 'organization_access_approval'
        test_env_vars:
          org_id: :ORG_ID
    custom_code: !ruby/object:Provider::Terraform::CustomCode
      custom_delete: templates/terraform/custom_delete/clear_organization_access_approval_settings.go.erb
      pre_create: templates/terraform/update_mask.erb
    properties:
      notificationEmails: !ruby/object:Overrides::Terraform::PropertyOverride
        is_set: true
        default_from_api: true
      enrolledServices: !ruby/object:Overrides::Terraform::PropertyOverride
        is_set: true
        set_hash_func: accessApprovalEnrolledServicesHash

# This is for copying files over
files: !ruby/object:Provider::Config::Files
  # These files have templating (ERB) code that will be run.
  # This is usually to add licensing info, autogeneration notices, etc.
  compile:
<%= lines(indent(compile('provider/terraform/product~compile.yaml'), 4)) -%>
