# Copyright 2019 Google Inc.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

--- !ruby/object:Api::Product
name: DeploymentManager
display_name: Cloud Deployment Manager
versions:
  - !ruby/object:Api::Product::Version
    name: ga
    base_url: https://www.googleapis.com/deploymentmanager/v2/
scopes:
  - https://www.googleapis.com/auth/cloud-platform
apis_required:
  - !ruby/object:Api::Product::ApiReference
    name: Deployment Manager API
    url: https://console.cloud.google.com/apis/library/deploymentmanager.googleapis.com/
objects:
  - !ruby/object:Api::Resource
    name: 'Deployment'
    kind: 'deploymentmanager#deployment'
    base_url: projects/{{project}}/global/deployments
    self_link: projects/{{project}}/global/deployments/{{name}}
    create_url: projects/{{project}}/global/deployments?preview={{preview}}&createPolicy={{create_policy}}
    delete_url: projects/{{project}}/global/deployments/{{name}}?deletePolicy={{delete_policy}}
    # A deployment is updatable, but we need to have custom update behavior.
    input: true
    update_verb: :PATCH
    update_url: projects/{{project}}/global/deployments/{{name}}?preview={{preview}}&createPolicy={{create_policy}}&deletePolicy={{delete_policy}}
    description: |
      A collection of resources that are deployed and managed together using
      a configuration file
    async: !ruby/object:Api::OpAsync
      operation: !ruby/object:Api::OpAsync::Operation
        kind: 'deploymentmanager#operation'
        path: 'name'
        full_url: 'selfLink'
        wait_ms: 1000
      result: !ruby/object:Api::OpAsync::Result
        path: 'targetLink'
      status: !ruby/object:Api::OpAsync::Status
        path: 'status'
        complete: 'DONE'
        allowed:
          - 'PENDING'
          - 'RUNNING'
          - 'DONE'
      error: !ruby/object:Api::OpAsync::Error
        path: 'error/errors'
        message: 'message'
    parameters:
      # These properties are query parameters given on create/update/delete.
      # They should be tracked and updatable.
      - !ruby/object:Api::Type::Enum
        name: 'createPolicy'
        description: |
          Set the policy to use for creating new resources. Only used on
          create and update. Valid values are `CREATE_OR_ACQUIRE` (default) or
          `ACQUIRE`. If set to `ACQUIRE` and resources do not already exist,
          the deployment will fail. Note that updating this field does not
          actually affect the deployment, just how it is updated.
        url_param_only: true
        default_value: :CREATE_OR_ACQUIRE
        values:
          - :ACQUIRE
          - :CREATE_OR_ACQUIRE
      - !ruby/object:Api::Type::Enum
        name: 'deletePolicy'
        description: |
          Set the policy to use for deleting new resources on update/delete.
          Valid values are `DELETE` (default) or `ABANDON`. If `DELETE`,
          resource is deleted after removal from Deployment Manager. If
          `ABANDON`, the resource is only removed from Deployment Manager
          and is not actually deleted. Note that updating this field does not
          actually change the deployment, just how it is updated.
        url_param_only: true
        default_value: :DELETE
        values:
          - :ABANDON
          - :DELETE
      - !ruby/object:Api::Type::Boolean
        name: 'preview'
        description: |
          If set to true, a deployment is created with "shell" resources
          that are not actually instantiated. This allows you to preview a
          deployment. It can be updated to false to actually deploy
          with real resources.
        default_value: false
        url_param_only: true
        # Custom Update
        update_id: '0_preview'
        fingerprint_name: 'fingerprint'
        update_verb: :PATCH
        update_url: projects/{{project}}/global/deployments/{{name}}?preview={{preview}}&createPolicy={{create_policy}}&deletePolicy={{delete_policy}}
    properties:
      - !ruby/object:Api::Type::String
        name: 'name'
        description: |
          Unique name for the deployment
        required: true
      - !ruby/object:Api::Type::String
        name: 'description'
        description: |
          Optional user-provided description of deployment.
        # Custom Update
        fingerprint_name: 'fingerprint'
        update_id: '1_non-preview'
        update_verb: :PATCH
        update_url: projects/{{project}}/global/deployments/{{name}}?preview={{preview}}&createPolicy={{create_policy}}&deletePolicy={{delete_policy}}
      - !ruby/object:Api::Type::Array
        name: 'labels'
        description: |
          Key-value pairs to apply to this labels.
        send_empty_value: true
        # Custom Update
        fingerprint_name: 'fingerprint'
        update_id: '1_non-preview'
        update_verb: :PATCH
        update_url: projects/{{project}}/global/deployments/{{name}}?preview={{preview}}&createPolicy={{create_policy}}&deletePolicy={{delete_policy}}
        item_type: !ruby/object:Api::Type::NestedObject
          properties:
            - !ruby/object:Api::Type::String
              name: 'key'
              description: |
                Key for label.
            - !ruby/object:Api::Type::String
              name: 'value'
              description: |
                Value of label.
      - !ruby/object:Api::Type::NestedObject
        name: 'target'
        required: true
        description: |
          Parameters that define your deployment, including the deployment
          configuration and relevant templates.
        # Custom Update
        fingerprint_name: 'fingerprint'
        update_id: '1_non-preview'
        update_verb: :PATCH
        update_url: projects/{{project}}/global/deployments/{{name}}?preview={{preview}}&createPolicy={{create_policy}}&deletePolicy={{delete_policy}}
        properties:
          - !ruby/object:Api::Type::NestedObject
            name: 'config'
            required: true
            description: |
              The root configuration file to use for this deployment.
            properties:
              - !ruby/object:Api::Type::String
                name: 'content'
                required: true
                description: |
                  The full YAML contents of your configuration file.
          - !ruby/object:Api::Type::Array
            name: 'imports'
            description: |
              Specifies import files for this configuration. This can be
              used to import templates or other files. For example, you might
              import a text file in order to use the file in a template.
            item_type: !ruby/object:Api::Type::NestedObject
              properties:
                - !ruby/object:Api::Type::String
                  name: 'content'
                  description: |
                    The full contents of the template that you want to import.
                - !ruby/object:Api::Type::String
                  name: 'name'
                  description: |
                    The name of the template to import, as declared in the YAML
                    configuration.
      - !ruby/object:Api::Type::String
        name: 'id'
        output: true
        description: |
          Unique identifier for deployment. Output only.
      - !ruby/object:Api::Type::String
        name: 'manifest'
        output: true
        description: |
          Output only. URL of the manifest representing the last manifest that
          was successfully deployed.
      - !ruby/object:Api::Type::String
        name: 'selfLink'
        output: true
        description: |
          Output only. Server defined URL for the resource.
