# Copyright 2017 Google Inc.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# TODO(nelsonjr): Change all objects so each test run in parallel: between same
# provider (e.g. DNS managed zone vs. record set) and across provides (e.g.
# Puppet compute address vs. Chef compute address). Once this is done make all
# tests run completely in parallel.

- !ruby/object:Puppet::Tester
  product: 'Compute'
  tests:
    - !ruby/object:Puppet::StandardTest
      name: 'Address'
      verifiers:
        - phase: ALL
          command: |
            gcloud compute addresses describe
                --project=google.com:graphite-playground
                --region=us-west1
                puppet-e2e-test1
    # TODO(alexstephen): Implement Backend Bucket test.
    # E2E tester has no support for running scripts in other modules
    # A Storage Bucket is required for this test.
    #- !ruby/object:Puppet::StandardTest
    #  name: 'BackendBucket'
    - !ruby/object:Puppet::StandardTest
      name: 'BackendService'
      verifiers:
        - phase: ALL
          command: |
            gcloud compute backend-services describe
                --project=google.com:graphite-playground
                --global
                puppet-e2e-my-app-backend
    - !ruby/object:Puppet::StandardTest
      name: 'Disk'
      verifiers:
        - phase: ALL
          command: |
            gcloud compute disks describe
                --project=google.com:graphite-playground
                --zone=us-central1-a
                puppet-e2e-data-disk-1
    - !ruby/object:Puppet::VirtualTest
      name: 'DiskType'
    - !ruby/object:Puppet::StandardTest
      name: 'Firewall'
      change:
        - name: 'change'
          apply:
            - run: 'firewall~change1.pp'
              exits: [2, 0]
        - name: 'change{again}'
          apply:
            - run: 'firewall~change1.pp'
              exits: 0
      verifiers:
        - phase: ALL
          command: |
            gcloud compute firewall-rules describe
                --project=google.com:graphite-playground
                puppet-e2e-test-fw-allow-ssh
    - !ruby/object:Puppet::StandardTest
      name: 'ForwardingRule'
      verifiers:
        - phase: ALL
          command: |
            gcloud compute forwarding-rules describe
                --project=google.com:graphite-playground
                puppet-e2e-test1
    - !ruby/object:Puppet::StandardTest
      name: 'GlobalAddress'
      verifiers:
        - phase: ALL
          command: |
            gcloud compute addresses describe
                --project=google.com:graphite-playground
                --global
                puppet-e2e-my-app-lb-address
    - !ruby/object:Puppet::StandardTest
      name: 'HealthCheck'
      verifiers:
        - phase: ALL
          command: |
            gcloud compute health-checks describe
                --project=google.com:graphite-playground
                puppet-e2e-my-app-tcp-hc
    - !ruby/object:Puppet::StandardTest
      name: 'HttpHealthCheck'
      verifiers:
        - phase: ALL
          command: |
            gcloud compute http-health-checks describe
                --project=google.com:graphite-playground
                puppet-e2e-my-app-http-hc
    - !ruby/object:Puppet::StandardTest
      name: 'HttpsHealthCheck'
      verifiers:
        - phase: ALL
          command: |
            gcloud compute https-health-checks describe
                --project=google.com:graphite-playground
                puppet-e2e-my-app-https-hc
    - !ruby/object:Puppet::StandardTest
      name: 'Image'
      verifiers:
        - phase: ALL
          command: |
            gcloud compute images describe
                --project=google.com:graphite-playground
                puppet-e2e-test-image
    - !ruby/object:Puppet::StandardTest
      name: 'InstanceGroup'
      verifiers:
        - phase: ALL
          command: |
            gcloud compute instance-groups unmanaged describe
                --project=google.com:graphite-playground
                --zone=us-central1-a
                puppet-e2e-my-puppet-masters
    - !ruby/object:Puppet::StandardTest
      name: 'InstanceGroupManager'
      verifiers:
        - phase: ALL
          command: |
            gcloud compute instance-groups managed describe
                --project=google.com:graphite-playground
                --zone=us-west1-a
                puppet-e2e-test1
    - !ruby/object:Puppet::StandardTest
      name: 'InstanceTemplate'
      verifiers:
        - phase: ALL
          command: |
            gcloud compute instance-templates describe
                --project=google.com:graphite-playground
                puppet-e2e-instance-template
    - !ruby/object:Puppet::StandardTest
      name: 'Instance'
      verifiers:
        - phase: ALL
          command: |
            gcloud compute instances describe
                --project=google.com:graphite-playground
                --zone=us-central1-a
                puppet-e2e-instance-test
    - !ruby/object:Puppet::VirtualTest
      name: 'License'
      # Automatic Network
    - !ruby/object:Puppet::StandardTest
      name: 'NetworkAuto'
      create: 'network~auto.pp'
      delete: 'delete_network.pp'
      env:
        network_id: auto-1234
      verifiers:
        - phase: ALL
          command: |
            gcloud compute networks describe
                --project=google.com:graphite-playground
                puppet-e2e-mynetwork-auto-1234
      # Custom Network
    - !ruby/object:Puppet::StandardTest
      name: 'NetworkCustom'
      create: 'network~custom.pp'
      delete: 'delete_network.pp'
      env:
        network_id: custom-1234
      verifiers:
        - phase: ALL
          command: |
            gcloud compute networks describe
                --project=google.com:graphite-playground
                puppet-e2e-mynetwork-custom-1234
      # Convert to Custom Network
    - !ruby/object:Puppet::StandardTest
      name: 'NetworkConvertCustom'
      create: 'network~convert_to_custom.pp'
      delete: 'delete_network.pp'
      env:
        network_id: conv-cust-1234
      verifiers:
        - phase: ALL
          command: |
            gcloud compute networks describe
                --project=google.com:graphite-playground
                puppet-e2e-mynetwork-conv-cust-1234
      # Legacy Network
    - !ruby/object:Puppet::StandardTest
      name: 'NetworkLegacy'
      create: 'network~legacy.pp'
      delete: 'delete_network.pp'
      env:
        network_id: legacy-1234
      verifiers:
        - phase: ALL
          command: |
            gcloud compute networks describe
                --project=google.com:graphite-playground
                puppet-e2e-mynetwork-legacy-1234
    # TODO(alexstephen): Change when Region is virtual.
    - name: 'Region'
      phases:
        - name: 'create'
          apply:
            - run: 'region.pp'
              # This allows for both virtual + non-virtual running.
              exits: [0, 2]
    - !ruby/object:Puppet::StandardTest
      name: 'Route'
      verifiers:
        - phase: ALL
          command: |
            gcloud compute routes describe
                --project=google.com:graphite-playground
                puppet-e2e-corp-route
    - !ruby/object:Puppet::StandardTest
      name: 'Snapshot'
      verifiers:
        - phase: ALL
          command: |
            gcloud compute snapshots describe
                --project=google.com:graphite-playground
                puppet-e2e-sample-snapshot-1
    - !ruby/object:Puppet::StandardTest
      name: 'SslCertificate'
      verifiers:
        - phase: ALL
          command: |
            gcloud compute ssl-certificates describe
                --project=google.com:graphite-playground
                puppet-e2e-sample-certificate
# TODO(alexstephen): Fix subnetwork test
# Puppet doesn't like the network type of the gcompute_network block
# Currently matches the Chef test which works properly.
#    - !ruby/object:Puppet::StandardTest
#      name: 'Subnetwork'
#      verifiers:
#        - phase: ALL
#          command: |
#            gcloud compute networks describe
#                --project=google.com:graphite-playground
#                puppet-e2e-servers
#      pre:
#        - name: 'delete_network'
#          apply:
#            - run: 'delete_network.pp'
#              env:
#                network_id: subnetwork
#              exits: [0, 2]
#      post:
#        - name: 'delete_network'
#          apply:
#            - run: 'delete_network.pp'
#              env:
#                network_id: subnetwork
#              exits: [0, 2]
    - !ruby/object:Puppet::StandardTest
      name: 'TargetHttpProxy'
      verifiers:
        - phase: ALL
          command: |
            gcloud compute target-http-proxies describe
                --project=google.com:graphite-playground
                puppet-e2e-my-http-proxy
    - !ruby/object:Puppet::StandardTest
      name: 'TargetHttpsProxy'
      verifiers:
        - phase: ALL
          command: |
            gcloud compute target-https-proxies describe
                --project=google.com:graphite-playground
                puppet-e2e-my-https-proxy
    - !ruby/object:Puppet::StandardTest
      name: 'TargetPool'
      verifiers:
        - phase: ALL
          command: |
            gcloud compute target-pools describe
                --project=google.com:graphite-playground
                puppet-e2e-test1
    # gcloud compute does not have a 'target-tcp-proxies' to verify the
    # TargetTcpProxy calls
    - !ruby/object:Puppet::StandardTest
      name: 'TargetTcpProxy'
    - !ruby/object:Puppet::StandardTest
      name: 'TargetSslProxy'
      verifiers:
        - phase: ALL
          command: |
            gcloud compute target-ssl-proxies describe
                --project=google.com:graphite-playground
                puppet-e2e-my-ssl-proxy
    - !ruby/object:Puppet::StandardTest
      name: 'UrlMap'
      verifiers:
        - phase: ALL
          command: |
            gcloud compute url-maps describe
                --project=google.com:graphite-playground
                puppet-e2e-my-url-map
