# Copyright 2017 Google Inc.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# ----------------------------------------------------------------------------
#
#     ***     AUTO GENERATED CODE    ***    AUTO GENERATED CODE     ***
#
# ----------------------------------------------------------------------------
#
#     This file is automatically generated by puppet-codegen and manual
#     changes will be clobbered when the file is regenerated.
#
#     Please read more about how to change this file in README.md and
#     CONTRIBUTING.md located at the root of this package.
#
# ----------------------------------------------------------------------------

---
kind: compute#instanceTemplate
name: title0
id: 2149500871
creationTimestamp: '2045-05-23T12:08:10+00:00'
description: test description#0 data
project: "'test project#0 data'"
properties:
  canIpForward: true
  description: test description#0 data
  disks:
  - autoDelete: true
    boot: true
    deviceName: test device_name#0 data
    diskEncryptionKey:
      rawKey: test raw_key#0 data
      rsaEncryptedKey: test rsa_encrypted_key#0 data
      sha256: test sha256#0 data
    index: 1443881260
    initializeParams:
      diskName: test disk_name#0 data
      diskSizeGb: 450092159
      diskType: selflink(resource(disk_type,0))
      sourceImage: test source_image#0 data
      sourceImageEncryptionKey:
        rawKey: test raw_key#0 data
        sha256: test sha256#0 data
    interface: SCSI
    mode: READ_WRITE
    source: test name#0 data
    type: SCRATCH
  - autoDelete: false
    boot: false
    deviceName: test device_name#1 data
    diskEncryptionKey:
      rawKey: test raw_key#1 data
      rsaEncryptedKey: test rsa_encrypted_key#1 data
      sha256: test sha256#1 data
    index: 2887762520
    initializeParams:
      diskName: test disk_name#1 data
      diskSizeGb: 900184319
      diskType: selflink(resource(disk_type,1))
      sourceImage: test source_image#1 data
      sourceImageEncryptionKey:
        rawKey: test raw_key#1 data
        sha256: test sha256#1 data
    interface: NVME
    mode: READ_ONLY
    source: test name#1 data
    type: PERSISTENT
  machineType: test name#0 data
  metadata:
    test metadata#1 data: test metadata#1 data
    test metadata#2 data: 2666715473
    test metadata#3 data: test metadata#3 data
  guestAccelerators:
  - acceleratorCount: 2697554557
    acceleratorType: test accelerator_type#0 data
  - acceleratorCount: 5395109114
    acceleratorType: test accelerator_type#1 data
  - acceleratorCount: 8092663672
    acceleratorType: test accelerator_type#2 data
  - acceleratorCount: 10790218229
    acceleratorType: test accelerator_type#3 data
  networkInterfaces:
  - accessConfigs:
    - name: test name#0 data
      natIP: test address#0 data
      type: ONE_TO_ONE_NAT
    aliasIpRanges:
    - ipCidrRange: test ip_cidr_range#0 data
      subnetworkRangeName: test subnetwork_range_name#0 data
    - ipCidrRange: test ip_cidr_range#1 data
      subnetworkRangeName: test subnetwork_range_name#1 data
    - ipCidrRange: test ip_cidr_range#2 data
      subnetworkRangeName: test subnetwork_range_name#2 data
    - ipCidrRange: test ip_cidr_range#3 data
      subnetworkRangeName: test subnetwork_range_name#3 data
    name: test name#0 data
    network: selflink(resource(network,0))
    networkIP: test network_ip#0 data
    subnetwork: selflink(resource(subnetwork,0))
  - accessConfigs:
    - name: test name#1 data
      natIP: test address#1 data
      type: ONE_TO_ONE_NAT
    - name: test name#2 data
      natIP: test address#2 data
      type: ONE_TO_ONE_NAT
    aliasIpRanges:
    - ipCidrRange: test ip_cidr_range#1 data
      subnetworkRangeName: test subnetwork_range_name#1 data
    - ipCidrRange: test ip_cidr_range#2 data
      subnetworkRangeName: test subnetwork_range_name#2 data
    - ipCidrRange: test ip_cidr_range#3 data
      subnetworkRangeName: test subnetwork_range_name#3 data
    name: test name#1 data
    network: selflink(resource(network,1))
    networkIP: test network_ip#1 data
    subnetwork: selflink(resource(subnetwork,1))
  - accessConfigs:
    - name: test name#2 data
      natIP: test address#2 data
      type: ONE_TO_ONE_NAT
    - name: test name#3 data
      natIP: test address#0 data
      type: ONE_TO_ONE_NAT
    - name: test name#4 data
      natIP: test address#1 data
      type: ONE_TO_ONE_NAT
    aliasIpRanges:
    - ipCidrRange: test ip_cidr_range#2 data
      subnetworkRangeName: test subnetwork_range_name#2 data
    - ipCidrRange: test ip_cidr_range#3 data
      subnetworkRangeName: test subnetwork_range_name#3 data
    name: test name#2 data
    network: selflink(resource(network,2))
    networkIP: test network_ip#2 data
    subnetwork: selflink(resource(subnetwork,2))
  scheduling:
    automaticRestart: true
    onHostMaintenance: test on_host_maintenance#0 data
    preemptible: true
  serviceAccounts:
  - email: true
    scopes:
    - rr
    - ss
    - tt
    - uu
    - vv
  - email: false
    scopes:
    - ll
    - mm
    - nn
    - oo
    - pp
  - email: true
    scopes:
    - ee
    - ff
    - gg
    - hh
  tags:
    fingerprint: test fingerprint#0 data
    items:
    - hh
    - ii
    - jj
selfLink: selflink(resource(instance_template,0))
