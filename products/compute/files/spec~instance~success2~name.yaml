# Copyright 2017 Google Inc.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

---
kind: compute#instance
name: test name#1 data
id: 4299001743
canIpForward: false
cpuPlatform: test cpu_platform#1 data
creationTimestamp: test creation_timestamp#1 data
disks:
- autoDelete: false
  boot: false
  deviceName: test device_name#1 data
  diskEncryptionKey:
    rawKey: test raw_key#1 data
    rsaEncryptedKey: test rsa_encrypted_key#1 data
    sha256: test sha256#1 data
  index: 2887762520
  initializeParams:
    diskName: test disk_name#1 data
    diskSizeGb: 900184319
    diskType: selflink(resource(disk_type,1))
    sourceImage: test source_image#1 data
    sourceImageEncryptionKey:
      rawKey: test raw_key#1 data
      sha256: test sha256#1 data
  interface: NVME
  mode: READ_ONLY
  source: selflink(resource(disk,1))
  type: PERSISTENT
guestAccelerators:
- acceleratorCount: 5395109114
  acceleratorType: test accelerator_type#1 data
- acceleratorCount: 8092663672
  acceleratorType: test accelerator_type#2 data
labelFingerprint: test label_fingerprint#1 data
machineType: selflink(resource(machine_type,1))
metadata:
  items:
    - key: test metadata#2 data
      value: test metadata#2 data
    - key: test metadata#3 data
      value: 3555620630
    - key: test metadata#4 data
      value: test metadata#4 data
    - key: test metadata#5 data
      value: 5333430946
    - key: test metadata#6 data
      value: test metadata#6 data
minCpuPlatform: test min_cpu_platform#1 data
networkInterfaces:
- accessConfigs:
  - name: test name#1 data
    natIP: test address#1 data
    type: ONE_TO_ONE_NAT
  - name: test name#2 data
    natIP: test address#2 data
    type: ONE_TO_ONE_NAT
  aliasIpRanges:
  - ipCidrRange: test ip_cidr_range#1 data
    subnetworkRangeName: test subnetwork_range_name#1 data
  - ipCidrRange: test ip_cidr_range#2 data
    subnetworkRangeName: test subnetwork_range_name#2 data
  - ipCidrRange: test ip_cidr_range#3 data
    subnetworkRangeName: test subnetwork_range_name#3 data
  name: test name#1 data
  network: selflink(resource(network,1))
  networkIP: test network_ip#1 data
  subnetwork: selflink(resource(subnetwork,1))
project: "'test project#1 data'"
scheduling:
  automaticRestart: false
  onHostMaintenance: test on_host_maintenance#1 data
  preemptible: false
serviceAccounts:
- email: false
  scopes:
  - ll
  - mm
  - nn
  - oo
  - pp
- email: true
  scopes:
  - ee
  - ff
  - gg
  - hh
- email: false
  scopes:
  - ww
  - xx
  - yy
  - zz
- email: true
  scopes:
  - rr
  - ss
  - tt
- email: false
  scopes:
  - ll
  - mm
  - nn
status: test status#1 data
statusMessage: test status_message#1 data
tags:
  fingerprint: test fingerprint#1 data
  items:
  - qq
  - rr
  - ss
  - tt
zone: test name#1 data
selfLink: selflink(resource(instance,1))
