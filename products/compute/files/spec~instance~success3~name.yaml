# Copyright 2017 Google Inc.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# ----------------------------------------------------------------------------
#
#     ***     AUTO GENERATED CODE    ***    AUTO GENERATED CODE     ***
#
# ----------------------------------------------------------------------------
#
#     This file is automatically generated by puppet-codegen and manual
#     changes will be clobbered when the file is regenerated.
#
#     Please read more about how to change this file in README.md and
#     CONTRIBUTING.md located at the root of this package.
#
# ----------------------------------------------------------------------------

---
kind: compute#instance
name: test name#2 data
id: 6448502614
canIpForward: true
cpuPlatform: test cpu_platform#2 data
creationTimestamp: test creation_timestamp#2 data
disks:
- autoDelete: true
  boot: true
  deviceName: test device_name#2 data
  diskEncryptionKey:
    rawKey: test raw_key#2 data
    rsaEncryptedKey: test rsa_encrypted_key#2 data
    sha256: test sha256#2 data
  index: 4331643780
  initializeParams:
    diskName: test disk_name#2 data
    diskSizeGb: 1350276479
    diskType: selflink(resource(disk_type,2))
    sourceImage: test source_image#2 data
    sourceImageEncryptionKey:
      rawKey: test raw_key#2 data
      sha256: test sha256#2 data
  interface: SCSI
  mode: READ_WRITE
  source: selflink(resource(disk,2))
  type: SCRATCH
- autoDelete: false
  boot: false
  deviceName: test device_name#3 data
  diskEncryptionKey:
    rawKey: test raw_key#3 data
    rsaEncryptedKey: test rsa_encrypted_key#3 data
    sha256: test sha256#3 data
  index: 5775525040
  initializeParams:
    diskName: test disk_name#3 data
    diskSizeGb: 1800368639
    diskType: selflink(resource(disk_type,0))
    sourceImage: test source_image#3 data
    sourceImageEncryptionKey:
      rawKey: test raw_key#3 data
      sha256: test sha256#3 data
  interface: NVME
  mode: READ_ONLY
  source: selflink(resource(disk,0))
  type: PERSISTENT
- autoDelete: true
  boot: true
  deviceName: test device_name#4 data
  diskEncryptionKey:
    rawKey: test raw_key#4 data
    rsaEncryptedKey: test rsa_encrypted_key#4 data
    sha256: test sha256#4 data
  index: 7219406300
  initializeParams:
    diskName: test disk_name#4 data
    diskSizeGb: 2250460799
    diskType: selflink(resource(disk_type,1))
    sourceImage: test source_image#4 data
    sourceImageEncryptionKey:
      rawKey: test raw_key#4 data
      sha256: test sha256#4 data
  interface: SCSI
  mode: READ_WRITE
  source: selflink(resource(disk,1))
  type: SCRATCH
guestAccelerators:
- acceleratorCount: 8092663672
  acceleratorType: test accelerator_type#2 data
- acceleratorCount: 10790218229
  acceleratorType: test accelerator_type#3 data
- acceleratorCount: 13487772787
  acceleratorType: test accelerator_type#4 data
- acceleratorCount: 16185327344
  acceleratorType: test accelerator_type#5 data
labelFingerprint: test label_fingerprint#2 data
machineType: selflink(resource(machine_type,2))
metadata:
  items:
    - key: test metadata#3 data
      value: test metadata#3 data
    - key: test metadata#4 data
      value: 4444525788
    - key: test metadata#5 data
      value: test metadata#5 data
minCpuPlatform: test min_cpu_platform#2 data
networkInterfaces:
- accessConfigs:
  - name: test name#2 data
    natIP: test address#2 data
    type: ONE_TO_ONE_NAT
  - name: test name#3 data
    natIP: test address#0 data
    type: ONE_TO_ONE_NAT
  - name: test name#4 data
    natIP: test address#1 data
    type: ONE_TO_ONE_NAT
  aliasIpRanges:
  - ipCidrRange: test ip_cidr_range#2 data
    subnetworkRangeName: test subnetwork_range_name#2 data
  - ipCidrRange: test ip_cidr_range#3 data
    subnetworkRangeName: test subnetwork_range_name#3 data
  name: test name#2 data
  network: selflink(resource(network,2))
  networkIP: test network_ip#2 data
  subnetwork: selflink(resource(subnetwork,2))
- accessConfigs:
  - name: test name#3 data
    natIP: test address#0 data
    type: ONE_TO_ONE_NAT
  - name: test name#4 data
    natIP: test address#1 data
    type: ONE_TO_ONE_NAT
  - name: test name#5 data
    natIP: test address#2 data
    type: ONE_TO_ONE_NAT
  aliasIpRanges:
  - ipCidrRange: test ip_cidr_range#3 data
    subnetworkRangeName: test subnetwork_range_name#3 data
  - ipCidrRange: test ip_cidr_range#4 data
    subnetworkRangeName: test subnetwork_range_name#4 data
  - ipCidrRange: test ip_cidr_range#5 data
    subnetworkRangeName: test subnetwork_range_name#5 data
  - ipCidrRange: test ip_cidr_range#6 data
    subnetworkRangeName: test subnetwork_range_name#6 data
  - ipCidrRange: test ip_cidr_range#7 data
    subnetworkRangeName: test subnetwork_range_name#7 data
  name: test name#3 data
  network: selflink(resource(network,0))
  networkIP: test network_ip#3 data
  subnetwork: selflink(resource(subnetwork,0))
project: "'test project#2 data'"
scheduling:
  automaticRestart: true
  onHostMaintenance: test on_host_maintenance#2 data
  preemptible: true
serviceAccounts:
- email: true
  scopes:
  - ee
  - ff
  - gg
  - hh
- email: false
  scopes:
  - ww
  - xx
  - yy
  - zz
- email: true
  scopes:
  - rr
  - ss
  - tt
status: test status#2 data
statusMessage: test status_message#2 data
tags:
  fingerprint: test fingerprint#2 data
  items:
  - yy
  - zz
zone: test name#2 data
selfLink: selflink(resource(instance,2))
