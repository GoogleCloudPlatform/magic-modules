# Copyright 2017 Google Inc.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

--- !ruby/object:Provider::Terraform::Config
overrides: !ruby/object:Overrides::ResourceOverrides
  Address: !ruby/object:Overrides::Terraform::ResourceOverride
    id_format: "{{project}}/{{region}}/{{name}}"
    examples:
      - !ruby/object:Provider::Terraform::Examples
        name: "address_basic"
        primary_resource_id: "ip_address"
        vars:
          address_name: "my-address"
      - !ruby/object:Provider::Terraform::Examples
        name: "address_with_subnetwork"
        primary_resource_id: "internal_with_subnet_and_address"
        vars:
          address_name: "my-internal-address"
          network_name: "my-network"
          subnetwork_name: "my-subnet"
      # TODO(rileykarson): Remove this example when instance is supported
      - !ruby/object:Provider::Terraform::Examples
        name: "instance_with_ip"
        primary_resource_id: "static"
        vars:
         address_name: "ipv4-address"
         instance_name: "vm-instance"
    properties:
      address: !ruby/object:Overrides::Terraform::PropertyOverride
        default_from_api: true
      addressType: !ruby/object:Overrides::Terraform::PropertyOverride
        custom_flatten: 'templates/terraform/custom_flatten/default_if_empty.erb'
      id: !ruby/object:Overrides::Terraform::PropertyOverride
        exclude: true
      labelFingerprint: !ruby/object:Overrides::Terraform::PropertyOverride
        exclude: false
      name: !ruby/object:Overrides::Terraform::PropertyOverride
        validation: !ruby/object:Provider::Terraform::Validation
          regex: '^(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?)$'
      networkTier: !ruby/object:Overrides::Terraform::PropertyOverride
        default_from_api: true
      region: !ruby/object:Overrides::Terraform::PropertyOverride
        required: false
        default_from_api: true
        custom_flatten: 'templates/terraform/custom_flatten/name_from_self_link.erb'
        description: |
          The Region in which the created address should reside.
          If it is not provided, the provider region is used.
      subnetwork: !ruby/object:Overrides::Terraform::PropertyOverride
        default_from_api: true
    docs: !ruby/object:Provider::Terraform::Docs
      attributes: |
          * `address` - The IP of the created resource.
    custom_code: !ruby/object:Provider::Terraform::CustomCode
      post_create: templates/terraform/post_create/labels.erb
  Autoscaler: !ruby/object:Overrides::Terraform::ResourceOverride
    id_format: "{{zone}}/{{name}}"
    examples:
      - !ruby/object:Provider::Terraform::Examples
        name: "autoscaler_beta"
        primary_resource_id: "foobar"
        min_version: 'beta'
        vars:
          autoscaler_name: "my-autoscaler"
          instance_template_name: "my-instance-template"
          target_pool_name: "my-target-pool"
          igm_name: "my-igm"
      - !ruby/object:Provider::Terraform::Examples
        name: "autoscaler_basic"
        primary_resource_id: "foobar"
        vars:
          autoscaler_name: "my-autoscaler"
          instance_template_name: "my-instance-template"
          target_pool_name: "my-target-pool"
          igm_name: "my-igm"
    properties:
      id: !ruby/object:Overrides::Terraform::PropertyOverride
        exclude: true
      name: !ruby/object:Overrides::Terraform::PropertyOverride
        validation: !ruby/object:Provider::Terraform::Validation
          function: 'validateGCPName'
      autoscalingPolicy.minNumReplicas: !ruby/object:Overrides::Terraform::PropertyOverride
        name: minReplicas
        # Even though this field isn't actually required by the API, it makes our
        # lives easier if we treat it as a required field. It has a default that is
        # set by the API based on the value of maxNumReplicas. Normally in this case
        # we would just set it to Optional+Computed. However, this currently doesn't
        # work with nested fields. Make it required so we don't set the field to zero
        # when our users aren't expecting us to. For more info, see
        # https://github.com/GoogleCloudPlatform/magic-modules/issues/305.
        required: true
      autoscalingPolicy.maxNumReplicas: !ruby/object:Overrides::Terraform::PropertyOverride
        name: maxReplicas
      autoscalingPolicy.coolDownPeriodSec: !ruby/object:Overrides::Terraform::PropertyOverride
        name: cooldownPeriod
      autoscalingPolicy.cpuUtilization: !ruby/object:Overrides::Terraform::PropertyOverride
        default_from_api: true
      autoscalingPolicy.cpuUtilization.utilizationTarget: !ruby/object:Overrides::Terraform::PropertyOverride
        name: target
        required: true # See comment for minReplicas
      autoscalingPolicy.customMetricUtilizations: !ruby/object:Overrides::Terraform::PropertyOverride
        name: metric
      autoscalingPolicy.customMetricUtilizations.metric: !ruby/object:Overrides::Terraform::PropertyOverride
        name: name
      autoscalingPolicy.customMetricUtilizations.utilizationTarget: !ruby/object:Overrides::Terraform::PropertyOverride
        name: target
      autoscalingPolicy.customMetricUtilizations.utilizationTargetType: !ruby/object:Overrides::Terraform::PropertyOverride
        name: type
      autoscalingPolicy.loadBalancingUtilization.utilizationTarget: !ruby/object:Overrides::Terraform::PropertyOverride
        name: target
        required: true # See comment for minReplicas
      target: !ruby/object:Overrides::Terraform::PropertyOverride
        custom_expand: 'templates/terraform/custom_expand/compute_full_url.erb'
      zone: !ruby/object:Overrides::Terraform::PropertyOverride
        required: false
        default_from_api: true
  BackendBucket: !ruby/object:Overrides::Terraform::ResourceOverride
    examples:
      - !ruby/object:Provider::Terraform::Examples
        name: "backend_bucket_basic"
        primary_resource_id: "image_backend"
        vars:
          backend_bucket_name: "image-backend-bucket"
          bucket_name: "image-store-bucket"
    properties:
      id: !ruby/object:Overrides::Terraform::PropertyOverride
        exclude: true
      name: !ruby/object:Overrides::Terraform::PropertyOverride
        validation: !ruby/object:Provider::Terraform::Validation
          regex: '^(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?)$'
  BackendService: !ruby/object:Overrides::Terraform::ResourceOverride
    exclude: true
  Disk: !ruby/object:Overrides::Terraform::ResourceOverride
    properties:
      id: !ruby/object:Overrides::Terraform::PropertyOverride
        exclude: true
      sizeGb: !ruby/object:Overrides::Terraform::PropertyOverride
        name: size
        default_from_api: true
      sourceSnapshot: !ruby/object:Overrides::Terraform::PropertyOverride
        name: snapshot
        description: |
          {{description}}* `snapshot`
      type: !ruby/object:Overrides::Terraform::PropertyOverride
        custom_flatten: 'templates/terraform/custom_flatten/name_from_self_link.erb'
        default_value: 'pd-standard'
      name: !ruby/object:Overrides::Terraform::PropertyOverride
        input: true
      licenses: !ruby/object:Overrides::Terraform::PropertyOverride
        exclude: true
      labelFingerprint: !ruby/object:Overrides::Terraform::PropertyOverride
        exclude: false
      zone: !ruby/object:Overrides::Terraform::PropertyOverride
        required: false
        default_from_api: true
        custom_flatten: 'templates/terraform/custom_flatten/name_from_self_link.erb'
      sourceImage: !ruby/object:Overrides::Terraform::PropertyOverride
        name: image
        diff_suppress_func: 'diskImageDiffSuppress'
        description: |
          The image from which to initialize this disk. This can be
          one of: the image's `self_link`, `projects/{project}/global/images/{image}`,
          `projects/{project}/global/images/family/{family}`, `global/images/{image}`,
          `global/images/family/{family}`, `family/{family}`, `{project}/{family}`,
          `{project}/{image}`, `{family}`, or `{image}`. If referred by family, the
          images names must include the family name. If they don't, use the
          [google_compute_image data source](/docs/providers/google/d/datasource_compute_image.html).
          For instance, the image `centos-6-v20180104` includes its family name `centos-6`.
          These images can be referred by family name here.
      diskEncryptionKey.kmsKeyName: !ruby/object:Overrides::Terraform::PropertyOverride
        diff_suppress_func: 'compareSelfLinkRelativePaths'
        name: "kmsKeySelfLink"
        description: |
          The self link of the encryption key used to encrypt the disk. Also called KmsKeyName
          in the cloud console. In order to use this additional
          IAM permissions need to be set on the Compute Engine Service Agent. See
          https://cloud.google.com/compute/docs/disks/customer-managed-encryption#encrypt_a_new_persistent_disk_with_your_own_keys
      sourceSnapshotEncryptionKey.kmsKeyName: !ruby/object:Overrides::Terraform::PropertyOverride
        diff_suppress_func: 'compareSelfLinkRelativePaths'
        name: "kmsKeySelfLink"
        description: |
          The self link of the encryption key used to encrypt the disk. Also called KmsKeyName
          in the cloud console. In order to use this additional
          IAM permissions need to be set on the Compute Engine Service Agent. See
          https://cloud.google.com/compute/docs/disks/customer-managed-encryption#encrypt_a_new_persistent_disk_with_your_own_keys
      sourceImageEncryptionKey.kmsKeyName: !ruby/object:Overrides::Terraform::PropertyOverride
        diff_suppress_func: 'compareSelfLinkRelativePaths'
        name: "kmsKeySelfLink"
        description: |
          The self link of the encryption key used to encrypt the disk. Also called KmsKeyName
          in the cloud console. In order to use this additional
          IAM permissions need to be set on the Compute Engine Service Agent. See
          https://cloud.google.com/compute/docs/disks/customer-managed-encryption#encrypt_a_new_persistent_disk_with_your_own_keys
    custom_code: !ruby/object:Provider::Terraform::CustomCode
      pre_delete: templates/terraform/pre_delete/detach_disk.erb
      constants: templates/terraform/constants/disk.erb
      encoder: templates/terraform/encoders/disk.erb
      extra_schema_entry: templates/terraform/extra_schema_entry/disk.erb
      decoder: templates/terraform/decoders/disk.erb
      resource_definition: templates/terraform/resource_definition/disk.erb
    docs: !ruby/object:Provider::Terraform::Docs
      warning: |
        All arguments including the disk encryption key will be stored in the raw
        state as plain-text.
        [Read more about sensitive data in state](/docs/state/sensitive-data.html).
    examples:
      - !ruby/object:Provider::Terraform::Examples
        name: "disk_basic"
        primary_resource_id: "default"
        vars:
          disk_name: "test-disk"
  DiskType: !ruby/object:Overrides::Terraform::ResourceOverride
    exclude: true
  Firewall: !ruby/object:Overrides::Terraform::ResourceOverride
    examples:
      - !ruby/object:Provider::Terraform::Examples
        name: "firewall_basic"
        primary_resource_id: "default"
        vars:
          firewall_name: "test-firewall"
          network_name: "test-network"
    custom_code: !ruby/object:Provider::Terraform::CustomCode
      constants: templates/terraform/constants/firewall.erb
      resource_definition: templates/terraform/resource_definition/firewall.erb
    properties:
      id: !ruby/object:Overrides::Terraform::PropertyOverride
        exclude: true
      allowed: !ruby/object:Overrides::Terraform::PropertyOverride
        name: 'allow'
        is_set: true
        set_hash_func: 'resourceComputeFirewallRuleHash'
      allowed.ip_protocol: !ruby/object:Overrides::Terraform::PropertyOverride
        name: 'protocol'
      denied: !ruby/object:Overrides::Terraform::PropertyOverride
        name: 'deny'
        is_set: true
        set_hash_func: 'resourceComputeFirewallRuleHash'
      denied.ip_protocol: !ruby/object:Overrides::Terraform::PropertyOverride
        name: 'protocol'
      destinationRanges: !ruby/object:Overrides::Terraform::PropertyOverride
        is_set: true
        default_from_api: true
      direction: !ruby/object:Overrides::Terraform::PropertyOverride
        default_from_api: true
        # Because most fields on this resource are `Computed`, it is easy
        # for a user to wind up in a broken state if they switch a rule from
        # being ingress to egress without examining the diff carefully.
        # See terraform issue #2713 for more context.
        input: true
      name: !ruby/object:Overrides::Terraform::PropertyOverride
        validation: !ruby/object:Provider::Terraform::Validation
          function: 'validateGCPName'
      network: !ruby/object:Overrides::Terraform::PropertyOverride
        description: |
          The name or self_link of the network to attach this firewall to.
      priority: !ruby/object:Overrides::Terraform::PropertyOverride
        validation: !ruby/object:Provider::Terraform::Validation
          function: 'validation.IntBetween(0, 65535)'
      sourceRanges: !ruby/object:Overrides::Terraform::PropertyOverride
        is_set: true
        default_from_api: true
      sourceTags: !ruby/object:Overrides::Terraform::PropertyOverride
        is_set: true
      sourceServiceAccounts: !ruby/object:Overrides::Terraform::PropertyOverride
        is_set: true
      targetServiceAccounts: !ruby/object:Overrides::Terraform::PropertyOverride
        is_set: true
      targetTags: !ruby/object:Overrides::Terraform::PropertyOverride
        is_set: true
  ForwardingRule: !ruby/object:Overrides::Terraform::ResourceOverride
    examples:
      - !ruby/object:Provider::Terraform::Examples
        name: "forwarding_rule_basic"
        primary_resource_id: "default"
        vars:
          forwarding_rule_name: "website-forwarding-rule"
          target_pool_name: "website-target-pool"
    custom_code: !ruby/object:Provider::Terraform::CustomCode
      post_create: templates/terraform/post_create/labels.erb
    properties:
      id: !ruby/object:Overrides::Terraform::PropertyOverride
        exclude: true
      portRange: !ruby/object:Overrides::Terraform::PropertyOverride
        diff_suppress_func: 'portRangeDiffSuppress'
      region: !ruby/object:Overrides::Terraform::PropertyOverride
        required: false
        default_from_api: true
      IPAddress: !ruby/object:Overrides::Terraform::PropertyOverride
        default_from_api: true
      IPProtocol: !ruby/object:Overrides::Terraform::PropertyOverride
        diff_suppress_func: 'caseDiffSuppress'
        default_from_api: true
      loadBalancingScheme: !ruby/object:Overrides::Terraform::PropertyOverride
        default_value: :EXTERNAL
      network: !ruby/object:Overrides::Terraform::PropertyOverride
        default_from_api: true
      subnetwork: !ruby/object:Overrides::Terraform::PropertyOverride
        default_from_api: true
      region: !ruby/object:Overrides::Terraform::PropertyOverride
        required: false
        default_from_api: true
        custom_flatten: 'templates/terraform/custom_flatten/name_from_self_link.erb'
      backendService: !ruby/object:Overrides::Terraform::PropertyOverride
        custom_expand: 'templates/terraform/custom_expand/self_link_from_name.erb'
      networkTier: !ruby/object:Overrides::Terraform::PropertyOverride
        default_from_api: true
      target: !ruby/object:Overrides::Terraform::PropertyOverride
        diff_suppress_func: 'compareSelfLinkRelativePaths'
        custom_expand: 'templates/terraform/custom_expand/self_link_from_name.erb'
      ports: !ruby/object:Overrides::Terraform::PropertyOverride
        is_set: true
        custom_expand: 'templates/terraform/custom_expand/set_to_list.erb'
      labelFingerprint: !ruby/object:Overrides::Terraform::PropertyOverride
        exclude: false
      serviceLabel: !ruby/object:Overrides::Terraform::PropertyOverride
        validation: !ruby/object:Provider::Terraform::Validation
          function: 'validateGCPName'
  GlobalAddress: !ruby/object:Overrides::Terraform::ResourceOverride
    examples:
      - !ruby/object:Provider::Terraform::Examples
        name: "global_address_basic"
        primary_resource_id: "default"
        vars:
          global_address_name: "global-appserver-ip"
    properties:
      id: !ruby/object:Overrides::Terraform::PropertyOverride
        exclude: true
      address: !ruby/object:Overrides::Terraform::PropertyOverride
        default_from_api: true
      ipVersion: !ruby/object:Overrides::Terraform::PropertyOverride
        diff_suppress_func: 'emptyOrDefaultStringSuppress("IPV4")'
      labelFingerprint: !ruby/object:Overrides::Terraform::PropertyOverride
        exclude: false
      region: !ruby/object:Overrides::Terraform::PropertyOverride
        exclude: true
      addressType: !ruby/object:Overrides::Terraform::PropertyOverride
        diff_suppress_func: 'emptyOrDefaultStringSuppress("EXTERNAL")'
    custom_code: !ruby/object:Provider::Terraform::CustomCode
      post_create: templates/terraform/post_create/labels.erb
  GlobalForwardingRule: !ruby/object:Overrides::Terraform::ResourceOverride
    exclude: true
  HttpHealthCheck: !ruby/object:Overrides::Terraform::ResourceOverride
    description: |
      {{description}}

      ~> **Note:** google_compute_http_health_check is a legacy health check.
      The newer [google_compute_health_check](/docs/providers/google/r/compute_health_check.html)
      should be preferred for all uses except
      [Network Load Balancers](https://cloud.google.com/compute/docs/load-balancing/network/)
      which still require the legacy version.
    examples:
      - !ruby/object:Provider::Terraform::Examples
        name: "http_health_check_basic"
        primary_resource_id: "default"
        vars:
          http_health_check_name: "authentication-health-check"
    properties:
      id: !ruby/object:Overrides::Terraform::PropertyOverride
        exclude: true
      checkIntervalSec: !ruby/object:Overrides::Terraform::PropertyOverride
        default_value: 5
      healthyThreshold: !ruby/object:Overrides::Terraform::PropertyOverride
        default_value: 2
      port: !ruby/object:Overrides::Terraform::PropertyOverride
        default_value: 80
      requestPath: !ruby/object:Overrides::Terraform::PropertyOverride
        default_value: "/"
      timeoutSec: !ruby/object:Overrides::Terraform::PropertyOverride
        default_value: 5
      unhealthyThreshold: !ruby/object:Overrides::Terraform::PropertyOverride
        default_value: 2
  HttpsHealthCheck: !ruby/object:Overrides::Terraform::ResourceOverride
    description: |
      {{description}}

      ~> **Note:** google_compute_https_health_check is a legacy health check.
      The newer [google_compute_health_check](/docs/providers/google/r/compute_health_check.html)
      should be preferred for all uses except
      [Network Load Balancers](https://cloud.google.com/compute/docs/load-balancing/network/)
      which still require the legacy version.
    examples:
      - !ruby/object:Provider::Terraform::Examples
        name: "https_health_check_basic"
        primary_resource_id: "default"
        vars:
          https_health_check_name: "authentication-health-check"
    properties:
      id: !ruby/object:Overrides::Terraform::PropertyOverride
        exclude: true
      checkIntervalSec: !ruby/object:Overrides::Terraform::PropertyOverride
        default_value: 5
      healthyThreshold: !ruby/object:Overrides::Terraform::PropertyOverride
        default_value: 2
      port: !ruby/object:Overrides::Terraform::PropertyOverride
        default_value: 443
      requestPath: !ruby/object:Overrides::Terraform::PropertyOverride
        default_value: "/"
      timeoutSec: !ruby/object:Overrides::Terraform::PropertyOverride
        default_value: 5
      unhealthyThreshold: !ruby/object:Overrides::Terraform::PropertyOverride
        default_value: 2
  HealthCheck: !ruby/object:Overrides::Terraform::ResourceOverride
    examples:
      - !ruby/object:Provider::Terraform::Examples
        name: "health_check_basic"
        primary_resource_id: "internal-health-check"
        vars:
          health_check_name: "internal-service-health-check"
    custom_code: !ruby/object:Provider::Terraform::CustomCode
      encoder: templates/terraform/encoders/health_check_type.erb
    properties:
     id: !ruby/object:Overrides::Terraform::PropertyOverride
       exclude: true
     type: !ruby/object:Overrides::Terraform::PropertyOverride
       output: true
       description: The type of the health check. One of HTTP, HTTPS, TCP, or SSL.
     httpHealthCheck.portName: !ruby/object:Overrides::Terraform::PropertyOverride
       exclude: true
     httpHealthCheck.port: !ruby/object:Overrides::Terraform::PropertyOverride
       default_value: 80
     httpsHealthCheck.portName: !ruby/object:Overrides::Terraform::PropertyOverride
       exclude: true
     httpsHealthCheck.port: !ruby/object:Overrides::Terraform::PropertyOverride
       default_value: 443
     tcpHealthCheck.portName: !ruby/object:Overrides::Terraform::PropertyOverride
       exclude: true
     tcpHealthCheck.port: !ruby/object:Overrides::Terraform::PropertyOverride
       default_value: 80
     sslHealthCheck.portName: !ruby/object:Overrides::Terraform::PropertyOverride
       exclude: true
     sslHealthCheck.port: !ruby/object:Overrides::Terraform::PropertyOverride
       default_value: 443
  Image: !ruby/object:Overrides::Terraform::ResourceOverride
    examples:
      - !ruby/object:Provider::Terraform::Examples
        name: "image_basic"
        primary_resource_id: "example"
        vars:
          image_name: "example-image"
    properties:
      id: !ruby/object:Overrides::Terraform::PropertyOverride
        exclude: true
      diskSizeGb: !ruby/object:Overrides::Terraform::PropertyOverride
        default_from_api: true
      deprecated: !ruby/object:Overrides::Terraform::PropertyOverride
        exclude: true
      guestOsFeatures: !ruby/object:Overrides::Terraform::PropertyOverride
        exclude: true
      imageEncryptionKey: !ruby/object:Overrides::Terraform::PropertyOverride
        exclude: true
      licenses: !ruby/object:Overrides::Terraform::PropertyOverride
        default_from_api: true
      rawDisk.sha1Checksum: !ruby/object:Overrides::Terraform::PropertyOverride
        name: 'sha1'
      rawDisk.containerType: !ruby/object:Overrides::Terraform::PropertyOverride
        default_value: :TAR
      rawDisk: !ruby/object:Overrides::Terraform::PropertyOverride
        ignore_read: true
      sourceDiskEncryptionKey: !ruby/object:Overrides::Terraform::PropertyOverride
        exclude: true
      sourceDiskId: !ruby/object:Overrides::Terraform::PropertyOverride
        exclude: true
      sourceType: !ruby/object:Overrides::Terraform::PropertyOverride
        exclude: true
  Instance: !ruby/object:Overrides::Terraform::ResourceOverride
    exclude: true
  InstanceGroup: !ruby/object:Overrides::Terraform::ResourceOverride
    exclude: true
  InstanceGroupManager: !ruby/object:Overrides::Terraform::ResourceOverride
    exclude: true
  InstanceTemplate: !ruby/object:Overrides::Terraform::ResourceOverride
    exclude: true
  InterconnectAttachment: !ruby/object:Overrides::Terraform::ResourceOverride
    properties:
      id: !ruby/object:Overrides::Terraform::PropertyOverride
        exclude: true
      name: !ruby/object:Overrides::Terraform::PropertyOverride
        validation: !ruby/object:Provider::Terraform::Validation
          regex: '^[a-z]([-a-z0-9]*[a-z0-9])?$'
      region: !ruby/object:Overrides::Terraform::PropertyOverride
        required: false
        default_from_api: true
      router: !ruby/object:Overrides::Terraform::PropertyOverride
        diff_suppress_func: 'compareSelfLinkOrResourceName'
      interconnect: !ruby/object:Overrides::Terraform::PropertyOverride
        diff_suppress_func: 'compareSelfLinkOrResourceName'
      type: !ruby/object:Overrides::Terraform::PropertyOverride
        default_from_api: true
    examples:
      - !ruby/object:Provider::Terraform::Examples
        name: "interconnect_attachment_basic"
        primary_resource_id: "on_prem"
        skip_test: true
        vars:
          interconnect_attachment_name: "on-prem-attachment"
          router_name: "router"
  License: !ruby/object:Overrides::Terraform::ResourceOverride
    exclude: true
  MachineType: !ruby/object:Overrides::Terraform::ResourceOverride
    exclude: true
  Network: !ruby/object:Overrides::Terraform::ResourceOverride
    examples:
      - !ruby/object:Provider::Terraform::Examples
        name: "network_basic"
        primary_resource_id: "vpc_network"
        vars:
          network_name: "vpc-network"
    properties:
      id: !ruby/object:Overrides::Terraform::PropertyOverride
        exclude: true
      # We want this to be the smallest change possible, so exclude this for now.
      # TODO: remove exclusion
      creationTimestamp: !ruby/object:Overrides::Terraform::PropertyOverride
        exclude: true
      # We could include this, but it won't be correct mid-apply when subnetworks
      # are modified, so it's probably better to exclude.
      subnetworks: !ruby/object:Overrides::Terraform::PropertyOverride
        exclude: true
      autoCreateSubnetworks: !ruby/object:Overrides::Terraform::PropertyOverride
        default_value: True
        # autoCreateSubnetworks defaults to true, so we need to disable it explicitly
        conflicts: []
      ipv4_range: !ruby/object:Overrides::Terraform::PropertyOverride
        # autoCreateSubnetworks defaults to true, so we need to disable it explicitly
        conflicts: []
      routingConfig: !ruby/object:Overrides::Terraform::PropertyOverride
        flatten_object: true
      routingConfig.routingMode: !ruby/object:Overrides::Terraform::PropertyOverride
        # while required inside routingConfig, routingMode is an optional convenience
        # field.
        required: false
        default_from_api: true
    custom_code: !ruby/object:Provider::Terraform::CustomCode
      encoder: templates/terraform/encoders/network.erb
  Region: !ruby/object:Overrides::Terraform::ResourceOverride
    exclude: true
  RegionAutoscaler: !ruby/object:Overrides::Terraform::ResourceOverride
    id_format: "{{region}}/{{name}}"
    examples:
      - !ruby/object:Provider::Terraform::Examples
        name: "region_autoscaler_beta"
        primary_resource_id: "foobar"
        min_version: 'beta'
        vars:
          region_autoscaler_name: "my-region-autoscaler"
          instance_template_name: "my-instance-template"
          target_pool_name: "my-target-pool"
          rigm_name: "my-region-igm"
      - !ruby/object:Provider::Terraform::Examples
        name: "region_autoscaler_basic"
        primary_resource_id: "foobar"
        vars:
          region_autoscaler_name: "my-region-autoscaler"
          instance_template_name: "my-instance-template"
          target_pool_name: "my-target-pool"
          rigm_name: "my-region-igm"
    properties:
      id: !ruby/object:Overrides::Terraform::PropertyOverride
        exclude: true
      name: !ruby/object:Overrides::Terraform::PropertyOverride
        validation: !ruby/object:Provider::Terraform::Validation
          function: 'validateGCPName'
      autoscalingPolicy.minNumReplicas: !ruby/object:Overrides::Terraform::PropertyOverride
        name: minReplicas
        # Even though this field isn't actually required by the API, it makes our
        # lives easier if we treat it as a required field. It has a default that is
        # set by the API based on the value of maxNumReplicas. Normally in this case
        # we would just set it to Optional+Computed. However, this currently doesn't
        # work with nested fields. Make it required so we don't set the field to zero
        # when our users aren't expecting us to. For more info, see
        # https://github.com/GoogleCloudPlatform/magic-modules/issues/305.
        required: true
      autoscalingPolicy.maxNumReplicas: !ruby/object:Overrides::Terraform::PropertyOverride
        name: maxReplicas
      autoscalingPolicy.coolDownPeriodSec: !ruby/object:Overrides::Terraform::PropertyOverride
        name: cooldownPeriod
      autoscalingPolicy.cpuUtilization: !ruby/object:Overrides::Terraform::PropertyOverride
        default_from_api: true
      autoscalingPolicy.cpuUtilization.utilizationTarget: !ruby/object:Overrides::Terraform::PropertyOverride
        name: target
        required: true # See comment for minReplicas
      autoscalingPolicy.customMetricUtilizations: !ruby/object:Overrides::Terraform::PropertyOverride
        name: metric
      autoscalingPolicy.customMetricUtilizations.metric: !ruby/object:Overrides::Terraform::PropertyOverride
        name: name
      autoscalingPolicy.customMetricUtilizations.utilizationTarget: !ruby/object:Overrides::Terraform::PropertyOverride
        name: target
      autoscalingPolicy.customMetricUtilizations.utilizationTargetType: !ruby/object:Overrides::Terraform::PropertyOverride
        name: type
      autoscalingPolicy.loadBalancingUtilization.utilizationTarget: !ruby/object:Overrides::Terraform::PropertyOverride
        name: target
        required: true # See comment for minReplicas
      target: !ruby/object:Overrides::Terraform::PropertyOverride
        diff_suppress_func: 'compareSelfLinkOrResourceName'
      region: !ruby/object:Overrides::Terraform::PropertyOverride
        required: false
        default_from_api: true
  RegionDisk: !ruby/object:Overrides::Terraform::ResourceOverride
    properties:
      id: !ruby/object:Overrides::Terraform::PropertyOverride
        exclude: true
      sizeGb: !ruby/object:Overrides::Terraform::PropertyOverride
        name: size
        default_from_api: true
      sourceSnapshot: !ruby/object:Overrides::Terraform::PropertyOverride
        name: snapshot
        description: |
          {{description}}* `snapshot`
      type: !ruby/object:Overrides::Terraform::PropertyOverride
        custom_flatten: 'templates/terraform/custom_flatten/name_from_self_link.erb'
        default_value: 'pd-standard'
      name: !ruby/object:Overrides::Terraform::PropertyOverride
        input: true
      licenses: !ruby/object:Overrides::Terraform::PropertyOverride
        exclude: true
      labelFingerprint: !ruby/object:Overrides::Terraform::PropertyOverride
        exclude: false
      region: !ruby/object:Overrides::Terraform::PropertyOverride
        required: false
        default_from_api: true
        custom_flatten: 'templates/terraform/custom_flatten/name_from_self_link.erb'
    custom_code: !ruby/object:Provider::Terraform::CustomCode
      pre_delete: templates/terraform/pre_delete/detach_disk.erb
      encoder: templates/terraform/encoders/disk.erb
      decoder: templates/terraform/decoders/disk.erb
      resource_definition: templates/terraform/resource_definition/disk.erb
    docs: !ruby/object:Provider::Terraform::Docs
      warning: |
        All arguments including the disk encryption key will be stored in the raw
        state as plain-text.
        [Read more about sensitive data in state](/docs/state/sensitive-data.html).
    examples:
      - !ruby/object:Provider::Terraform::Examples
        name: "region_disk_basic"
        primary_resource_id: "regiondisk"
        vars:
          region_disk_name: "my-region-disk"
          disk_name: "my-disk"
          snapshot_name: "my-snapshot"
  RegionDiskType: !ruby/object:Overrides::Terraform::ResourceOverride
    exclude: true
  Route: !ruby/object:Overrides::Terraform::ResourceOverride
    examples:
      - !ruby/object:Provider::Terraform::Examples
        name: "route_basic"
        primary_resource_id: "default"
        vars:
          route_name: "network-route"
          network_name: "compute-network"
    properties:
      name: !ruby/object:Overrides::Terraform::PropertyOverride
        validation: !ruby/object:Provider::Terraform::Validation
          regex: '^[a-z]([-a-z0-9]*[a-z0-9])?$'
      network: !ruby/object:Overrides::Terraform::PropertyOverride
        diff_suppress_func: 'compareSelfLinkOrResourceName'
      priority: !ruby/object:Overrides::Terraform::PropertyOverride
        default_value: 1000
      nextHopGateway: !ruby/object:Overrides::Terraform::PropertyOverride
        diff_suppress_func: 'compareSelfLinkOrResourceName'
        custom_expand: templates/terraform/custom_expand/route_gateway.erb
        # Description here is overridden because puppet won't compile if you ask
        # it to include docs greater than 80 characters.
        description: |+
          URL to a gateway that should handle matching packets.
          Currently, you can only specify the internet gateway, using a full or
          partial valid URL:
          * `https://www.googleapis.com/compute/v1/projects/project/global/gateways/default-internet-gateway`
          * `projects/project/global/gateways/default-internet-gateway`
          * `global/gateways/default-internet-gateway`
          * The string `default-internet-gateway`.
      nextHopInstance: !ruby/object:Overrides::Terraform::PropertyOverride
        custom_expand: templates/terraform/custom_expand/route_instance.erb
        # Description here is overridden because puppet won't compile if you ask
        # it to include docs greater than 80 characters.
        description: |+
          URL to an instance that should handle matching packets.
          You can specify this as a full or partial URL. For example:
          * `https://www.googleapis.com/compute/v1/projects/project/zones/zone/instances/instance`
          * `projects/project/zones/zone/instances/instance`
          * `zones/zone/instances/instance`
          * Just the instance name, with the zone in `next_hop_instance_zone`.
      tags: !ruby/object:Overrides::Terraform::PropertyOverride
        custom_expand: templates/terraform/custom_expand/set_to_list.erb
        is_set: true
    custom_code: !ruby/object:Provider::Terraform::CustomCode
      decoder: templates/terraform/decoders/route.erb
      extra_schema_entry: templates/terraform/extra_schema_entry/route.erb
    docs: !ruby/object:Provider::Terraform::Docs
      optional_properties: |+
          * `next_hop_instance_zone` - (Optional when `next_hop_instance` is
            specified)  The zone of the instance specified in
            `next_hop_instance`.  Omit if `next_hop_instance` is specified as
            a URL.
  Router: !ruby/object:Overrides::Terraform::ResourceOverride
    id_format: "{{region}}/{{name}}"
    mutex: router/{{region}}/{{name}}
    examples:
      - !ruby/object:Provider::Terraform::Examples
        name: "router_basic"
        primary_resource_id: "foobar"
        vars:
          router_name: "my-router"
          network_name: "my-network"
    properties:
      id: !ruby/object:Overrides::Terraform::PropertyOverride
        exclude: true
      name: !ruby/object:Overrides::Terraform::PropertyOverride
        validation: !ruby/object:Provider::Terraform::Validation
          function: 'validateGCPName'
      region: !ruby/object:Overrides::Terraform::PropertyOverride
        required: false
        default_from_api: true
        custom_flatten: 'templates/terraform/custom_flatten/name_from_self_link.erb'
  Snapshot: !ruby/object:Overrides::Terraform::ResourceOverride
    create_url: projects/{{project}}/zones/{{zone}}/disks/{{source_disk}}/createSnapshot
    examples:
      - !ruby/object:Provider::Terraform::Examples
        name: "snapshot_basic"
        primary_resource_id: "snapshot"
        vars:
          snapshot_name: "my-snapshot"
          disk_name: "debian-disk"
    properties:
      id: !ruby/object:Overrides::Terraform::PropertyOverride
        name: 'snapshot_id'
      zone: !ruby/object:Overrides::Terraform::PropertyOverride
        ignore_read: true
        default_from_api: true
        required: false
      snapshotEncryptionKey.rawKey: !ruby/object:Overrides::Terraform::PropertyOverride
        # This is _correct_, but we don't support ignore_read on nested fields
        # so we use a custom_flatten for now.
        # https://github.com/GoogleCloudPlatform/magic-modules/issues/1019
        ignore_read: true
        sensitive: true
        custom_flatten: templates/terraform/custom_flatten/compute_snapshot_snapshot_encryption_raw_key.go.erb
      snapshotEncryptionKey.kmsKeyName: !ruby/object:Overrides::Terraform::PropertyOverride
        # This is a beta field that showed up in GA. Removed from both.
        exclude: true
      sourceDisk: !ruby/object:Overrides::Terraform::PropertyOverride
        custom_flatten: templates/terraform/custom_flatten/name_from_self_link.erb
      sourceDiskEncryptionKey: !ruby/object:Overrides::Terraform::PropertyOverride
        ignore_read: true
      sourceDiskEncryptionKey.rawKey: !ruby/object:Overrides::Terraform::PropertyOverride
        sensitive: true
      sourceDiskEncryptionKey.kmsKeyName: !ruby/object:Overrides::Terraform::PropertyOverride
        # This is a beta field that showed up in GA. Removed from both.
        exclude: true
    custom_code: !ruby/object:Provider::Terraform::CustomCode
      decoder: templates/terraform/decoders/snapshot.go.erb
      extra_schema_entry: templates/terraform/extra_schema_entry/snapshot.erb
  ManagedSslCertificate: !ruby/object:Overrides::Terraform::ResourceOverride
    docs: !ruby/object:Provider::Terraform::Docs
      warning: |
        This resource should be used with extreme caution!  Provisioning an SSL
        certificate is complex.  Ensure that you understand the lifecycle of a
        certificate before attempting complex tasks like cert rotation automatically.
        This resource will "return" as soon as the certificate object is created,
        but post-creation the certificate object will go through a "provisioning"
        process.  The provisioning process can complete only when the domain name
        for which the certificate is created points to a target pool which, itself,
        points at the certificate.  Depending on your DNS provider, this may take
        some time, and migrating from self-managed certificates to Google-managed
        certificates may entail some downtime while the certificate provisions.

        In conclusion: Be extremely cautious.
    examples:
      - !ruby/object:Provider::Terraform::Examples
        name: "managed_ssl_certificate_basic"
        primary_resource_id: "default"
        vars:
          cert_name: "test-cert"
          proxy_name: "test-proxy"
          url_map_name: "url-map"
          backend_service_name: "backend-service"
          dns_zone_name: "dnszone"
          forwarding_rule_name: "forwarding-rule"
          http_health_check_name: "http-health-check"
    description: |
      {{description}}
      For a resource where you provide the key, see the
      SSL Certificate resource.
    properties:
      id: !ruby/object:Overrides::Terraform::PropertyOverride
        name: 'certificate_id'
        default_from_api: true
      name: !ruby/object:Overrides::Terraform::PropertyOverride
        description: |
          {{description}}

          These are in the same namespace as the managed SSL certificates.
  SslCertificate: !ruby/object:Overrides::Terraform::ResourceOverride
    docs: !ruby/object:Provider::Terraform::Docs
      optional_properties: |
        * `name_prefix` - (Optional) Creates a unique name beginning with the
         specified prefix. Conflicts with `name`.
    examples:
      - !ruby/object:Provider::Terraform::Examples
        name: "ssl_certificate_basic"
        primary_resource_id: "default"
        ignore_read_extra:
          - "name_prefix"
      - !ruby/object:Provider::Terraform::Examples
        name: "ssl_certificate_random_provider"
        primary_resource_id: "default"
      - !ruby/object:Provider::Terraform::Examples
        name: "ssl_certificate_target_https_proxies"
        primary_resource_id: "default"
        vars:
          target_https_proxy_name: "test-proxy"
          url_map_name: "url-map"
          backend_service_name: "backend-service"
          http_health_check_name: "http-health-check"
        ignore_read_extra:
          - "name_prefix"
    custom_code: !ruby/object:Provider::Terraform::CustomCode
      extra_schema_entry: templates/terraform/extra_schema_entry/ssl_certificate.erb
    properties:
      name: !ruby/object:Overrides::Terraform::PropertyOverride
        default_from_api: true
        custom_expand: 'templates/terraform/custom_expand/name_or_name_prefix.go.erb'
        validation: !ruby/object:Provider::Terraform::Validation
          function: 'validateGCPName'
        description: |
          {{description}}

          These are in the same namespace as the managed SSL certificates.
      id: !ruby/object:Overrides::Terraform::PropertyOverride
        name: 'certificate_id'
      certificate: !ruby/object:Overrides::Terraform::PropertyOverride
        sensitive: true
      privateKey: !ruby/object:Overrides::Terraform::PropertyOverride
        sensitive: true
        ignore_read: true
        custom_flatten: 'templates/terraform/custom_flatten/sha256.erb'
        diff_suppress_func: 'sha256DiffSuppress'
  SslPolicy: !ruby/object:Overrides::Terraform::ResourceOverride
    examples:
      - !ruby/object:Provider::Terraform::Examples
        name: "ssl_policy_basic"
        primary_resource_id: "prod-ssl-policy"
        vars:
          production_ssl_policy_name: "production-ssl-policy"
          nonprod_ssl_policy_name: "nonprod-ssl-policy"
          custom_ssl_policy_name: "custom-ssl-policy"
    custom_code: !ruby/object:Provider::Terraform::CustomCode
      constants:  'templates/terraform/constants/ssl_policy.erb'
      resource_definition: 'templates/terraform/resource_definition/ssl_policy.erb'
      update_encoder: 'templates/terraform/update_encoder/ssl_policy.erb'
    properties:
      id: !ruby/object:Overrides::Terraform::PropertyOverride
        exclude: true
      customFeatures: !ruby/object:Overrides::Terraform::PropertyOverride
        is_set: true
        # TODO(https://github.com/GoogleCloudPlatform/magic-modules/issues/187) replace references automatically
        # Overriding the whole description because original has references to
        # other fields which are in camelCase in api.yaml.
        description: |
          Profile specifies the set of SSL features that can be used by the
          load balancer when negotiating SSL with clients. This can be one of
          `COMPATIBLE`, `MODERN`, `RESTRICTED`, or `CUSTOM`. If using `CUSTOM`,
          the set of SSL features to enable must be specified in the
          `customFeatures` field.

          See the [official documentation](https://cloud.google.com/compute/docs/load-balancing/ssl-policies#profilefeaturesupport)
          for which ciphers are available to use. **Note**: this argument
          *must* be present when using the `CUSTOM` profile. This argument
          *must not* be present when using any other profile.
      enabledFeatures: !ruby/object:Overrides::Terraform::PropertyOverride
        is_set: true
      profile: !ruby/object:Overrides::Terraform::PropertyOverride
        default_value: :COMPATIBLE
        description: |
          {{description}}
          See the [official documentation](https://cloud.google.com/compute/docs/load-balancing/ssl-policies#profilefeaturesupport)
          for information on what cipher suites each profile provides. If
          `CUSTOM` is used, the `custom_features` attribute **must be set**.
          Default is `COMPATIBLE`.
      minTlsVersion: !ruby/object:Overrides::Terraform::PropertyOverride
        default_value: :TLS_1_0
        description : '{{description}} Default is `TLS_1_0`.'
      warnings: !ruby/object:Overrides::Terraform::PropertyOverride
        exclude: true
  Subnetwork: !ruby/object:Overrides::Terraform::ResourceOverride
    id_format: "{{region}}/{{name}}"
    properties:
      id: !ruby/object:Overrides::Terraform::PropertyOverride
        exclude: true
      name: !ruby/object:Overrides::Terraform::PropertyOverride
        validation: !ruby/object:Provider::Terraform::Validation
          function: 'validateGCPName'
      secondaryIpRanges: !ruby/object:Overrides::Terraform::PropertyOverride
        name: secondaryIpRange
        unordered_list: true
        default_from_api: true
      secondaryIpRanges.rangeName: !ruby/object:Overrides::Terraform::PropertyOverride
        validation: !ruby/object:Provider::Terraform::Validation
          function: 'validateGCPName'
      secondaryIpRanges.ipCidrRange: !ruby/object:Overrides::Terraform::PropertyOverride
        validation: !ruby/object:Provider::Terraform::Validation
          function: 'validateIpCidrRange'
      fingerprint: !ruby/object:Overrides::Terraform::PropertyOverride
        exclude: false
      ipCidrRange: !ruby/object:Overrides::Terraform::PropertyOverride
        validation: !ruby/object:Provider::Terraform::Validation
          function: 'validateIpCidrRange'
      region: !ruby/object:Overrides::Terraform::PropertyOverride
        required: false
        input: false
        default_from_api: true
        custom_flatten: 'templates/terraform/custom_flatten/name_from_self_link.erb'
    custom_code: !ruby/object:Provider::Terraform::CustomCode
      constants: templates/terraform/constants/subnetwork.erb
      resource_definition: templates/terraform/resource_definition/subnetwork.erb
    examples:
      - !ruby/object:Provider::Terraform::Examples
        name: "subnetwork_basic"
        primary_resource_id: "network-with-private-secondary-ip-ranges"
        vars:
          subnetwork_name: "test-subnetwork"
          network_name: "test-network"
  TargetHttpProxy: !ruby/object:Overrides::Terraform::ResourceOverride
    examples:
      - !ruby/object:Provider::Terraform::Examples
        name: "target_http_proxy_basic"
        primary_resource_id: "default"
        vars:
          target_http_proxy_name: "test-proxy"
          url_map_name: "url-map"
          backend_service_name: "backend-service"
          http_health_check_name: "http-health-check"
    properties:
      id: !ruby/object:Overrides::Terraform::PropertyOverride
        name: proxyId
  TargetHttpsProxy: !ruby/object:Overrides::Terraform::ResourceOverride
    examples:
      - !ruby/object:Provider::Terraform::Examples
        name: "target_https_proxy_basic"
        primary_resource_id: "default"
        vars:
          target_https_proxy_name: "test-proxy"
          ssl_certificate_name: "my-certificate"
          url_map_name: "url-map"
          backend_service_name: "backend-service"
          http_health_check_name: "http-health-check"
    properties:
      id: !ruby/object:Overrides::Terraform::PropertyOverride
        name: proxyId
  TargetPool: !ruby/object:Overrides::Terraform::ResourceOverride
    exclude: true
    properties:
      id: !ruby/object:Overrides::Terraform::PropertyOverride
        exclude: true
      region: !ruby/object:Overrides::Terraform::PropertyOverride
        required: false # the provider-default value will be used if not specified
      sessionAffinity: !ruby/object:Overrides::Terraform::PropertyOverride
        default_value: :NONE
      # TODO: Custom code needed for updating `instances` and `healthCheck`.
      #       Update methods are (add|remove)Instance, (add/remove)HealthCheck
  TargetSslProxy: !ruby/object:Overrides::Terraform::ResourceOverride
    examples:
      - !ruby/object:Provider::Terraform::Examples
        name: "target_ssl_proxy_basic"
        primary_resource_id: "default"
        vars:
          target_ssl_proxy_name: "test-proxy"
          ssl_certificate_name: "default-cert"
          backend_service_name: "backend-service"
          health_check_name: "health-check"
    properties:
      id: !ruby/object:Overrides::Terraform::PropertyOverride
        name: proxyId
      proxyHeader: !ruby/object:Overrides::Terraform::PropertyOverride
        default_value: :NONE
      service: !ruby/object:Overrides::Terraform::PropertyOverride
        name: backendService
  TargetTcpProxy: !ruby/object:Overrides::Terraform::ResourceOverride
    examples:
      - !ruby/object:Provider::Terraform::Examples
        name: "target_tcp_proxy_basic"
        primary_resource_id: "default"
        vars:
          target_tcp_proxy_name: "test-proxy"
          backend_service_name: "backend-service"
          health_check_name: "health-check"
    properties:
      id: !ruby/object:Overrides::Terraform::PropertyOverride
        name: proxyId
      service: !ruby/object:Overrides::Terraform::PropertyOverride
        name: backendService
      proxyHeader: !ruby/object:Overrides::Terraform::PropertyOverride
        default_value: :NONE
  TargetVpnGateway: !ruby/object:Overrides::Terraform::ResourceOverride
    name: 'VpnGateway'
    examples:
      - !ruby/object:Provider::Terraform::Examples
        name: "target_vpn_gateway_basic"
        primary_resource_id: "target_gateway"
        vars:
          target_vpn_gateway_name: "vpn1"
          network_name: "network1"
          address_name: "vpn-static-ip"
          esp_forwarding_rule_name: "fr-esp"
          udp500_forwarding_rule_name: "fr-udp500"
          udp4500_forwarding_rule_name: "fr-udp4500"
          vpn_tunnel_name: "tunnel1"
          route_name: "route1"
    properties:
      id: !ruby/object:Overrides::Terraform::PropertyOverride
        exclude: true
      region: !ruby/object:Overrides::Terraform::PropertyOverride
        required: false # the provider-default value will be used if not specified
        default_from_api: true
        custom_flatten: 'templates/terraform/custom_flatten/name_from_self_link.erb'
      forwardingRules: !ruby/object:Overrides::Terraform::PropertyOverride
        exclude: true
      tunnels: !ruby/object:Overrides::Terraform::PropertyOverride
        exclude: true
  UrlMap: !ruby/object:Overrides::Terraform::ResourceOverride
    examples:
      - !ruby/object:Provider::Terraform::Examples
        name: "url_map_basic"
        primary_resource_id: "urlmap"
        vars:
          url_map_name: "urlmap"
          login_backend_service_name: "login"
          home_backend_service_name: "home"
          http_health_check_name: "health-check"
          backend_bucket_name: "static-asset-backend-bucket"
          storage_bucket_name: "static-asset-bucket"
    properties:
      id: !ruby/object:Overrides::Terraform::PropertyOverride
        name: "map_id"
      defaultService: !ruby/object:Overrides::Terraform::PropertyOverride
        custom_expand: 'templates/terraform/custom_expand/url_map_only_set_string.go.erb'
        description: The backend service or backend bucket to use when none of the given rules match.
      hostRules: !ruby/object:Overrides::Terraform::PropertyOverride
        name: "host_rule"
        is_set: true
      hostRules.hosts: !ruby/object:Overrides::Terraform::PropertyOverride
        is_set: true
      pathMatchers: !ruby/object:Overrides::Terraform::PropertyOverride
        name: "path_matcher"
      pathMatchers.defaultService: !ruby/object:Overrides::Terraform::PropertyOverride
        custom_expand: 'templates/terraform/custom_expand/url_map_only_set_string.go.erb'
        description: The backend service or backend bucket to use when none of the given paths match.
      pathMatchers.pathRules: !ruby/object:Overrides::Terraform::PropertyOverride
        name: "path_rule"
      pathMatchers.pathRules.paths: !ruby/object:Overrides::Terraform::PropertyOverride
        is_set: true
      pathMatchers.pathRules.service: !ruby/object:Overrides::Terraform::PropertyOverride
        custom_expand: 'templates/terraform/custom_expand/url_map_only_set_string.go.erb'
        description: The backend service or backend bucket to use if any of the given paths match.
      tests.service: !ruby/object:Overrides::Terraform::PropertyOverride
        custom_expand: 'templates/terraform/custom_expand/url_map_only_set_string.go.erb'
        description: The backend service or backend bucket link that should be matched by this test.
      tests: !ruby/object:Overrides::Terraform::PropertyOverride
        name: "test"
  VpnTunnel: !ruby/object:Overrides::Terraform::ResourceOverride
    examples:
      - !ruby/object:Provider::Terraform::Examples
        name: "vpn_tunnel_basic"
        primary_resource_id: "tunnel1"
        vars:
          vpn_tunnel_name: "tunnel1"
          target_vpn_gateway_name: "vpn1"
          network_name: "network1"
          address_name: "vpn-static-ip"
          esp_forwarding_rule_name: "fr-esp"
          udp500_forwarding_rule_name: "fr-udp500"
          udp4500_forwarding_rule_name: "fr-udp4500"
          route_name: "route1"
    docs: !ruby/object:Provider::Terraform::Docs
      warning: |
        All arguments including the shared secret will be stored in the raw
        state as plain-text.
        [Read more about sensitive data in state](/docs/state/sensitive-data.html).
    properties:
      targetVpnGateway: !ruby/object:Overrides::Terraform::PropertyOverride
        resource: 'VpnGateway'
      peerIp: !ruby/object:Overrides::Terraform::PropertyOverride
        validation: !ruby/object:Provider::Terraform::Validation
          function: 'validatePeerAddr'
      sharedSecret: !ruby/object:Overrides::Terraform::PropertyOverride
        sensitive: true
        ignore_read: true
      region: !ruby/object:Overrides::Terraform::PropertyOverride
        required: false
        default_from_api: true
        custom_flatten: 'templates/terraform/custom_flatten/name_from_self_link.erb'
        description: '{{description}} If unset, is set to the region of `target_vpn_gateway`.'
      localTrafficSelector: !ruby/object:Overrides::Terraform::PropertyOverride
        is_set: true
        default_from_api: true
      remoteTrafficSelector: !ruby/object:Overrides::Terraform::PropertyOverride
        is_set: true
        default_from_api: true
      detailedStatus: !ruby/object:Overrides::Terraform::PropertyOverride
        exclude: false
      labelFingerprint: !ruby/object:Overrides::Terraform::PropertyOverride
        exclude: false
      router: !ruby/object:Overrides::Terraform::PropertyOverride
        custom_expand: 'templates/terraform/custom_expand/compute_full_url.erb'
    custom_code: !ruby/object:Provider::Terraform::CustomCode
      constants: templates/terraform/constants/vpn_tunnel.erb
      encoder: templates/terraform/encoders/vpn_tunnel.go.erb
  Zone: !ruby/object:Overrides::Terraform::ResourceOverride
    exclude: true

# This is for copying files over
files: !ruby/object:Provider::Config::Files
  # These files have templating (ERB) code that will be run.
  # This is usually to add licensing info, autogeneration notices, etc.
  compile:
<%= lines(indent(compile('provider/terraform/product~compile.yaml'), 4)) -%>
