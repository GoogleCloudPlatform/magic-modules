# Copyright 2017 Google Inc.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

--- !ruby/object:Provider::Terraform::Config
overrides: !ruby/object:Provider::ResourceOverrides
  Address: !ruby/object:Provider::Terraform::ResourceOverride
    id_format: "{{project}}/{{region}}/{{name}}"
    examples: |
      ```hcl
      resource "google_compute_address" "default" {
        name = "my-address"
      }
      ```
      ```hcl
      resource "google_compute_network" "default" {
        name = "my-network"
      }

      resource "google_compute_subnetwork" "default" {
        name          = "my-subnet"
        ip_cidr_range = "10.0.0.0/16"
        region        = "us-central1"
        network       = "${google_compute_network.default.self_link}"
      }

      resource "google_compute_address" "internal_with_subnet_and_address" {
        name         = "my-internal-address"
        subnetwork   = "${google_compute_subnetwork.default.self_link}"
        address_type = "INTERNAL"
        address      = "10.0.42.42"
        region       = "us-central1"
      }
      ```
    properties:
      address: !ruby/object:Provider::Terraform::PropertyOverride
        default_from_api: true
      addressType: !ruby/object:Provider::Terraform::PropertyOverride
        custom_flatten: 'templates/terraform/custom_flatten/default_if_empty.erb'
      id: !ruby/object:Provider::Terraform::PropertyOverride
        exclude: true
      labelFingerprint: !ruby/object:Provider::Terraform::PropertyOverride
        exclude: false
      name: !ruby/object:Provider::Terraform::PropertyOverride
        validation: !ruby/object:Provider::Terraform::Validation
          regex: '^(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?)$'
      networkTier: !ruby/object:Provider::Terraform::PropertyOverride
        default_from_api: true
      region: !ruby/object:Provider::Terraform::PropertyOverride
        required: false
        default_from_api: true
        custom_flatten: 'templates/terraform/custom_flatten/name_from_self_link.erb'
        description: |
          The Region in which the created address should reside.
          If it is not provided, the provider region is used.
      subnetwork: !ruby/object:Provider::Terraform::PropertyOverride
        default_from_api: true
    docs: !ruby/object:Provider::Terraform::Docs
      attributes: |
          * `address`: The IP of the created resource.
    custom_code: !ruby/object:Provider::Terraform::CustomCode
      post_create: templates/terraform/post_create/labels.erb
  Autoscaler: !ruby/object:Provider::Terraform::ResourceOverride
    id_format: "{{zone}}/{{name}}"
    examples: |
      ```hcl
      resource "google_compute_instance_template" "foobar" {
        name           = "foobar"
        machine_type   = "n1-standard-1"
        can_ip_forward = false

        tags = ["foo", "bar"]

        disk {
          source_image = "debian-cloud/debian-8"
        }

        network_interface {
          network = "default"
        }

        metadata {
          foo = "bar"
        }

        service_account {
          scopes = ["userinfo-email", "compute-ro", "storage-ro"]
        }
      }

      resource "google_compute_target_pool" "foobar" {
        name = "foobar"
      }

      resource "google_compute_instance_group_manager" "foobar" {
        name = "foobar"
        zone = "us-central1-f"

        instance_template  = "${google_compute_instance_template.foobar.self_link}"
        target_pools       = ["${google_compute_target_pool.foobar.self_link}"]
        base_instance_name = "foobar"
      }

      resource "google_compute_autoscaler" "foobar" {
        name   = "scaler"
        zone   = "us-central1-f"
        target = "${google_compute_instance_group_manager.foobar.self_link}"

        autoscaling_policy = {
          max_replicas    = 5
          min_replicas    = 1
          cooldown_period = 60

          cpu_utilization {
            target = 0.5
          }
        }
      }
      ```
    properties:
<%= indent(compile_file({}, 'products/compute/helpers/terraform/autoscaler_overrides.yaml'), 6) %>
      target: !ruby/object:Provider::Terraform::PropertyOverride
        custom_expand: 'templates/terraform/custom_expand/compute_full_url.erb'
      zone: !ruby/object:Provider::Terraform::PropertyOverride
        required: false
        default_from_api: true
  BackendBucket: !ruby/object:Provider::Terraform::ResourceOverride
    examples: |
      ```hcl
      resource "google_compute_backend_bucket" "image_backend" {
        name        = "image-backend-bucket"
        description = "Contains beautiful images"
        bucket_name = "${google_storage_bucket.image_bucket.name}"
        enable_cdn  = true
      }

      resource "google_storage_bucket" "image_bucket" {
        name     = "image-store-bucket"
        location = "EU"
      }
      ```
    properties:
      id: !ruby/object:Provider::Terraform::PropertyOverride
        exclude: true
      name: !ruby/object:Provider::Terraform::PropertyOverride
        validation: !ruby/object:Provider::Terraform::Validation
          regex: '^(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?)$'
  BackendService: !ruby/object:Provider::Terraform::ResourceOverride
    exclude: true
  Disk: !ruby/object:Provider::Terraform::ResourceOverride
    properties:
<%= indent(compile_file({}, 'products/compute/helpers/terraform/disk_overrides.yaml'), 6) %>
      zone: !ruby/object:Provider::Terraform::PropertyOverride
        required: false
        default_from_api: true
        custom_flatten: 'templates/terraform/custom_flatten/name_from_self_link.erb'
      diskEncryptionKey: !ruby/object:Provider::Terraform::PropertyOverride
        diff_suppress_func:  diskEncryptionKeyDiffSuppress
        custom_expand: templates/terraform/custom_expand/encryption_key_expand.erb
      sourceImage: !ruby/object:Provider::Terraform::PropertyOverride
        name: image
        diff_suppress_func: 'diskImageDiffSuppress'
      image: !ruby/object:Provider::Terraform::PropertyOverride
        description: |
          The image from which to initialize this disk. This can be
          one of: the image's `self_link`, `projects/{project}/global/images/{image}`,
          `projects/{project}/global/images/family/{family}`, `global/images/{image}`,
          `global/images/family/{family}`, `family/{family}`, `{project}/{family}`,
          `{project}/{image}`, `{family}`, or `{image}`. If referred by family, the
          images names must include the family name. If they don't, use the
          [google_compute_image data source](/docs/providers/google/d/datasource_compute_image.html).
          For instance, the image `centos-6-v20180104` includes its family name `centos-6`.
          These images can be referred by family name here.
    custom_code: !ruby/object:Provider::Terraform::CustomCode
      pre_delete: templates/terraform/pre_delete/detach_disk.erb
      post_import: templates/terraform/post_import/disk.erb
      constants: templates/terraform/constants/disk.erb
      encoder: templates/terraform/encoders/disk.erb
      extra_schema_entry: templates/terraform/extra_schema_entry/disk.erb
      decoder: templates/terraform/decoders/disk.erb
      resource_definition: templates/terraform/resource_definition/disk.erb
    docs: !ruby/object:Provider::Terraform::Docs
      warning: |
        All arguments including the disk encryption key will be stored in the raw
        state as plain-text.
        [Read more about sensitive data in state](/docs/state/sensitive-data.html).
      optional_properties: |
        * (Deprecated) `disk_encryption_key_raw`:  This is an alias for
          `disk_encryption_key.raw_key`.  It is deprecated to enhance
          consistency with `source_image_encryption_key` and
          `source_snapshot_encryption_key`.
      attributes: |
        * (Deprecated) `disk_encryption_key_sha256`: This is an alias for
          `disk_encryption_key.sha256`.  It is deprecated to enhance
          consistency with `source_image_encryption_key` and
          `source_snapshot_encryption_key`.
    examples: |
      ```hcl
      resource "google_compute_disk" "default" {
        name  = "test-disk"
        type  = "pd-ssd"
        zone  = "us-central1-a"
        image = "debian-8-jessie-v20170523"
        labels {
          environment = "dev"
        }
      }
      ```
  DiskType: !ruby/object:Provider::Terraform::ResourceOverride
    exclude: true
  Firewall: !ruby/object:Provider::Terraform::ResourceOverride
    exclude: true
  ForwardingRule: !ruby/object:Provider::Terraform::ResourceOverride
    examples: |
      ```hcl
      resource "google_compute_forwarding_rule" "default" {
        name       = "website-forwarding-rule"
        target     = "${google_compute_target_pool.default.self_link}"
        port_range = "80"
      }
      ```
    custom_code: !ruby/object:Provider::Terraform::CustomCode
      post_create: templates/terraform/post_create/labels.erb
    properties:
      id: !ruby/object:Provider::Terraform::PropertyOverride
        exclude: true
      portRange: !ruby/object:Provider::Terraform::PropertyOverride
        diff_suppress_func: 'portRangeDiffSuppress'
      region: !ruby/object:Provider::Terraform::PropertyOverride
        required: false
        default_from_api: true
      IPAddress: !ruby/object:Provider::Terraform::PropertyOverride
        default_from_api: true
      IPProtocol: !ruby/object:Provider::Terraform::PropertyOverride
        diff_suppress_func: 'caseDiffSuppress'
        default_from_api: true
      loadBalancingScheme: !ruby/object:Provider::Terraform::PropertyOverride
        default_value: :EXTERNAL
      network: !ruby/object:Provider::Terraform::PropertyOverride
        default_from_api: true
      subnetwork: !ruby/object:Provider::Terraform::PropertyOverride
        default_from_api: true
      region: !ruby/object:Provider::Terraform::PropertyOverride
        required: false
        default_from_api: true
        custom_flatten: 'templates/terraform/custom_flatten/name_from_self_link.erb'
      backendService: !ruby/object:Provider::Terraform::PropertyOverride
        custom_expand: 'templates/terraform/custom_expand/self_link_from_name.erb'
      networkTier: !ruby/object:Provider::Terraform::PropertyOverride
        default_from_api: true
      target: !ruby/object:Provider::Terraform::PropertyOverride
        diff_suppress_func: 'compareSelfLinkRelativePaths'
        custom_expand: 'templates/terraform/custom_expand/self_link_from_name.erb'
      ports: !ruby/object:Provider::Terraform::PropertyOverride
        is_set: true
        custom_expand: 'templates/terraform/custom_expand/set_to_list.erb'
      labelFingerprint: !ruby/object:Provider::Terraform::PropertyOverride
        exclude: false
      serviceLabel: !ruby/object:Provider::Terraform::PropertyOverride
        validation: !ruby/object:Provider::Terraform::Validation
          function: 'validateGCPName'
  GlobalAddress: !ruby/object:Provider::Terraform::ResourceOverride
    examples: |
      ```hcl
      resource "google_compute_global_address" "default" {
        name = "global-appserver-ip"
      }
      ```
    properties:
      id: !ruby/object:Provider::Terraform::PropertyOverride
        exclude: true
      ipVersion: !ruby/object:Provider::Terraform::PropertyOverride
        diff_suppress_func: 'emptyOrDefaultStringSuppress("IPV4")'
      labelFingerprint: !ruby/object:Provider::Terraform::PropertyOverride
        exclude: false
      region: !ruby/object:Provider::Terraform::PropertyOverride
        exclude: true
    custom_code: !ruby/object:Provider::Terraform::CustomCode
      post_create: templates/terraform/post_create/labels.erb
  GlobalForwardingRule: !ruby/object:Provider::Terraform::ResourceOverride
    exclude: true
  HttpHealthCheck: !ruby/object:Provider::Terraform::ResourceOverride
    description: |
      {{description}}

      ~> **Note:** google_compute_http_health_check is a legacy health check.
      The newer [google_compute_health_check](/docs/providers/google/r/compute_health_check.html)
      should be preferred for all uses except
      [Network Load Balancers](https://cloud.google.com/compute/docs/load-balancing/network/)
      which still require the legacy version.
    examples: |
      ```hcl
      resource "google_compute_http_health_check" "default" {
        name         = "authentication-health-check"
        request_path = "/health_check"

        timeout_sec        = 1
        check_interval_sec = 1
      }
      ```
    properties:
      id: !ruby/object:Provider::Terraform::PropertyOverride
        exclude: true
      checkIntervalSec: !ruby/object:Provider::Terraform::PropertyOverride
        default_value: 5
      healthyThreshold: !ruby/object:Provider::Terraform::PropertyOverride
        default_value: 2
      port: !ruby/object:Provider::Terraform::PropertyOverride
        default_value: 80
      requestPath: !ruby/object:Provider::Terraform::PropertyOverride
        default_value: "/"
      timeoutSec: !ruby/object:Provider::Terraform::PropertyOverride
        default_value: 5
      unhealthyThreshold: !ruby/object:Provider::Terraform::PropertyOverride
        default_value: 2
  HttpsHealthCheck: !ruby/object:Provider::Terraform::ResourceOverride
    description: |
      {{description}}

      ~> **Note:** google_compute_https_health_check is a legacy health check.
      The newer [google_compute_health_check](/docs/providers/google/r/compute_health_check.html)
      should be preferred for all uses except
      [Network Load Balancers](https://cloud.google.com/compute/docs/load-balancing/network/)
      which still require the legacy version.
    examples: |
      ```hcl
      resource "google_compute_https_health_check" "default" {
        name         = "test"
        request_path = "/health_check"

        timeout_sec        = 1
        check_interval_sec = 1
      }
      ```
    properties:
      id: !ruby/object:Provider::Terraform::PropertyOverride
        exclude: true
      checkIntervalSec: !ruby/object:Provider::Terraform::PropertyOverride
        default_value: 5
      healthyThreshold: !ruby/object:Provider::Terraform::PropertyOverride
        default_value: 2
      port: !ruby/object:Provider::Terraform::PropertyOverride
        default_value: 443
      requestPath: !ruby/object:Provider::Terraform::PropertyOverride
        default_value: "/"
      timeoutSec: !ruby/object:Provider::Terraform::PropertyOverride
        default_value: 5
      unhealthyThreshold: !ruby/object:Provider::Terraform::PropertyOverride
        default_value: 2
  HealthCheck: !ruby/object:Provider::Terraform::ResourceOverride
    exclude: true
  Image: !ruby/object:Provider::Terraform::ResourceOverride
    exclude: true
    properties:
      id: !ruby/object:Provider::Terraform::PropertyOverride
        exclude: true
      deprecated: !ruby/object:Provider::Terraform::PropertyOverride
        exclude: true
      guestOsFeatures: !ruby/object:Provider::Terraform::PropertyOverride
        exclude: true
      imageEncryptionKey: !ruby/object:Provider::Terraform::PropertyOverride
        exclude: true
      rawDisk.sha1Checksum: !ruby/object:Provider::Terraform::PropertyOverride
        name: 'sha1'
      sourceDiskEncryptionKey: !ruby/object:Provider::Terraform::PropertyOverride
        exclude: true
      sourceDiskId: !ruby/object:Provider::Terraform::PropertyOverride
        exclude: true
      sourceType: !ruby/object:Provider::Terraform::PropertyOverride
        exclude: true
      licenses: !ruby/object:Provider::Terraform::PropertyOverride
        exclude: true
  Instance: !ruby/object:Provider::Terraform::ResourceOverride
    exclude: true
  InstanceGroup: !ruby/object:Provider::Terraform::ResourceOverride
    exclude: true
  InstanceGroupManager: !ruby/object:Provider::Terraform::ResourceOverride
    exclude: true
  InstanceTemplate: !ruby/object:Provider::Terraform::ResourceOverride
    exclude: true
  License: !ruby/object:Provider::Terraform::ResourceOverride
    exclude: true
  MachineType: !ruby/object:Provider::Terraform::ResourceOverride
    exclude: true
  Network: !ruby/object:Provider::Terraform::ResourceOverride
    exclude: true
  Region: !ruby/object:Provider::Terraform::ResourceOverride
    exclude: true
  RegionAutoscaler: !ruby/object:Provider::Terraform::ResourceOverride
    id_format: "{{region}}/{{name}}"
    examples: |
      ```hcl
      resource "google_compute_instance_template" "foobar" {
        name           = "foobar"
        machine_type   = "n1-standard-1"
        can_ip_forward = false

        tags = ["foo", "bar"]

        disk {
          source_image = "debian-cloud/debian-8"
        }

        network_interface {
          network = "default"
        }

        metadata {
          foo = "bar"
        }

        service_account {
          scopes = ["userinfo-email", "compute-ro", "storage-ro"]
        }
      }

      resource "google_compute_target_pool" "foobar" {
        name = "foobar"
      }

      resource "google_compute_region_instance_group_manager" "foobar" {
        name   = "foobar"
        region = "us-central1"

        instance_template  = "${google_compute_instance_template.foobar.self_link}"
        target_pools       = ["${google_compute_target_pool.foobar.self_link}"]
        base_instance_name = "foobar"
      }

      resource "google_compute_region_autoscaler" "foobar" {
        name   = "scaler"
        region = "us-central1"
        target = "${google_compute_region_instance_group_manager.foobar.self_link}"

        autoscaling_policy = {
          max_replicas    = 5
          min_replicas    = 1
          cooldown_period = 60

          cpu_utilization {
            target = 0.5
          }
        }
      }
      ```
    properties:
<%= indent(compile_file({}, 'products/compute/helpers/terraform/autoscaler_overrides.yaml'), 6) %>
      region: !ruby/object:Provider::Terraform::PropertyOverride
        required: false
        default_from_api: true
  RegionDisk: !ruby/object:Provider::Terraform::ResourceOverride
    properties:
<%= indent(compile_file({}, 'products/compute/helpers/terraform/disk_overrides.yaml'), 6) %>
      region: !ruby/object:Provider::Terraform::PropertyOverride
        required: false
        default_from_api: true
        custom_flatten: 'templates/terraform/custom_flatten/name_from_self_link.erb'
    custom_code: !ruby/object:Provider::Terraform::CustomCode
      pre_delete: templates/terraform/pre_delete/detach_disk.erb
      encoder: templates/terraform/encoders/disk.erb
      decoder: templates/terraform/decoders/disk.erb
      resource_definition: templates/terraform/resource_definition/disk.erb
    docs: !ruby/object:Provider::Terraform::Docs
      warning: |
        All arguments including the disk encryption key will be stored in the raw
        state as plain-text.
        [Read more about sensitive data in state](/docs/state/sensitive-data.html).
    examples: |
      ```hcl
      resource "google_compute_disk" "disk" {
        name = "my-disk"
        image = "debian-cloud/debian-9"
        size = 50
        type = "pd-ssd"
        zone = "us-central1-a"
      }

      resource "google_compute_snapshot" "snapdisk" {
        name = "my-disk-snapshot"
        source_disk = "${google_compute_disk.disk.name}"
        zone = "us-central1-a"
      }

      resource "google_compute_region_disk" "regiondisk" {
        name = "my-regional-disk"
        snapshot = "${google_compute_snapshot.snapdisk.self_link}"
        type = "pd-ssd"
        region = "us-central1"

        replica_zones = ["us-central1-a", "us-central1-f"]
      }
      ```
  Route: !ruby/object:Provider::Terraform::ResourceOverride
    examples: |
      ```hcl
      resource "google_compute_network" "default" {
        name = "compute-network"
      }

      resource "google_compute_subnetwork" "default" {
        name          = "compute-subnetwork"
        ip_cidr_range = "10.0.0.0/16"
        network       = "${google_compute_network.default.self_link}"
        region        = "us-central1"
      }

      resource "google_compute_route" "default" {
        name        = "network-route"
        dest_range  = "15.0.0.0/24"
        network     = "${google_compute_network.foobar.name}"
        next_hop_ip = "10.0.1.5"
        priority    = 100
      }
      ```
    properties:
      name: !ruby/object:Provider::Terraform::PropertyOverride
        validation: !ruby/object:Provider::Terraform::Validation
          regex: '^[a-z]([-a-z0-9]*[a-z0-9])?$'
      network: !ruby/object:Provider::Terraform::PropertyOverride
        diff_suppress_func: 'compareSelfLinkOrResourceName'
      priority: !ruby/object:Provider::Terraform::PropertyOverride
        default_value: 1000
      nextHopGateway: !ruby/object:Provider::Terraform::PropertyOverride
        diff_suppress_func: 'compareSelfLinkOrResourceName'
        custom_expand: templates/terraform/custom_expand/route_gateway.erb
        # Description here is overridden because puppet won't compile if you ask
        # it to include docs greater than 80 characters.
        description: |+
          URL to a gateway that should handle matching packets.
          Currently, you can only specify the internet gateway, using a full or
          partial valid URL:
          * `https://www.googleapis.com/compute/v1/projects/project/global/gateways/default-internet-gateway`
          * `projects/project/global/gateways/default-internet-gateway`
          * `global/gateways/default-internet-gateway`
          * The string `default-internet-gateway`.
          
      nextHopInstance: !ruby/object:Provider::Terraform::PropertyOverride
        diff_suppress_func: 'compareSelfLinkOrResourceName'
        custom_expand: templates/terraform/custom_expand/route_instance.erb
        # Description here is overridden because puppet won't compile if you ask
        # it to include docs greater than 80 characters.
        description: |+
          URL to an instance that should handle matching packets.
          You can specify this as a full or partial URL. For example:
          * `https://www.googleapis.com/compute/v1/projects/project/zones/zone/instances/instance`
          * `projects/project/zones/zone/instances/instance`
          * `zones/zone/instances/instance`
          * Just the instance name, with the zone in `next_hop_instance_zone`.
          
      tags: !ruby/object:Provider::Terraform::PropertyOverride
        custom_expand: templates/terraform/custom_expand/set_to_list.erb
        is_set: true
    custom_code: !ruby/object:Provider::Terraform::CustomCode
      decoder: templates/terraform/decoders/route.erb
      extra_schema_entry: templates/terraform/extra_schema_entry/route.erb
    docs: !ruby/object:Provider::Terraform::Docs
      optional_properties: |+
          * `next_hop_instance_zone` - (Optional when `next_hop_instance` is
            specified)  The zone of the instance specified in
            `next_hop_instance`.  Omit if `next_hop_instance` is specified as
            a URL.
  Router: !ruby/object:Provider::Terraform::ResourceOverride
    id_format: "{{region}}/{{name}}"
    mutex: router/{{region}}/{{name}}
    examples: |
      ```hcl
      resource "google_compute_network" "foobar" {
        name                    = "my-network"
        auto_create_subnetworks = false
      }

      resource "google_compute_router" "foobar" {
        name    = "my-router"
        network = "${google_compute_network.foobar.name}"
        bgp {
          asn               = 64514
          advertise_mode    = "CUSTOM"
          advertised_groups = ["ALL_SUBNETS"]
          advertised_ip_ranges {
            range = "1.2.3.4"
          }
          advertised_ip_ranges {
            range = "6.7.0.0/16"
          }
        }
      }
      ```
    properties:
      id: !ruby/object:Provider::Terraform::PropertyOverride
        exclude: true
      name: !ruby/object:Provider::Terraform::PropertyOverride
        validation: !ruby/object:Provider::Terraform::Validation
          function: 'validateGCPName'
      region: !ruby/object:Provider::Terraform::PropertyOverride
        required: false
        default_from_api: true
        custom_flatten: 'templates/terraform/custom_flatten/name_from_self_link.erb'
  Snapshot: !ruby/object:Provider::Terraform::ResourceOverride
    exclude: true
  SslCertificate: !ruby/object:Provider::Terraform::ResourceOverride
    exclude: true
    properties:
      id: !ruby/object:Provider::Terraform::PropertyOverride
        exclude: true
      certificate: !ruby/object:Provider::Terraform::PropertyOverride
        sensitive: true
      privateKey: !ruby/object:Provider::Terraform::PropertyOverride
        sensitive: true
  SslPolicy: !ruby/object:Provider::Terraform::ResourceOverride
    exclude: false
    examples: |
      ```hcl
      resource "google_compute_ssl_policy" "prod-ssl-policy" {
        name    = "production-ssl-policy"
        profile = "MODERN"
      }

      resource "google_compute_ssl_policy" "nonprod-ssl-policy" {
        name            = "nonprod-ssl-policy"
        profile         = "MODERN"
        min_tls_version = "TLS_1_2"
      }

      resource "google_compute_ssl_policy" "custom-ssl-policy" {
        name            = "custom-ssl-policy"
        min_tls_version = "TLS_1_2"
        profile         = "CUSTOM"
        custom_features = ["TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384", "TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384"]
      }
      ```
    custom_code: !ruby/object:Provider::Terraform::CustomCode
      constants:  'templates/terraform/constants/ssl_policy.erb'
      resource_definition: 'templates/terraform/resource_definition/ssl_policy.erb'
      update_encoder: 'templates/terraform/update_encoder/ssl_policy.erb'
    properties:
      id: !ruby/object:Provider::Terraform::PropertyOverride
        exclude: true
      customFeatures: !ruby/object:Provider::Terraform::PropertyOverride
        is_set: true
        # TODO(https://github.com/GoogleCloudPlatform/magic-modules/issues/187) replace references automatically
        # Overriding the whole description because original has references to
        # other fields which are in camelCase in api.yaml.
        description: |
          Profile specifies the set of SSL features that can be used by the
          load balancer when negotiating SSL with clients. This can be one of
          `COMPATIBLE`, `MODERN`, `RESTRICTED`, or `CUSTOM`. If using `CUSTOM`,
          the set of SSL features to enable must be specified in the
          `customFeatures` field.

          See the [official documentation](https://cloud.google.com/compute/docs/load-balancing/ssl-policies#profilefeaturesupport)
          for which ciphers are available to use. **Note**: this argument
          *must* be present when using the `CUSTOM` profile. This argument
          *must not* be present when using any other profile.
      enabledFeatures: !ruby/object:Provider::Terraform::PropertyOverride
        is_set: true
      profile: !ruby/object:Provider::Terraform::PropertyOverride
        default_value: :COMPATIBLE
        description: |
          {{description}}
          See the [official documentation](https://cloud.google.com/compute/docs/load-balancing/ssl-policies#profilefeaturesupport)
          for information on what cipher suites each profile provides. If
          `CUSTOM` is used, the `custom_features` attribute **must be set**.
          Default is `COMPATIBLE`.
      minTlsVersion: !ruby/object:Provider::Terraform::PropertyOverride
        default_value: :TLS_1_0
        description : '{{description}} Default is `TLS_1_0`.'
      warnings: !ruby/object:Provider::Terraform::PropertyOverride
        exclude: true
  Subnetwork: !ruby/object:Provider::Terraform::ResourceOverride
    id_format: "{{region}}/{{name}}"
    properties:
      id: !ruby/object:Provider::Terraform::PropertyOverride
        exclude: true
      name: !ruby/object:Provider::Terraform::PropertyOverride
        validation: !ruby/object:Provider::Terraform::Validation
          function: 'validateGCPName'
      secondaryIpRanges: !ruby/object:Provider::Terraform::PropertyOverride
        name: secondaryIpRange
        unordered_list: true
        default_from_api: true
      secondaryIpRanges.rangeName: !ruby/object:Provider::Terraform::PropertyOverride
        validation: !ruby/object:Provider::Terraform::Validation
          function: 'validateGCPName'
      secondaryIpRanges.ipCidrRange: !ruby/object:Provider::Terraform::PropertyOverride
        validation: !ruby/object:Provider::Terraform::Validation
          function: 'validateIpCidrRange'
      fingerprint: !ruby/object:Provider::Terraform::PropertyOverride
        exclude: false
      ipCidrRange: !ruby/object:Provider::Terraform::PropertyOverride
        validation: !ruby/object:Provider::Terraform::Validation
          function: 'validateIpCidrRange'
      region: !ruby/object:Provider::Terraform::PropertyOverride
        required: false
        input: false
        default_from_api: true
        custom_flatten: 'templates/terraform/custom_flatten/name_from_self_link.erb'
    custom_code: !ruby/object:Provider::Terraform::CustomCode
      constants: templates/terraform/constants/subnetwork.erb
      resource_definition: templates/terraform/resource_definition/subnetwork.erb
    examples: |
      ```hcl
        resource "google_compute_network" "custom-test" {
          name                    = "test-network"
          auto_create_subnetworks = false
        }

        resource "google_compute_subnetwork" "network-with-private-secondary-ip-ranges" {
          name          = "test-subnetwork"
          ip_cidr_range = "10.2.0.0/16"
          region        = "us-central1"
          network       = "${google_compute_network.custom-test.self_link}"
          secondary_ip_range {
            range_name    = "tf-test-secondary-range-update1"
            ip_cidr_range = "192.168.10.0/24"
          }
        }
      ```
  TargetHttpProxy: !ruby/object:Provider::Terraform::ResourceOverride
    examples: |
      ```hcl
      resource "google_compute_target_http_proxy" "default" {
        name        = "test-proxy"
        description = "a description"
        url_map     = "${google_compute_url_map.default.self_link}"
      }

      resource "google_compute_url_map" "default" {
        name        = "url-map"
        description = "a description"

        default_service = "${google_compute_backend_service.default.self_link}"

        host_rule {
          hosts        = ["mysite.com"]
          path_matcher = "allpaths"
        }

        path_matcher {
          name            = "allpaths"
          default_service = "${google_compute_backend_service.default.self_link}"

          path_rule {
            paths   = ["/*"]
            service = "${google_compute_backend_service.default.self_link}"
          }
        }
      }

      resource "google_compute_backend_service" "default" {
        name        = "default-backend"
        port_name   = "http"
        protocol    = "HTTP"
        timeout_sec = 10

        health_checks = ["${google_compute_http_health_check.default.self_link}"]
      }

      resource "google_compute_http_health_check" "default" {
        name               = "test"
        request_path       = "/"
        check_interval_sec = 1
        timeout_sec        = 1
      }
      ```
    properties:
      id: !ruby/object:Provider::Terraform::PropertyOverride
        name: proxyId
  TargetHttpsProxy: !ruby/object:Provider::Terraform::ResourceOverride
    examples: |
      ```hcl
      resource "google_compute_target_https_proxy" "default" {
        name             = "test-proxy"
        description      = "a description"
        url_map          = "${google_compute_url_map.default.self_link}"
        ssl_certificates = ["${google_compute_ssl_certificate.default.self_link}"]
      }

      resource "google_compute_ssl_certificate" "default" {
        name        = "my-certificate"
        description = "a description"
        private_key = "${file("path/to/private.key")}"
        certificate = "${file("path/to/certificate.crt")}"
      }

      resource "google_compute_url_map" "default" {
        name        = "url-map"
        description = "a description"

        default_service = "${google_compute_backend_service.default.self_link}"

        host_rule {
          hosts        = ["mysite.com"]
          path_matcher = "allpaths"
        }

        path_matcher {
          name            = "allpaths"
          default_service = "${google_compute_backend_service.default.self_link}"

          path_rule {
            paths   = ["/*"]
            service = "${google_compute_backend_service.default.self_link}"
          }
        }
      }

      resource "google_compute_backend_service" "default" {
        name        = "default-backend"
        port_name   = "http"
        protocol    = "HTTP"
        timeout_sec = 10

        health_checks = ["${google_compute_http_health_check.default.self_link}"]
      }

      resource "google_compute_http_health_check" "default" {
        name               = "test"
        request_path       = "/"
        check_interval_sec = 1
        timeout_sec        = 1
      }
      ```
    properties:
      id: !ruby/object:Provider::Terraform::PropertyOverride
        name: proxyId
      sslPolicy: !ruby/object:Provider::Terraform::PropertyOverride
        exclude: false
  TargetPool: !ruby/object:Provider::Terraform::ResourceOverride
    exclude: true
    examples: |
      ```hcl
      resource "google_compute_target_pool" "default" {
        name = "instance-pool"

        instances = [
          "us-central1-a/myinstance1",
          "us-central1-b/myinstance2",
        ]

        health_checks = [
          "${google_compute_http_health_check.default.name}",
        ]
      }

      resource "google_compute_http_health_check" "default" {
        name               = "default"
        request_path       = "/"
        check_interval_sec = 1
        timeout_sec        = 1
      }
      ```
    properties:
      id: !ruby/object:Provider::Terraform::PropertyOverride
        exclude: true
      region: !ruby/object:Provider::Terraform::PropertyOverride
        required: false # the provider-default value will be used if not specified
      sessionAffinity: !ruby/object:Provider::Terraform::PropertyOverride
        default_value: :NONE
      # TODO: Custom code needed for updating `instances` and `healthCheck`.
      #       Update methods are (add|remove)Instance, (add/remove)HealthCheck
  TargetSslProxy: !ruby/object:Provider::Terraform::ResourceOverride
    examples: |
      ```hcl
      resource "google_compute_target_ssl_proxy" "default" {
        name = "test"
        backend_service = "${google_compute_backend_service.default.self_link}"
        ssl_certificates = ["${google_compute_ssl_certificate.default.self_link}"]
      }

      resource "google_compute_ssl_certificate" "default" {
        name = "default-cert"
        private_key = "${file("path/to/test.key")}"
        certificate = "${file("path/to/test.crt")}"
      }

      resource "google_compute_backend_service" "default" {
        name = "default-backend"
        protocol    = "SSL"
        health_checks = ["${google_compute_health_check.default.self_link}"]
      }

      resource "google_compute_health_check" "default" {
        name = "default-health-check"
        check_interval_sec = 1
        timeout_sec = 1
        tcp_health_check {
          port = "443"
        }
      }
      ```
    properties:
      id: !ruby/object:Provider::Terraform::PropertyOverride
        name: proxyId
      proxyHeader: !ruby/object:Provider::Terraform::PropertyOverride
        default_value: :NONE
      service: !ruby/object:Provider::Terraform::PropertyOverride
        name: backendService
      sslPolicy: !ruby/object:Provider::Terraform::PropertyOverride
        exclude: false
  TargetTcpProxy: !ruby/object:Provider::Terraform::ResourceOverride
    examples: |
      ```hcl
      resource "google_compute_target_tcp_proxy" "default" {
        name = "test"
        description = "test"
        backend_service = "${google_compute_backend_service.default.self_link}"
      }

      resource "google_compute_backend_service" "default" {
        name        = "default-backend"
        protocol    = "TCP"
        timeout_sec = 10

        health_checks = ["${google_compute_health_check.default.self_link}"]
      }

      resource "google_compute_health_check" "default" {
        name = "default"
        timeout_sec        = 1
        check_interval_sec = 1

        tcp_health_check {
          port = "443"
        }
      }
      ```
    properties:
      id: !ruby/object:Provider::Terraform::PropertyOverride
        name: proxyId
      service: !ruby/object:Provider::Terraform::PropertyOverride
        name: backendService
      proxyHeader: !ruby/object:Provider::Terraform::PropertyOverride
        default_value: :NONE
  TargetVpnGateway: !ruby/object:Provider::Terraform::ResourceOverride
    name: 'VpnGateway'
    exclude: false
    examples: |
      ```hcl
      resource "google_compute_network" "network1" {
        name       = "network1"
        ipv4_range = "10.120.0.0/16"
      }

      resource "google_compute_vpn_gateway" "target_gateway" {
        name    = "vpn1"
        network = "${google_compute_network.network1.self_link}"
        region  = "${var.region}"
      }

      resource "google_compute_address" "vpn_static_ip" {
        name   = "vpn-static-ip"
        region = "${var.region}"
      }

      resource "google_compute_forwarding_rule" "fr_esp" {
        name        = "fr-esp"
        region      = "${var.region}"
        ip_protocol = "ESP"
        ip_address  = "${google_compute_address.vpn_static_ip.address}"
        target      = "${google_compute_vpn_gateway.target_gateway.self_link}"
      }

      resource "google_compute_forwarding_rule" "fr_udp500" {
        name        = "fr-udp500"
        region      = "${var.region}"
        ip_protocol = "UDP"
        port_range  = "500"
        ip_address  = "${google_compute_address.vpn_static_ip.address}"
        target      = "${google_compute_vpn_gateway.target_gateway.self_link}"
      }

      resource "google_compute_forwarding_rule" "fr_udp4500" {
        name        = "fr-udp4500"
        region      = "${var.region}"
        ip_protocol = "UDP"
        port_range  = "4500"
        ip_address  = "${google_compute_address.vpn_static_ip.address}"
        target      = "${google_compute_vpn_gateway.target_gateway.self_link}"
      }

      resource "google_compute_vpn_tunnel" "tunnel1" {
        name          = "tunnel1"
        region        = "${var.region}"
        peer_ip       = "15.0.0.120"
        shared_secret = "a secret message"

        target_vpn_gateway = "${google_compute_vpn_gateway.target_gateway.self_link}"

        depends_on = [
          "google_compute_forwarding_rule.fr_esp",
          "google_compute_forwarding_rule.fr_udp500",
          "google_compute_forwarding_rule.fr_udp4500",
        ]
      }

      resource "google_compute_route" "route1" {
        name       = "route1"
        network    = "${google_compute_network.network1.name}"
        dest_range = "15.0.0.0/24"
        priority   = 1000

        next_hop_vpn_tunnel = "${google_compute_vpn_tunnel.tunnel1.self_link}"
      }
      ```
    properties:
      id: !ruby/object:Provider::Terraform::PropertyOverride
        exclude: true
      region: !ruby/object:Provider::Terraform::PropertyOverride
        required: false # the provider-default value will be used if not specified
        default_from_api: true
        custom_flatten: 'templates/terraform/custom_flatten/name_from_self_link.erb'
      forwardingRules: !ruby/object:Provider::Terraform::PropertyOverride
        exclude: true
      tunnels: !ruby/object:Provider::Terraform::PropertyOverride
        exclude: true
  UrlMap: !ruby/object:Provider::Terraform::ResourceOverride
    exclude: true
  Zone: !ruby/object:Provider::Terraform::ResourceOverride
    exclude: true
# This is for a list of example files.
examples: !ruby/object:Api::Resource::HashArray

# This is for copying files over
files: !ruby/object:Provider::Config::Files
  # All of these files will be copied verbatim.
  copy:
    'google/transport.go': 'templates/terraform/transport.go'
    'google/transport_test.go': 'templates/terraform/transport_test.go'
    'google/import.go': 'templates/terraform/import.go'
    'google/import_test.go': 'templates/terraform/import_test.go'
    # Handwritten acceptance tests for autogenerated resources.
    # Adding them here allows updating the tests as part of a MM pull request.
    'google/resource_compute_address_test.go':
      'templates/terraform/tests/resource_compute_address_test.go'
    'google/resource_compute_autoscaler_test.go':
      'templates/terraform/tests/resource_compute_autoscaler_test.go'
    'google/resource_compute_global_address_test.go':
      'templates/terraform/tests/resource_compute_global_address_test.go'
    'google/resource_compute_region_autoscaler_test.go':
      'templates/terraform/tests/resource_compute_region_autoscaler_test.go'
    'google/resource_compute_region_disk_test.go':
      'templates/terraform/tests/resource_compute_region_disk_test.go'
    'google/resource_compute_router_test.go':
      'templates/terraform/tests/resource_compute_router_test.go'
    'google/resource_compute_target_https_proxy_test.go':
      'templates/terraform/tests/resource_compute_target_https_proxy_test.go'
    'google/resource_compute_target_ssl_proxy_test.go':
      'templates/terraform/tests/resource_compute_target_ssl_proxy_test.go'
  # These files have templating (ERB) code that will be run.
  # This is usually to add licensing info, autogeneration notices, etc.
  compile:
    'google/provider_{{product_name}}_gen.go': 'templates/terraform/provider_gen.erb'

# This is for custom testing code. All of our tests follow a specific pattern
# that sometimes needs to be deviated from. We're working towards a world where
# these handwritten tests would be unnecessary in many cases (custom types).
tests: !ruby/object:Api::Resource::HashArray

# This would be for custom network responses. Tests work by running some block
# of autogenerated code and then verifying the network calls.
# The network call verifications are automatically generated, but can be
# overriden.
test_data: !ruby/object:Provider::Config::TestData
