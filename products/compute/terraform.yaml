# Copyright 2017 Google Inc.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

--- !ruby/object:Provider::Terraform::Config
overrides: !ruby/object:Provider::ResourceOverrides
  Address: !ruby/object:Provider::Terraform::ResourceOverride
    exclude: true
  BackendBucket: !ruby/object:Provider::Terraform::ResourceOverride
    examples: |
      ```hcl
      resource "google_compute_backend_bucket" "image_backend" {
        name        = "image-backend-bucket"
        description = "Contains beautiful images"
        bucket_name = "${google_storage_bucket.image_bucket.name}"
        enable_cdn  = true
      }

      resource "google_storage_bucket" "image_bucket" {
        name     = "image-store-bucket"
        location = "EU"
      }
      ```
    properties:
      id: !ruby/object:Provider::Terraform::PropertyOverride
        exclude: true
      name: !ruby/object:Provider::Terraform::PropertyOverride
        validation: !ruby/object:Provider::Terraform::Validation
          regex: '^(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?)$'
  BackendService: !ruby/object:Provider::Terraform::ResourceOverride
    exclude: true
  Disk: !ruby/object:Provider::Terraform::ResourceOverride
    exclude: true
    properties:
      id: !ruby/object:Provider::Terraform::PropertyOverride
        exclude: true
  DiskType: !ruby/object:Provider::Terraform::ResourceOverride
    exclude: true
  Firewall: !ruby/object:Provider::Terraform::ResourceOverride
    exclude: true
  ForwardingRule: !ruby/object:Provider::Terraform::ResourceOverride
    exclude: true
    properties:
      id: !ruby/object:Provider::Terraform::PropertyOverride
        exclude: true
      portRange: !ruby/object:Provider::Terraform::PropertyOverride
        diff_suppress_func: 'portRangeDiffSuppress'
  GlobalAddress: !ruby/object:Provider::Terraform::ResourceOverride
    examples: |
      ```hcl
      resource "google_compute_global_address" "default" {
        name = "global-appserver-ip"
      }
      ```
    properties:
      id: !ruby/object:Provider::Terraform::PropertyOverride
        exclude: true
      region: !ruby/object:Provider::Terraform::PropertyOverride
        exclude: true
  GlobalForwardingRule: !ruby/object:Provider::Terraform::ResourceOverride
    exclude: true
  HttpHealthCheck: !ruby/object:Provider::Terraform::ResourceOverride
    description: |
      {{description}}

      ~> **Note:** google_compute_http_health_check is a legacy health check.
      The newer [google_compute_health_check](/docs/providers/google/r/compute_health_check.html)
      should be preferred for all uses except
      [Network Load Balancers](https://cloud.google.com/compute/docs/load-balancing/network/)
      which still require the legacy version.
    examples: |
      ```hcl
      resource "google_compute_http_health_check" "default" {
        name         = "authentication-health-check"
        request_path = "/health_check"

        timeout_sec        = 1
        check_interval_sec = 1
      }
      ```
    properties:
      id: !ruby/object:Provider::Terraform::PropertyOverride
        exclude: true
      checkIntervalSec: !ruby/object:Provider::Terraform::PropertyOverride
        default: !ruby/object:Provider::Terraform::Default
          value: 5
      healthyThreshold: !ruby/object:Provider::Terraform::PropertyOverride
        default: !ruby/object:Provider::Terraform::Default
          value: 2
      port: !ruby/object:Provider::Terraform::PropertyOverride
        default: !ruby/object:Provider::Terraform::Default
          value: 80
      requestPath: !ruby/object:Provider::Terraform::PropertyOverride
        default: !ruby/object:Provider::Terraform::Default
          value: "/"
      timeoutSec: !ruby/object:Provider::Terraform::PropertyOverride
        default: !ruby/object:Provider::Terraform::Default
          value: 5
      unhealthyThreshold: !ruby/object:Provider::Terraform::PropertyOverride
        default: !ruby/object:Provider::Terraform::Default
          value: 2
  HttpsHealthCheck: !ruby/object:Provider::Terraform::ResourceOverride
    description: |
      {{description}}

      ~> **Note:** google_compute_https_health_check is a legacy health check.
      The newer [google_compute_health_check](/docs/providers/google/r/compute_health_check.html)
      should be preferred for all uses except
      [Network Load Balancers](https://cloud.google.com/compute/docs/load-balancing/network/)
      which still require the legacy version.
    examples: |
      ```hcl
      resource "google_compute_https_health_check" "default" {
        name         = "test"
        request_path = "/health_check"

        timeout_sec        = 1
        check_interval_sec = 1
      }
      ```
    properties:
      id: !ruby/object:Provider::Terraform::PropertyOverride
        exclude: true
      checkIntervalSec: !ruby/object:Provider::Terraform::PropertyOverride
        default: !ruby/object:Provider::Terraform::Default
          value: 5
      healthyThreshold: !ruby/object:Provider::Terraform::PropertyOverride
        default: !ruby/object:Provider::Terraform::Default
          value: 2
      port: !ruby/object:Provider::Terraform::PropertyOverride
        default: !ruby/object:Provider::Terraform::Default
          value: 443
      requestPath: !ruby/object:Provider::Terraform::PropertyOverride
        default: !ruby/object:Provider::Terraform::Default
          value: "/"
      timeoutSec: !ruby/object:Provider::Terraform::PropertyOverride
        default: !ruby/object:Provider::Terraform::Default
          value: 5
      unhealthyThreshold: !ruby/object:Provider::Terraform::PropertyOverride
        default: !ruby/object:Provider::Terraform::Default
          value: 2
  HealthCheck: !ruby/object:Provider::Terraform::ResourceOverride
    exclude: true
  Image: !ruby/object:Provider::Terraform::ResourceOverride
    exclude: true
    properties:
      id: !ruby/object:Provider::Terraform::PropertyOverride
        exclude: true
      deprecated: !ruby/object:Provider::Terraform::PropertyOverride
        exclude: true
      guestOsFeatures: !ruby/object:Provider::Terraform::PropertyOverride
        exclude: true
      imageEncryptionKey: !ruby/object:Provider::Terraform::PropertyOverride
        exclude: true
      rawDisk.sha1Checksum: !ruby/object:Provider::Terraform::PropertyOverride
        name: 'sha1'
      sourceDiskEncryptionKey: !ruby/object:Provider::Terraform::PropertyOverride
        exclude: true
      sourceDiskId: !ruby/object:Provider::Terraform::PropertyOverride
        exclude: true
      sourceType: !ruby/object:Provider::Terraform::PropertyOverride
        exclude: true
      licenses: !ruby/object:Provider::Terraform::PropertyOverride
        exclude: true
  Instance: !ruby/object:Provider::Terraform::ResourceOverride
    exclude: true
  InstanceGroup: !ruby/object:Provider::Terraform::ResourceOverride
    exclude: true
  InstanceGroupManager: !ruby/object:Provider::Terraform::ResourceOverride
    exclude: true
  InstanceTemplate: !ruby/object:Provider::Terraform::ResourceOverride
    exclude: true
  License: !ruby/object:Provider::Terraform::ResourceOverride
    exclude: true
  MachineType: !ruby/object:Provider::Terraform::ResourceOverride
    exclude: true
  Network: !ruby/object:Provider::Terraform::ResourceOverride
    exclude: true
  Region: !ruby/object:Provider::Terraform::ResourceOverride
    exclude: true
  Route: !ruby/object:Provider::Terraform::ResourceOverride
    exclude: true
  Snapshot: !ruby/object:Provider::Terraform::ResourceOverride
    exclude: true
  SslCertificate: !ruby/object:Provider::Terraform::ResourceOverride
    exclude: true
    properties:
      id: !ruby/object:Provider::Terraform::PropertyOverride
        exclude: true
      certificate: !ruby/object:Provider::Terraform::PropertyOverride
        sensitive: true
      privateKey: !ruby/object:Provider::Terraform::PropertyOverride
        sensitive: true
  Subnetwork: !ruby/object:Provider::Terraform::ResourceOverride
    id_format: "{{region}}/{{name}}"
    exclude: true
    properties:
      id: !ruby/object:Provider::Terraform::PropertyOverride
        exclude: true
      ipCidrRange: !ruby/object:Provider::Terraform::PropertyOverride
        validation: !ruby/object:Provider::Terraform::Validation
          function: 'validateIpCidrRange'
  TargetHttpProxy: !ruby/object:Provider::Terraform::ResourceOverride
    examples: |
      ```hcl
      resource "google_compute_target_http_proxy" "default" {
        name        = "test-proxy"
        description = "a description"
        url_map     = "${google_compute_url_map.default.self_link}"
      }

      resource "google_compute_url_map" "default" {
        name        = "url-map"
        description = "a description"

        default_service = "${google_compute_backend_service.default.self_link}"

        host_rule {
          hosts        = ["mysite.com"]
          path_matcher = "allpaths"
        }

        path_matcher {
          name            = "allpaths"
          default_service = "${google_compute_backend_service.default.self_link}"

          path_rule {
            paths   = ["/*"]
            service = "${google_compute_backend_service.default.self_link}"
          }
        }
      }

      resource "google_compute_backend_service" "default" {
        name        = "default-backend"
        port_name   = "http"
        protocol    = "HTTP"
        timeout_sec = 10

        health_checks = ["${google_compute_http_health_check.default.self_link}"]
      }

      resource "google_compute_http_health_check" "default" {
        name               = "test"
        request_path       = "/"
        check_interval_sec = 1
        timeout_sec        = 1
      }
      ```
    properties:
      id: !ruby/object:Provider::Terraform::PropertyOverride
        name: proxyId
  TargetHttpsProxy: !ruby/object:Provider::Terraform::ResourceOverride
    examples: |
      ```hcl
      resource "google_compute_target_https_proxy" "default" {
        name             = "test-proxy"
        description      = "a description"
        url_map          = "${google_compute_url_map.default.self_link}"
        ssl_certificates = ["${google_compute_ssl_certificate.default.self_link}"]
      }

      resource "google_compute_ssl_certificate" "default" {
        name        = "my-certificate"
        description = "a description"
        private_key = "${file("path/to/private.key")}"
        certificate = "${file("path/to/certificate.crt")}"
      }

      resource "google_compute_url_map" "default" {
        name        = "url-map"
        description = "a description"

        default_service = "${google_compute_backend_service.default.self_link}"

        host_rule {
          hosts        = ["mysite.com"]
          path_matcher = "allpaths"
        }

        path_matcher {
          name            = "allpaths"
          default_service = "${google_compute_backend_service.default.self_link}"

          path_rule {
            paths   = ["/*"]
            service = "${google_compute_backend_service.default.self_link}"
          }
        }
      }

      resource "google_compute_backend_service" "default" {
        name        = "default-backend"
        port_name   = "http"
        protocol    = "HTTP"
        timeout_sec = 10

        health_checks = ["${google_compute_http_health_check.default.self_link}"]
      }

      resource "google_compute_http_health_check" "default" {
        name               = "test"
        request_path       = "/"
        check_interval_sec = 1
        timeout_sec        = 1
      }
      ```
    properties:
      id: !ruby/object:Provider::Terraform::PropertyOverride
        name: proxyId
      sslPolicy: !ruby/object:Provider::Terraform::PropertyOverride
        exclude: false
  TargetPool: !ruby/object:Provider::Terraform::ResourceOverride
    exclude: true
  TargetSslProxy: !ruby/object:Provider::Terraform::ResourceOverride
    examples: |
      ```hcl
      resource "google_compute_target_ssl_proxy" "default" {
        name = "test"
        backend_service = "${google_compute_backend_service.default.self_link}"
        ssl_certificates = ["${google_compute_ssl_certificate.default.self_link}"]
      }

      resource "google_compute_ssl_certificate" "default" {
        name = "default-cert"
        private_key = "${file("path/to/test.key")}"
        certificate = "${file("path/to/test.crt")}"
      }

      resource "google_compute_backend_service" "default" {
        name = "default-backend"
        protocol    = "SSL"
        health_checks = ["${google_compute_health_check.default.self_link}"]
      }

      resource "google_compute_health_check" "default" {
        name = "default-health-check"
        check_interval_sec = 1
        timeout_sec = 1
        tcp_health_check {
          port = "443"
        }
      }
      ```
    properties:
      id: !ruby/object:Provider::Terraform::PropertyOverride
        name: proxyId
      proxyHeader: !ruby/object:Provider::Terraform::PropertyOverride
        default: !ruby/object:Provider::Terraform::Default
          value: :NONE
      service: !ruby/object:Provider::Terraform::PropertyOverride
        name: backendService
  TargetTcpProxy: !ruby/object:Provider::Terraform::ResourceOverride
    examples: |
      ```hcl
      resource "google_compute_target_tcp_proxy" "default" {
        name = "test"
        description = "test"
        backend_service = "${google_compute_backend_service.default.self_link}"
      }

      resource "google_compute_backend_service" "default" {
        name        = "default-backend"
        protocol    = "TCP"
        timeout_sec = 10

        health_checks = ["${google_compute_health_check.default.self_link}"]
      }

      resource "google_compute_health_check" "default" {
        name = "default"
        timeout_sec        = 1
        check_interval_sec = 1

        tcp_health_check {
          port = "443"
        }
      }
      ```
    properties:
      id: !ruby/object:Provider::Terraform::PropertyOverride
        name: proxyId
      service: !ruby/object:Provider::Terraform::PropertyOverride
        name: backendService
      proxyHeader: !ruby/object:Provider::Terraform::PropertyOverride
        default: !ruby/object:Provider::Terraform::Default
          value: :NONE
  TargetVpnGateway: !ruby/object:Provider::Terraform::ResourceOverride
    name: 'VpnGateway'
    # TODO(https://github.com/GoogleCloudPlatform/magic-modules/issues/156): Re-enable code generation for this resource
    exclude: true
    examples: |
      ```hcl
      resource "google_compute_network" "network1" {
        name       = "network1"
        ipv4_range = "10.120.0.0/16"
      }

      resource "google_compute_vpn_gateway" "target_gateway" {
        name    = "vpn1"
        network = "${google_compute_network.network1.self_link}"
        region  = "${var.region}"
      }

      resource "google_compute_address" "vpn_static_ip" {
        name   = "vpn-static-ip"
        region = "${var.region}"
      }

      resource "google_compute_forwarding_rule" "fr_esp" {
        name        = "fr-esp"
        region      = "${var.region}"
        ip_protocol = "ESP"
        ip_address  = "${google_compute_address.vpn_static_ip.address}"
        target      = "${google_compute_vpn_gateway.target_gateway.self_link}"
      }

      resource "google_compute_forwarding_rule" "fr_udp500" {
        name        = "fr-udp500"
        region      = "${var.region}"
        ip_protocol = "UDP"
        port_range  = "500"
        ip_address  = "${google_compute_address.vpn_static_ip.address}"
        target      = "${google_compute_vpn_gateway.target_gateway.self_link}"
      }

      resource "google_compute_forwarding_rule" "fr_udp4500" {
        name        = "fr-udp4500"
        region      = "${var.region}"
        ip_protocol = "UDP"
        port_range  = "4500"
        ip_address  = "${google_compute_address.vpn_static_ip.address}"
        target      = "${google_compute_vpn_gateway.target_gateway.self_link}"
      }

      resource "google_compute_vpn_tunnel" "tunnel1" {
        name          = "tunnel1"
        region        = "${var.region}"
        peer_ip       = "15.0.0.120"
        shared_secret = "a secret message"

        target_vpn_gateway = "${google_compute_vpn_gateway.target_gateway.self_link}"

        depends_on = [
          "google_compute_forwarding_rule.fr_esp",
          "google_compute_forwarding_rule.fr_udp500",
          "google_compute_forwarding_rule.fr_udp4500",
        ]
      }

      resource "google_compute_route" "route1" {
        name       = "route1"
        network    = "${google_compute_network.network1.name}"
        dest_range = "15.0.0.0/24"
        priority   = 1000

        next_hop_vpn_tunnel = "${google_compute_vpn_tunnel.tunnel1.self_link}"
      }
      ```
    properties:
      id: !ruby/object:Provider::Terraform::PropertyOverride
        exclude: true
      region: !ruby/object:Provider::Terraform::PropertyOverride
        required: false # the provider-default value will be used if not specified
        default: !ruby/object:Provider::Terraform::Default
          from_api: true
        state_func: 'NameFromSelfLinkStateFunc'
      forwardingRules: !ruby/object:Provider::Terraform::PropertyOverride
        exclude: true
      tunnels: !ruby/object:Provider::Terraform::PropertyOverride
        exclude: true
  UrlMap: !ruby/object:Provider::Terraform::ResourceOverride
    exclude: true
  Zone: !ruby/object:Provider::Terraform::ResourceOverride
    exclude: true
  TargetPool: !ruby/object:Provider::Terraform::ResourceOverride
    exclude: true
# This is for a list of example files.
examples: !ruby/object:Api::Resource::HashArray

# This is for copying files over
files: !ruby/object:Provider::Config::Files
  # All of these files will be copied verbatim.
  copy:
    'google/transport.go': 'templates/terraform/transport.go'
    'google/transport_test.go': 'templates/terraform/transport_test.go'
    'google/import.go': 'templates/terraform/import.go'
    'google/import_test.go': 'templates/terraform/import_test.go'
    # Handwritten acceptance tests for autogenerated resources.
    # Adding them here allows updating the tests as part of a MM pull request.
    'google/resource_compute_global_address_test.go':
      'templates/terraform/tests/resource_compute_global_address_test.go'
    'google/resource_compute_target_https_proxy_test.go':
      'templates/terraform/tests/resource_compute_target_https_proxy_test.go'
  # These files have templating (ERB) code that will be run.
  # This is usually to add licensing info, autogeneration notices, etc.
  compile:
    'google/provider_{{product_name}}_gen.go': 'templates/terraform/provider_gen.erb'

# This is for custom testing code. All of our tests follow a specific pattern
# that sometimes needs to be deviated from. We're working towards a world where
# these handwritten tests would be unnecessary in many cases (custom types).
tests: !ruby/object:Api::Resource::HashArray

# This would be for custom network responses. Tests work by running some block
# of autogenerated code and then verifying the network calls.
# The network call verifications are automatically generated, but can be
# overriden.
test_data: !ruby/object:Provider::Config::TestData
