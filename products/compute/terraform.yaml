# Copyright 2017 Google Inc.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

--- !ruby/object:Provider::Terraform::Config
overrides: !ruby/object:Provider::ResourceOverrides
  Address: !ruby/object:Provider::Terraform::ResourceOverride
    exclude: true
  BackendBucket: !ruby/object:Provider::Terraform::ResourceOverride
    id_format: "{{name}}"
  BackendService: !ruby/object:Provider::Terraform::ResourceOverride
    exclude: true
  Disk: !ruby/object:Provider::Terraform::ResourceOverride
    id_format: "{{name}}"
    exclude: true
  DiskType: !ruby/object:Provider::Terraform::ResourceOverride
    exclude: true
  Firewall: !ruby/object:Provider::Terraform::ResourceOverride
    exclude: true
  ForwardingRule: !ruby/object:Provider::Terraform::ResourceOverride
    id_format: "{{name}}"
    exclude: true
  GlobalAddress: !ruby/object:Provider::Terraform::ResourceOverride
    id_format: "{{name}}"
    exclude: true
  GlobalForwardingRule: !ruby/object:Provider::Terraform::ResourceOverride
    exclude: true
  HttpHealthCheck: !ruby/object:Provider::Terraform::ResourceOverride
    id_format: "{{name}}"
    description: |
      {{description}}

      ~> **Note:** google_compute_http_health_check is a legacy health check.
      The newer [google_compute_health_check](/docs/providers/google/r/compute_health_check.html)
      should be preferred for all uses except
      [Network Load Balancers](https://cloud.google.com/compute/docs/load-balancing/network/)
      which still require the legacy version.
    properties:
      checkIntervalSec: !ruby/object:Provider::Terraform::PropertyOverride
        description: 'blabla'
  HttpsHealthCheck: !ruby/object:Provider::Terraform::ResourceOverride
    id_format: "{{name}}"
    description: |
      {{description}}

      ~> **Note:** google_compute_https_health_check is a legacy health check.
      The newer [google_compute_health_check](/docs/providers/google/r/compute_health_check.html)
      should be preferred for all uses except
      [Network Load Balancers](https://cloud.google.com/compute/docs/load-balancing/network/)
      which still require the legacy version.
  HealthCheck: !ruby/object:Provider::Terraform::ResourceOverride
    id_format: "{{name}}"
    exclude: true
  Image: !ruby/object:Provider::Terraform::ResourceOverride
    id_format: "{{name}}"
    exclude: true
  Instance: !ruby/object:Provider::Terraform::ResourceOverride
    exclude: true
  InstanceGroup: !ruby/object:Provider::Terraform::ResourceOverride
    exclude: true
  InstanceGroupManager: !ruby/object:Provider::Terraform::ResourceOverride
    exclude: true
  InstanceTemplate: !ruby/object:Provider::Terraform::ResourceOverride
    exclude: true
  License: !ruby/object:Provider::Terraform::ResourceOverride
    exclude: true
  MachineType: !ruby/object:Provider::Terraform::ResourceOverride
    exclude: true
  Network: !ruby/object:Provider::Terraform::ResourceOverride
    exclude: true
  Region: !ruby/object:Provider::Terraform::ResourceOverride
    exclude: true
  Route: !ruby/object:Provider::Terraform::ResourceOverride
    id_format: "{{name}}"
    exclude: true
  Snapshot: !ruby/object:Provider::Terraform::ResourceOverride
    exclude: true
  SslCertificate: !ruby/object:Provider::Terraform::ResourceOverride
    id_format: "{{name}}"
    exclude: true
  Subnetwork: !ruby/object:Provider::Terraform::ResourceOverride
    id_format: "{{region}}/{{name}}"
    exclude: true
  TargetHttpProxy: !ruby/object:Provider::Terraform::ResourceOverride
    id_format: "{{name}}"
    exclude: true
  TargetHttpsProxy: !ruby/object:Provider::Terraform::ResourceOverride
    id_format: "{{name}}"
    exclude: true
  TargetPool: !ruby/object:Provider::Terraform::ResourceOverride
    exclude: true
  TargetSslProxy: !ruby/object:Provider::Terraform::ResourceOverride
    exclude: true
  TargetTcpProxy: !ruby/object:Provider::Terraform::ResourceOverride
    exclude: true
  UrlMap: !ruby/object:Provider::Terraform::ResourceOverride
    exclude: true
  Zone: !ruby/object:Provider::Terraform::ResourceOverride
    exclude: true
  TargetPool: !ruby/object:Provider::Terraform::ResourceOverride
    id_format: "{{name}}"
    exclude: true
# TODO(https://github.com/GoogleCloudPlatform/magic-modules/issues/47): Migrate objects to overrides
objects: !ruby/object:Api::Resource::HashArray
  BackendBucket:
    ignore:
      - id
    # TODO: look into moving validation into api.yaml
    validation:
      name: '^(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?)$'
    documentation:
      examples: |
        ```hcl
        resource "google_compute_backend_bucket" "image_backend" {
          name        = "image-backend-bucket"
          description = "Contains beautiful images"
          bucket_name = "${google_storage_bucket.image_bucket.name}"
          enable_cdn  = true
        }

        resource "google_storage_bucket" "image_bucket" {
          name     = "image-store-bucket"
          location = "EU"
        }
        ```
  Disk:
    ignore:
      - id
  ForwardingRule:
    ignore:
      - id
    diff_suppress_funcs:
      portRange: "portRangeDiffSuppress"
    # TODO: Add support for missing features needed by this resource
  GlobalAddress:
    ignore:
      - id
      - region # TODO: Remove this from api.yaml instead of ignoring
    # TODO: Add support for missing features needed by this resource
  HttpHealthCheck:
    ignore:
      - id
    default_values:
      checkIntervalSec: 5
      healthyThreshold: 2
      port: 80
      requestPath: "/"
      timeoutSec: 5
      unhealthyThreshold: 2
    documentation:
      examples: |
        ```hcl
        resource "google_compute_http_health_check" "default" {
          name         = "authentication-health-check"
          request_path = "/health_check"

          timeout_sec        = 1
          check_interval_sec = 1
        }
        ```
  HttpsHealthCheck:
    ignore:
      - id
    default_values:
      checkIntervalSec: 5
      healthyThreshold: 2
      port: 443
      requestPath: "/"
      timeoutSec: 5
      unhealthyThreshold: 2
    documentation:
      examples: |
        ```hcl
        resource "google_compute_https_health_check" "default" {
          name         = "test"
          request_path = "/health_check"

          timeout_sec        = 1
          check_interval_sec = 1
        }
        ```
  Image:
    # TODO: Add support for aliasing. For instance, the sha1_checksum field
    # in raw_disk is currently named `sha1` in our Terraform provider.
    ignore:
      - id
      - deprecated
      - guestOsFeatures
      - imageEncryptionKey
      - sourceDiskEncryptionKey
      - sourceDiskId
      - sourceType
      - licenses
    # TODO: Add support for missing features needed by this resource
  SslCertificate:
    ignore:
      - id
    sensitive:
      - certificate
      - privateKey
    # TODO: Add support for missing features needed by this resource
  Subnetwork:
    ignore:
      - id
    # TODO: Add support for missing features needed by this resource
  TargetHttpProxy:
    ignore:
      - id
    # TODO: Alias id to proxy_id
    # TODO: Add support for missing features needed by this resource
  TargetHttpsProxy:
    ignore:
      - id
    # TODO: Alias id to proxy_id
    # TODO: Add support for missing features needed by this resource
# This is for a list of example files.
examples: !ruby/object:Api::Resource::HashArray

# This is for copying files over
files: !ruby/object:Provider::Config::Files
  # All of these files will be copied verbatim.
  copy:
    'google/transport.go': 'templates/terraform/transport.go'
    'google/transport_test.go': 'templates/terraform/transport_test.go'
    'google/import.go': 'templates/terraform/import.go'
    'google/import_test.go': 'templates/terraform/import_test.go'
  # These files have templating (ERB) code that will be run.
  # This is usually to add licensing info, autogeneration notices, etc.
  compile:
    # 'compiled_file': 'templates/terraform/compiled_file'

# This is for custom testing code. All of our tests follow a specific pattern
# that sometimes needs to be deviated from. We're working towards a world where
# these handwritten tests would be unnecessary in many cases (custom types).
tests: !ruby/object:Api::Resource::HashArray

# This would be for custom network responses. Tests work by running some block
# of autogenerated code and then verifying the network calls.
# The network call verifications are automatically generated, but can be
# overriden.
test_data: !ruby/object:Provider::Config::TestData
