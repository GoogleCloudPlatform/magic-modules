# Copyright 2017 Google Inc.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

--- !ruby/object:Provider::Terraform::Config
overrides: !ruby/object:Overrides::ResourceOverrides
  Address: !ruby/object:Overrides::Terraform::ResourceOverride
    examples:
      - !ruby/object:Provider::Terraform::Examples
        name: "address_basic"
        primary_resource_id: "ip_address"
        vars:
          address_name: "my-address"
      - !ruby/object:Provider::Terraform::Examples
        name: "address_with_subnetwork"
        primary_resource_id: "internal_with_subnet_and_address"
        vars:
          address_name: "my-internal-address"
          network_name: "my-network"
          subnetwork_name: "my-subnet"
      - !ruby/object:Provider::Terraform::Examples
        name: "address_with_gce_endpoint"
        primary_resource_id: "internal_with_gce_endpoint"
        vars:
          address_name: "my-internal-address-"
      # TODO(rileykarson): Remove this example when instance is supported
      - !ruby/object:Provider::Terraform::Examples
        name: "instance_with_ip"
        primary_resource_id: "static"
        vars:
         address_name: "ipv4-address"
         instance_name: "vm-instance"
    properties:
      address: !ruby/object:Overrides::Terraform::PropertyOverride
        default_from_api: true
      addressType: !ruby/object:Overrides::Terraform::PropertyOverride
        custom_flatten: 'templates/terraform/custom_flatten/default_if_empty.erb'
      purpose: !ruby/object:Overrides::Terraform::PropertyOverride
        default_from_api: true
      id: !ruby/object:Overrides::Terraform::PropertyOverride
        exclude: true
      labelFingerprint: !ruby/object:Overrides::Terraform::PropertyOverride
        exclude: false
      name: !ruby/object:Overrides::Terraform::PropertyOverride
        validation: !ruby/object:Provider::Terraform::Validation
          regex: '^(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?)$'
      networkTier: !ruby/object:Overrides::Terraform::PropertyOverride
        default_from_api: true
      region: !ruby/object:Overrides::Terraform::PropertyOverride
        required: false
        default_from_api: true
        custom_flatten: 'templates/terraform/custom_flatten/name_from_self_link.erb'
        description: |
          The Region in which the created address should reside.
          If it is not provided, the provider region is used.
      subnetwork: !ruby/object:Overrides::Terraform::PropertyOverride
        default_from_api: true
      status: !ruby/object:Overrides::Terraform::PropertyOverride
        exclude: true
    custom_code: !ruby/object:Provider::Terraform::CustomCode
      post_create: templates/terraform/post_create/labels.erb
  Autoscaler: !ruby/object:Overrides::Terraform::ResourceOverride
    examples:
      - !ruby/object:Provider::Terraform::Examples
        name: "autoscaler_single_instance"
        primary_resource_id: "default"
        min_version: 'beta'
        vars:
          autoscaler_name: "my-autoscaler"
          instance_template_name: "my-instance-template"
          target_pool_name: "my-target-pool"
          igm_name: "my-igm"
      - !ruby/object:Provider::Terraform::Examples
        name: "autoscaler_basic"
        primary_resource_id: "foobar"
        vars:
          autoscaler_name: "my-autoscaler"
          instance_template_name: "my-instance-template"
          target_pool_name: "my-target-pool"
          igm_name: "my-igm"
    properties:
      id: !ruby/object:Overrides::Terraform::PropertyOverride
        exclude: true
      name: !ruby/object:Overrides::Terraform::PropertyOverride
        validation: !ruby/object:Provider::Terraform::Validation
          function: 'validateGCPName'
      autoscalingPolicy.minNumReplicas: !ruby/object:Overrides::Terraform::PropertyOverride
        name: minReplicas
        # Even though this field isn't actually required by the API, it makes our
        # lives easier if we treat it as a required field. It has a default that is
        # set by the API based on the value of maxNumReplicas. Normally in this case
        # we would just set it to Optional+Computed. However, this currently doesn't
        # work with nested fields. Make it required so we don't set the field to zero
        # when our users aren't expecting us to. For more info, see
        # https://github.com/GoogleCloudPlatform/magic-modules/issues/305.
        required: true
      autoscalingPolicy.maxNumReplicas: !ruby/object:Overrides::Terraform::PropertyOverride
        name: maxReplicas
      autoscalingPolicy.coolDownPeriodSec: !ruby/object:Overrides::Terraform::PropertyOverride
        name: cooldownPeriod
      autoscalingPolicy.cpuUtilization: !ruby/object:Overrides::Terraform::PropertyOverride
        default_from_api: true
      autoscalingPolicy.cpuUtilization.utilizationTarget: !ruby/object:Overrides::Terraform::PropertyOverride
        name: target
        required: true # See comment for minReplicas
      autoscalingPolicy.customMetricUtilizations: !ruby/object:Overrides::Terraform::PropertyOverride
        name: metric
      autoscalingPolicy.customMetricUtilizations.metric: !ruby/object:Overrides::Terraform::PropertyOverride
        name: name
      autoscalingPolicy.customMetricUtilizations.utilizationTarget: !ruby/object:Overrides::Terraform::PropertyOverride
        name: target
      autoscalingPolicy.customMetricUtilizations.utilizationTargetType: !ruby/object:Overrides::Terraform::PropertyOverride
        name: type
      autoscalingPolicy.loadBalancingUtilization.utilizationTarget: !ruby/object:Overrides::Terraform::PropertyOverride
        name: target
        required: true # See comment for minReplicas
      target: !ruby/object:Overrides::Terraform::PropertyOverride
        custom_expand: 'templates/terraform/custom_expand/compute_full_url.erb'
      zone: !ruby/object:Overrides::Terraform::PropertyOverride
        required: false
        default_from_api: true
  BackendBucket: !ruby/object:Overrides::Terraform::ResourceOverride
    examples:
      - !ruby/object:Provider::Terraform::Examples
        name: "backend_bucket_basic"
        primary_resource_id: "image_backend"
        vars:
          backend_bucket_name: "image-backend-bucket"
          bucket_name: "image-store-bucket"
    properties:
      id: !ruby/object:Overrides::Terraform::PropertyOverride
        exclude: true
      name: !ruby/object:Overrides::Terraform::PropertyOverride
        validation: !ruby/object:Provider::Terraform::Validation
          regex: '^(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?)$'
      cdnPolicy: !ruby/object:Overrides::Terraform::PropertyOverride
        default_from_api: true
  BackendBucketSignedUrlKey: !ruby/object:Overrides::Terraform::ResourceOverride
    exclude_import: true
    exclude_validator: true
    mutex: signedUrlKey/{{project}}/backendBuckets/{{backend_bucket}}/
    examples:
      - !ruby/object:Provider::Terraform::Examples
        name: "backend_bucket_signed_url_key"
        primary_resource_id: "backend_key"
        vars:
          key_name: "test-key"
          backend_name: "test-signed-backend-bucket"
          bucket_name: "test-storage-bucket"
        skip_test: true
    properties:
      backendBucket: !ruby/object:Overrides::Terraform::PropertyOverride
        ignore_read: true
      name: !ruby/object:Overrides::Terraform::PropertyOverride
        validation: !ruby/object:Provider::Terraform::Validation
          regex: '^(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?)$'
      keyValue: !ruby/object:Overrides::Terraform::PropertyOverride
        sensitive: true
        ignore_read: true
    docs: !ruby/object:Provider::Terraform::Docs
      warning: |
        All arguments including the key's value will be stored in the raw
        state as plain-text. [Read more about sensitive data in state](/docs/state/sensitive-data.html).
        Because the API does not return the sensitive key value,
        we cannot confirm or reverse changes to a key outside of Terraform.
  BackendService: !ruby/object:Overrides::Terraform::ResourceOverride
    examples:
      - !ruby/object:Provider::Terraform::Examples
        name: "backend_service_basic"
        primary_resource_id: "default"
        vars:
          backend_service_name: "backend-service"
          http_health_check_name: "health-check"
      - !ruby/object:Provider::Terraform::Examples
        name: "backend_service_traffic_director_round_robin"
        min_version: beta
        primary_resource_id: "default"
        vars:
          backend_service_name: "backend-service"
          health_check_name: "health-check"
      - !ruby/object:Provider::Terraform::Examples
        name: "backend_service_traffic_director_ring_hash"
        min_version: beta
        primary_resource_id: "default"
        vars:
          backend_service_name: "backend-service"
          health_check_name: "health-check"
    custom_code: !ruby/object:Provider::Terraform::CustomCode
      constants: 'templates/terraform/constants/backend_service.go.erb'
      encoder: 'templates/terraform/encoders/backend_service.go.erb'
      decoder: 'templates/terraform/decoders/backend_service.go.erb'
      post_create: 'templates/terraform/post_create/compute_backend_service_security_policy.go.erb'
      post_update: 'templates/terraform/post_create/compute_backend_service_security_policy.go.erb'
      resource_definition: 'templates/terraform/resource_definition/backend_service.go.erb'
    properties:
      backends: !ruby/object:Overrides::Terraform::PropertyOverride
        name: backend
        is_set: true
        set_hash_func: 'resourceGoogleComputeBackendServiceBackendHash'
      backends.group: !ruby/object:Overrides::Terraform::PropertyOverride
        diff_suppress_func: 'compareSelfLinkRelativePaths'
      cdnPolicy: !ruby/object:Overrides::Terraform::PropertyOverride
        default_from_api: true
      cdnPolicy.cacheKeyPolicy.queryStringWhitelist: !ruby/object:Overrides::Terraform::PropertyOverride
        is_set: true
      cdnPolicy.cacheKeyPolicy.queryStringBlacklist: !ruby/object:Overrides::Terraform::PropertyOverride
        is_set: true
      connectionDraining: !ruby/object:Overrides::Terraform::PropertyOverride
        flatten_object: true
      connectionDraining.drainingTimeoutSec: !ruby/object:Overrides::Terraform::PropertyOverride
        name: connection_draining_timeout_sec
      customRequestHeaders: !ruby/object:Overrides::Terraform::PropertyOverride
        is_set: true
      backends.group: !ruby/object:Overrides::Terraform::PropertyOverride
        diff_suppress_func: 'compareSelfLinkRelativePaths'
        custom_flatten: templates/terraform/custom_flatten/guard_self_link.go.erb
      healthChecks: !ruby/object:Overrides::Terraform::PropertyOverride
        is_set: true
        set_hash_func: 'selfLinkRelativePathHash'
        custom_flatten: templates/terraform/custom_flatten/guard_self_link_array.go.erb
      iap: !ruby/object:Overrides::Terraform::PropertyOverride
        send_empty_value: true
      iap.enabled: !ruby/object:Overrides::Terraform::PropertyOverride
        exclude: true
      iap.oauth2ClientSecret: !ruby/object:Overrides::Terraform::PropertyOverride
        send_empty_value: true
        # We don't support ignore_read on nested fields
        ignore_read: true
        sensitive: true
        custom_flatten: templates/terraform/custom_flatten/compute_backend_service_iap_oauth2_client_secret.go.erb
      iap.oauth2ClientSecretSha256: !ruby/object:Overrides::Terraform::PropertyOverride
        sensitive: true
      id: !ruby/object:Overrides::Terraform::PropertyOverride
        exclude: true
      logConfig: !ruby/object:Overrides::Terraform::PropertyOverride
        default_from_api: true
      portName: !ruby/object:Overrides::Terraform::PropertyOverride
        default_from_api: true
      protocol: !ruby/object:Overrides::Terraform::PropertyOverride
        default_from_api: true
      sessionAffinity: !ruby/object:Overrides::Terraform::PropertyOverride
        default_from_api: true
      securityPolicy: !ruby/object:Overrides::Terraform::PropertyOverride
        diff_suppress_func: 'compareSelfLinkOrResourceName'
      timeoutSec: !ruby/object:Overrides::Terraform::PropertyOverride
        default_from_api: true
  RegionBackendService: !ruby/object:Overrides::Terraform::ResourceOverride
    examples:
      - !ruby/object:Provider::Terraform::Examples
        name: "region_backend_service_basic"
        primary_resource_id: "default"
        vars:
          region_backend_service_name: "region-service"
          health_check_name: "rbs-health-check"
      - !ruby/object:Provider::Terraform::Examples
        name: "region_backend_service_ilb_round_robin"
        min_version: beta
        primary_resource_id: "default"
        vars:
          region_backend_service_name: "region-service"
          health_check_name: "rbs-health-check"
      - !ruby/object:Provider::Terraform::Examples
        name: "region_backend_service_ilb_ring_hash"
        min_version: beta
        primary_resource_id: "default"
        vars:
          region_backend_service_name: "region-service"
          health_check_name: "rbs-health-check"
      - !ruby/object:Provider::Terraform::Examples
        name: "region_backend_service_balancing_mode"
        min_version: beta
        primary_resource_id: "default"
        vars:
          region_backend_service_name: "region-service"
          rigm_name: "rbs-rigm"
          region_health_check_name: "rbs-health-check"
          network_name: "rbs-net"
    custom_code: !ruby/object:Provider::Terraform::CustomCode
      constants: templates/terraform/constants/region_backend_service.go.erb
      encoder: templates/terraform/encoders/region_backend_service.go.erb
      resource_definition: 'templates/terraform/resource_definition/region_backend_service.go.erb'
    properties:
      region: !ruby/object:Overrides::Terraform::PropertyOverride
        default_from_api: true
        required: false
        custom_flatten: 'templates/terraform/custom_flatten/name_from_self_link.erb'
        description: |
          The Region in which the created backend service should reside.
          If it is not provided, the provider region is used.
      backends: !ruby/object:Overrides::Terraform::PropertyOverride
        name: backend
        is_set: true
        set_hash_func: 'resourceGoogleComputeBackendServiceBackendHash'
      backends.group: !ruby/object:Overrides::Terraform::PropertyOverride
        diff_suppress_func: 'compareSelfLinkRelativePaths'
        custom_flatten: templates/terraform/custom_flatten/guard_self_link.go.erb
      backends.failover: !ruby/object:Overrides::Terraform::PropertyOverride
        default_from_api: true
      connectionDraining: !ruby/object:Overrides::Terraform::PropertyOverride
        flatten_object: true
      connectionDraining.drainingTimeoutSec: !ruby/object:Overrides::Terraform::PropertyOverride
        name: connection_draining_timeout_sec
        default_value: 0
        send_empty_value: true
      healthChecks: !ruby/object:Overrides::Terraform::PropertyOverride
        is_set: true
        set_hash_func: 'selfLinkRelativePathHash'
        custom_flatten: templates/terraform/custom_flatten/guard_self_link_array.go.erb
      id: !ruby/object:Overrides::Terraform::PropertyOverride
        exclude: true
      protocol: !ruby/object:Overrides::Terraform::PropertyOverride
        default_from_api: true
      sessionAffinity: !ruby/object:Overrides::Terraform::PropertyOverride
        default_from_api: true
      timeoutSec: !ruby/object:Overrides::Terraform::PropertyOverride
        default_from_api: true
  RegionInstanceGroupManager: !ruby/object:Overrides::Terraform::ResourceOverride
    exclude: true
  BackendServiceSignedUrlKey: !ruby/object:Overrides::Terraform::ResourceOverride
    exclude_import: true
    exclude_validator: true
    mutex: signedUrlKey/{{project}}/backendServices/{{backend_service}}/
    examples:
      - !ruby/object:Provider::Terraform::Examples
        name: "backend_service_signed_url_key"
        primary_resource_id: "backend_key"
        vars:
          key_name: "test-key"
          backend_name: "my-backend-service"
        skip_test: true
    properties:
      backendService: !ruby/object:Overrides::Terraform::PropertyOverride
        ignore_read: true
      name: !ruby/object:Overrides::Terraform::PropertyOverride
        validation: !ruby/object:Provider::Terraform::Validation
          regex: '^(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?)$'
      keyValue: !ruby/object:Overrides::Terraform::PropertyOverride
        sensitive: true
        ignore_read: true
    docs: !ruby/object:Provider::Terraform::Docs
      warning: |
        All arguments including the key's value will be stored in the raw
        state as plain-text. [Read more about sensitive data in state](/docs/state/sensitive-data.html).
        Because the API does not return the sensitive key value,
        we cannot confirm or reverse changes to a key outside of Terraform.
  RegionDiskResourcePolicyAttachment: !ruby/object:Overrides::Terraform::ResourceOverride
    description: |
      Adds existing resource policies to a disk. You can only add one policy
      which will be applied to this disk for scheduling snapshot creation.

      ~> **Note:** This resource does not support zonal disks (`google_compute_disk`).
    examples:
      - !ruby/object:Provider::Terraform::Examples
        name: "region_disk_resource_policy_attachment_basic"
        primary_resource_id: "attachment"
        vars:
          base_disk_name: "my-base-disk"
          snapshot_name: "my-snapshot"
          disk_name: "my-disk"
          policy_name: "my-resource-policy"
    id_format: "{{project}}/{{region}}/{{disk}}/{{name}}"
    custom_code: !ruby/object:Provider::Terraform::CustomCode
      encoder: templates/terraform/encoders/compute_region_disk_resource_policies_attachment.go.erb
      decoder: templates/terraform/decoders/compute_disk_resource_policies_attachment.go.erb
      pre_delete: templates/terraform/pre_delete/compute_region_disk_resource_policies_attachment.go.erb
    properties:
      region: !ruby/object:Overrides::Terraform::PropertyOverride
        required: false
        default_from_api: true
  DiskResourcePolicyAttachment: !ruby/object:Overrides::Terraform::ResourceOverride
    description: |
      Adds existing resource policies to a disk. You can only add one policy
      which will be applied to this disk for scheduling snapshot creation.

      ~> **Note:** This resource does not support regional disks (`google_compute_region_disk`).
    examples:
      - !ruby/object:Provider::Terraform::Examples
        name: "disk_resource_policy_attachment_basic"
        primary_resource_id: "attachment"
        vars:
          disk_name: "my-disk"
          policy_name: "my-resource-policy"
    id_format: "{{project}}/{{zone}}/{{disk}}/{{name}}"
    custom_code: !ruby/object:Provider::Terraform::CustomCode
      encoder: templates/terraform/encoders/compute_disk_resource_policies_attachment.go.erb
      decoder: templates/terraform/decoders/compute_disk_resource_policies_attachment.go.erb
      pre_delete: templates/terraform/pre_delete/compute_disk_resource_policies_attachment.go.erb
    properties:
      zone: !ruby/object:Overrides::Terraform::PropertyOverride
        required: false
        default_from_api: true
  Disk: !ruby/object:Overrides::Terraform::ResourceOverride
    # Larger disks were timing out at creation. Bumping up to 5 minutes.
    # https://github.com/terraform-providers/terraform-provider-google/issues/703
    timeouts: !ruby/object:Api::Timeouts
      insert_minutes: 5
    properties:
      id: !ruby/object:Overrides::Terraform::PropertyOverride
        exclude: true
      sizeGb: !ruby/object:Overrides::Terraform::PropertyOverride
        name: size
        default_from_api: true
        description: |
          Size of the persistent disk, specified in GB. You can specify this
          field when creating a persistent disk using the `image` or
          `snapshot` parameter, or specify it alone to create an empty
          persistent disk.

          If you specify this field along with `image` or `snapshot`,
          the value must not be less than the size of the image
          or the size of the snapshot.
      sourceSnapshot: !ruby/object:Overrides::Terraform::PropertyOverride
        name: snapshot
        description: |
          {{description}}* `snapshot`
      type: !ruby/object:Overrides::Terraform::PropertyOverride
        custom_flatten: 'templates/terraform/custom_flatten/name_from_self_link.erb'
        default_value: 'pd-standard'
      name: !ruby/object:Overrides::Terraform::PropertyOverride
        input: true
      licenses: !ruby/object:Overrides::Terraform::PropertyOverride
        exclude: true
      labelFingerprint: !ruby/object:Overrides::Terraform::PropertyOverride
        exclude: false
      zone: !ruby/object:Overrides::Terraform::PropertyOverride
        required: false
        default_from_api: true
        custom_flatten: 'templates/terraform/custom_flatten/name_from_self_link.erb'
      sourceImage: !ruby/object:Overrides::Terraform::PropertyOverride
        name: image
        diff_suppress_func: 'diskImageDiffSuppress'
        description: |
          The image from which to initialize this disk. This can be
          one of: the image's `self_link`, `projects/{project}/global/images/{image}`,
          `projects/{project}/global/images/family/{family}`, `global/images/{image}`,
          `global/images/family/{family}`, `family/{family}`, `{project}/{family}`,
          `{project}/{image}`, `{family}`, or `{image}`. If referred by family, the
          images names must include the family name. If they don't, use the
          [google_compute_image data source](/docs/providers/google/d/datasource_compute_image.html).
          For instance, the image `centos-6-v20180104` includes its family name `centos-6`.
          These images can be referred by family name here.
      diskEncryptionKey.rawKey: !ruby/object:Overrides::Terraform::PropertyOverride
        sensitive: true
      diskEncryptionKey.kmsKeyName: !ruby/object:Overrides::Terraform::PropertyOverride
        diff_suppress_func: 'compareSelfLinkRelativePaths'
        name: "kmsKeySelfLink"
        description: |
          The self link of the encryption key used to encrypt the disk. Also called KmsKeyName
          in the cloud console. Your project's Compute Engine System service account
          (`service-{{PROJECT_NUMBER}}@compute-system.iam.gserviceaccount.com`) must have
          `roles/cloudkms.cryptoKeyEncrypterDecrypter` to use this feature.
          See https://cloud.google.com/compute/docs/disks/customer-managed-encryption#encrypt_a_new_persistent_disk_with_your_own_keys
      sourceSnapshotEncryptionKey.kmsKeyName: !ruby/object:Overrides::Terraform::PropertyOverride
        diff_suppress_func: 'compareSelfLinkRelativePaths'
        name: "kmsKeySelfLink"
        description: |
          The self link of the encryption key used to encrypt the disk. Also called KmsKeyName
          in the cloud console. Your project's Compute Engine System service account
          (`service-{{PROJECT_NUMBER}}@compute-system.iam.gserviceaccount.com`) must have
          `roles/cloudkms.cryptoKeyEncrypterDecrypter` to use this feature.
          See https://cloud.google.com/compute/docs/disks/customer-managed-encryption#encrypt_a_new_persistent_disk_with_your_own_keys
      sourceImageEncryptionKey.kmsKeyName: !ruby/object:Overrides::Terraform::PropertyOverride
        diff_suppress_func: 'compareSelfLinkRelativePaths'
        name: "kmsKeySelfLink"
        description: |
          The self link of the encryption key used to encrypt the disk. Also called KmsKeyName
          in the cloud console. Your project's Compute Engine System service account
          (`service-{{PROJECT_NUMBER}}@compute-system.iam.gserviceaccount.com`) must have
          `roles/cloudkms.cryptoKeyEncrypterDecrypter` to use this feature.
          See https://cloud.google.com/compute/docs/disks/customer-managed-encryption#encrypt_a_new_persistent_disk_with_your_own_keys
      physicalBlockSizeBytes: !ruby/object:Overrides::Terraform::PropertyOverride
        default_from_api: true
      resourcePolicies: !ruby/object:Overrides::Terraform::PropertyOverride
        default_from_api: true
    custom_code: !ruby/object:Provider::Terraform::CustomCode
      pre_delete: templates/terraform/pre_delete/detach_disk.erb
      constants: templates/terraform/constants/disk.erb
      encoder: templates/terraform/encoders/disk.erb
      decoder: templates/terraform/decoders/disk.erb
      resource_definition: templates/terraform/resource_definition/disk.erb
    docs: !ruby/object:Provider::Terraform::Docs
      warning: |
        All arguments including the disk encryption key will be stored in the raw
        state as plain-text.
        [Read more about sensitive data in state](/docs/state/sensitive-data.html).
    examples:
      - !ruby/object:Provider::Terraform::Examples
        name: "disk_basic"
        primary_resource_id: "default"
        vars:
          disk_name: "test-disk"
  DiskType: !ruby/object:Overrides::Terraform::ResourceOverride
    exclude: true
  Firewall: !ruby/object:Overrides::Terraform::ResourceOverride
    examples:
      - !ruby/object:Provider::Terraform::Examples
        name: "firewall_basic"
        primary_resource_id: "default"
        vars:
          firewall_name: "test-firewall"
          network_name: "test-network"
    custom_code: !ruby/object:Provider::Terraform::CustomCode
      constants: templates/terraform/constants/firewall.erb
      resource_definition: templates/terraform/resource_definition/firewall.erb
    properties:
      id: !ruby/object:Overrides::Terraform::PropertyOverride
        exclude: true
      allowed: !ruby/object:Overrides::Terraform::PropertyOverride
        name: 'allow'
        is_set: true
        set_hash_func: 'resourceComputeFirewallRuleHash'
      allowed.ip_protocol: !ruby/object:Overrides::Terraform::PropertyOverride
        name: 'protocol'
        diff_suppress_func: 'compareCaseInsensitive'
      denied: !ruby/object:Overrides::Terraform::PropertyOverride
        name: 'deny'
        is_set: true
        set_hash_func: 'resourceComputeFirewallRuleHash'
      denied.ip_protocol: !ruby/object:Overrides::Terraform::PropertyOverride
        name: 'protocol'
        diff_suppress_func: 'compareCaseInsensitive'
      destinationRanges: !ruby/object:Overrides::Terraform::PropertyOverride
        is_set: true
        default_from_api: true
      direction: !ruby/object:Overrides::Terraform::PropertyOverride
        default_from_api: true
        # Because most fields on this resource are `Computed`, it is easy
        # for a user to wind up in a broken state if they switch a rule from
        # being ingress to egress without examining the diff carefully.
        # See terraform issue #2713 for more context.
        input: true
      logConfig: !ruby/object:Overrides::Terraform::PropertyOverride
        flatten_object: true
      logConfig.enableLogging: !ruby/object:Overrides::Terraform::PropertyOverride
        send_empty_value: true
      name: !ruby/object:Overrides::Terraform::PropertyOverride
        validation: !ruby/object:Provider::Terraform::Validation
          function: 'validateGCPName'
      network: !ruby/object:Overrides::Terraform::PropertyOverride
        description: |
          The name or self_link of the network to attach this firewall to.
      priority: !ruby/object:Overrides::Terraform::PropertyOverride
        validation: !ruby/object:Provider::Terraform::Validation
          function: 'validation.IntBetween(0, 65535)'
      sourceRanges: !ruby/object:Overrides::Terraform::PropertyOverride
        is_set: true
        default_from_api: true
      sourceTags: !ruby/object:Overrides::Terraform::PropertyOverride
        is_set: true
      sourceServiceAccounts: !ruby/object:Overrides::Terraform::PropertyOverride
        is_set: true
      targetServiceAccounts: !ruby/object:Overrides::Terraform::PropertyOverride
        is_set: true
      targetTags: !ruby/object:Overrides::Terraform::PropertyOverride
        is_set: true
  ForwardingRule: !ruby/object:Overrides::Terraform::ResourceOverride
    examples:
      - !ruby/object:Provider::Terraform::Examples
        name: "forwarding_rule_global_internallb"
        primary_resource_id: "default"
        vars:
          forwarding_rule_name: "website-forwarding-rule"
          backend_name: "website-backend"
          network_name: "website-net"
      - !ruby/object:Provider::Terraform::Examples
        name: "forwarding_rule_basic"
        primary_resource_id: "default"
        vars:
          forwarding_rule_name: "website-forwarding-rule"
          target_pool_name: "website-target-pool"
      - !ruby/object:Provider::Terraform::Examples
        name: "forwarding_rule_internallb"
        primary_resource_id: "default"
        vars:
          forwarding_rule_name: "website-forwarding-rule"
          backend_name: "website-backend"
          network_name: "website-net"
      - !ruby/object:Provider::Terraform::Examples
        name: "forwarding_rule_http_lb"
        min_version: 'beta'
        primary_resource_id: "default"
        vars:
          forwarding_rule_name: "website-forwarding-rule"
          region_target_http_proxy_name: "website-proxy"
          region_url_map_name: "website-map"
          region_backend_service_name: "website-backend"
          region_health_check_name: "website-hc"
          network_name: "website-net"
          fw_name: "website-fw"
    custom_code: !ruby/object:Provider::Terraform::CustomCode
      post_create: templates/terraform/post_create/labels.erb
      extra_schema_entry: templates/terraform/extra_schema_entry/forwarding_rule.erb
    properties:
      id: !ruby/object:Overrides::Terraform::PropertyOverride
        exclude: true
      portRange: !ruby/object:Overrides::Terraform::PropertyOverride
        diff_suppress_func: 'portRangeDiffSuppress'
      region: !ruby/object:Overrides::Terraform::PropertyOverride
        required: false
        default_from_api: true
      IPAddress: !ruby/object:Overrides::Terraform::PropertyOverride
        default_from_api: true
        validation: !ruby/object:Provider::Terraform::Validation
          function: 'validateIpAddress'
        description: |
          The IP address that this forwarding rule is serving on behalf of.

          Addresses are restricted based on the forwarding rule's load balancing
          scheme (EXTERNAL or INTERNAL) and scope (global or regional).

          When the load balancing scheme is EXTERNAL, for global forwarding
          rules, the address must be a global IP, and for regional forwarding
          rules, the address must live in the same region as the forwarding
          rule. If this field is empty, an ephemeral IPv4 address from the same
          scope (global or regional) will be assigned. A regional forwarding
          rule supports IPv4 only. A global forwarding rule supports either IPv4
          or IPv6.

          When the load balancing scheme is INTERNAL, this can only be an RFC
          1918 IP address belonging to the network/subnet configured for the
          forwarding rule. By default, if this field is empty, an ephemeral
          internal IP address will be automatically allocated from the IP range
          of the subnet or network configured for this forwarding rule.

          An address must be specified by a literal IP address. ~> **NOTE**: While
          the API allows you to specify various resource paths for an address resource
          instead, Terraform requires this to specifically be an IP address to
          avoid needing to fetching the IP address from resource paths on refresh
          or unnecessary diffs.
      IPProtocol: !ruby/object:Overrides::Terraform::PropertyOverride
        diff_suppress_func: 'caseDiffSuppress'
        default_from_api: true
      loadBalancingScheme: !ruby/object:Overrides::Terraform::PropertyOverride
        default_value: :EXTERNAL
      network: !ruby/object:Overrides::Terraform::PropertyOverride
        default_from_api: true
      subnetwork: !ruby/object:Overrides::Terraform::PropertyOverride
        default_from_api: true
      region: !ruby/object:Overrides::Terraform::PropertyOverride
        required: false
        default_from_api: true
        custom_flatten: 'templates/terraform/custom_flatten/name_from_self_link.erb'
      backendService: !ruby/object:Overrides::Terraform::PropertyOverride
        custom_expand: 'templates/terraform/custom_expand/self_link_from_name.erb'
      networkTier: !ruby/object:Overrides::Terraform::PropertyOverride
        default_from_api: true
      target: !ruby/object:Overrides::Terraform::PropertyOverride
        diff_suppress_func: 'compareSelfLinkRelativePaths'
        custom_expand: 'templates/terraform/custom_expand/self_link_from_name.erb'
      ports: !ruby/object:Overrides::Terraform::PropertyOverride
        is_set: true
        custom_expand: 'templates/terraform/custom_expand/set_to_list.erb'
      labelFingerprint: !ruby/object:Overrides::Terraform::PropertyOverride
        exclude: false
      serviceLabel: !ruby/object:Overrides::Terraform::PropertyOverride
        validation: !ruby/object:Provider::Terraform::Validation
          function: 'validateGCPName'
  GlobalAddress: !ruby/object:Overrides::Terraform::ResourceOverride
    examples:
      - !ruby/object:Provider::Terraform::Examples
        name: "global_address_basic"
        primary_resource_id: "default"
        vars:
          global_address_name: "global-appserver-ip"
    properties:
      id: !ruby/object:Overrides::Terraform::PropertyOverride
        exclude: true
      address: !ruby/object:Overrides::Terraform::PropertyOverride
        default_from_api: true
      ipVersion: !ruby/object:Overrides::Terraform::PropertyOverride
        diff_suppress_func: 'emptyOrDefaultStringSuppress("IPV4")'
      labelFingerprint: !ruby/object:Overrides::Terraform::PropertyOverride
        exclude: false
      region: !ruby/object:Overrides::Terraform::PropertyOverride
        exclude: true
      addressType: !ruby/object:Overrides::Terraform::PropertyOverride
        diff_suppress_func: 'emptyOrDefaultStringSuppress("EXTERNAL")'
    custom_code: !ruby/object:Provider::Terraform::CustomCode
      post_create: templates/terraform/post_create/labels.erb
  GlobalForwardingRule: !ruby/object:Overrides::Terraform::ResourceOverride
    examples:
      - !ruby/object:Provider::Terraform::Examples
        name: "global_forwarding_rule_http"
        primary_resource_id: "default"
        vars:
          forwarding_rule_name: "global-rule"
          http_proxy_name: "target-proxy"
          backend_service_name: "backend"
      - !ruby/object:Provider::Terraform::Examples
        name: "global_forwarding_rule_internal"
        min_version: beta
        primary_resource_id: "default"
        vars:
          forwarding_rule_name: "global-rule"
          http_proxy_name: "target-proxy"
          backend_service_name: "backend"
    properties:
      creationTimestamp: !ruby/object:Overrides::Terraform::PropertyOverride
        exclude: true
      id: !ruby/object:Overrides::Terraform::PropertyOverride
        exclude: true
      IPAddress: !ruby/object:Overrides::Terraform::PropertyOverride
        default_from_api: true
        validation: !ruby/object:Provider::Terraform::Validation
          function: 'validateIpAddress'
        description: |
          The IP address that this forwarding rule is serving on behalf of.

          Addresses are restricted based on the forwarding rule's load balancing
          scheme (EXTERNAL or INTERNAL) and scope (global or regional).

          When the load balancing scheme is EXTERNAL, for global forwarding
          rules, the address must be a global IP, and for regional forwarding
          rules, the address must live in the same region as the forwarding
          rule. If this field is empty, an ephemeral IPv4 address from the same
          scope (global or regional) will be assigned. A regional forwarding
          rule supports IPv4 only. A global forwarding rule supports either IPv4
          or IPv6.

          When the load balancing scheme is INTERNAL, this can only be an RFC
          1918 IP address belonging to the network/subnet configured for the
          forwarding rule. By default, if this field is empty, an ephemeral
          internal IP address will be automatically allocated from the IP range
          of the subnet or network configured for this forwarding rule.

          An address must be specified by a literal IP address. ~> **NOTE**: While
          the API allows you to specify various resource paths for an address resource
          instead, Terraform requires this to specifically be an IP address to
          avoid needing to fetching the IP address from resource paths on refresh
          or unnecessary diffs.
      IPProtocol: !ruby/object:Overrides::Terraform::PropertyOverride
        diff_suppress_func: 'caseDiffSuppress'
        default_from_api: true
      network: !ruby/object:Overrides::Terraform::PropertyOverride
        default_from_api: true
        min_version: beta
      portRange: !ruby/object:Overrides::Terraform::PropertyOverride
        diff_suppress_func: 'portRangeDiffSuppress'
      target: !ruby/object:Overrides::Terraform::PropertyOverride
        diff_suppress_func: 'compareSelfLinkRelativePaths'
    custom_code: !ruby/object:Provider::Terraform::CustomCode
      post_create: templates/terraform/post_create/labels.erb
  HttpHealthCheck: !ruby/object:Overrides::Terraform::ResourceOverride
    description: |
      {{description}}

      ~> **Note:** google_compute_http_health_check is a legacy health check.
      The newer [google_compute_health_check](/docs/providers/google/r/compute_health_check.html)
      should be preferred for all uses except
      [Network Load Balancers](https://cloud.google.com/compute/docs/load-balancing/network/)
      which still require the legacy version.
    examples:
      - !ruby/object:Provider::Terraform::Examples
        name: "http_health_check_basic"
        primary_resource_id: "default"
        vars:
          http_health_check_name: "authentication-health-check"
    properties:
      id: !ruby/object:Overrides::Terraform::PropertyOverride
        exclude: true
      checkIntervalSec: !ruby/object:Overrides::Terraform::PropertyOverride
        default_value: 5
      healthyThreshold: !ruby/object:Overrides::Terraform::PropertyOverride
        default_value: 2
      port: !ruby/object:Overrides::Terraform::PropertyOverride
        default_value: 80
      requestPath: !ruby/object:Overrides::Terraform::PropertyOverride
        default_value: "/"
      timeoutSec: !ruby/object:Overrides::Terraform::PropertyOverride
        default_value: 5
      unhealthyThreshold: !ruby/object:Overrides::Terraform::PropertyOverride
        default_value: 2
  HttpsHealthCheck: !ruby/object:Overrides::Terraform::ResourceOverride
    description: |
      {{description}}

      ~> **Note:** google_compute_https_health_check is a legacy health check.
      The newer [google_compute_health_check](/docs/providers/google/r/compute_health_check.html)
      should be preferred for all uses except
      [Network Load Balancers](https://cloud.google.com/compute/docs/load-balancing/network/)
      which still require the legacy version.
    examples:
      - !ruby/object:Provider::Terraform::Examples
        name: "https_health_check_basic"
        primary_resource_id: "default"
        vars:
          https_health_check_name: "authentication-health-check"
    properties:
      id: !ruby/object:Overrides::Terraform::PropertyOverride
        exclude: true
      checkIntervalSec: !ruby/object:Overrides::Terraform::PropertyOverride
        default_value: 5
      healthyThreshold: !ruby/object:Overrides::Terraform::PropertyOverride
        default_value: 2
      port: !ruby/object:Overrides::Terraform::PropertyOverride
        default_value: 443
      requestPath: !ruby/object:Overrides::Terraform::PropertyOverride
        default_value: "/"
      timeoutSec: !ruby/object:Overrides::Terraform::PropertyOverride
        default_value: 5
      unhealthyThreshold: !ruby/object:Overrides::Terraform::PropertyOverride
        default_value: 2
  HealthCheck: !ruby/object:Overrides::Terraform::ResourceOverride
    examples:
      - !ruby/object:Provider::Terraform::Examples
        name: "health_check_tcp"
        primary_resource_id: "tcp-health-check"
        vars:
          health_check_name: "tcp-health-check"
      - !ruby/object:Provider::Terraform::Examples
        name: "health_check_tcp_full"
        primary_resource_id: "tcp-health-check"
        vars:
          health_check_name: "tcp-health-check"
      - !ruby/object:Provider::Terraform::Examples
        name: "health_check_ssl"
        primary_resource_id: "ssl-health-check"
        vars:
          health_check_name: "ssl-health-check"
      - !ruby/object:Provider::Terraform::Examples
        name: "health_check_ssl_full"
        primary_resource_id: "ssl-health-check"
        vars:
          health_check_name: "ssl-health-check"
      - !ruby/object:Provider::Terraform::Examples
        name: "health_check_http"
        primary_resource_id: "http-health-check"
        vars:
          health_check_name: "http-health-check"
      - !ruby/object:Provider::Terraform::Examples
        name: "health_check_http_full"
        primary_resource_id: "http-health-check"
        vars:
          health_check_name: "http-health-check"
      - !ruby/object:Provider::Terraform::Examples
        name: "health_check_https"
        primary_resource_id: "https-health-check"
        vars:
          health_check_name: "https-health-check"
      - !ruby/object:Provider::Terraform::Examples
        name: "health_check_https_full"
        primary_resource_id: "https-health-check"
        vars:
          health_check_name: "https-health-check"
      - !ruby/object:Provider::Terraform::Examples
        name: "health_check_http2"
        primary_resource_id: "http2-health-check"
        vars:
          health_check_name: "http2-health-check"
      - !ruby/object:Provider::Terraform::Examples
        name: "health_check_http2_full"
        primary_resource_id: "http2-health-check"
        vars:
          health_check_name: "http2-health-check"
      - !ruby/object:Provider::Terraform::Examples
        name: "health_check_with_logging"
        primary_resource_id: "health-check-with-logging"
        min_version: beta
        vars:
          health_check_name: "tcp-health-check"
    custom_code: !ruby/object:Provider::Terraform::CustomCode
      encoder: templates/terraform/encoders/health_check_type.erb
      constants: templates/terraform/constants/health_check.erb
      resource_definition: templates/terraform/resource_definition/health_check.erb
    properties:
      id: !ruby/object:Overrides::Terraform::PropertyOverride
        exclude: true
      type: !ruby/object:Overrides::Terraform::PropertyOverride
        output: true
        description: The type of the health check. One of HTTP, HTTPS, TCP, or SSL.
      httpHealthCheck: !ruby/object:Overrides::Terraform::PropertyOverride
        diff_suppress_func: 'portDiffSuppress'
      http2HealthCheck: !ruby/object:Overrides::Terraform::PropertyOverride
        diff_suppress_func: 'portDiffSuppress'
      httpsHealthCheck: !ruby/object:Overrides::Terraform::PropertyOverride
        diff_suppress_func: 'portDiffSuppress'
      tcpHealthCheck: !ruby/object:Overrides::Terraform::PropertyOverride
        diff_suppress_func: 'portDiffSuppress'
      sslHealthCheck: !ruby/object:Overrides::Terraform::PropertyOverride
        diff_suppress_func: 'portDiffSuppress'
  Image: !ruby/object:Overrides::Terraform::ResourceOverride
    examples:
      - !ruby/object:Provider::Terraform::Examples
        name: "image_basic"
        primary_resource_id: "example"
        vars:
          image_name: "example-image"
      - !ruby/object:Provider::Terraform::Examples
        name: "image_guest_os"
        primary_resource_id: "example"
        vars:
          image_name: "example-image"
    properties:
      id: !ruby/object:Overrides::Terraform::PropertyOverride
        exclude: true
      diskSizeGb: !ruby/object:Overrides::Terraform::PropertyOverride
        default_from_api: true
      deprecated: !ruby/object:Overrides::Terraform::PropertyOverride
        exclude: true
      guestOsFeatures: !ruby/object:Overrides::Terraform::PropertyOverride
        default_from_api: true
        is_set: true
      imageEncryptionKey: !ruby/object:Overrides::Terraform::PropertyOverride
        exclude: true
      licenses: !ruby/object:Overrides::Terraform::PropertyOverride
        default_from_api: true
      rawDisk.sha1Checksum: !ruby/object:Overrides::Terraform::PropertyOverride
        name: 'sha1'
      rawDisk.containerType: !ruby/object:Overrides::Terraform::PropertyOverride
        default_value: :TAR
      rawDisk: !ruby/object:Overrides::Terraform::PropertyOverride
        ignore_read: true
      sourceDiskEncryptionKey: !ruby/object:Overrides::Terraform::PropertyOverride
        exclude: true
      sourceDiskId: !ruby/object:Overrides::Terraform::PropertyOverride
        exclude: true
      sourceType: !ruby/object:Overrides::Terraform::PropertyOverride
        exclude: true
  Instance: !ruby/object:Overrides::Terraform::ResourceOverride
    # Users were experiencing timeouts. Bumping up to 6 minutes.
    # https://github.com/terraform-providers/terraform-provider-google/issues/852
    timeouts: !ruby/object:Api::Timeouts
      insert_minutes: 6
      update_minutes: 6
      delete_minutes: 6
    iam_policy: !ruby/object:Api::Resource::IamPolicy
      allowed_iam_role: 'roles/compute.osLogin'
      parent_resource_attribute: 'instance_name'
      iam_conditions_request_type: :QUERY_PARAM
    exclude_resource: true
    examples:
      - !ruby/object:Provider::Terraform::Examples
        name: "instance_basic"
        primary_resource_id: "default"
        vars:
          instance_name: "my-instance"
        primary_resource_name: "fmt.Sprintf(\"tf-test-my-instance%s\", context[\"random_suffix\"])"
  InstanceGroup: !ruby/object:Overrides::Terraform::ResourceOverride
    exclude: true
  InstanceGroupManager: !ruby/object:Overrides::Terraform::ResourceOverride
    exclude: true
  InstanceGroupNamedPort: !ruby/object:Overrides::Terraform::ResourceOverride
    id_format: 'projects/{{project}}/zones/{{zone}}/instanceGroups/{{group}}/{{port}}/{{name}}'
    import_format: ['projects/{{project}}/zones/{{zone}}/instanceGroups/{{group}}/{{port}}/{{name}}']
    mutex: 'projects/{{project}}/zones/{{zone}}/instanceGroups/{{group}}'
    examples:
      - !ruby/object:Provider::Terraform::Examples
        name: "instance_group_named_port_gke"
        primary_resource_id: "my_port"
        vars:
          network_name: "container-network"
          subnetwork_name: "container-subnetwork"
          gke_cluster_name: "my-cluster"
    properties:
      group: !ruby/object:Overrides::Terraform::PropertyOverride
        diff_suppress_func: 'compareResourceNames'
      zone: !ruby/object:Overrides::Terraform::PropertyOverride
        required: false
        default_from_api: true
        ignore_read: true
    custom_code: !ruby/object:Provider::Terraform::CustomCode
      encoder: 'templates/terraform/encoders/normalize_group.go.erb'
  InstanceTemplate: !ruby/object:Overrides::Terraform::ResourceOverride
    exclude: true
  InterconnectAttachment: !ruby/object:Overrides::Terraform::ResourceOverride
    examples:
      - !ruby/object:Provider::Terraform::Examples
        name: "interconnect_attachment_basic"
        primary_resource_id: "on_prem"
        skip_test: true
        vars:
          interconnect_attachment_name: "on-prem-attachment"
          router_name: "router"
    properties:
      id: !ruby/object:Overrides::Terraform::PropertyOverride
        exclude: true
      name: !ruby/object:Overrides::Terraform::PropertyOverride
        validation: !ruby/object:Provider::Terraform::Validation
          regex: '^[a-z]([-a-z0-9]*[a-z0-9])?$'
      region: !ruby/object:Overrides::Terraform::PropertyOverride
        required: false
        default_from_api: true
      router: !ruby/object:Overrides::Terraform::PropertyOverride
        diff_suppress_func: 'compareSelfLinkOrResourceName'
      interconnect: !ruby/object:Overrides::Terraform::PropertyOverride
        diff_suppress_func: 'compareSelfLinkOrResourceName'
      bandwidth: !ruby/object:Overrides::Terraform::PropertyOverride
        default_from_api: true
      type: !ruby/object:Overrides::Terraform::PropertyOverride
        default_from_api: true
      vlanTag8021q: !ruby/object:Overrides::Terraform::PropertyOverride
        default_from_api: true
      candidateSubnets: !ruby/object:Overrides::Terraform::PropertyOverride
        ignore_read: true
    custom_code: !ruby/object:Provider::Terraform::CustomCode
      constants: templates/terraform/constants/interconnect_attachment.go.erb
      post_create: templates/terraform/post_create/interconnect_attachment.go.erb
      pre_delete: templates/terraform/pre_delete/interconnect_attachment.go.erb
  License: !ruby/object:Overrides::Terraform::ResourceOverride
    exclude: true
  MachineType: !ruby/object:Overrides::Terraform::ResourceOverride
    exclude: true
  Network: !ruby/object:Overrides::Terraform::ResourceOverride
    examples:
      - !ruby/object:Provider::Terraform::Examples
        name: "network_basic"
        primary_resource_id: "vpc_network"
        vars:
          network_name: "vpc-network"
    virtual_fields:
      - !ruby/object:Provider::Terraform::VirtualFields
        name: 'delete_default_routes_on_create'
        description: |
          If set to `true`, default routes (`0.0.0.0/0`) will be deleted
          immediately after network creation. Defaults to `false`.
    properties:
      id: !ruby/object:Overrides::Terraform::PropertyOverride
        exclude: true
      # We want this to be the smallest change possible, so exclude this for now.
      # TODO: remove exclusion
      creationTimestamp: !ruby/object:Overrides::Terraform::PropertyOverride
        exclude: true
      # We could include this, but it won't be correct mid-apply when subnetworks
      # are modified, so it's probably better to exclude.
      subnetworks: !ruby/object:Overrides::Terraform::PropertyOverride
        exclude: true
      autoCreateSubnetworks: !ruby/object:Overrides::Terraform::PropertyOverride
        default_value: True
        send_empty_value: true
        # autoCreateSubnetworks defaults to true, so we need to disable it explicitly
        conflicts: []
      routingConfig: !ruby/object:Overrides::Terraform::PropertyOverride
        flatten_object: true
      routingConfig.routingMode: !ruby/object:Overrides::Terraform::PropertyOverride
        # flattened objects don't pass on the attributes of the parent to
        # the child so redefining this on the child field is necessary.
        update_verb: :PATCH
        update_url:  projects/{{project}}/global/networks/{{name}}
        # while required inside routingConfig, routingMode is an optional convenience
        # field.
        required: false
        default_from_api: true
    custom_code: !ruby/object:Provider::Terraform::CustomCode
      post_create: templates/terraform/post_create/compute_network_delete_default_route.erb
      extra_schema_entry: templates/terraform/extra_schema_entry/network.erb
  NetworkEndpoint: !ruby/object:Overrides::Terraform::ResourceOverride
    id_format: "{{project}}/{{zone}}/{{network_endpoint_group}}/{{instance}}/{{ip_address}}/{{port}}"
    mutex: networkEndpoint/{{project}}/{{zone}}/{{network_endpoint_group}}
    # Fine-grained resources don't actually exist as standalone GCP resource
    # in Cloud Asset Inventory
    exclude_validator: true
    examples:
      - !ruby/object:Provider::Terraform::Examples
        name: "network_endpoint"
        primary_resource_id: "default-endpoint"
        # Fine-grained resource need different autogenerated tests, as
        # we need to check destroy during a test step where the parent resource
        # still exists, rather than during CheckDestroy (when read returns
        # nothing because the parent resource has then also been destroyed)
        skip_test: true
        vars:
          neg_name: "my-lb-neg"
          instance_name: "endpoint-instance"
          network_name: "neg-network"
          subnetwork_name: "neg-subnetwork"
    properties:
      instance: !ruby/object:Overrides::Terraform::PropertyOverride
        custom_expand: "templates/terraform/custom_expand/resource_from_self_link.go.erb"
      networkEndpointGroup: !ruby/object:Overrides::Terraform::PropertyOverride
        ignore_read: true
        diff_suppress_func: compareResourceNames
      port: !ruby/object:Overrides::Terraform::PropertyOverride
        custom_flatten: templates/terraform/custom_flatten/float64_to_int.go.erb
      zone: !ruby/object:Overrides::Terraform::PropertyOverride
        required: false
        default_from_api: true
        ignore_read: true
    custom_code: !ruby/object:Provider::Terraform::CustomCode
      pre_delete: templates/terraform/pre_delete/compute_network_endpoint.go.erb
      decoder: templates/terraform/decoders/unwrap_resource.go.erb
      encoder: templates/terraform/encoders/compute_network_endpoint.go.erb
  NetworkEndpointGroup: !ruby/object:Overrides::Terraform::ResourceOverride
    examples:
      - !ruby/object:Provider::Terraform::Examples
        name: "network_endpoint_group"
        primary_resource_id: "neg"
        vars:
          neg_name: "my-lb-neg"
          network_name: "neg-network"
          subnetwork_name: "neg-subnetwork"
    properties:
      id: !ruby/object:Overrides::Terraform::PropertyOverride
        exclude: true
      name: !ruby/object:Overrides::Terraform::PropertyOverride
        validation: !ruby/object:Provider::Terraform::Validation
          function: 'validateGCPName'
      zone: !ruby/object:Overrides::Terraform::PropertyOverride
        required: false
        default_from_api: true
  GlobalNetworkEndpoint: !ruby/object:Overrides::Terraform::ResourceOverride
    id_format: "{{project}}/{{global_network_endpoint_group}}/{{ip_address}}/{{fqdn}}/{{port}}"
    mutex: networkEndpoint/{{project}}/{{global_network_endpoint_group}}
    # Fine-grained resources don't actually exist as standalone GCP resource
    # in Cloud Asset Inventory
    exclude_validator: true
    examples:
      - !ruby/object:Provider::Terraform::Examples
        name: "global_network_endpoint"
        primary_resource_id: "default-endpoint"
        # Fine-grained resource need different autogenerated tests, as
        # we need to check destroy during a test step where the parent resource
        # still exists, rather than during CheckDestroy (when read returns
        # nothing because the parent resource has then also been destroyed)
        skip_test: true
        vars:
          neg_name: "my-lb-neg"
    properties:
      globalNetworkEndpointGroup: !ruby/object:Overrides::Terraform::PropertyOverride
        ignore_read: true
        diff_suppress_func: compareResourceNames
      port: !ruby/object:Overrides::Terraform::PropertyOverride
        custom_flatten: templates/terraform/custom_flatten/float64_to_int.go.erb
    custom_code: !ruby/object:Provider::Terraform::CustomCode
      pre_delete: templates/terraform/pre_delete/compute_global_network_endpoint.go.erb
      decoder: templates/terraform/decoders/network_endpoint.go.erb
      encoder: templates/terraform/encoders/compute_global_network_endpoint.go.erb
      custom_import: templates/terraform/custom_import/compute_global_network_endpoint.go.erb
  GlobalNetworkEndpointGroup: !ruby/object:Overrides::Terraform::ResourceOverride
    examples:
      - !ruby/object:Provider::Terraform::Examples
        name: "global_network_endpoint_group"
        primary_resource_id: "neg"
        vars:
          neg_name: "my-lb-neg"
      - !ruby/object:Provider::Terraform::Examples
        name: "global_network_endpoint_group_ip_address"
        primary_resource_id: "neg"
        vars:
          neg_name: "my-lb-neg"
    properties:
      id: !ruby/object:Overrides::Terraform::PropertyOverride
        exclude: true
      name: !ruby/object:Overrides::Terraform::PropertyOverride
        validation: !ruby/object:Provider::Terraform::Validation
          function: 'validateGCPName'
  NetworkPeeringRoutesConfig: !ruby/object:Overrides::Terraform::ResourceOverride
    id_format: "projects/{{project}}/global/networks/{{network}}/networkPeerings/{{peering}}"
    import_format: ["projects/{{project}}/global/networks/{{network}}/networkPeerings/{{peering}}"]
    # format from google_compute_network_peering
    mutex: 'projects/{{project}}/global/networks/{{network}}/peerings'
    examples:
      - !ruby/object:Provider::Terraform::Examples
        name: "network_peering_routes_config_basic"
        primary_resource_id: "peering_primary_routes"
        vars:
          peering_primary_name: "primary-peering"
          peering_secondary_name: "secondary-peering"
          network_primary_name: "primary-network"
          network_secondary_name: "secondary-network"
      - !ruby/object:Provider::Terraform::Examples
        name: "network_peering_routes_config_gke"
        primary_resource_id: "peering_gke_routes"
        vars:
          network_name: "container-network"
          subnetwork_name: "container-subnetwork"
          gke_cluster_name: "private-cluster"
    properties:
      network: !ruby/object:Overrides::Terraform::PropertyOverride
        custom_flatten: 'templates/terraform/custom_flatten/name_from_self_link.erb'
    custom_code: !ruby/object:Provider::Terraform::CustomCode
      custom_delete: 'templates/terraform/custom_delete/skip_delete.go.erb'
      encoder: 'templates/terraform/encoders/network_peering_routes_config.go.erb'
  NodeGroup: !ruby/object:Overrides::Terraform::ResourceOverride
    docs: !ruby/object:Provider::Terraform::Docs
      warning: |
        Due to limitations of the API, Terraform cannot update the
        number of nodes in a node group and changes to node group size either
        through Terraform config or through external changes will cause
        Terraform to delete and recreate the node group.
    examples:
      - !ruby/object:Provider::Terraform::Examples
        name: "node_group_basic"
        primary_resource_id: "nodes"
        vars:
          group_name: "soletenant-group"
          template_name: "soletenant-tmpl"
      - !ruby/object:Provider::Terraform::Examples
        name: "node_group_autoscaling_policy"
        min_version: beta
        primary_resource_id: "nodes"
        vars:
          group_name: "soletenant-group"
          template_name: "soletenant-tmpl"
    properties:
      zone: !ruby/object:Overrides::Terraform::PropertyOverride
        required: false
        default_from_api: true
        custom_flatten: 'templates/terraform/custom_flatten/name_from_self_link.erb'
      autoscalingPolicy: !ruby/object:Overrides::Terraform::PropertyOverride
        default_from_api: true
      autoscalingPolicy.mode: !ruby/object:Overrides::Terraform::PropertyOverride
        default_from_api: true
      autoscalingPolicy.minNodes: !ruby/object:Overrides::Terraform::PropertyOverride
        default_from_api: true
      autoscalingPolicy.maxNodes: !ruby/object:Overrides::Terraform::PropertyOverride
        default_from_api: true
  NodeTemplate: !ruby/object:Overrides::Terraform::ResourceOverride
    examples:
      - !ruby/object:Provider::Terraform::Examples
        name: "node_template_basic"
        primary_resource_id: "template"
        vars:
          template_name: "soletenant-tmpl"
      - !ruby/object:Provider::Terraform::Examples
        name: "node_template_server_binding"
        min_version: beta
        primary_resource_id: "template"
        vars:
          template_name: "soletenant-with-licenses"
    properties:
      region: !ruby/object:Overrides::Terraform::PropertyOverride
        required: false
        default_from_api: true
        custom_flatten: 'templates/terraform/custom_flatten/name_from_self_link.erb'
        description: |
          Region where nodes using the node template will be created.
          If it is not provided, the provider region is used.
      serverBinding: !ruby/object:Overrides::Terraform::PropertyOverride
        default_from_api: true
  PacketMirroring: !ruby/object:Overrides::Terraform::ResourceOverride
    examples:
      - !ruby/object:Provider::Terraform::Examples
        name: "compute_packet_mirroring_full"
        primary_resource_id: "foobar"
        min_version: 'beta'
        vars:
          instance_name: "my-instance"
          subnetwork_name: "my-subnetwork"
          service_name: "my-service"
          hc_name: "my-healthcheck"
          mirroring_name: "my-mirroring"
          ilb_rule_name: "my-ilb"
          network_name: "my-network"

    properties:
      name: !ruby/object:Overrides::Terraform::PropertyOverride
        validation: !ruby/object:Provider::Terraform::Validation
          function: 'validateGCPName'
      priority: !ruby/object:Overrides::Terraform::PropertyOverride
        required: false
        default_from_api: true
      collectorIlb: !ruby/object:Overrides::Terraform::PropertyOverride
        description: |
            The Forwarding Rule resource (of type load_balancing_scheme=INTERNAL)
            that will be used as collector for mirrored traffic. The
            specified forwarding rule must have is_mirroring_collector
            set to true.
      region: !ruby/object:Overrides::Terraform::PropertyOverride
        required: false
        default_from_api: true
        custom_flatten: 'templates/terraform/custom_flatten/name_from_self_link.erb'
        description: |
          The Region in which the created address should reside.
          If it is not provided, the provider region is used.

  ProjectInfo: !ruby/object:Overrides::Terraform::ResourceOverride
    exclude: true
  Region: !ruby/object:Overrides::Terraform::ResourceOverride
    exclude: true
  RegionAutoscaler: !ruby/object:Overrides::Terraform::ResourceOverride
    examples:
      - !ruby/object:Provider::Terraform::Examples
        name: "region_autoscaler_basic"
        primary_resource_id: "foobar"
        vars:
          region_autoscaler_name: "my-region-autoscaler"
          instance_template_name: "my-instance-template"
          target_pool_name: "my-target-pool"
          rigm_name: "my-region-igm"
    properties:
      id: !ruby/object:Overrides::Terraform::PropertyOverride
        exclude: true
      name: !ruby/object:Overrides::Terraform::PropertyOverride
        validation: !ruby/object:Provider::Terraform::Validation
          function: 'validateGCPName'
      autoscalingPolicy.minNumReplicas: !ruby/object:Overrides::Terraform::PropertyOverride
        name: minReplicas
        # Even though this field isn't actually required by the API, it makes our
        # lives easier if we treat it as a required field. It has a default that is
        # set by the API based on the value of maxNumReplicas. Normally in this case
        # we would just set it to Optional+Computed. However, this currently doesn't
        # work with nested fields. Make it required so we don't set the field to zero
        # when our users aren't expecting us to. For more info, see
        # https://github.com/GoogleCloudPlatform/magic-modules/issues/305.
        required: true
      autoscalingPolicy.maxNumReplicas: !ruby/object:Overrides::Terraform::PropertyOverride
        name: maxReplicas
      autoscalingPolicy.coolDownPeriodSec: !ruby/object:Overrides::Terraform::PropertyOverride
        name: cooldownPeriod
      autoscalingPolicy.cpuUtilization: !ruby/object:Overrides::Terraform::PropertyOverride
        default_from_api: true
      autoscalingPolicy.cpuUtilization.utilizationTarget: !ruby/object:Overrides::Terraform::PropertyOverride
        name: target
        required: true # See comment for minReplicas
      autoscalingPolicy.customMetricUtilizations: !ruby/object:Overrides::Terraform::PropertyOverride
        name: metric
      autoscalingPolicy.customMetricUtilizations.metric: !ruby/object:Overrides::Terraform::PropertyOverride
        name: name
      autoscalingPolicy.customMetricUtilizations.utilizationTarget: !ruby/object:Overrides::Terraform::PropertyOverride
        name: target
      autoscalingPolicy.customMetricUtilizations.utilizationTargetType: !ruby/object:Overrides::Terraform::PropertyOverride
        name: type
      autoscalingPolicy.loadBalancingUtilization.utilizationTarget: !ruby/object:Overrides::Terraform::PropertyOverride
        name: target
        required: true # See comment for minReplicas
      target: !ruby/object:Overrides::Terraform::PropertyOverride
        diff_suppress_func: 'compareSelfLinkOrResourceName'
      region: !ruby/object:Overrides::Terraform::PropertyOverride
        required: false
        default_from_api: true
  RegionDisk: !ruby/object:Overrides::Terraform::ResourceOverride
    timeouts: !ruby/object:Api::Timeouts
      insert_minutes: 5
    properties:
      id: !ruby/object:Overrides::Terraform::PropertyOverride
        exclude: true
      sizeGb: !ruby/object:Overrides::Terraform::PropertyOverride
        name: size
        default_from_api: true
      sourceSnapshot: !ruby/object:Overrides::Terraform::PropertyOverride
        name: snapshot
        description: |
          {{description}}* `snapshot`
      type: !ruby/object:Overrides::Terraform::PropertyOverride
        custom_flatten: 'templates/terraform/custom_flatten/name_from_self_link.erb'
        default_value: 'pd-standard'
      name: !ruby/object:Overrides::Terraform::PropertyOverride
        input: true
      licenses: !ruby/object:Overrides::Terraform::PropertyOverride
        exclude: true
      labelFingerprint: !ruby/object:Overrides::Terraform::PropertyOverride
        exclude: false
      region: !ruby/object:Overrides::Terraform::PropertyOverride
        required: false
        default_from_api: true
        custom_flatten: 'templates/terraform/custom_flatten/name_from_self_link.erb'
      physicalBlockSizeBytes: !ruby/object:Overrides::Terraform::PropertyOverride
        default_from_api: true
    custom_code: !ruby/object:Provider::Terraform::CustomCode
      pre_delete: templates/terraform/pre_delete/detach_disk.erb
      encoder: templates/terraform/encoders/disk.erb
      decoder: templates/terraform/decoders/disk.erb
      resource_definition: templates/terraform/resource_definition/disk.erb
    docs: !ruby/object:Provider::Terraform::Docs
      warning: |
        All arguments including the disk encryption key will be stored in the raw
        state as plain-text.
        [Read more about sensitive data in state](/docs/state/sensitive-data.html).
    examples:
      - !ruby/object:Provider::Terraform::Examples
        name: "region_disk_basic"
        primary_resource_id: "regiondisk"
        vars:
          region_disk_name: "my-region-disk"
          disk_name: "my-disk"
          snapshot_name: "my-snapshot"
  RegionDiskType: !ruby/object:Overrides::Terraform::ResourceOverride
    exclude: true
  RegionHealthCheck: !ruby/object:Overrides::Terraform::ResourceOverride
    examples:
      - !ruby/object:Provider::Terraform::Examples
        name: "region_health_check_tcp"
        primary_resource_id: "tcp-region-health-check"
        vars:
          health_check_name: "tcp-region-health-check"
      - !ruby/object:Provider::Terraform::Examples
        name: "region_health_check_tcp_full"
        primary_resource_id: "tcp-region-health-check"
        vars:
          health_check_name: "tcp-region-health-check"
      - !ruby/object:Provider::Terraform::Examples
        name: "region_health_check_ssl"
        primary_resource_id: "ssl-region-health-check"
        vars:
          health_check_name: "ssl-region-health-check"
      - !ruby/object:Provider::Terraform::Examples
        name: "region_health_check_ssl_full"
        primary_resource_id: "ssl-region-health-check"
        vars:
          health_check_name: "ssl-region-health-check"
      - !ruby/object:Provider::Terraform::Examples
        name: "region_health_check_http"
        primary_resource_id: "http-region-health-check"
        vars:
          health_check_name: "http-region-health-check"
      - !ruby/object:Provider::Terraform::Examples
        name: "region_health_check_http_logs"
        primary_resource_id: "http-region-health-check"
        min_version: beta
        vars:
          health_check_name: "http-region-health-check"
      - !ruby/object:Provider::Terraform::Examples
        name: "region_health_check_http_full"
        primary_resource_id: "http-region-health-check"
        vars:
          health_check_name: "http-region-health-check"
      - !ruby/object:Provider::Terraform::Examples
        name: "region_health_check_https"
        primary_resource_id: "https-region-health-check"
        vars:
          health_check_name: "https-region-health-check"
      - !ruby/object:Provider::Terraform::Examples
        name: "region_health_check_https_full"
        primary_resource_id: "https-region-health-check"
        vars:
          health_check_name: "https-region-health-check"
      - !ruby/object:Provider::Terraform::Examples
        name: "region_health_check_http2"
        primary_resource_id: "http2-region-health-check"
        vars:
          health_check_name: "http2-region-health-check"
      - !ruby/object:Provider::Terraform::Examples
        name: "region_health_check_http2_full"
        primary_resource_id: "http2-region-health-check"
        vars:
          health_check_name: "http2-region-health-check"
    custom_code: !ruby/object:Provider::Terraform::CustomCode
      encoder: templates/terraform/encoders/health_check_type.erb
      resource_definition: templates/terraform/resource_definition/health_check.erb
    properties:
      region: !ruby/object:Overrides::Terraform::PropertyOverride
        default_from_api: true
        required: false
        custom_flatten: 'templates/terraform/custom_flatten/name_from_self_link.erb'
        description: |
          The Region in which the created health check should reside.
          If it is not provided, the provider region is used.
      id: !ruby/object:Overrides::Terraform::PropertyOverride
        exclude: true
      type: !ruby/object:Overrides::Terraform::PropertyOverride
        output: true
        description: The type of the health check. One of HTTP, HTTP2, HTTPS, TCP, or SSL.
      httpHealthCheck: !ruby/object:Overrides::Terraform::PropertyOverride
        diff_suppress_func: 'portDiffSuppress'
      http2HealthCheck: !ruby/object:Overrides::Terraform::PropertyOverride
        diff_suppress_func: 'portDiffSuppress'
      httpsHealthCheck: !ruby/object:Overrides::Terraform::PropertyOverride
        diff_suppress_func: 'portDiffSuppress'
      tcpHealthCheck: !ruby/object:Overrides::Terraform::PropertyOverride
        diff_suppress_func: 'portDiffSuppress'
      sslHealthCheck: !ruby/object:Overrides::Terraform::PropertyOverride
        diff_suppress_func: 'portDiffSuppress'
  RegionUrlMap: !ruby/object:Overrides::Terraform::ResourceOverride
    min_version: 'beta'
    examples:
      - !ruby/object:Provider::Terraform::Examples
        name: "region_url_map_basic"
        primary_resource_id: "regionurlmap"
        vars:
          region_url_map_name: "regionurlmap"
          login_region_backend_service_name: "login"
          home_region_backend_service_name: "home"
          region_health_check_name: "health-check"
      - !ruby/object:Provider::Terraform::Examples
        name: "region_url_map_l7_ilb_path"
        primary_resource_id: "regionurlmap"
        vars:
          region_url_map_name: "regionurlmap"
          home_region_backend_service_name: "home"
          region_health_check_name: "health-check"
      - !ruby/object:Provider::Terraform::Examples
        name: "region_url_map_l7_ilb_path_partial"
        primary_resource_id: "regionurlmap"
        vars:
          region_url_map_name: "regionurlmap"
          home_region_backend_service_name: "home"
          region_health_check_name: "health-check"
      - !ruby/object:Provider::Terraform::Examples
        name: "region_url_map_l7_ilb_route"
        primary_resource_id: "regionurlmap"
        vars:
          region_url_map_name: "regionurlmap"
          home_region_backend_service_name: "home"
          region_health_check_name: "health-check"
      - !ruby/object:Provider::Terraform::Examples
        name: "region_url_map_l7_ilb_route_partial"
        primary_resource_id: "regionurlmap"
        vars:
          region_url_map_name: "regionurlmap"
          home_region_backend_service_name: "home"
          region_health_check_name: "health-check"
    properties:
      region: !ruby/object:Overrides::Terraform::PropertyOverride
        default_from_api: true
        required: false
        custom_flatten: 'templates/terraform/custom_flatten/name_from_self_link.erb'
        description: |
          The Region in which the url map should reside.
          If it is not provided, the provider region is used.
      id: !ruby/object:Overrides::Terraform::PropertyOverride
        name: "map_id"
      hostRules: !ruby/object:Overrides::Terraform::PropertyOverride
        name: "host_rule"
        is_set: true
      hostRules.hosts: !ruby/object:Overrides::Terraform::PropertyOverride
        is_set: true
      pathMatchers: !ruby/object:Overrides::Terraform::PropertyOverride
        name: "path_matcher"
      pathMatchers.pathRules: !ruby/object:Overrides::Terraform::PropertyOverride
        name: "path_rule"
      pathMatchers.pathRules.paths: !ruby/object:Overrides::Terraform::PropertyOverride
        is_set: true
      tests: !ruby/object:Overrides::Terraform::PropertyOverride
        name: "test"
  ResourcePolicy: !ruby/object:Overrides::Terraform::ResourceOverride
    examples:
      - !ruby/object:Provider::Terraform::Examples
        name: "resource_policy_basic"
        primary_resource_id: "foo"
        vars:
          name: "policy"
      - !ruby/object:Provider::Terraform::Examples
        name: "resource_policy_full"
        primary_resource_id: "bar"
        vars:
          name: "policy"
      - !ruby/object:Provider::Terraform::Examples
        name: "resource_policy_placement_policy"
        primary_resource_id: "baz"
        vars:
          name: "policy"
    properties:
      region: !ruby/object:Overrides::Terraform::PropertyOverride
        required: false
        default_from_api: true
      snapshotSchedulePolicy.schedule.dailySchedule.startTime: !ruby/object:Overrides::Terraform::PropertyOverride
        validation: !ruby/object:Provider::Terraform::Validation
          function: 'validateHourlyOnly'
      snapshotSchedulePolicy.schedule.hourlySchedule.startTime: !ruby/object:Overrides::Terraform::PropertyOverride
        validation: !ruby/object:Provider::Terraform::Validation
          function: 'validateHourlyOnly'
      snapshotSchedulePolicy.schedule.weeklySchedule.dayOfWeeks: !ruby/object:Overrides::Terraform::PropertyOverride
        is_set: true
      snapshotSchedulePolicy.snapshotProperties.storageLocations: !ruby/object:Overrides::Terraform::PropertyOverride
        is_set: true
  Reservation: !ruby/object:Overrides::Terraform::ResourceOverride
    examples:
      - !ruby/object:Provider::Terraform::Examples
        name: "reservation_basic"
        primary_resource_id: "gce_reservation"
        vars:
          reservation_name: "gce-reservation"
    custom_code: !ruby/object:Provider::Terraform::CustomCode
      update_encoder: templates/terraform/update_encoder/reservation.go.erb
    properties:
      id: !ruby/object:Overrides::Terraform::PropertyOverride
        exclude: true
      specificReservation.instanceProperties.minCpuPlatform: !ruby/object:Overrides::Terraform::PropertyOverride
        default_from_api: true
      specificReservation.count: !ruby/object:Overrides::Terraform::PropertyOverride
        validation: !ruby/object:Provider::Terraform::Validation
          function: 'validation.IntAtLeast(1)'
  Route: !ruby/object:Overrides::Terraform::ResourceOverride
    examples:
      - !ruby/object:Provider::Terraform::Examples
        name: "route_basic"
        primary_resource_id: "default"
        vars:
          route_name: "network-route"
          network_name: "compute-network"
      - !ruby/object:Provider::Terraform::Examples
        name: "route_ilb"
        primary_resource_id: "route-ilb"
        vars:
          network_name: "compute-network"
          subnet_name: "compute-subnet"
          forwarding_rule_name: "compute-forwarding-rule"
          health_check_name: "proxy-health-check"
          backend_name: "compute-backend"
          route_name: "route-ilb"
    properties:
      name: !ruby/object:Overrides::Terraform::PropertyOverride
        validation: !ruby/object:Provider::Terraform::Validation
          regex: '^[a-z]([-a-z0-9]*[a-z0-9])?$'
      network: !ruby/object:Overrides::Terraform::PropertyOverride
        diff_suppress_func: 'compareSelfLinkOrResourceName'
      priority: !ruby/object:Overrides::Terraform::PropertyOverride
        default_value: 1000
        send_empty_value: true
      nextHopIp: !ruby/object:Overrides::Terraform::PropertyOverride
        default_from_api: true
      nextHopGateway: !ruby/object:Overrides::Terraform::PropertyOverride
        diff_suppress_func: 'compareSelfLinkOrResourceName'
        custom_expand: templates/terraform/custom_expand/route_gateway.erb
        description: |+
          URL to a gateway that should handle matching packets.
          Currently, you can only specify the internet gateway, using a full or
          partial valid URL:
          * `https://www.googleapis.com/compute/v1/projects/project/global/gateways/default-internet-gateway`
          * `projects/project/global/gateways/default-internet-gateway`
          * `global/gateways/default-internet-gateway`
          * The string `default-internet-gateway`.
      nextHopInstance: !ruby/object:Overrides::Terraform::PropertyOverride
        custom_expand: templates/terraform/custom_expand/route_instance.erb
        description: |+
          URL to an instance that should handle matching packets.
          You can specify this as a full or partial URL. For example:
          * `https://www.googleapis.com/compute/v1/projects/project/zones/zone/instances/instance`
          * `projects/project/zones/zone/instances/instance`
          * `zones/zone/instances/instance`
          * Just the instance name, with the zone in `next_hop_instance_zone`.
      tags: !ruby/object:Overrides::Terraform::PropertyOverride
        custom_expand: templates/terraform/custom_expand/set_to_list.erb
        is_set: true
    custom_code: !ruby/object:Provider::Terraform::CustomCode
      decoder: templates/terraform/decoders/route.erb
      extra_schema_entry: templates/terraform/extra_schema_entry/route.erb
    docs: !ruby/object:Provider::Terraform::Docs
      optional_properties: |+
          * `next_hop_instance_zone` - (Optional when `next_hop_instance` is
            specified)  The zone of the instance specified in
            `next_hop_instance`.  Omit if `next_hop_instance` is specified as
            a URL.
  Router: !ruby/object:Overrides::Terraform::ResourceOverride
    mutex: router/{{region}}/{{name}}
    examples:
      - !ruby/object:Provider::Terraform::Examples
        name: "router_basic"
        primary_resource_id: "foobar"
        vars:
          router_name: "my-router"
          network_name: "my-network"
    custom_code: !ruby/object:Provider::Terraform::CustomCode
      constants: templates/terraform/constants/router.go.erb
      resource_definition: templates/terraform/resource_definition/router.go.erb
    properties:
      id: !ruby/object:Overrides::Terraform::PropertyOverride
        exclude: true
      name: !ruby/object:Overrides::Terraform::PropertyOverride
        validation: !ruby/object:Provider::Terraform::Validation
          function: 'validateGCPName'
      bgp.asn: !ruby/object:Overrides::Terraform::PropertyOverride
        validation: !ruby/object:Provider::Terraform::Validation
          function: 'validateRFC6996Asn'
      region: !ruby/object:Overrides::Terraform::PropertyOverride
        required: false
        default_from_api: true
        custom_flatten: 'templates/terraform/custom_flatten/name_from_self_link.erb'
  RouterNat: !ruby/object:Overrides::Terraform::ResourceOverride
    exclude_validator: true
    id_format: "{{project}}/{{region}}/{{router}}/{{name}}"
    mutex: router/{{region}}/{{router}}
    examples:
      # These examples are not used to autogenerate tests, as fine-grained
      # resources do not fit the normal test flow - we need to test deletion
      # in a test step while parent resource still exists vs in CheckDestroy
      # when all resources have been deleted.
      - !ruby/object:Provider::Terraform::Examples
        name: "router_nat_basic"
        primary_resource_id: "nat"
        skip_test: true
        vars:
          router_name: "my-router"
          nat_name: "my-router-nat"
          network_name: "my-network"
          subnet_name: "my-subnetwork"
      - !ruby/object:Provider::Terraform::Examples
        name: "router_nat_manual_ips"
        primary_resource_id: "nat_manual"
        skip_test: true
        vars:
          router_name: "my-router"
          nat_name: "my-router-nat"
          network_name: "my-network"
          subnet_name: "my-subnetwork"
          address_name: "nat-manual-ip"
    properties:
      name: !ruby/object:Overrides::Terraform::PropertyOverride
        validation: !ruby/object:Provider::Terraform::Validation
          function: 'validateRFC1035Name(2, 63)'
      natIps: !ruby/object:Overrides::Terraform::PropertyOverride
        is_set: true
      drainNatIps: !ruby/object:Overrides::Terraform::PropertyOverride
        is_set: true
      subnetwork: !ruby/object:Overrides::Terraform::PropertyOverride
        is_set: true
        set_hash_func: computeRouterNatSubnetworkHash
      subnetwork.sourceIpRangesToNat: !ruby/object:Overrides::Terraform::PropertyOverride
        is_set: true
      subnetwork.secondaryIpRangeNames: !ruby/object:Overrides::Terraform::PropertyOverride
        is_set: true
      region: !ruby/object:Overrides::Terraform::PropertyOverride
        required: false
        default_from_api: true
        custom_flatten: 'templates/terraform/custom_flatten/name_from_self_link.erb'
      udpIdleTimeoutSec: !ruby/object:Overrides::Terraform::PropertyOverride
        custom_flatten: 'templates/terraform/custom_flatten/default_if_empty.erb'
      icmpIdleTimeoutSec: !ruby/object:Overrides::Terraform::PropertyOverride
        custom_flatten: 'templates/terraform/custom_flatten/default_if_empty.erb'
      tcpEstablishedIdleTimeoutSec: !ruby/object:Overrides::Terraform::PropertyOverride
        custom_flatten: 'templates/terraform/custom_flatten/default_if_empty.erb'
      tcpTransitoryIdleTimeoutSec: !ruby/object:Overrides::Terraform::PropertyOverride
        custom_flatten: 'templates/terraform/custom_flatten/default_if_empty.erb'
    custom_code: !ruby/object:Provider::Terraform::CustomCode
      constants: 'templates/terraform/constants/router_nat.go.erb'
      resource_definition: 'templates/terraform/resource_definition/router_nat.go.erb'
  RouterBgpPeer: !ruby/object:Overrides::Terraform::ResourceOverride
    legacy_name: 'google_compute_router_peer'
    exclude_validator: true
    id_format: "projects/{{project}}/regions/{{region}}/routers/{{router}}/{{name}}"
    mutex: router/{{region}}/{{router}}
    examples:
      # These examples are not used to autogenerate tests, as fine-grained
      # resources do not fit the normal test flow - we need to test deletion
      # in a test step while parent resource still exists vs in CheckDestroy
      # when all resources have been deleted.
      - !ruby/object:Provider::Terraform::Examples
        name: "router_peer_basic"
        primary_resource_id: "peer"
        skip_test: true
        vars:
          router_name: "my-router"
          peer_name: "my-router-peer"
    properties:
      name: !ruby/object:Overrides::Terraform::PropertyOverride
        validation: !ruby/object:Provider::Terraform::Validation
          function: 'validateRFC1035Name(2, 63)'
      interfaceName: !ruby/object:Overrides::Terraform::PropertyOverride
        name: 'interface'
      region: !ruby/object:Overrides::Terraform::PropertyOverride
        required: false
        default_from_api: true
        custom_flatten: 'templates/terraform/custom_flatten/name_from_self_link.erb'
        description: |
          {{description}}
          If it is not provided, the provider region is used.
  SecurityPolicy: !ruby/object:Overrides::Terraform::ResourceOverride
    exclude: true
  Snapshot: !ruby/object:Overrides::Terraform::ResourceOverride
    timeouts: !ruby/object:Api::Timeouts
      insert_minutes: 5
      update_minutes: 5
      delete_minutes: 5
    create_url: projects/{{project}}/zones/{{zone}}/disks/{{source_disk}}/createSnapshot
    examples:
      - !ruby/object:Provider::Terraform::Examples
        name: "snapshot_basic"
        primary_resource_id: "snapshot"
        vars:
          snapshot_name: "my-snapshot"
          disk_name: "debian-disk"
    properties:
      id: !ruby/object:Overrides::Terraform::PropertyOverride
        name: 'snapshot_id'
      zone: !ruby/object:Overrides::Terraform::PropertyOverride
        ignore_read: true
        default_from_api: true
        required: false
      snapshotEncryptionKey.rawKey: !ruby/object:Overrides::Terraform::PropertyOverride
        # This is _correct_, but we don't support ignore_read on nested fields
        # so we use a custom_flatten for now.
        # https://github.com/GoogleCloudPlatform/magic-modules/issues/1019
        ignore_read: true
        sensitive: true
        required: true
        custom_flatten: templates/terraform/custom_flatten/compute_snapshot_snapshot_encryption_raw_key.go.erb
      snapshotEncryptionKey.kmsKeyName: !ruby/object:Overrides::Terraform::PropertyOverride
        # This is a beta field that showed up in GA. Removed from both.
        exclude: true
      sourceDisk: !ruby/object:Overrides::Terraform::PropertyOverride
        custom_flatten: templates/terraform/custom_flatten/name_from_self_link.erb
      sourceDiskEncryptionKey: !ruby/object:Overrides::Terraform::PropertyOverride
        ignore_read: true
      sourceDiskEncryptionKey.rawKey: !ruby/object:Overrides::Terraform::PropertyOverride
        sensitive: true
      sourceDiskEncryptionKey.kmsKeyName: !ruby/object:Overrides::Terraform::PropertyOverride
        # This is a beta field that showed up in GA. Removed from both.
        exclude: true
    custom_code: !ruby/object:Provider::Terraform::CustomCode
      decoder: templates/terraform/decoders/snapshot.go.erb
      extra_schema_entry: templates/terraform/extra_schema_entry/snapshot.erb
  ManagedSslCertificate: !ruby/object:Overrides::Terraform::ResourceOverride
    timeouts: !ruby/object:Api::Timeouts
      insert_minutes: 6
      update_minutes: 6
      # Deletes can take 20-30 minutes to complete, since they depend
      # on the provisioning process either succeeding or failing completely.
      delete_minutes: 30
    docs: !ruby/object:Provider::Terraform::Docs
      warning: |
        This resource should be used with extreme caution!  Provisioning an SSL
        certificate is complex.  Ensure that you understand the lifecycle of a
        certificate before attempting complex tasks like cert rotation automatically.
        This resource will "return" as soon as the certificate object is created,
        but post-creation the certificate object will go through a "provisioning"
        process.  The provisioning process can complete only when the domain name
        for which the certificate is created points to a target pool which, itself,
        points at the certificate.  Depending on your DNS provider, this may take
        some time, and migrating from self-managed certificates to Google-managed
        certificates may entail some downtime while the certificate provisions.

        In conclusion: Be extremely cautious.
    examples:
      - !ruby/object:Provider::Terraform::Examples
        name: "managed_ssl_certificate_basic"
        primary_resource_id: "default"
        vars:
          cert_name: "test-cert"
          proxy_name: "test-proxy"
          url_map_name: "url-map"
          backend_service_name: "backend-service"
          dns_zone_name: "dnszone"
          forwarding_rule_name: "forwarding-rule"
          http_health_check_name: "http-health-check"
      - !ruby/object:Provider::Terraform::Examples
        name: "managed_ssl_certificate_recreation"
        primary_resource_id: "default"
        min_version: beta
    description: |
      {{description}}
      For a resource where you provide the key, see the
      SSL Certificate resource.
    properties:
      id: !ruby/object:Overrides::Terraform::PropertyOverride
        name: 'certificate_id'
        default_from_api: true
      name: !ruby/object:Overrides::Terraform::PropertyOverride
        description: |
          {{description}}

          These are in the same namespace as the managed SSL certificates.
      managed.domains: !ruby/object:Overrides::Terraform::PropertyOverride
        diff_suppress_func: 'absoluteDomainSuppress'
  SslCertificate: !ruby/object:Overrides::Terraform::ResourceOverride
    docs: !ruby/object:Provider::Terraform::Docs
      optional_properties: |
        * `name_prefix` - (Optional) Creates a unique name beginning with the
         specified prefix. Conflicts with `name`.
    examples:
      - !ruby/object:Provider::Terraform::Examples
        name: "ssl_certificate_basic"
        primary_resource_id: "default"
        ignore_read_extra:
          - "name_prefix"
      - !ruby/object:Provider::Terraform::Examples
        name: "ssl_certificate_random_provider"
        primary_resource_id: "default"
      - !ruby/object:Provider::Terraform::Examples
        name: "ssl_certificate_target_https_proxies"
        primary_resource_id: "default"
        vars:
          target_https_proxy_name: "test-proxy"
          url_map_name: "url-map"
          backend_service_name: "backend-service"
          http_health_check_name: "http-health-check"
        ignore_read_extra:
          - "name_prefix"
    custom_code: !ruby/object:Provider::Terraform::CustomCode
      extra_schema_entry: templates/terraform/extra_schema_entry/ssl_certificate.erb
    properties:
      name: !ruby/object:Overrides::Terraform::PropertyOverride
        default_from_api: true
        custom_expand: 'templates/terraform/custom_expand/name_or_name_prefix.go.erb'
        validation: !ruby/object:Provider::Terraform::Validation
          function: 'validateGCPName'
        description: |
          {{description}}

          These are in the same namespace as the managed SSL certificates.
      id: !ruby/object:Overrides::Terraform::PropertyOverride
        name: 'certificate_id'
      certificate: !ruby/object:Overrides::Terraform::PropertyOverride
        sensitive: true
      privateKey: !ruby/object:Overrides::Terraform::PropertyOverride
        sensitive: true
        ignore_read: true
        custom_flatten: 'templates/terraform/custom_flatten/sha256.erb'
        diff_suppress_func: 'sha256DiffSuppress'
  RegionSslCertificate: !ruby/object:Overrides::Terraform::ResourceOverride
    docs: !ruby/object:Provider::Terraform::Docs
      optional_properties: |
        * `name_prefix` - (Optional) Creates a unique name beginning with the
         specified prefix. Conflicts with `name`.
    examples:
      - !ruby/object:Provider::Terraform::Examples
        name: "region_ssl_certificate_basic"
        primary_resource_id: "default"
        ignore_read_extra:
          - "name_prefix"
      - !ruby/object:Provider::Terraform::Examples
        name: "region_ssl_certificate_random_provider"
        primary_resource_id: "default"
      - !ruby/object:Provider::Terraform::Examples
        name: "region_ssl_certificate_target_https_proxies"
        min_version: "beta"
        primary_resource_id: "default"
        vars:
          region_target_https_proxy_name: "test-proxy"
          region_url_map_name: "url-map"
          region_backend_service_name: "backend-service"
          region_health_check_name: "http-health-check"
        ignore_read_extra:
          - "name_prefix"
    custom_code: !ruby/object:Provider::Terraform::CustomCode
      extra_schema_entry: templates/terraform/extra_schema_entry/ssl_certificate.erb
    properties:
      region: !ruby/object:Overrides::Terraform::PropertyOverride
        default_from_api: true
        required: false
        custom_flatten: 'templates/terraform/custom_flatten/name_from_self_link.erb'
        description: |
          The Region in which the created regional ssl certificate should reside.
          If it is not provided, the provider region is used.
      name: !ruby/object:Overrides::Terraform::PropertyOverride
        default_from_api: true
        custom_expand: 'templates/terraform/custom_expand/name_or_name_prefix.go.erb'
        validation: !ruby/object:Provider::Terraform::Validation
          function: 'validateGCPName'
        description: |
          {{description}}

          These are in the same namespace as the managed SSL certificates.
      id: !ruby/object:Overrides::Terraform::PropertyOverride
        name: 'certificate_id'
      certificate: !ruby/object:Overrides::Terraform::PropertyOverride
        sensitive: true
      privateKey: !ruby/object:Overrides::Terraform::PropertyOverride
        sensitive: true
        ignore_read: true
        custom_flatten: 'templates/terraform/custom_flatten/sha256.erb'
        diff_suppress_func: 'sha256DiffSuppress'
  SslPolicy: !ruby/object:Overrides::Terraform::ResourceOverride
    examples:
      - !ruby/object:Provider::Terraform::Examples
        name: "ssl_policy_basic"
        primary_resource_id: "prod-ssl-policy"
        vars:
          production_ssl_policy_name: "production-ssl-policy"
          nonprod_ssl_policy_name: "nonprod-ssl-policy"
          custom_ssl_policy_name: "custom-ssl-policy"
    custom_code: !ruby/object:Provider::Terraform::CustomCode
      constants:  'templates/terraform/constants/ssl_policy.erb'
      resource_definition: 'templates/terraform/resource_definition/ssl_policy.erb'
      update_encoder: 'templates/terraform/update_encoder/ssl_policy.erb'
    properties:
      id: !ruby/object:Overrides::Terraform::PropertyOverride
        exclude: true
      customFeatures: !ruby/object:Overrides::Terraform::PropertyOverride
        is_set: true
        # TODO(https://github.com/GoogleCloudPlatform/magic-modules/issues/187) replace references automatically
        # Overriding the whole description because original has references to
        # other fields which are in camelCase in api.yaml.
        description: |
          Profile specifies the set of SSL features that can be used by the
          load balancer when negotiating SSL with clients. This can be one of
          `COMPATIBLE`, `MODERN`, `RESTRICTED`, or `CUSTOM`. If using `CUSTOM`,
          the set of SSL features to enable must be specified in the
          `customFeatures` field.

          See the [official documentation](https://cloud.google.com/compute/docs/load-balancing/ssl-policies#profilefeaturesupport)
          for which ciphers are available to use. **Note**: this argument
          *must* be present when using the `CUSTOM` profile. This argument
          *must not* be present when using any other profile.
      enabledFeatures: !ruby/object:Overrides::Terraform::PropertyOverride
        is_set: true
      profile: !ruby/object:Overrides::Terraform::PropertyOverride
        default_value: :COMPATIBLE
        description: |
          {{description}}
          See the [official documentation](https://cloud.google.com/compute/docs/load-balancing/ssl-policies#profilefeaturesupport)
          for information on what cipher suites each profile provides. If
          `CUSTOM` is used, the `custom_features` attribute **must be set**.
          Default is `COMPATIBLE`.
      minTlsVersion: !ruby/object:Overrides::Terraform::PropertyOverride
        default_value: :TLS_1_0
        description : '{{description}} Default is `TLS_1_0`.'
      warnings: !ruby/object:Overrides::Terraform::PropertyOverride
        exclude: true
  Subnetwork: !ruby/object:Overrides::Terraform::ResourceOverride
    # Users were experiencing timeout. Bumping up to 6 minutes.
    # https://github.com/terraform-providers/terraform-provider-google/issues/718
    timeouts: !ruby/object:Api::Timeouts
      insert_minutes: 6
      update_minutes: 6
      delete_minutes: 6
    iam_policy: !ruby/object:Api::Resource::IamPolicy
      allowed_iam_role: 'roles/compute.networkUser'
      parent_resource_attribute: 'subnetwork'
      iam_conditions_request_type: :QUERY_PARAM
    properties:
      id: !ruby/object:Overrides::Terraform::PropertyOverride
        exclude: true
      name: !ruby/object:Overrides::Terraform::PropertyOverride
        validation: !ruby/object:Provider::Terraform::Validation
          function: 'validateGCPName'
      secondaryIpRanges: !ruby/object:Overrides::Terraform::PropertyOverride
        name: secondaryIpRange
        unordered_list: true
        default_from_api: true
        schema_config_mode_attr: true
        send_empty_value: true
        description: |
          {{description}}
          **Note**: This field uses [attr-as-block mode](https://www.terraform.io/docs/configuration/attr-as-blocks.html) to avoid
          breaking users during the 0.12 upgrade. To explicitly send a list
          of zero objects you must use the following syntax:
          `example=[]`
          For more details about this behavior, see [this section](https://www.terraform.io/docs/configuration/attr-as-blocks.html#defining-a-fixed-object-collection-value).
      secondaryIpRanges.rangeName: !ruby/object:Overrides::Terraform::PropertyOverride
        validation: !ruby/object:Provider::Terraform::Validation
          function: 'validateGCPName'
      secondaryIpRanges.ipCidrRange: !ruby/object:Overrides::Terraform::PropertyOverride
        validation: !ruby/object:Provider::Terraform::Validation
          function: 'validateIpCidrRange'
      logConfig: !ruby/object:Overrides::Terraform::PropertyOverride
        send_empty_value: true
        custom_expand: 'templates/terraform/custom_expand/subnetwork_log_config.go.erb'
        custom_flatten: 'templates/terraform/custom_flatten/subnetwork_log_config.go.erb'
      logConfig.enable: !ruby/object:Overrides::Terraform::PropertyOverride
        exclude: true
      ipCidrRange: !ruby/object:Overrides::Terraform::PropertyOverride
        validation: !ruby/object:Provider::Terraform::Validation
          function: 'validateIpCidrRange'
      region: !ruby/object:Overrides::Terraform::PropertyOverride
        required: false
        input: false
        default_from_api: true
        custom_flatten: 'templates/terraform/custom_flatten/name_from_self_link.erb'
      purpose: !ruby/object:Overrides::Terraform::PropertyOverride
        default_from_api: true
    custom_code: !ruby/object:Provider::Terraform::CustomCode
      constants: templates/terraform/constants/subnetwork.erb
      resource_definition: templates/terraform/resource_definition/subnetwork.erb
      extra_schema_entry: templates/terraform/extra_schema_entry/subnetwork.erb
    examples:
      - !ruby/object:Provider::Terraform::Examples
        name: "subnetwork_basic"
        primary_resource_id: "network-with-private-secondary-ip-ranges"
        vars:
          subnetwork_name: "test-subnetwork"
          network_name: "test-network"
        primary_resource_name: "fmt.Sprintf(\"tf-test-test-subnetwork%s\", context[\"random_suffix\"])"
      - !ruby/object:Provider::Terraform::Examples
        name: "subnetwork_logging_config"
        primary_resource_id: "subnet-with-logging"
        vars:
          subnetwork_name: "log-test-subnetwork"
          network_name: "log-test-network"
      - !ruby/object:Provider::Terraform::Examples
        name: "subnetwork_internal_l7lb"
        min_version: beta
        primary_resource_id: "network-for-l7lb"
        vars:
          subnetwork_name: "l7lb-test-subnetwork"
          network_name: "l7lb-test-network"
  TargetHttpProxy: !ruby/object:Overrides::Terraform::ResourceOverride
    examples:
      - !ruby/object:Provider::Terraform::Examples
        name: "target_http_proxy_basic"
        primary_resource_id: "default"
        vars:
          target_http_proxy_name: "test-proxy"
          url_map_name: "url-map"
          backend_service_name: "backend-service"
          http_health_check_name: "http-health-check"
    properties:
      id: !ruby/object:Overrides::Terraform::PropertyOverride
        name: proxyId
  TargetHttpsProxy: !ruby/object:Overrides::Terraform::ResourceOverride
    examples:
      - !ruby/object:Provider::Terraform::Examples
        name: "target_https_proxy_basic"
        primary_resource_id: "default"
        vars:
          target_https_proxy_name: "test-proxy"
          ssl_certificate_name: "my-certificate"
          url_map_name: "url-map"
          backend_service_name: "backend-service"
          http_health_check_name: "http-health-check"
    properties:
      id: !ruby/object:Overrides::Terraform::PropertyOverride
        name: proxyId
      quicOverride: !ruby/object:Overrides::Terraform::PropertyOverride
        default_value: :NONE
        custom_flatten: 'templates/terraform/custom_flatten/default_if_empty.erb'
  RegionTargetHttpProxy: !ruby/object:Overrides::Terraform::ResourceOverride
    min_version: 'beta'
    examples:
      - !ruby/object:Provider::Terraform::Examples
        name: "region_target_http_proxy_basic"
        primary_resource_id: "default"
        vars:
          region_target_http_proxy_name: "test-proxy"
          region_url_map_name: "url-map"
          region_backend_service_name: "backend-service"
          region_health_check_name: "http-health-check"
    properties:
      region: !ruby/object:Overrides::Terraform::PropertyOverride
        default_from_api: true
        required: false
        custom_flatten: 'templates/terraform/custom_flatten/name_from_self_link.erb'
        description: |
          The Region in which the created target https proxy should reside.
          If it is not provided, the provider region is used.
      id: !ruby/object:Overrides::Terraform::PropertyOverride
        name: proxyId
  RegionTargetHttpsProxy: !ruby/object:Overrides::Terraform::ResourceOverride
    min_version: 'beta'
    examples:
      - !ruby/object:Provider::Terraform::Examples
        name: "region_target_https_proxy_basic"
        primary_resource_id: "default"
        vars:
          region_target_https_proxy_name: "test-proxy"
          region_ssl_certificate_name: "my-certificate"
          region_url_map_name: "url-map"
          region_backend_service_name: "backend-service"
          region_health_check_name: "http-health-check"
    properties:
      region: !ruby/object:Overrides::Terraform::PropertyOverride
        default_from_api: true
        required: false
        custom_flatten: 'templates/terraform/custom_flatten/name_from_self_link.erb'
        description: |
          The Region in which the created target https proxy should reside.
          If it is not provided, the provider region is used.
      id: !ruby/object:Overrides::Terraform::PropertyOverride
        name: proxyId
  TargetInstance: !ruby/object:Overrides::Terraform::ResourceOverride
    examples:
      - !ruby/object:Provider::Terraform::Examples
        name: "target_instance_basic"
        primary_resource_id: "default"
        vars:
          target_name: "target"
          instance_name: "target-vm"
    properties:
      zone: !ruby/object:Overrides::Terraform::PropertyOverride
        default_from_api: true
        required: false # the provider-default value will be used if not specified
      instance:  !ruby/object:Overrides::Terraform::PropertyOverride
        diff_suppress_func: 'compareSelfLinkOrResourceName'
        custom_expand: 'templates/terraform/custom_expand/self_link_from_name.erb'
        description: |
          The Compute instance VM handling traffic for this target instance.
          Accepts the instance self-link, relative path
          (e.g. `projects/project/zones/zone/instances/instance`) or name. If
          name is given, the zone will default to the given zone or
          the provider-default zone and the project will default to the
          provider-level project.
  TargetPool: !ruby/object:Overrides::Terraform::ResourceOverride
    exclude: true
    properties:
      id: !ruby/object:Overrides::Terraform::PropertyOverride
        exclude: true
      region: !ruby/object:Overrides::Terraform::PropertyOverride
        required: false # the provider-default value will be used if not specified
      sessionAffinity: !ruby/object:Overrides::Terraform::PropertyOverride
        default_value: :NONE
      # TODO: Custom code needed for updating `instances` and `healthCheck`.
      #       Update methods are (add|remove)Instance, (add/remove)HealthCheck
  TargetSslProxy: !ruby/object:Overrides::Terraform::ResourceOverride
    examples:
      - !ruby/object:Provider::Terraform::Examples
        name: "target_ssl_proxy_basic"
        primary_resource_id: "default"
        vars:
          target_ssl_proxy_name: "test-proxy"
          ssl_certificate_name: "default-cert"
          backend_service_name: "backend-service"
          health_check_name: "health-check"
    properties:
      id: !ruby/object:Overrides::Terraform::PropertyOverride
        name: proxyId
      proxyHeader: !ruby/object:Overrides::Terraform::PropertyOverride
        default_value: :NONE
      service: !ruby/object:Overrides::Terraform::PropertyOverride
        name: backendService
  TargetTcpProxy: !ruby/object:Overrides::Terraform::ResourceOverride
    examples:
      - !ruby/object:Provider::Terraform::Examples
        name: "target_tcp_proxy_basic"
        primary_resource_id: "default"
        vars:
          target_tcp_proxy_name: "test-proxy"
          backend_service_name: "backend-service"
          health_check_name: "health-check"
    properties:
      id: !ruby/object:Overrides::Terraform::PropertyOverride
        name: proxyId
      service: !ruby/object:Overrides::Terraform::PropertyOverride
        name: backendService
      proxyHeader: !ruby/object:Overrides::Terraform::PropertyOverride
        default_value: :NONE
  TargetVpnGateway: !ruby/object:Overrides::Terraform::ResourceOverride
    name: 'VpnGateway'
    examples:
      - !ruby/object:Provider::Terraform::Examples
        name: "target_vpn_gateway_basic"
        primary_resource_id: "target_gateway"
        vars:
          target_vpn_gateway_name: "vpn1"
          network_name: "network1"
          address_name: "vpn-static-ip"
          esp_forwarding_rule_name: "fr-esp"
          udp500_forwarding_rule_name: "fr-udp500"
          udp4500_forwarding_rule_name: "fr-udp4500"
          vpn_tunnel_name: "tunnel1"
          route_name: "route1"
    properties:
      id: !ruby/object:Overrides::Terraform::PropertyOverride
        name: gateway_id
      region: !ruby/object:Overrides::Terraform::PropertyOverride
        required: false # the provider-default value will be used if not specified
        default_from_api: true
        custom_flatten: 'templates/terraform/custom_flatten/name_from_self_link.erb'
      forwardingRules: !ruby/object:Overrides::Terraform::PropertyOverride
        exclude: true
      tunnels: !ruby/object:Overrides::Terraform::PropertyOverride
        exclude: true
  VpnGateway: !ruby/object:Overrides::Terraform::ResourceOverride
    name: 'HaVpnGateway'
    examples:
      - !ruby/object:Provider::Terraform::Examples
        name: "ha_vpn_gateway_basic"
        primary_resource_id: "ha_gateway1"
        vars:
          ha_vpn_gateway1_name: "ha-vpn-1"
          network1_name: "network1"
      - !ruby/object:Provider::Terraform::Examples
        name: "ha_vpn_gateway_gcp_to_gcp"
        primary_resource_id: "ha_gateway1"
        vars:
          ha_vpn_gateway1_name: "ha-vpn-1"
          network1_name: "network1"
          ha_vpn_gateway2_name: "ha-vpn-2"
          network2_name: "network2"
    properties:
      name: !ruby/object:Overrides::Terraform::PropertyOverride
        validation: !ruby/object:Provider::Terraform::Validation
          function: 'validateGCPName'
      id: !ruby/object:Overrides::Terraform::PropertyOverride
        exclude: true
      creationTimestamp: !ruby/object:Overrides::Terraform::PropertyOverride
        exclude: true
      region: !ruby/object:Overrides::Terraform::PropertyOverride
        required: false # the provider-default value will be used if not specified
        default_from_api: true
        custom_flatten: 'templates/terraform/custom_flatten/name_from_self_link.erb'
  ExternalVpnGateway: !ruby/object:Overrides::Terraform::ResourceOverride
    min_version: 'beta'
    properties:
      interfaces: !ruby/object:Overrides::Terraform::PropertyOverride
        name: interface
    examples:
      - !ruby/object:Provider::Terraform::Examples
        name: "external_vpn_gateway"
        primary_resource_id: "external_gateway"
        vars:
          ha_vpn_gateway_name: "ha-vpn"
          network_name: "network"
          external_gateway_name: "external-gateway"
          global_address_name: "global-address"
  UrlMap: !ruby/object:Overrides::Terraform::ResourceOverride
    examples:
      - !ruby/object:Provider::Terraform::Examples
        name: "url_map_basic"
        primary_resource_id: "urlmap"
        vars:
          url_map_name: "urlmap"
          login_backend_service_name: "login"
          home_backend_service_name: "home"
          http_health_check_name: "health-check"
          backend_bucket_name: "static-asset-backend-bucket"
          storage_bucket_name: "static-asset-bucket"
      - !ruby/object:Provider::Terraform::Examples
        name: "url_map_traffic_director_route"
        primary_resource_id: "urlmap"
        vars:
          url_map_name: "urlmap"
          home_backend_service_name: "home"
          health_check_name: "health-check"
      - !ruby/object:Provider::Terraform::Examples
        name: "url_map_traffic_director_route_partial"
        primary_resource_id: "urlmap"
        vars:
          url_map_name: "urlmap"
          home_backend_service_name: "home"
          health_check_name: "health-check"
      - !ruby/object:Provider::Terraform::Examples
        name: "url_map_traffic_director_path"
        primary_resource_id: "urlmap"
        vars:
          url_map_name: "urlmap"
          home_backend_service_name: "home"
          health_check_name: "health-check"
      - !ruby/object:Provider::Terraform::Examples
        name: "url_map_traffic_director_path_partial"
        primary_resource_id: "urlmap"
        vars:
          url_map_name: "urlmap"
          home_backend_service_name: "home"
          health_check_name: "health-check"
    properties:
      id: !ruby/object:Overrides::Terraform::PropertyOverride
        name: "map_id"
      defaultService: !ruby/object:Overrides::Terraform::PropertyOverride
        # ResourceRef only supports 1 type and UrlMap has references to a BackendBucket or BackendService.
        # Just read the self_link string instead of extracting the name and making a self_link out of it.
        custom_expand: 'templates/terraform/custom_expand/resourceref_as_string.go.erb'
        description: The backend service or backend bucket to use when none of the given rules match.
      hostRules: !ruby/object:Overrides::Terraform::PropertyOverride
        name: "host_rule"
        is_set: true
      hostRules.hosts: !ruby/object:Overrides::Terraform::PropertyOverride
        is_set: true
      pathMatchers: !ruby/object:Overrides::Terraform::PropertyOverride
        name: "path_matcher"
      pathMatchers.defaultService: !ruby/object:Overrides::Terraform::PropertyOverride
        # ResourceRef only supports 1 type and UrlMap has references to a BackendBucket or BackendService.
        # Just read the self_link string instead of extracting the name and making a self_link out of it.
        custom_expand: 'templates/terraform/custom_expand/resourceref_as_string.go.erb'
        description: The backend service or backend bucket to use when none of the given paths match.
      pathMatchers.pathRules: !ruby/object:Overrides::Terraform::PropertyOverride
        name: "path_rule"
      pathMatchers.pathRules.paths: !ruby/object:Overrides::Terraform::PropertyOverride
        is_set: true
      pathMatchers.pathRules.service: !ruby/object:Overrides::Terraform::PropertyOverride
        # ResourceRef only supports 1 type and UrlMap has references to a BackendBucket or BackendService.
        # Just read the self_link string instead of extracting the name and making a self_link out of it.
        custom_expand: 'templates/terraform/custom_expand/resourceref_as_string.go.erb'
        description: The backend service or backend bucket to use if any of the given paths match.
      tests.service: !ruby/object:Overrides::Terraform::PropertyOverride
        # ResourceRef only supports 1 type and UrlMap has references to a BackendBucket or BackendService.
        # Just read the self_link string instead of extracting the name and making a self_link out of it.
        custom_expand: 'templates/terraform/custom_expand/resourceref_as_string.go.erb'
        description: The backend service or backend bucket link that should be matched by this test.
      tests: !ruby/object:Overrides::Terraform::PropertyOverride
        name: "test"
  VpnTunnel: !ruby/object:Overrides::Terraform::ResourceOverride
    examples:
      - !ruby/object:Provider::Terraform::Examples
        name: "vpn_tunnel_basic"
        primary_resource_id: "tunnel1"
        vars:
          vpn_tunnel_name: "tunnel1"
          target_vpn_gateway_name: "vpn1"
          network_name: "network1"
          address_name: "vpn-static-ip"
          esp_forwarding_rule_name: "fr-esp"
          udp500_forwarding_rule_name: "fr-udp500"
          udp4500_forwarding_rule_name: "fr-udp4500"
          route_name: "route1"
      - !ruby/object:Provider::Terraform::Examples
        name: "vpn_tunnel_beta"
        primary_resource_id: "tunnel1"
        min_version: beta
        vars:
          vpn_tunnel_name: "tunnel1"
          target_vpn_gateway_name: "vpn1"
          network_name: "network1"
          address_name: "vpn-static-ip"
          esp_forwarding_rule_name: "fr-esp"
          udp500_forwarding_rule_name: "fr-udp500"
          udp4500_forwarding_rule_name: "fr-udp4500"
          route_name: "route1"
    docs: !ruby/object:Provider::Terraform::Docs
      warning: |
        All arguments including the shared secret will be stored in the raw
        state as plain-text.
        [Read more about sensitive data in state](/docs/state/sensitive-data.html).
    properties:
      targetVpnGateway: !ruby/object:Overrides::Terraform::PropertyOverride
        resource: 'VpnGateway'
      vpnGateway: !ruby/object:Overrides::Terraform::PropertyOverride
        description: |
          URL of the VPN gateway with which this VPN tunnel is associated.
          This must be used if a High Availability VPN gateway resource is created.
          This field must reference a `google_compute_ha_vpn_gateway` resource.
        resource: 'HaVpnGateway'
      peerGcpGateway: !ruby/object:Overrides::Terraform::PropertyOverride
        description: |
          URL of the peer side HA GCP VPN gateway to which this VPN tunnel is connected.
          If provided, the VPN tunnel will automatically use the same vpn_gateway_interface
          ID in the peer GCP VPN gateway.
          This field must reference a `google_compute_ha_vpn_gateway` resource.
        resource: 'HaVpnGateway'
      peerIp: !ruby/object:Overrides::Terraform::PropertyOverride
        validation: !ruby/object:Provider::Terraform::Validation
          function: 'validatePeerAddr'
        default_from_api: true
      sharedSecret: !ruby/object:Overrides::Terraform::PropertyOverride
        sensitive: true
        ignore_read: true
      region: !ruby/object:Overrides::Terraform::PropertyOverride
        required: false
        default_from_api: true
        custom_flatten: 'templates/terraform/custom_flatten/name_from_self_link.erb'
        description: '{{description}} If unset, is set to the region of `target_vpn_gateway`.'
      localTrafficSelector: !ruby/object:Overrides::Terraform::PropertyOverride
        is_set: true
        default_from_api: true
      remoteTrafficSelector: !ruby/object:Overrides::Terraform::PropertyOverride
        is_set: true
        default_from_api: true
      detailedStatus: !ruby/object:Overrides::Terraform::PropertyOverride
        exclude: false
      labelFingerprint: !ruby/object:Overrides::Terraform::PropertyOverride
        exclude: false
      router: !ruby/object:Overrides::Terraform::PropertyOverride
        custom_expand: 'templates/terraform/custom_expand/compute_full_url.erb'
      id: !ruby/object:Overrides::Terraform::PropertyOverride
        name: tunnel_id
    custom_code: !ruby/object:Provider::Terraform::CustomCode
      constants: templates/terraform/constants/vpn_tunnel.erb
      encoder: templates/terraform/encoders/vpn_tunnel.go.erb
      post_create: templates/terraform/post_create/labels.erb
  Zone: !ruby/object:Overrides::Terraform::ResourceOverride
    exclude: true

# This is for copying files over
files: !ruby/object:Provider::Config::Files
  # These files have templating (ERB) code that will be run.
  # This is usually to add licensing info, autogeneration notices, etc.
  compile:
<%= lines(indent(compile('provider/terraform/product~compile.yaml'), 4)) -%>
