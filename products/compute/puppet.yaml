# Copyright 2017 Google Inc.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

--- !ruby/object:Provider::Puppet::Config
manifest: !ruby/object:Provider::Puppet::Manifest
  version: '0.2.2'
  source: 'https://github.com/GoogleCloudPlatform/puppet-google-compute'
  homepage: 'https://github.com/GoogleCloudPlatform/puppet-google-compute'
  issues:
    'https://github.com/GoogleCloudPlatform/puppet-google-compute/issues'
  summary: 'A Puppet module to manage Google Compute Engine resources'
  tags:
    - google
    - cloud
    - compute
    - engine
    - gce
  requires:
    - !ruby/object:Provider::Config::Requirements
      name: 'google/gauth'
      versions: '>= 0.2.0 < 0.3.0'
  operating_systems:
<%= indent(include('provider/puppet/common~operating_systems.yaml'), 4) %>
# TODO(nelsonjr): Match all special behavior Puppet <=> Chef.
# TODO(https://github.com/GoogleCloudPlatform/magic-modules/issues/47): Migrate objects to overrides
overrides: !ruby/object:Provider::ResourceOverrides
  BackendService: !ruby/object:Provider::Puppet::ResourceOverride
    handlers: !ruby/object:Provider::Puppet::Handlers
      resource_to_request_patch: |
        unless @fetched.nil?
          # Convert to pure JSON
          request = JSON.parse(request.to_json)
          request['fingerprint'] = @fetched['fingerprint']
        end
  Disk: !ruby/object:Provider::Puppet::ResourceOverride
    # TODO(nelsonjr): Implement specific actions, such as resize and setLabels.
    handlers: !ruby/object:Provider::Puppet::Handlers
      flush: raise 'Disk cannot be edited'
  DiskType: !ruby/object:Provider::Puppet::ResourceOverride
    # TODO(nelsonjr): Make sure that attempts to create a disk fails
    handlers: !ruby/object:Provider::Puppet::Handlers
      flush: |
        raise [
          'DiskType requirements specified in the manifest do not match',
          "values provided by Google Cloud Platform: #{dirty_display_formatted}"
        ].join(' ')
    provider_helpers:
      - 'products/compute/helpers/provider_disk_type.rb'
  Instance: !ruby/object:Provider::Puppet::ResourceOverride
    provider_helpers:
      - 'products/compute/helpers/provider_instance.rb'
      - 'products/compute/helpers/instance_metadata.rb'
  InstanceGroup: !ruby/object:Provider::Puppet::ResourceOverride
    # TODO(nelsonjr): Implement specific actions, such as addInstance and
    # setNamedPorts.
    handlers: !ruby/object:Provider::Puppet::Handlers
      flush: raise 'InstanceGroup cannot be edited.'
  InstanceTemplate: !ruby/object:Provider::Puppet::ResourceOverride
    provider_helpers:
      - 'products/compute/helpers/provider_instance_template.rb'
      - 'products/compute/helpers/instance_metadata.rb'
  Network: !ruby/object:Provider::Puppet::ResourceOverride
    handlers: !ruby/object:Provider::Puppet::Handlers
      flush: |
        unless @dirty.keys == [:auto_create_subnetworks]
          raise [
            'Network specification mismatch and cannot be edited.',
            'The only allowed change is from Auto to Custom type.'
          ].join(' ')
        end
        handle_auto_to_custom_change
    provider_helpers:
      - 'products/compute/helpers/provider_network.rb'
  Snapshot: !ruby/object:Provider::Puppet::ResourceOverride
    handlers: !ruby/object:Provider::Puppet::Handlers
      create: |
        disk = Google::Compute::Api::Disk.new(resource[:source].resource,
                                              resource[:zone].resource,
                                              resource[:project],
                                              fetch_auth(resource))
        # TODO(nelsonjr): Wait for operation to complete
        disk.snapshot(
          resource[:name],
          Google::HashUtils.symbolize_keys(JSON.parse(resource_to_request))
        )
    requires:
      - google/compute/api/gcompute_disk
  TargetPool: !ruby/object:Provider::Puppet::ResourceOverride
    provider_helpers:
      - 'products/compute/helpers/provider_target_pool.rb'
  Region: !ruby/object:Provider::Puppet::ResourceOverride
    # TODO(nelsonjr): Make sure that attempts to create a region fails
    handlers: !ruby/object:Provider::Puppet::Handlers
      flush: raise 'Region cannot be edited' if @dirty
functions:
  - !ruby/object:Provider::Config::Function
    name: 'gcompute_address_ip'
    description: |
      Returns the IP address associated with the Address managed by a
      `gcompute_address` resource.
    arguments:
      - !ruby/object:Provider::Config::Function::Argument
        name: name
        type: Api::Type::String
        description: 'the name of the address resource'
      - !ruby/object:Provider::Config::Function::Argument
        name: region
        type: Api::Type::String
        description: 'the region where the address resource is allocated'
      - !ruby/object:Provider::Config::Function::Argument
        name: project
        type: Api::Type::String
        description: 'the project name where resource is allocated'
      - !ruby/object:Provider::Config::Function::Argument
        name: cred
        type: Google::Authorization
        description: |
          the credential to use to authorize the information request
    requires:
      - json
      - google/authorization
      - google/compute/network/get
      - puppet
    code: |
      get_request = ::Google::Compute::Network::Get.new(
        gcompute_address_self_link(name, region, project), cred
      )
      response = JSON.parse(get_request.send.body)
      response['address']
    helpers: |
      def gcompute_address_self_link(name, region, project)
        URI.join(
          'https://www.googleapis.com/compute/v1/',
          "projects/#{project}/",
          "regions/#{region}/",
          "addresses/#{name}"
        )
      end
    examples:
      - "{{function:name}}('my-server', 'us-central1', 'myproject', $fn_auth)"
    notes: |
      The credential parameter should be allocated with a
      `gauth_credential_*_for_function` call.
  # TODO(nelsonjr): Deprecate this function once ForwardingRule can take
  # multiple resources for IPAddress so we can make it a ResourceRef.
  - !ruby/object:Provider::Config::Function
    name: 'gcompute_address_ref'
    description: |
      Builds a reference to the IP address associated with the Address managed
      by a `gcompute_address` resource.
    arguments:
      - !ruby/object:Provider::Config::Function::Argument
        name: name
        type: Api::Type::String
        description: 'the name of the address resource'
      - !ruby/object:Provider::Config::Function::Argument
        name: region
        type: Api::Type::String
        description: 'the region where the address resource is allocated'
      - !ruby/object:Provider::Config::Function::Argument
        name: project
        type: Api::Type::String
        description: 'the project name where resource is allocated'
    requires:
      - puppet
    code: '"projects/#{project}/regions/#{region}/addresses/#{name}"'
    examples:
      - gcompute_address_ref('my-server', 'us-central1', 'myproject')
    notes: |
      This function is useful for when a reference to a resource that have
      multiple facts, such as `gcompute_forwarding_rule { ip_address }`
  # TODO(nelsonjr): Deprecate this function once GlobalForwardingRule can take
  # multiple resources for IPAddress so we can make it a ResourceRef (or a new
  # type that can mimic a ResourceRef to host an IP Address).
  - !ruby/object:Provider::Config::Function
    name: 'gcompute_global_address_ref'
    description: |
      Builds a reference to the global IP address associated with the Address
      managed by a `gcompute_global_address` resource.
    arguments:
      - !ruby/object:Provider::Config::Function::Argument
        name: name
        type: Api::Type::String
        description: 'the name of the address resource'
      - !ruby/object:Provider::Config::Function::Argument
        name: project
        type: Api::Type::String
        description: 'the project name where resource is allocated'
    requires:
      - puppet
    code: '"projects/#{project}/global/addresses/#{name}"'
    examples:
      - gcompute_global_address_ref('my-server', 'myproject')
    notes: |
      This function is useful for when a reference to a resource that have
      multiple facts, such as `gcompute_global_forwarding_rule { ip_address }`
  - !ruby/object:Provider::Config::Function
    name: 'gcompute_health_check_ref'
    description: |
      Builds a reference to a health check to be used in the backend service.
    arguments:
      - !ruby/object:Provider::Config::Function::Argument
        name: name
        type: Api::Type::String
        description: 'the name of the health check'
      - !ruby/object:Provider::Config::Function::Argument
        name: project_name
        type: Api::Type::String
        description: 'the name of the project that hosts the check'
    code: |
      URI.join('https://www.googleapis.com/compute/v1/',
               "projects/#{project_name}/global/healthChecks/#{name}").to_s
    examples:
      - "{{function:name}}('my-hc', 'my-project')"
  - !ruby/object:Provider::Config::Function
    name: 'gcompute_image_family'
    description: |
      Builds the family resource identifier required to uniquely identify the
      family, e.g. to create virtual machines based on it. You can use this
      function as `source_image` of a `gcompute_instance` resource.
    arguments:
      - !ruby/object:Provider::Config::Function::Argument
        name: family_name
        type: Api::Type::String
        description: 'the name of the family, e.g. ubuntu-1604-lts'
      - !ruby/object:Provider::Config::Function::Argument
        name: project_name
        type: Api::Type::String
        description: |
          the name of the project that hosts the family,
          e.g. ubuntu-os-cloud
    code: '"projects/#{project_name}/global/images/family/#{family_name}"'
    examples:
      - "{{function:name}}('ubuntu-1604-lts', 'ubuntu-os-cloud')"
      - "{{function:name}}('my-web-server', 'my-project')"
    notes: |
      Note: In the case of private images, your credentials will need to have
      the proper permissions to access the image.

      To get a list of supported families you can use the gcloud utility:

        gcloud compute images list
  - !ruby/object:Provider::Config::Function
    name: 'gcompute_target_http_proxy_ref'
    description: |
      Builds a reference to a target HTTP proxy to be used in the global
      forwarding rule.
    arguments:
      - !ruby/object:Provider::Config::Function::Argument
        name: name
        type: Api::Type::String
        description: 'the name of the proxy'
      - !ruby/object:Provider::Config::Function::Argument
        name: project_name
        type: Api::Type::String
        description: 'the name of the project that hosts the proxy'
    code: |
      URI.join('https://www.googleapis.com/compute/v1/',
               "projects/#{project_name}/global/targetHttpProxies/#{name}").to_s
    examples:
      - "{{function:name}}('my-http-proxy', 'my-project')"
bolt_tasks:
  - !ruby/object:Provider::Puppet::BoltTask
    name: 'reset'
    description: 'Resets a Google Compute Engine VM instance'
    style: :ruby
    input: :stdin
    arguments:
      - !ruby/object:Provider::Puppet::BoltTask::Argument
        name: name
        type: Api::Type::String
        description: 'The name of the instance to reset'
        required: true
      - !ruby/object:Provider::Puppet::BoltTask::Argument
        name: zone
        type: Api::Type::String
        description: 'The zone where your instance resides'
        required: true
      - !ruby/object:Provider::Puppet::BoltTask::Argument
        name: project
        type: Api::Type::String
        description: 'The project that hosts the VM instance'
        required: true
      - !ruby/object:Provider::Puppet::BoltTask::Argument
        name: credential
        type: Api::Type::String
        description: 'Path to a service account credentials file'
        required: true
    requires:
      - google/auth/gauth_credential
      - google/compute/api/gcompute_instance
    code: |
      cred = Google::Auth::GAuthCredential \
             .serviceaccount_for_function(credential, COMPUTE_ADM_SCOPES)
      instance = Google::Compute::Api::Instance.new(name, zone, project, cred)

      begin
        instance.reset
        puts({ status: 'success' }.to_json)
        exit 0
      rescue Puppet::Error => e
        puts({ status: 'failure', error: e }.to_json)
        exit 1
      end
  - !ruby/object:Provider::Puppet::BoltTask
    name: 'instance'
    description: |
      Because sometimes you just want a quick way to get (or destroy) an
      instance
    style: :puppet
    input: :stdin
    manifest: products/compute/files/tasks~instance.pp
    arguments:
      - !ruby/object:Provider::Puppet::BoltTask::Argument
        name: name
        type: Api::Type::String
        description: 'Name of the machine to create (or delete)'
        default: !ruby/object:Provider::Puppet::BoltTask::Argument::Default
          code: |
            bolt-\${inline_template('<%%= SecureRandom.hex(8) -%>')}
          display: bolt-<random>
        comment: |
          I usually can't advocate the use to inline_template but I am trying
          hard not to require someone to install stdlib to run this task because
          the gcompute modules currently does not require it.
      - !ruby/object:Provider::Puppet::BoltTask::Argument
        name: image_family
        type: Api::Type::String
        description: |
          An indication of which image family to launch the instance from
          (format: <familyname>:<organization>)
        default: centos-7:centos-cloud
      - !ruby/object:Provider::Puppet::BoltTask::Argument
        name: size_gb
        type: Api::Type::Integer
        description: The size of the VM disk (in GB)
        default: 50
      - !ruby/object:Provider::Puppet::BoltTask::Argument
        name: machine_type
        type: Api::Type::String
        description: The type of the machine to create
        default: n1-standard-1
      - !ruby/object:Provider::Puppet::BoltTask::Argument
        name: allocate_static_ip
        type: Api::Type::Boolean
        description: If true it will allocate a static IP for the machine
        default: false
      - !ruby/object:Provider::Puppet::BoltTask::Argument
        name: network_name
        type: Api::Type::String
        description: The network to connect the VM to
        default: default
      - !ruby/object:Provider::Puppet::BoltTask::Argument
        name: zone
        type: Api::Type::String
        description: The zone where your instance resides
        default: us-west1-c
      - !ruby/object:Provider::Puppet::BoltTask::Argument
        name: project
        type: Api::Type::String
        description: |
          The project you have credentials for and will houses your instance
        required: true
      - !ruby/object:Provider::Puppet::BoltTask::Argument
        name: credential
        type: Api::Type::String
        description: 'Path to a service account credentials file'
        required: true
      - !ruby/object:Provider::Puppet::BoltTask::Argument::Enum
        name: ensure
        description: |
          If you'd wish to quickly delete an instance instead of creating one
        default: present
        values:
          - :present
          - :absent
    code: |
      declare -r vm_name=$(sed -e "s/.* as '\(.*\)'.*/\1/" <<< ${success_line})
      echo "{ \"status\": \"success\", \"name\": \"${vm_name}\" }"
  - !ruby/object:Provider::Puppet::BoltTask
    name: 'snapshot'
    description: 'Create a snapshot of a Google Compute Engine Disk'
    style: :ruby
    input: :stdin
    arguments:
      - !ruby/object:Provider::Puppet::BoltTask::Argument
        name: name
        type: Api::Type::String
        description: The name of the disk to create snapshot
        required: true
      - !ruby/object:Provider::Puppet::BoltTask::Argument
        name: target
        type: Api::Type::String
        description: The name of the disk snapshot
        default: !ruby/object:Provider::Puppet::BoltTask::Argument::Default
          code: '"#{name}-#{Time.now.to_i}"'
          display: '<name>-<timestamp>'
      - !ruby/object:Provider::Puppet::BoltTask::Argument
        name: zone
        type: Api::Type::String
        description: The zone where your disk resides
        required: true
      - !ruby/object:Provider::Puppet::BoltTask::Argument
        name: project
        type: Api::Type::String
        description: The project that hosts the disk
        required: true
      - !ruby/object:Provider::Puppet::BoltTask::Argument
        name: credential
        type: Api::Type::String
        description: 'Path to a service account credentials file'
        required: true
    requires:
      - google/auth/gauth_credential
      - google/compute/api/gcompute_disk
    code: |
      cred = Google::Auth::GAuthCredential \
             .serviceaccount_for_function(credential, COMPUTE_ADM_SCOPES)
      disk = Google::Compute::Api::Disk.new(name, zone, project, cred)

      begin
        disk.snapshot(target)
        puts({ status: 'success' }.to_json)
        exit 0
      rescue Puppet::Error => e
        puts({ status: 'failure', error: e }.to_json)
        exit 1
      end
examples: !ruby/object:Api::Resource::HashArray
  Address:
    - address.pp
    - delete_address.pp
  # Autoscaler
  BackendBucket:
    - backend_bucket.pp
    - delete_backend_bucket.pp
  BackendService:
    - backend_service.pp
    - delete_backend_service.pp
  DiskType:
    - disk_type.pp
  Disk:
    - delete_disk.pp
    - disk.pp
  Firewall:
    - delete_firewall.pp
    - firewall.pp
    - firewall~change1.pp
  ForwardingRule:
    - delete_forwarding_rule.pp
    - forwarding_rule.pp
  GlobalAddress:
    - delete_global_address.pp
    - global_address.pp
  GlobalForwardingRule:
    - delete_global_forwarding_rule.pp
    - global_forwarding_rule.pp
  # GlobalOperation -- not useful for state convergence
  HealthCheck:
    - health_check.pp
    - delete_health_check.pp
  HttpHealthCheck:
    - http_health_check.pp
    - delete_http_health_check.pp
  HttpsHealthCheck:
    - https_health_check.pp
    - delete_https_health_check.pp
  # Image
  Image:
    - delete_image.pp
    - image.pp
  InstanceGroupManager:
    - delete_instance_group_manager.pp
    - instance_group_manager.pp
  InstanceGroup:
    - delete_instance_group.pp
    - instance_group.pp
  InstanceTemplate:
    - delete_instance_template.pp
    - instance_template.pp
  Instance:
    - delete_instance.pp
    - instance.pp
  # License -- useful?
  License:
    - license.pp
  MachineType:
    - machine_type.pp
  Network:
    - delete_network.pp
    - network~auto.pp
    - network~convert_to_custom.pp
    - network~custom.pp
    - network~legacy.pp
  # Project -- useful for common instance metadata in v1
  # RegionAutoscaler
  # RegionBackendService
  # RegionInstanceGroupManager
  # RegionInstanceGroup
  Region:
    - region.pp
  # Router
  Route:
    - delete_route.pp
    - route.pp
  Snapshot:
    - delete_snapshot.pp
    - snapshot.pp
  SslCertificate:
    - delete_ssl_certificate.pp
    - ssl_certificate.pp
  Subnetwork:
    - delete_subnetwork.pp
    - subnetwork.pp
  TargetHttpProxy:
    - delete_target_http_proxy.pp
    - target_http_proxy.pp
  TargetHttpsProxy:
    - delete_target_https_proxy.pp
    - target_https_proxy.pp
  # TargetInstance
  TargetPool:
    - delete_target_pool.pp
    - target_pool.pp
  TargetTcpProxy:
    - delete_target_tcp_proxy.pp
    - target_tcp_proxy.pp
  TargetSslProxy:
    - delete_target_ssl_proxy.pp
    - target_ssl_proxy.pp
  # TargetVpnGateway
  UrlMap:
    - delete_url_map.pp
    - url_map.pp
  # VpnTunnel
  # ZoneOperation -- not useful for state convergence
  Zone:
    - zone.pp
files: !ruby/object:Provider::Config::Files
  copy:
<%= indent(include('provider/puppet/common~copy.yaml'), 4) %>
    # Client-side functions require 'google/authorization'
    spec/stubs/google/authorization.rb: templates/spec_lib_stub.rb.erb
  compile:
    lib/google/compute/api/gcompute_disk.rb:
      products/compute/helpers/api_gcompute_disk.rb
    lib/google/compute/api/gcompute_instance.rb:
      products/compute/helpers/api_gcompute_instance.rb
    lib/google/object_store.rb: google/object_store.rb
    lib/puppet/functions/gcompute_task_load_params.rb:
      templates/puppet/bolt~task_load_params.rb.erb
    lib/puppet/functions/gcompute_task_validate_param.rb:
      templates/puppet/bolt~task_validate_param.rb.erb
<%= indent(include('provider/puppet/common~compile~before.yaml'), 4) %>
<%= indent(include('provider/puppet/common~compile~after.yaml'), 4) %>
<% # common~compile~after.yaml should be the last line of compile: section -%>
test_data: !ruby/object:Provider::Config::TestData
  network: !ruby/object:Api::Resource::HashArray
    Instance:
      - success1~name
      - success1~title
      - success2~name
      - success2~title
      - success3~name
      - success3~title
    InstanceTemplate:
      - success1~name
      - success1~title
      - success2~name
      - success2~title
      - success3~name
      - success3~title
tests: !ruby/object:Api::Resource::HashArray
<%= indent(include('products/compute/test.yaml'), 2) %>
style:
  - !ruby/object:Provider::Config::StyleException
    name: lib/google/compute/property/backendservice_backends.rb
    pinpoints:
      - function: initialize
        exceptions:
          - Metrics/MethodLength
  - !ruby/object:Provider::Config::StyleException
    name: lib/google/compute/property/backendservice_cache_key_policy.rb
    pinpoints:
      - function: initialize
        exceptions:
          - Metrics/MethodLength
  - !ruby/object:Provider::Config::StyleException
    name: lib/google/compute/property/image_deprecated.rb
    pinpoints:
      - function: ==
        exceptions:
          - Metrics/CyclomaticComplexity
  - !ruby/object:Provider::Config::StyleException
    name: lib/google/compute/property/instance_disks.rb
    pinpoints:
      - function: initialize
        exceptions:
          - Metrics/MethodLength
  - !ruby/object:Provider::Config::StyleException
    name: lib/google/compute/property/instance_network_interfaces.rb
    pinpoints:
      - function: initialize
        exceptions:
          - Metrics/MethodLength
  - !ruby/object:Provider::Config::StyleException
    name: lib/google/compute/property/instancegroupmanager_current_actions.rb
    pinpoints:
      - function: initialize
        exceptions:
          - Metrics/MethodLength
  - !ruby/object:Provider::Config::StyleException
    name: lib/google/compute/property/instancetemplate_disks.rb
    pinpoints:
      - function: initialize
        exceptions:
          - Metrics/MethodLength
  - !ruby/object:Provider::Config::StyleException
    name: lib/google/compute/property/instancetemplate_network_interfaces.rb
    pinpoints:
      - function: initialize
        exceptions:
          - Metrics/MethodLength
  - !ruby/object:Provider::Config::StyleException
    name: lib/google/compute/property/instancetemplate_properties.rb
    pinpoints:
      - function: initialize
        exceptions:
          - Metrics/MethodLength
      - function: to_s
        exceptions:
          - Metrics/MethodLength
  - !ruby/object:Provider::Config::StyleException
    name: lib/puppet/provider/gcompute_backend_service/google.rb
    pinpoints:
      - function: self.fetch_to_hash
        exceptions:
          - Metrics/AbcSize
          - Metrics/MethodLength
      - function: self.resource_to_hash
        exceptions:
          - Metrics/MethodLength
      - function: resource_to_request
        exceptions:
          - Metrics/MethodLength
  - !ruby/object:Provider::Config::StyleException
    name: lib/puppet/provider/gcompute_disk/google.rb
    pinpoints:
      - function: self.fetch_to_hash
        exceptions:
          - Metrics/MethodLength
      - function: self.resource_to_hash
        exceptions:
          - Metrics/MethodLength
  - !ruby/object:Provider::Config::StyleException
    name: lib/puppet/provider/gcompute_disk_type/google.rb
    pinpoints:
      - function: self.fetch_to_hash
        exceptions:
          - Metrics/MethodLength
      - function: self.resource_to_hash
        exceptions:
          - Metrics/MethodLength
  - !ruby/object:Provider::Config::StyleException
    name: lib/puppet/provider/gcompute_firewall/google.rb
    pinpoints:
      - function: self.fetch_to_hash
        exceptions:
          - Metrics/MethodLength
  - !ruby/object:Provider::Config::StyleException
    name: lib/puppet/provider/gcompute_global_forwarding_rule/google.rb
    pinpoints:
      - function: self.fetch_to_hash
        exceptions:
          - Metrics/AbcSize
          - Metrics/MethodLength
      - function: self.resource_to_hash
        exceptions:
          - Metrics/MethodLength
      - function: resource_to_request
        exceptions:
          - Metrics/MethodLength
  - !ruby/object:Provider::Config::StyleException
    name: lib/puppet/provider/gcompute_forwarding_rule/google.rb
    pinpoints:
      - function: self.fetch_to_hash
        exceptions:
          - Metrics/MethodLength
      - function: self.resource_to_hash
        exceptions:
          - Metrics/MethodLength
      - function: resource_to_request
        exceptions:
          - Metrics/MethodLength
  - !ruby/object:Provider::Config::StyleException
    name: lib/puppet/provider/gcompute_health_check/google.rb
    pinpoints:
      - function: self.fetch_to_hash
        exceptions:
          - Metrics/MethodLength
      - function: self.resource_to_hash
        exceptions:
          - Metrics/MethodLength
      - function: resource_to_request
        exceptions:
          - Metrics/MethodLength
  - !ruby/object:Provider::Config::StyleException
    name: lib/puppet/provider/gcompute_http_health_check/google.rb
    pinpoints:
      - function: self.fetch_to_hash
        exceptions:
          - Metrics/MethodLength
  - !ruby/object:Provider::Config::StyleException
    name: lib/puppet/provider/gcompute_https_health_check/google.rb
    pinpoints:
      - function: self.fetch_to_hash
        exceptions:
          - Metrics/MethodLength
  - !ruby/object:Provider::Config::StyleException
    name: lib/puppet/provider/gcompute_image/google.rb
    pinpoints:
      - function: self.fetch_to_hash
        exceptions:
          - Metrics/AbcSize
          - Metrics/MethodLength
      - function: self.resource_to_hash
        exceptions:
          - Metrics/MethodLength
      - function: resource_to_request
        exceptions:
          - Metrics/MethodLength
  - !ruby/object:Provider::Config::StyleException
    name: lib/puppet/provider/gcompute_instance/google.rb
    pinpoints:
      - function: self.fetch_to_hash
        exceptions:
          - Metrics/AbcSize
          - Metrics/MethodLength
      - function: self.resource_to_hash
        exceptions:
          - Metrics/MethodLength
      - function: resource_to_request
        exceptions:
          - Metrics/MethodLength
  - !ruby/object:Provider::Config::StyleException
    name: lib/puppet/provider/gcompute_instance_group/google.rb
    pinpoints:
      - function: self.fetch_to_hash
        exceptions:
          - Metrics/MethodLength
  - !ruby/object:Provider::Config::StyleException
    name: lib/puppet/provider/gcompute_instance_group_manager/google.rb
    pinpoints:
      - function: self.fetch_to_hash
        exceptions:
          - Metrics/MethodLength
      - function: self.resource_to_hash
        exceptions:
          - Metrics/MethodLength
  - !ruby/object:Provider::Config::StyleException
    name: lib/puppet/provider/gcompute_machine_type/google.rb
    pinpoints:
      - function: self.fetch_to_hash
        exceptions:
          - Metrics/MethodLength
      - function: self.resource_to_hash
        exceptions:
          - Metrics/MethodLength
  - !ruby/object:Provider::Config::StyleException
    name: lib/puppet/provider/gcompute_network/google.rb
    pinpoints:
      - function: self.fetch_to_hash
        exceptions:
          - Metrics/MethodLength
  - !ruby/object:Provider::Config::StyleException
    name: lib/puppet/provider/gcompute_region/google.rb
    pinpoints:
      - function: self.fetch_to_hash
        exceptions:
          - Metrics/MethodLength
  - !ruby/object:Provider::Config::StyleException
    name: lib/puppet/provider/gcompute_target_pool/google.rb
    pinpoints:
      - function: self.fetch_to_hash
        exceptions:
          - Metrics/MethodLength
  - !ruby/object:Provider::Config::StyleException
    name: lib/puppet/provider/gcompute_target_ssl_proxy/google.rb
    pinpoints:
      - function: self.fetch_to_hash
        exceptions:
          - Metrics/MethodLength
  - !ruby/object:Provider::Config::StyleException
    name: lib/puppet/provider/gcompute_url_map/google.rb
    pinpoints:
      - function: self.fetch_to_hash
        exceptions:
          - Metrics/MethodLength
  - !ruby/object:Provider::Config::StyleException
    name: spec/test_constants.rb
    pinpoints:
      - module: GoogleTests::Constants
        exceptions:
          - Metrics/ModuleLength
  - !ruby/object:Provider::Config::StyleException
    name: spec/gcompute_instance_template
    pinpoints:
      - test: InstanceTemplate > present > not_exist > success > title_eq_name > before
        exceptions:
          - Metrics/LineLength
      - test: InstanceTemplate > present > not_exist > success > title_and_name > before
        exceptions:
          - Metrics/LineLength
  - !ruby/object:Provider::Config::StyleException
    name: spec/gcompute_instance
    pinpoints:
      - test: Instance > present > not_exist > success > title_eq_name > before
        exceptions:
          - Metrics/LineLength
      - test: Instance > present > not_exist > success > title_and_name > before
        exceptions:
          - Metrics/LineLength
changelog:
  - !ruby/object:Provider::Config::Changelog
    version: '0.2.2'
    date: 2017-10-25T09:00:00-0700
    features:
      - Added support for `gcompute_snapshot` resources.
  - !ruby/object:Provider::Config::Changelog
    version: '0.2.1'
    date: 2017-10-11T15:30:00-0700
    fixes:
      - '#0001: Boolean[1] might be invalid'
  - !ruby/object:Provider::Config::Changelog
    version: '0.2.0'
    date: 2017-10-10T06:00:00-0700
    features:
      - |
        Improvements to `gcompute_instance` resource:
            * Added support for alias IP ranges in
              `network_configs { alias_ip_ranges => [ ... ] }`
            * Added support for `metadata`
            * Added support for `interface` in `disks [ { interface } ]`
            * Added support for `mode` in `disks [ { mode } ]`
            * Added support for `source_image_encryption_key` in
              `initializeParams { source_image_encryption_key }`
      - Added support for `gcompute_forwarding_rule` resources.
      - Added support for `gcompute_global_forwarding_rule` resources.
      - Added support for `gcompute_instance_group_manager` resources.
      - Added support for `gcompute_instance_template` resources.
      - Added support for `gcompute_target_pool` resources.
      - Added support for `gcompute_target_http_proxy` resources.
      - Added support for `gcompute_target_https_proxy` resources.
      - Added support for `gcompute_target_ssl_proxy` resources.
      - Added support for `gcompute_target_tcp_proxy` resources.
      - Added support for `gcompute_url_map` resources.
      - Added Bolt task `instance` to (quickly) create new a VM instance.
      - Added Bolt task `reset` to reset a VM instance.
      - Added Bolt task `snapshot` to create a Disk snapshot.
      - Added `gcompute_address_ip` client function.
      - Added `gcompute_address_ref` client function.
      - Added `gcompute_global_address_ref` client function.
      - Added `gcompute_health_check_ref` client function.
      - Added `gcompute_target_http_proxy_ref` client function.
    fixes:
      - gcompute_instance { network_interfaces { subnetwork } } now accepts a
        reference to a gcompute_subnetwork resource instead of the GCP URL of a
        subnetwork
      - Improved validation of required parameter references
  - !ruby/object:Provider::Config::Changelog
    version: '0.1.0'
    date: 2017-08-22T09:00:00-0700
    general: 'Initial release'
