# Copyright 2017 Google Inc.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

- !ruby/object:Api::Type::Time
  name: 'creationTimestamp'
  description: 'Creation timestamp in RFC3339 text format.'
  output: true
- !ruby/object:Api::Type::String
  name: 'description'
  description: |
    An optional description of this resource. Provide this property when
    you create the resource.
- !ruby/object:Api::Type::Integer
  name: 'id'
  description: 'The unique identifier for the resource.'
  output: true
# TODO(nelsonjr): Make IPAddress work as a resource reference that works
# for both Address and GlobalAddress. (and deprecate gcompute_address_ref
# function)
- !ruby/object:Api::Type::String
  name: 'IPAddress'
  description: |
    The IP address that this forwarding rule is serving on behalf of.

    Addresses are restricted based on the forwarding rule's load balancing
    scheme (EXTERNAL or INTERNAL) and scope (global or regional).

    When the load balancing scheme is EXTERNAL, for global forwarding
    rules, the address must be a global IP, and for regional forwarding
    rules, the address must live in the same region as the forwarding
    rule. If this field is empty, an ephemeral IPv4 address from the same
    scope (global or regional) will be assigned. A regional forwarding
    rule supports IPv4 only. A global forwarding rule supports either IPv4
    or IPv6.

    When the load balancing scheme is INTERNAL, this can only be an RFC
    1918 IP address belonging to the network/subnet configured for the
    forwarding rule. By default, if this field is empty, an ephemeral
    internal IP address will be automatically allocated from the IP range
    of the subnet or network configured for this forwarding rule.

    An address can be specified either by a literal IP address or a URL
    reference to an existing Address resource. The following examples are
    all valid:

    * 100.1.2.3
    * https://www.googleapis.com/compute/v1/projects/project/regions/
         region/addresses/address
    * projects/project/regions/region/addresses/address
    * regions/region/addresses/address
    * global/addresses/address
    * address
- !ruby/object:Api::Type::Enum
  name: 'IPProtocol'
  description: |
    The IP protocol to which this rule applies. Valid options are TCP,
    UDP, ESP, AH, SCTP or ICMP.

    When the load balancing scheme is INTERNAL, only TCP and UDP are
    valid.
  values:
    - :TCP
    - :UDP
    - :ESP
    - :AH
    - :SCTP
    - :ICMP
- !ruby/object:Api::Type::ResourceRef
  # TODO(https://github.com/GoogleCloudPlatform/magic-modules/issues/200)
  # After adding the RegionBackendService resource, move this field out
  # of the common fields for forwarding rules. This field should refer
  # to a RegionBackendService for a ForwardingRule and to a BackendService
  # for a GlobalForwardingRule.
  name: 'backendService'
  resource: 'BackendService'
  imports: 'selfLink'
  description: |
    A reference to a BackendService to receive the matched traffic.

    This is used for internal load balancing.
    (not used for external load balancing)
- !ruby/object:Api::Type::Enum
  name: 'ipVersion'
  description: |
    The IP Version that will be used by this forwarding rule. Valid
    options are IPV4 or IPV6. This can only be specified for a global
    forwarding rule.
  values:
    - :IPV4
    - :IPV6
- !ruby/object:Api::Type::Enum
  name: 'loadBalancingScheme'
  description: |
    This signifies what the ForwardingRule will be used for and can only
    take the following values: INTERNAL, EXTERNAL The value of INTERNAL
    means that this will be used for Internal Network Load Balancing (TCP,
    UDP). The value of EXTERNAL means that this will be used for External
    Load Balancing (HTTP(S) LB, External TCP/UDP LB, SSL Proxy)
  values:
    - :INTERNAL
    - :EXTERNAL
- !ruby/object:Api::Type::String
  name: 'name'
  description: |
    Name of the resource; provided by the client when the resource is
    created. The name must be 1-63 characters long, and comply with
    RFC1035. Specifically, the name must be 1-63 characters long and match
    the regular expression `[a-z]([-a-z0-9]*[a-z0-9])?` which means the
    first character must be a lowercase letter, and all following
    characters must be a dash, lowercase letter, or digit, except the last
    character, which cannot be a dash.
  required: true
- !ruby/object:Api::Type::ResourceRef
  name: 'network'
  resource: 'Network'
  imports: 'selfLink'
  description: |
    For internal load balancing, this field identifies the network that
    the load balanced IP should belong to for this Forwarding Rule. If
    this field is not specified, the default network will be used.

    This field is not used for external load balancing.
# TODO(nelsonjr): When implementing new types enable convering the
# manifest input from a single value to a range of form NN-NN. The API
# accepts a single value, e.g. '80', but the API stores and returns
# '80-80'. This causes idempotency false positive.
- !ruby/object:Api::Type::String
  name: 'portRange'
  description: |
    This field is used along with the target field for TargetHttpProxy,
    TargetHttpsProxy, TargetSslProxy, TargetTcpProxy, TargetVpnGateway,
    TargetPool, TargetInstance.

    Applicable only when IPProtocol is TCP, UDP, or SCTP, only packets
    addressed to ports in the specified range will be forwarded to target.
    Forwarding rules with the same [IPAddress, IPProtocol] pair must have
    disjoint port ranges.

    Some types of forwarding target have constraints on the acceptable
    ports:

    * TargetHttpProxy: 80, 8080
    * TargetHttpsProxy: 443
    * TargetTcpProxy: 25, 43, 110, 143, 195, 443, 465, 587, 700, 993, 995,
                      1883, 5222
    * TargetSslProxy: 25, 43, 110, 143, 195, 443, 465, 587, 700, 993, 995,
                      1883, 5222
    * TargetVpnGateway: 500, 4500
- !ruby/object:Api::Type::Array
  name: 'ports'
  max_size: 5
  description: |
    This field is used along with the backend_service field for internal
    load balancing.

    When the load balancing scheme is INTERNAL, a single port or a comma
    separated list of ports can be configured. Only packets addressed to
    these ports will be forwarded to the backends configured with this
    forwarding rule.

    You may specify a maximum of up to 5 ports.
  item_type: Api::Type::String
- !ruby/object:Api::Type::ResourceRef
  name: 'subnetwork'
  resource: 'Subnetwork'
  imports: 'selfLink'
  description: |
    A reference to a subnetwork.

    For internal load balancing, this field identifies the subnetwork that
    the load balanced IP should belong to for this Forwarding Rule.

    If the network specified is in auto subnet mode, this field is
    optional. However, if the network is in custom subnet mode, a
    subnetwork must be specified.

    This field is not used for external load balancing.
