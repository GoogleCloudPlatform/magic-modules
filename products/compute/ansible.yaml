# Copyright 2017 Google Inc.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

--- !ruby/object:Provider::Ansible::Config
manifest: !ruby/object:Provider::Ansible::Manifest
  metadata_version: '1.1'
  status:
    - preview
  supported_by: 'community'
  requirements:
    - python >= 2.6
    - requests >= 2.18.4
    - google-auth >= 1.3.0
  version_added: '2.6'
  author: Google Inc. (@googlecloudplatform)
# This is where custom code would be defined eventually.
datasources: !ruby/object:Provider::ResourceOverrides
  Instance: !ruby/object:Provider::Ansible::ResourceOverride
    version_added: '2.7'
  Address: !ruby/object:Provider::Ansible::ResourceOverride
    version_added: '2.7'
  Autoscaler: !ruby/object:Provider::Ansible::ResourceOverride
    exclude: true
    version_added: '2.7'
  BackendBucket: !ruby/object:Provider::Ansible::ResourceOverride
    version_added: '2.7'
  BackendService: !ruby/object:Provider::Ansible::ResourceOverride
    version_added: '2.7'
  Disk: !ruby/object:Provider::Ansible::ResourceOverride
    version_added: '2.7'
  Firewall: !ruby/object:Provider::Ansible::ResourceOverride
    version_added: '2.7'
  ForwardingRule: !ruby/object:Provider::Ansible::ResourceOverride
    version_added: '2.7'
  GlobalAddress: !ruby/object:Provider::Ansible::ResourceOverride
    version_added: '2.7'
  GlobalForwardingRule: !ruby/object:Provider::Ansible::ResourceOverride
    version_added: '2.7'
  HealthCheck: !ruby/object:Provider::Ansible::ResourceOverride
    version_added: '2.7'
  HttpHealthCheck: !ruby/object:Provider::Ansible::ResourceOverride
    version_added: '2.7'
  HttpsHealthCheck: !ruby/object:Provider::Ansible::ResourceOverride
    version_added: '2.7'
  Image: !ruby/object:Provider::Ansible::ResourceOverride
    version_added: '2.7'
  InstanceGroup: !ruby/object:Provider::Ansible::ResourceOverride
    version_added: '2.7'
  InstanceGroupManager: !ruby/object:Provider::Ansible::ResourceOverride
    version_added: '2.7'
  InstanceTemplate: !ruby/object:Provider::Ansible::ResourceOverride
    version_added: '2.7'
  InterconnectAttachment: !ruby/object:Provider::Ansible::ResourceOverride
    version_added: '2.8'
  Network: !ruby/object:Provider::Ansible::ResourceOverride
    version_added: '2.7'
  RegionAutoscaler: !ruby/object:Provider::Ansible::ResourceOverride
    exclude: true
    version_added: '2.7'
  RegionDisk: !ruby/object:Provider::Ansible::ResourceOverride
    version_added: '2.8'
  Route: !ruby/object:Provider::Ansible::ResourceOverride
    version_added: '2.7'
  Router: !ruby/object:Provider::Ansible::ResourceOverride
    version_added: '2.7'
  Snapshot: !ruby/object:Provider::Ansible::ResourceOverride
    exclude: true
    version_added: '2.7'
  SslCertificate: !ruby/object:Provider::Ansible::ResourceOverride
    version_added: '2.7'
  SslPolicy: !ruby/object:Provider::Ansible::ResourceOverride
    version_added: '2.7'
  Subnetwork: !ruby/object:Provider::Ansible::ResourceOverride
    version_added: '2.7'
  TargetPool: !ruby/object:Provider::Ansible::ResourceOverride
    version_added: '2.7'
  TargetHttpProxy: !ruby/object:Provider::Ansible::ResourceOverride
    version_added: '2.7'
  TargetHttpsProxy: !ruby/object:Provider::Ansible::ResourceOverride
    version_added: '2.7'
  TargetSslProxy: !ruby/object:Provider::Ansible::ResourceOverride
    version_added: '2.7'
  TargetTcpProxy: !ruby/object:Provider::Ansible::ResourceOverride
    version_added: '2.7'
  TargetVpnGateway: !ruby/object:Provider::Ansible::ResourceOverride
    version_added: '2.7'
  UrlMap: !ruby/object:Provider::Ansible::ResourceOverride
    version_added: '2.7'
  VpnTunnel: !ruby/object:Provider::Ansible::ResourceOverride
    version_added: '2.7'
  # Readonly resources.
  DiskType: !ruby/object:Provider::Ansible::ResourceOverride
    exclude: true
  License: !ruby/object:Provider::Ansible::ResourceOverride
    exclude: true
  MachineType: !ruby/object:Provider::Ansible::ResourceOverride
    exclude: true
  Region: !ruby/object:Provider::Ansible::ResourceOverride
    exclude: true
  RegionDiskType: !ruby/object:Provider::Ansible::ResourceOverride
    exclude: true
  Zone: !ruby/object:Provider::Ansible::ResourceOverride
    exclude: true
overrides: !ruby/object:Provider::ResourceOverrides
  Address: !ruby/object:Provider::Ansible::ResourceOverride
    properties:
      addressType: !ruby/object:Provider::Ansible::PropertyOverride
        version_added: '2.7'
      networkTier: !ruby/object:Provider::Ansible::PropertyOverride
        version_added: '2.8'
      subnetwork: !ruby/object:Provider::Ansible::PropertyOverride
        version_added: '2.7'
  BackendService: !ruby/object:Provider::Ansible::ResourceOverride
    properties:
      loadBalancingScheme: !ruby/object:Provider::Ansible::PropertyOverride
        version_added: '2.7'
      iap: !ruby/object:Provider::Ansible::PropertyOverride
        version_added: '2.7'
      timeoutSec: !ruby/object:Provider::Ansible::PropertyOverride
        aliases:
          - timeout_seconds
  Disk: !ruby/object:Provider::Ansible::ResourceOverride
    properties:
      sourceSnapshot: !ruby/object:Provider::Ansible::PropertyOverride
        description: |
          The source snapshot used to create this disk. You can provide this as
          a partial or full URL to the resource.
      labels: !ruby/object:Provider::Ansible::PropertyOverride
        version_added: '2.7'
      type: !ruby/object:Provider::Ansible::PropertyOverride
        version_added: '2.7'
  Firewall: !ruby/object:Provider::Ansible::ResourceOverride
    imports:
      - re
    provider_helpers:
      - 'products/compute/helpers/python/provider_firewall.py'
    transport: !ruby/object:Api::Resource::Transport
      encoder: encode_request
    properties:
      network: !ruby/object:Provider::Ansible::PropertyOverride
        default_value:
          selfLink: global/networks/default
      denied: !ruby/object:Provider::Ansible::PropertyOverride
        version_added: '2.8'
      destinationRanges: !ruby/object:Provider::Ansible::PropertyOverride
        version_added: '2.8'
      direction: !ruby/object:Provider::Ansible::PropertyOverride
        version_added: '2.8'
      disabled: !ruby/object:Provider::Ansible::PropertyOverride
        version_added: '2.8'
      priority: !ruby/object:Provider::Ansible::PropertyOverride
        version_added: '2.8'
      sourceServiceAccounts: !ruby/object:Provider::Ansible::PropertyOverride
        version_added: '2.8'
      targetServiceAccounts: !ruby/object:Provider::Ansible::PropertyOverride
        version_added: '2.8'
  ForwardingRule: !ruby/object:Provider::Ansible::ResourceOverride
    properties:
      networkTier: !ruby/object:Provider::Ansible::PropertyOverride
        version_added: '2.8'
      target: !ruby/object:Provider::Ansible::PropertyOverride
        version_added: '2.7'
      IPAddress:  !ruby/object:Provider::Ansible::PropertyOverride
        description: |
          The IP address that this forwarding rule is serving on behalf of.

          Addresses are restricted based on the forwarding rule's load balancing
          scheme (EXTERNAL or INTERNAL) and scope (global or regional).

          When the load balancing scheme is EXTERNAL, for global forwarding
          rules, the address must be a global IP, and for regional forwarding
          rules, the address must live in the same region as the forwarding
          rule. If this field is empty, an ephemeral IPv4 address from the same
          scope (global or regional) will be assigned. A regional forwarding
          rule supports IPv4 only. A global forwarding rule supports either IPv4
          or IPv6.

          When the load balancing scheme is INTERNAL, this can only be an RFC
          1918 IP address belonging to the network/subnet configured for the
          forwarding rule. By default, if this field is empty, an ephemeral
          internal IP address will be automatically allocated from the IP range
          of the subnet or network configured for this forwarding rule.

          An address can be specified either by a literal IP address or a URL
          reference to an existing Address resource. The following examples are
          all valid:

          * 100.1.2.3
          * https://www.googleapis.com/compute/v1/projects/project/regions/region/addresses/address
          * projects/project/regions/region/addresses/address
          * regions/region/addresses/address
          * global/addresses/address
          * address
  GlobalAddress: !ruby/object:Provider::Ansible::ResourceOverride
    properties:
      addressType: !ruby/object:Provider::Ansible::PropertyOverride
        version_added: '2.8'
  GlobalForwardingRule: !ruby/object:Provider::Ansible::ResourceOverride
    properties:
      IPAddress:  !ruby/object:Provider::Ansible::PropertyOverride
        description: |
          The IP address that this forwarding rule is serving on behalf of.

          Addresses are restricted based on the forwarding rule's load balancing
          scheme (EXTERNAL or INTERNAL) and scope (global or regional).

          When the load balancing scheme is EXTERNAL, for global forwarding
          rules, the address must be a global IP, and for regional forwarding
          rules, the address must live in the same region as the forwarding
          rule. If this field is empty, an ephemeral IPv4 address from the same
          scope (global or regional) will be assigned. A regional forwarding
          rule supports IPv4 only. A global forwarding rule supports either IPv4
          or IPv6.

          When the load balancing scheme is INTERNAL, this can only be an RFC
          1918 IP address belonging to the network/subnet configured for the
          forwarding rule. By default, if this field is empty, an ephemeral
          internal IP address will be automatically allocated from the IP range
          of the subnet or network configured for this forwarding rule.

          An address can be specified either by a literal IP address or a URL
          reference to an existing Address resource. The following examples are
          all valid:

          * 100.1.2.3
          * https://www.googleapis.com/compute/v1/projects/project/regions/region/addresses/address
          * projects/project/regions/region/addresses/address
          * regions/region/addresses/address
          * global/addresses/address
          * address
  HealthCheck: !ruby/object:Provider::Ansible::ResourceOverride
    properties:
      timeoutSec: !ruby/object:Provider::Ansible::PropertyOverride
        aliases:
          - timeout_seconds
  HttpHealthCheck: !ruby/object:Provider::Ansible::ResourceOverride
    properties:
      timeoutSec: !ruby/object:Provider::Ansible::PropertyOverride
        aliases:
          - timeout_seconds
      checkIntervalSec: !ruby/object:Provider::Ansible::PropertyOverride
        aliases:
          - check_interval_seconds
  HttpsHealthCheck: !ruby/object:Provider::Ansible::ResourceOverride
    properties:
      timeoutSec: !ruby/object:Provider::Ansible::PropertyOverride
        aliases:
          - timeout_seconds
  InstanceGroup: !ruby/object:Provider::Ansible::ResourceOverride
    properties:
      instances: !ruby/object:Provider::Ansible::PropertyOverride
        version_added: '2.8'
        exclude: false
    update: |
      instance = InstanceLogic(module)
      instance.run()
    post_action: |
      if fetch:
          instance = InstanceLogic(module)
          instance.run()
          fetch.update({'instances': instance.list_instances()})
    provider_helpers:
      - 'products/compute/helpers/python/instancegroup_instances.py'
  Instance: !ruby/object:Provider::Ansible::ResourceOverride
    post_action: |
      if fetch:
          instance = InstancePower(module, fetch.get('status'))
          instance.run()
          if module.params.get('status'):
              fetch.update({'status': module.params['status']})
    provider_helpers:
      - 'products/compute/helpers/python/provider_instance.py'
      - 'products/compute/helpers/python/instance_metadata.py'
      - 'products/compute/helpers/python/instance_start.py'
    properties:
      status: !ruby/object:Provider::Ansible::PropertyOverride
        version_added: '2.8'
  InstanceTemplate: !ruby/object:Provider::Ansible::ResourceOverride
    provider_helpers:
      - 'products/compute/helpers/python/provider_instance.py'
      - 'products/compute/helpers/python/instance_metadata.py'
  InterconnectAttachment: !ruby/object:Provider::Ansible::ResourceOverride
    version_added: '2.8'
    has_tests: false
  Network: !ruby/object:Provider::Ansible::ResourceOverride
    properties:
      routingConfig: !ruby/object:Provider::Ansible::PropertyOverride
        version_added: '2.8'
  RegionDisk: !ruby/object:Provider::Ansible::ResourceOverride
    version_added: '2.8'
    properties:
      sourceSnapshot: !ruby/object:Provider::Ansible::PropertyOverride
        description: |
          The source snapshot used to create this disk. You can provide this as
          a partial or full URL to the resource.
  Route: !ruby/object:Provider::Ansible::ResourceOverride
    properties:
      description: !ruby/object:Provider::Ansible::PropertyOverride
        version_added: '2.7'
      nextHopGateway: !ruby/object:Provider::Ansible::PropertyOverride
        description: |
          URL to a gateway that should handle matching packets.

          Currently, you can only specify the internet gateway, using a full or
          partial valid URL:

          * https://www.googleapis.com/compute/v1/projects/project/global/gateways/default-internet-gateway
          * projects/project/global/gateways/default-internet-gateway
          * global/gateways/default-internet-gateway
  Router: !ruby/object:Provider::Ansible::ResourceOverride
    version_added: '2.7'
  SslPolicy: !ruby/object:Provider::Ansible::ResourceOverride
    exclude: false
    version_added: '2.7'
  Subnetwork: !ruby/object:Provider::Ansible::ResourceOverride
    properties:
      enableFlowLogs: !ruby/object:Provider::Ansible::PropertyOverride
        version_added: '2.8'
      secondaryIpRanges: !ruby/object:Provider::Ansible::PropertyOverride
        version_added: '2.8'
  TargetPool: !ruby/object:Provider::Ansible::ResourceOverride
    provider_helpers:
      - 'products/compute/helpers/python/provider_target_pool.py'
  TargetHttpsProxy: !ruby/object:Provider::Ansible::ResourceOverride
    properties:
      quicOverride: !ruby/object:Provider::Ansible::PropertyOverride
        version_added: '2.7'
  TargetVpnGateway: !ruby/object:Provider::Ansible::ResourceOverride
    exclude: false
    version_added: '2.7'
  # Not yet implemented.
  Autoscaler: !ruby/object:Provider::Ansible::ResourceOverride
    exclude: true
  RegionAutoscaler: !ruby/object:Provider::Ansible::ResourceOverride
    exclude: true
  Snapshot: !ruby/object:Provider::Ansible::ResourceOverride
    exclude: true
  # Ansible tasks must alter infrastructure.
  # This means that virtual objects are a poor fit.
  DiskType: !ruby/object:Provider::Ansible::ResourceOverride
    exclude: true
  License: !ruby/object:Provider::Ansible::ResourceOverride
    exclude: true
  MachineType: !ruby/object:Provider::Ansible::ResourceOverride
    exclude: true
  Region: !ruby/object:Provider::Ansible::ResourceOverride
    exclude: true
  RegionDiskType: !ruby/object:Provider::Ansible::ResourceOverride
    exclude: true
  VpnTunnel: !ruby/object:Provider::Ansible::ResourceOverride
    version_added: '2.7'
    post_create: |
      labels_update(module, module.params, fetch)
  Zone: !ruby/object:Provider::Ansible::ResourceOverride
    exclude: true
files: !ruby/object:Provider::Config::Files
  compile:
<%= lines(indent(compile('provider/ansible/product~compile.yaml'), 4)) -%>
tests: !ruby/object:Api::Resource::HashArray
