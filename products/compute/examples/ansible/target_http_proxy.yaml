# Copyright 2017 Google Inc.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
--- !ruby/object:Provider::Ansible::Example
dependencies:
  - !ruby/object:Provider::Ansible::Task
    name: gcp_compute_instance_group
    register: instancegroup
    code:
      name: <%= dependency_name('instanceGroup', 'targetHttpProxy') %>
      zone: 'us-central1-a'
      project: <%= ctx[:project] %>
      auth_kind: <%= ctx[:auth_kind] %>
      service_account_file: <%= ctx[:service_account_file] %>
  - !ruby/object:Provider::Ansible::Task
    name: gcp_compute_http_health_check
    register: healthcheck
    code:
      name: <%= dependency_name('httpHealthCheck', 'targetHttpProxy') %>
      healthy_threshold: 10
      port: 8080
      timeout_sec: 2
      unhealthy_threshold: 5
      project: <%= ctx[:project] %>
      auth_kind: <%= ctx[:auth_kind] %>
      service_account_file: <%= ctx[:service_account_file] %>
  - !ruby/object:Provider::Ansible::Task
    name: gcp_compute_backend_service
    register: backendservice
    code:
      name: <%= dependency_name('backendService', 'targetHttpProxy') %>
      backends:
        - group: "{{ instancegroup.selfLink }}"
      health_checks:
        - "{{ healthcheck.selfLink }}"
      enable_cdn: true
      project: <%= ctx[:project] %>
      auth_kind: <%= ctx[:auth_kind] %>
      service_account_file: <%= ctx[:service_account_file] %>
  - !ruby/object:Provider::Ansible::Task
    name: gcp_compute_url_map
    register: urlmap
    code:
      name: <%= dependency_name('urlMap', 'targetHttpProxy') %>
      default_service: "{{ backendservice }}"
      project: <%= ctx[:project] %>
      auth_kind: <%= ctx[:auth_kind] %>
      service_account_file: <%= ctx[:service_account_file] %>
task: !ruby/object:Provider::Ansible::Task
  name: gcp_compute_target_http_proxy
  code:
    name: <%= ctx[:name] %>
    url_map: "{{ urlmap }}"
    project: <%= ctx[:project] %>
    auth_kind: <%= ctx[:auth_kind] %>
    service_account_file: <%= ctx[:service_account_file] %>
