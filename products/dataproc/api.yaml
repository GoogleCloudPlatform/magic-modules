# Copyright 2019 Google Inc.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

--- !ruby/object:Api::Product
name: Dataproc
display_name: Cloud Dataproc
versions:
  - !ruby/object:Api::Product::Version
    name: ga
    base_url: https://dataproc.googleapis.com/v1/
  - !ruby/object:Api::Product::Version
    name: beta
    base_url: https://dataproc.googleapis.com/v1beta2/
scopes:
  - https://www.googleapis.com/auth/cloud-identity
apis_required:
  - !ruby/object:Api::Product::ApiReference
    name: Cloud Dataproc API
    url: https://console.cloud.google.com/apis/library/dataproc.googleapis.com
objects:
  - !ruby/object:Api::Resource
    name: 'AutoscalingPolicy'
    base_url: "projects/{{project}}/locations/{{location}}/autoscalingPolicies"
    self_link: "projects/{{project}}/locations/{{location}}/autoscalingPolicies/{{id}}"
    min_version: beta
    description: |
      Describes an autoscaling policy for Dataproc cluster autoscaler.
    parameters:
      - !ruby/object:Api::Type::String
        name: 'location'
        url_param_only: true
        input: true
        default_value: global
        description: |
          The  location where the autoscaling poicy should reside.
          The default value is `global`.
    properties:
      - !ruby/object:Api::Type::String
        name: 'id'
        required: true
        description: |
          The policy id. The id must contain only letters (a-z, A-Z), numbers (0-9), underscores (_),
          and hyphens (-). Cannot begin or end with underscore or hyphen. Must consist of between
          3 and 50 characters.
      - !ruby/object:Api::Type::String
        name: 'name'
        output: true
        description: |
          The "resource name" of the autoscaling policy.
      - !ruby/object:Api::Type::NestedObject
        name: 'workerConfig'
        description: |
          Describes how the autoscaler will operate for primary workers.
        properties:
          - !ruby/object:Api::Type::Integer
            name: 'minInstances'
            default_value: 2
            description: |
              Minimum number of instances for this group. Bounds: [2, maxInstances]. Defaults to 2.
          - !ruby/object:Api::Type::Integer
            name: 'maxInstances'
            required: true
            description: |
              Maximum number of instances for this group.
          - !ruby/object:Api::Type::Integer
            name: 'weight'
            default_value: 1
            description: |
              Weight for the instance group, which is used to determine the fraction of total workers
              in the cluster from this instance group. For example, if primary workers have weight 2,
              and secondary workers have weight 1, the cluster will have approximately 2 primary workers
              for each secondary worker.

              The cluster may not reach the specified balance if constrained by min/max bounds or other
              autoscaling settings. For example, if maxInstances for secondary workers is 0, then only
              primary workers will be added. The cluster can also be out of balance when created.

              If weight is not set on any instance group, the cluster will default to equal weight for
              all groups: the cluster will attempt to maintain an equal number of workers in each group
              within the configured size bounds for each group. If weight is set for one group only,
              the cluster will default to zero weight on the unset group. For example if weight is set
              only on primary workers, the cluster will use primary workers only and no secondary workers.
      - !ruby/object:Api::Type::NestedObject
        name: 'secondaryWorkerConfig'
        description: |
          Describes how the autoscaler will operate for secondary workers.
        properties:
          - !ruby/object:Api::Type::Integer
            name: 'minInstances'
            at_least_one_of:
              - secondary_worker_config.0.min_instances
              - secondary_worker_config.0.max_instances
              - secondary_worker_config.0.weight
            default_value: 2
            description: |
              Minimum number of instances for this group. Bounds: [0, maxInstances]. Defaults to 0.
          - !ruby/object:Api::Type::Integer
            name: 'maxInstances'
            at_least_one_of:
              - secondary_worker_config.0.min_instances
              - secondary_worker_config.0.max_instances
              - secondary_worker_config.0.weight
            default_value: 0
            description: |
              Maximum number of instances for this group. Note that by default, clusters will not use
              secondary workers. Required for secondary workers if the minimum secondary instances is set.
              Bounds: [minInstances, ). Defaults to 0.
          - !ruby/object:Api::Type::Integer
            name: 'weight'
            at_least_one_of:
              - secondary_worker_config.0.min_instances
              - secondary_worker_config.0.max_instances
              - secondary_worker_config.0.weight
            default_value: 1
            description: |
              Weight for the instance group, which is used to determine the fraction of total workers
              in the cluster from this instance group. For example, if primary workers have weight 2,
              and secondary workers have weight 1, the cluster will have approximately 2 primary workers
              for each secondary worker.

              The cluster may not reach the specified balance if constrained by min/max bounds or other
              autoscaling settings. For example, if maxInstances for secondary workers is 0, then only
              primary workers will be added. The cluster can also be out of balance when created.

              If weight is not set on any instance group, the cluster will default to equal weight for
              all groups: the cluster will attempt to maintain an equal number of workers in each group
              within the configured size bounds for each group. If weight is set for one group only,
              the cluster will default to zero weight on the unset group. For example if weight is set
              only on primary workers, the cluster will use primary workers only and no secondary workers.
      - !ruby/object:Api::Type::NestedObject
        name: 'basicAlgorithm'
        description: |
          Basic algorithm for autoscaling.
        properties:
          - !ruby/object:Api::Type::String
            name: 'cooldownPeriod'
            default_value: "120s"
            description: |
              Duration between scaling events. A scaling period starts after the
              update operation from the previous event has completed.

              Bounds: [2m, 1d]. Default: 2m.
          - !ruby/object:Api::Type::NestedObject
            name: 'yarnConfig'
            required: true
            description: |
              YARN autoscaling configuration.
            properties:
              - !ruby/object:Api::Type::String
                name: 'gracefulDecommissionTimeout'
                required: true
                description: |
                  Timeout for YARN graceful decommissioning of Node Managers. Specifies the
                  duration to wait for jobs to complete before forcefully removing workers
                  (and potentially interrupting jobs). Only applicable to downscaling operations.

                  Bounds: [0s, 1d].
              - !ruby/object:Api::Type::Double
                name: 'scaleUpFactor'
                required: true
                description: |
                  Fraction of average pending memory in the last cooldown period for which to
                  add workers. A scale-up factor of 1.0 will result in scaling up so that there
                  is no pending memory remaining after the update (more aggressive scaling).
                  A scale-up factor closer to 0 will result in a smaller magnitude of scaling up
                  (less aggressive scaling).

                  Bounds: [0.0, 1.0].
              - !ruby/object:Api::Type::Double
                name: 'scaleDownFactor'
                required: true
                description: |
                  Fraction of average pending memory in the last cooldown period for which to
                  remove workers. A scale-down factor of 1 will result in scaling down so that there
                  is no available memory remaining after the update (more aggressive scaling).
                  A scale-down factor of 0 disables removing workers, which can be beneficial for
                  autoscaling a single job.

                  Bounds: [0.0, 1.0].
              - !ruby/object:Api::Type::Double
                name: 'scaleUpMinWorkerFraction'
                default_value: 0.0
                description: |
                  Minimum scale-up threshold as a fraction of total cluster size before scaling
                  occurs. For example, in a 20-worker cluster, a threshold of 0.1 means the autoscaler
                  must recommend at least a 2-worker scale-up for the cluster to scale. A threshold of
                  0 means the autoscaler will scale up on any recommended change.

                  Bounds: [0.0, 1.0]. Default: 0.0.
              - !ruby/object:Api::Type::Double
                name: 'scaleDownMinWorkerFraction'
                default_value: 0.0
                description: |
                  Minimum scale-down threshold as a fraction of total cluster size before scaling occurs.
                  For example, in a 20-worker cluster, a threshold of 0.1 means the autoscaler must
                  recommend at least a 2 worker scale-down for the cluster to scale. A threshold of 0
                  means the autoscaler will scale down on any recommended change.

                  Bounds: [0.0, 1.0]. Default: 0.0.
  - !ruby/object:Api::Resource
    name: 'Cluster'
    base_url: "projects/{{project}}/regions/{{region}}/clusters"
    self_link: "projects/{{project}}/regions/{{region}}/clusters/{{clusterName}}"
    description: |
      Describes an autoscaling policy for Dataproc cluster autoscaler.
    parameters:
      - !ruby/object:Api::Type::String
        name: 'region'
        url_param_only: true
        input: true
        description: |
          The region in which the cluster and associated nodes will be created in.
    properties:
      - !ruby/object:Api::Type::String
        name: 'clusterName'
        required: true
        description: |
          The name of the cluster, unique within the project and region.
      - !ruby/object:Api::Type::KeyValuePairs
        name: 'labels'
        description: |
          Labels to apply to this cluster.  A list of key->value pairs.
      - !ruby/object:Api::Type::NestedObject
        name: 'config'
        description: |
          Configuration for the cluster
        properties:
          - !ruby/object:Api::Type::String
            name: 'configBucket'
            description: |
              The Cloud Storage staging bucket used to stage files, such as Hadoop jars,
              between client machines and the cluster.
          - !ruby/object:Api::Type::NestedObject
            name: 'gceClusterConfig'
            description: |
              Common config settings for resources of Google Compute Engine cluster instances,
              applicable to all instances in the cluster.
            properties:
              - !ruby/object:Api::Type::String
                name: 'zoneUri'
                description: |
                  The zone where the Compute Engine cluster will be located
              - !ruby/object:Api::Type::String
                name: 'networkUri'
                description: |
                  The Compute Engine network to be used for machine communications
              - !ruby/object:Api::Type::String
                name: 'subnetworkUri'
                description: |
                  The Compute Engine subnetwork to be used for machine communications
              - !ruby/object:Api::Type::Boolean
                name: 'internalIpOnly'
                description: |
                  If true, all instances int he cluster will only have internal IP addresses
              - !ruby/object:Api::Type::Array
                name: 'serviceAccountScopes'
                item_type: Api::Type::String
                description: |
                  The URIs of service account scopes to be included in Compute Engine instances
                  The following base set of scopes is always included:

                  https://www.googleapis.com/auth/cloud.useraccounts.readonly

                  https://www.googleapis.com/auth/devstorage.read_write

                  https://www.googleapis.com/auth/logging.write
              - !ruby/object:Api::Type::Array
                name: 'tags'
                item_type: Api::Type::String
                description: |
                  The Compute Engine tags to add to all instances
              - !ruby/object:Api::Type::KeyValuePairs
                name: 'metadata'
                description: |
                  The map of metadata entries to add to all instances
          - !ruby/object:Api::Type::NestedObject
            name: 'masterConfig'
            description: |
              The config settings for Compute Engine resources in an instance group, such as a
              master or worker group.
            properties:
              - !ruby/object:Api::Type::Integer
                name: 'numInstances'
                description: |
                  The number of VM instances in the instance group. For master instance groups,
                  must be set to 1.
              - !ruby/object:Api::Type::Array
                name: 'instanceNames'
                output: true
                item_type: Api::Type::String
                description: |
                  The list of instance names.
              - !ruby/object:Api::Type::String
                name: 'imageUri'
                description: |
                  The Compute Engine image resource used for cluster instances.
              - !ruby/object:Api::Type::String
                name: 'machineTypeUri'
                description: |
                  The Compute Engine machine type used for cluster instances
              - !ruby/object:Api::Type::NestedObject
                name: 'diskConfig'
                description: |
                  Disk option config settings
                properties:
                  - !ruby/object:Api::Type::String
                    name: 'bootDiskType'
                    description: |
                      Type of the boot disk. Valid values are "pd-ssd" or "pd-standard"
                  - !ruby/object:Api::Type::Integer
                    name: 'bootDiskSizeGb'
                    description: |
                      Size in GB of the boot disk.
                  - !ruby/object:Api::Type::Integer
                    name: 'numLocalSsds'
                    description: |
                      Number of attached SSDs, from 0 to 4.
              - !ruby/object:Api::Type::Boolean
                name: 'isPreemptible'
                description: |
                  Specifies if this instance group contains preemptible instances.
              - !ruby/object:Api::Type::NestedObject
                name: 'managedGroupConfig'
                output: true
                description: |
                  The config for Compute Engine Instance Group Manager that manages this group.
                  This is only used for preemptible instance groups.
                properties:
                  - !ruby/object:Api::Type::String
                    name: 'instanceTemplateName'
                    description: |
                      The name of the Instance Template used for the Managed Instance Group.
                  - !ruby/object:Api::Type::String
                    name: instanceGroupManagerName
                    description: |
                      The name of the Instance Group Manager for this group
          - !ruby/object:Api::Type::NestedObject
            name: 'workerConfig'
            description: |
              The config settings for Compute Engine resources in an instance group, such as a
              master or worker group.
            properties:
              - !ruby/object:Api::Type::Integer
                name: 'numInstances'
                description: |
                  The number of VM instances in the instance group. For master instance groups,
                  must be set to 1.
              - !ruby/object:Api::Type::Array
                name: 'instanceNames'
                output: true
                item_type: Api::Type::String
                description: |
                  The list of instance names.
              - !ruby/object:Api::Type::String
                name: 'imageUri'
                description: |
                  The Compute Engine image resource used for cluster instances.
              - !ruby/object:Api::Type::String
                name: 'machineTypeUri'
                description: |
                  The Compute Engine machine type used for cluster instances
              - !ruby/object:Api::Type::NestedObject
                name: 'diskConfig'
                description: |
                  Disk option config settings
                properties:
                  - !ruby/object:Api::Type::String
                    name: 'bootDiskType'
                    description: |
                      Type of the boot disk. Valid values are "pd-ssd" or "pd-standard"
                  - !ruby/object:Api::Type::Integer
                    name: 'bootDiskSizeGb'
                    description: |
                      Size in GB of the boot disk.
                  - !ruby/object:Api::Type::Integer
                    name: 'numLocalSsds'
                    description: |
                      Number of attached SSDs, from 0 to 4.
              - !ruby/object:Api::Type::Boolean
                name: 'isPreemptible'
                description: |
                  Specifies if this instance group contains preemptible instances.
              - !ruby/object:Api::Type::NestedObject
                name: 'managedGroupConfig'
                output: true
                description: |
                  The config for Compute Engine Instance Group Manager that manages this group.
                  This is only used for preemptible instance groups.
                properties:
                  - !ruby/object:Api::Type::String
                    name: 'instanceTemplateName'
                    description: |
                      The name of the Instance Template used for the Managed Instance Group.
                  - !ruby/object:Api::Type::String
                    name: instanceGroupManagerName
                    description: |
                      The name of the Instance Group Manager for this group
          - !ruby/object:Api::Type::NestedObject
            name: 'secondaryWorkerConfig'
            description: |
              The config settings for Compute Engine resources in an instance group, such as a
              master or worker group.
            properties:
              - !ruby/object:Api::Type::Integer
                name: 'numInstances'
                description: |
                  The number of VM instances in the instance group. For master instance groups,
                  must be set to 1.
              - !ruby/object:Api::Type::Array
                name: 'instanceNames'
                output: true
                item_type: Api::Type::String
                description: |
                  The list of instance names.
              - !ruby/object:Api::Type::String
                name: 'imageUri'
                description: |
                  The Compute Engine image resource used for cluster instances.
              - !ruby/object:Api::Type::String
                name: 'machineTypeUri'
                description: |
                  The Compute Engine machine type used for cluster instances
              - !ruby/object:Api::Type::NestedObject
                name: 'diskConfig'
                description: |
                  Disk option config settings
                properties:
                  - !ruby/object:Api::Type::String
                    name: 'bootDiskType'
                    description: |
                      Type of the boot disk. Valid values are "pd-ssd" or "pd-standard"
                  - !ruby/object:Api::Type::Integer
                    name: 'bootDiskSizeGb'
                    description: |
                      Size in GB of the boot disk.
                  - !ruby/object:Api::Type::Integer
                    name: 'numLocalSsds'
                    description: |
                      Number of attached SSDs, from 0 to 4.
              - !ruby/object:Api::Type::Boolean
                name: 'isPreemptible'
                description: |
                  Specifies if this instance group contains preemptible instances.
              - !ruby/object:Api::Type::NestedObject
                name: 'managedGroupConfig'
                output: true
                description: |
                  The config for Compute Engine Instance Group Manager that manages this group.
                  This is only used for preemptible instance groups.
                properties:
                  - !ruby/object:Api::Type::String
                    name: 'instanceTemplateName'
                    description: |
                      The name of the Instance Template used for the Managed Instance Group.
                  - !ruby/object:Api::Type::String
                    name: instanceGroupManagerName
                    description: |
                      The name of the Instance Group Manager for this group
          - !ruby/object:Api::Type::NestedObject
            name: 'softwareConfig'
            description: |
              Specifies the selection and config of software inside the cluster
            properties:
              - !ruby/object:Api::Type::String
                name: 'imageVersion'
                description: |
                  The version of software inside the cluster. It must be one of the supported Cloud Dataproc
                  Versions, such as "1.2" (including a subminor version, such as "1.2.29"), or the "preview"
                  version.
              - !ruby/object:Api::Type::KeyValuePairs              
                name: 'properties'
                description: |
                  The properties to set on daemon config files.
                  Property keys are specified in the prefix:property format, for example `core:hadoop.tmp.dir`
              - !ruby/object:Api::Type::Enum
                name: 'optionalComponents'
                description: |
                  The set of optional components to activate on the cluster.

                  Possible values include: COMPONENT_UNSPECIFIED, ANACONDA, HIVE_WEBHCAT, JUPYTER, ZEPPELIN
                values:
                - :COMPONENT_UNSPECIFIED
                - :ANACONDA
                - :HIVE_WEBHCAT
                - :JUPYTER
                - :ZEPPELIN
          - !ruby/object:Api::Type::Array
            name: 'initializationActions'
            description: |
              Specifies an executable to run on a fully configured node and a timeout period for executable completion.
            item_type: !ruby/object:Api::Type::NestedObject
              properties:
                - !ruby/object:Api::Type::String
                  name: 'executableFile'
                  description: |
                    Cloud Storage URI of the executable file
                - !ruby/object:Api::Type::String
                  name: 'executionTimeout'
                  description: |
                    Amount of time executable has to complete
          - !ruby/object:Api::Type::NestedObject
            name: 'encryptionConfig'
            description: |
              Encryption settings for the cluster.
            properties:
              - !ruby/object:Api::Type::String
                name: 'gcePdKmsKeyName'
                description: |
                  The Cloud KMS key name to use for PD disk encyption for all instances in the cluster.
          - !ruby/object:Api::Type::NestedObject
            name: 'securityConfig'
            description: |
              Kerberos config holder.
            properties:
              - !ruby/object:Api::Type::NestedObject
                name: 'kerberosConfig'
                description: |
                  Kerberos related configuration.
                properties:
                  - !ruby/object:Api::Type::Boolean
                    name: 'enableKerberos'
                    description: |
                      Flag to indicate whether to Kerberize the cluster.
                  - !ruby/object:Api::Type::String
                    name: 'rootprincipalPasswordUri'
                    description: |
                      The cloud Storage URI of a KMS encrypted file containing the root principal password.
                  - !ruby/object:Api::Type::String
                    name: 'kmsKeyUri'
                    description: |
                      The uri of the KMS key used to encrypt various sensitive files.
                  - !ruby/object:Api::Type::String
                    name: 'keystoreUri'
                    description: |
                      The Cloud Storage URI of the keystore file used for SSL encryption.
                  - !ruby/object:Api::Type::String
                    name: 'truststoreUri'
                    description: |
                      The Cloud Storage URI of a KMS encrypted file containing the password to the user provided keystore.
                  - !ruby/object:Api::Type::String
                    name: 'keyPasswordUri'
                    description: |
                      The Cloud Storage URI of a KMS encrypted file containing the password to the user provided key.
                  - !ruby/object:Api::Type::String
                    name: 'truststorePasswordUri'
                    description: |
                      The Cloud Storage URI of a KMS encrypted file containing the password to the user provided truststore.
                  - !ruby/object:Api::Type::String
                    name: 'crossRealmTrustRealm'
                    description: |
                      The remote realm the Dataproc on-cluster KDC will trust, should the user enable cross realm trust.
                  - !ruby/object:Api::Type::String
                    name: 'crossRealmTrustAdminServer'
                    description: |
                      The admin server (IP or hostname) for the remote trusted realm in a cross realm trust relationship.
                  - !ruby/object:Api::Type::String
                    name: 'crossRealmTrustSharedPasswordUri'
                    description: |
                      The Cloud Storage URI of a KMS encrypted file containing the shared password between the on-cluster
                      Kerberos realm and the remote trusted realm, in a cross realm trust relationship.
                  - !ruby/object:Api::Type::String
                    name: 'kdcDbKeyUri'
                    description: |
                      The Cloud Storage URI of a KMS encrypted file containing the master key of the KDC database.
                  - !ruby/object:Api::Type::String
                    name: 'tgtLifetimeHours'
                    description: |
                      The lifetime of the ticket granting ticket, in hours.
                  - !ruby/object:Api::Type::String
                    name: 'realm'
                    description: |
                      The name of the on-cluster Kerberos realm.
