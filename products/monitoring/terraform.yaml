# Copyright 2017 Google Inc.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
--- !ruby/object:Provider::Terraform::Config
overrides: !ruby/object:Overrides::ResourceOverrides
  AlertPolicy: !ruby/object:Overrides::Terraform::ResourceOverride
    id_format: "{{name}}"
    import_format: ["{{name}}"]
    mutex: alertPolicy/{{project}}
    error_retry_predicates: ["isMonitoringRetryableError"]
    examples:
      - !ruby/object:Provider::Terraform::Examples
        # skipping tests because the API is full of race conditions
        skip_test: true
        name: "monitoring_alert_policy_basic"
        primary_resource_id: "alert_policy"
        vars:
          alert_policy_display_name: "My Alert Policy"
    custom_code: !ruby/object:Provider::Terraform::CustomCode
      custom_import: templates/terraform/custom_import/self_link_as_name.erb
      decoder: 'templates/terraform/decoders/alert_policy_removed_fields.go.erb'
      post_create: templates/terraform/post_create/set_computed_name.erb
      extra_schema_entry: templates/terraform/extra_schema_entry/alert_policy.erb

  Group: !ruby/object:Overrides::Terraform::ResourceOverride
    id_format: "{{name}}"
    import_format: ["{{name}}"]
    mutex: stackdriver/groups/{{project}}
    error_retry_predicates: ["isMonitoringRetryableError"]
    examples:
      - !ruby/object:Provider::Terraform::Examples
        name: "monitoring_group_basic"
        primary_resource_id: "basic"
        vars:
          display_name: "MonitoringGroup"
      - !ruby/object:Provider::Terraform::Examples
        name: "monitoring_group_subgroup"
        primary_resource_id: "subgroup"
        vars:
          display_name: "MonitoringParentGroup"
          display_name2: "MonitoringSubGroup"
    properties:
      parentName: !ruby/object:Overrides::Terraform::PropertyOverride
        diff_suppress_func: 'compareSelfLinkRelativePaths'
    custom_code: !ruby/object:Provider::Terraform::CustomCode
      custom_import: templates/terraform/custom_import/self_link_as_name.erb
      post_create: templates/terraform/post_create/set_computed_name.erb

  NotificationChannel: !ruby/object:Overrides::Terraform::ResourceOverride
    id_format: "{{name}}"
    import_format: ["{{name}}"]
    mutex: stackdriver/notifications/{{project}}
    error_retry_predicates: ["isMonitoringRetryableError"]
    examples:
      - !ruby/object:Provider::Terraform::Examples
        name: "notification_channel_basic"
        primary_resource_id: "basic"
        vars:
          display_name: "Test Notification Channel"
      - !ruby/object:Provider::Terraform::Examples
        name: "notification_channel_sensitive"
        primary_resource_id: "default"
        # sensitive labels will fail the import verification step.
        skip_test: true
        vars:
          display_name: "Sensitive Notification Channel test"
    custom_code: !ruby/object:Provider::Terraform::CustomCode
      resource_definition: templates/terraform/resource_definition/monitoring_notification_channel.erb
      encoder: templates/terraform/encoders/monitoring_notification_channel.go.erb
      decoder: templates/terraform/decoders/monitoring_notification_channel.go.erb
      constants: templates/terraform/constants/monitoring_notification_channel.go.erb
      custom_import: templates/terraform/custom_import/self_link_as_name.erb
      post_create: templates/terraform/post_create/set_computed_name.erb
    properties:
      sensitiveLabels: !ruby/object:Overrides::Terraform::PropertyOverride
        exclude: false
        description: |
          Different notification type behaviors are configured primarily using the the `labels` field on this
          resource. This block contains the labels which contain secrets or passwords so that they can be marked
          sensitive and hidden from plan output. The name of the field, eg: password, will be the key
          in the `labels` map in the api request.

          Credentials may not be specified in both locations and will cause an error. Changing from one location
          to a different credential configuration in the config will require an apply to update state.
      sensitiveLabels.authToken: !ruby/object:Overrides::Terraform::PropertyOverride
        sensitive: true
      sensitiveLabels.password: !ruby/object:Overrides::Terraform::PropertyOverride
        sensitive: true
      sensitiveLabels.serviceKey: !ruby/object:Overrides::Terraform::PropertyOverride
        sensitive: true
      labels: !ruby/object:Overrides::Terraform::PropertyOverride
        description: |
          Configuration fields that define the channel and its behavior. The
          permissible and required labels are specified in the
          NotificationChannelDescriptor corresponding to the type field.

          Labels with sensitive data are obfuscated by the API and therefore Terraform cannot
          determine if there are upstream changes to these fields. They can also be configured via
          the sensitive_labels block, but cannot be configured in both places.

  Service: !ruby/object:Overrides::Terraform::ResourceOverride
    legacy_name: 'google_monitoring_custom_service'
    id_format: "{{name}}"
    import_format: ["{{name}}"]
    error_retry_predicates: ["isMonitoringRetryableError"]
    properties:
      serviceId: !ruby/object:Overrides::Terraform::PropertyOverride
        api_name: 'name'
        custom_flatten: templates/terraform/custom_flatten/name_from_self_link.erb
        default_from_api: true
        validation: !ruby/object:Provider::Terraform::Validation
          regex: '^[a-z0-9\-]+$'
    examples:
      - !ruby/object:Provider::Terraform::Examples
        name: "monitoring_service_custom"
        primary_resource_id: "custom"
        vars:
          service_id: "custom-srv"
          resource_name: "//product.googleapis.com/foo/foo/services/test"
    custom_code: !ruby/object:Provider::Terraform::CustomCode
      custom_import: templates/terraform/custom_import/self_link_as_name.erb
      encoder: templates/terraform/encoders/monitoring_service.go.erb

  Slo: !ruby/object:Overrides::Terraform::ResourceOverride
    id_format: "{{name}}"
    import_format: ["{{name}}"]
    mutex: monitoring/project/{{project}}/service/{{service}}
    examples:
      - !ruby/object:Provider::Terraform::Examples
        name: "monitoring_slo_appengine"
        primary_resource_id: "appeng_slo"
        vars:
          slo_id: "ae-slo"
      - !ruby/object:Provider::Terraform::Examples
        name: "monitoring_slo_request_based"
        primary_resource_id: "request_based_slo"
        test_env_vars:
          project: :PROJECT_NAME
        vars:
          service_id: "custom-srv"
          slo_id: "consumed-api-slo"
    properties:
      rollingPeriodDays: !ruby/object:Overrides::Terraform::PropertyOverride
        api_name: rollingPeriod
        custom_flatten: templates/terraform/custom_expand/days_to_duration_string.go.erb
        custom_expand: templates/terraform/custom_flatten/duration_string_to_days.go.erb
        validation: !ruby/object:Provider::Terraform::Validation
          function: 'validation.IntBetween(1, 30)'
      sloId: !ruby/object:Overrides::Terraform::PropertyOverride
        api_name: 'name'
        custom_flatten: templates/terraform/custom_flatten/name_from_self_link.erb
        default_from_api: true
        validation: !ruby/object:Provider::Terraform::Validation
          regex: '^[a-z0-9\-]+$'
      goal: !ruby/object:Overrides::Terraform::PropertyOverride
        validation: !ruby/object:Provider::Terraform::Validation
          function: validateMonitoringSloGoal
      serviceLevelIndicator: !ruby/object:Overrides::Terraform::PropertyOverride
        flatten_object: true
      serviceLevelIndicator.basicSli.method: !ruby/object:Overrides::Terraform::PropertyOverride
        is_set: true
      serviceLevelIndicator.basicSli.location: !ruby/object:Overrides::Terraform::PropertyOverride
        is_set: true
      serviceLevelIndicator.basicSli.version: !ruby/object:Overrides::Terraform::PropertyOverride
        is_set: true
      serviceLevelIndicator.requestBasedSli: !ruby/object:Overrides::Terraform::PropertyOverride
        # Force update all nested fields to allow for unsetting values.
        update_mask_fields:
          - "serviceLevelIndicator.requestBased.goodTotalRatio.badServiceFilter"
          - "serviceLevelIndicator.requestBased.goodTotalRatio.goodServiceFilter"
          - "serviceLevelIndicator.requestBased.goodTotalRatio.totalServiceFilter"
          - "serviceLevelIndicator.requestBased.distributionCut.range.min"
          - "serviceLevelIndicator.requestBased.distributionCut.range.max"
          - "serviceLevelIndicator.requestBased.distributionCut.distributionFilter"
    custom_code: !ruby/object:Provider::Terraform::CustomCode
      constants: templates/terraform/constants/monitoring_slo.go.erb
      custom_import: templates/terraform/custom_import/self_link_as_name.erb
      encoder: templates/terraform/encoders/monitoring_slo.go.erb

  UptimeCheckConfig: !ruby/object:Overrides::Terraform::ResourceOverride
    id_format: "{{name}}"
    import_format: ["{{name}}"]
    error_retry_predicates: ["isMonitoringRetryableError"]
    examples:
      - !ruby/object:Provider::Terraform::Examples
        name: "uptime_check_config_http"
        primary_resource_id: "http"
        vars:
          display_name: "http-uptime-check"
        test_env_vars:
          project_id: :PROJECT_NAME
      - !ruby/object:Provider::Terraform::Examples
        name: "uptime_check_config_https"
        primary_resource_id: "https"
        vars:
          display_name: "https-uptime-check"
        test_env_vars:
          project_id: :PROJECT_NAME
      - !ruby/object:Provider::Terraform::Examples
        name: "uptime_check_tcp"
        primary_resource_id: "tcp_group"
        vars:
          display_name: "tcp-uptime-check"
          group_display_name: "uptime-check-group"
    custom_code: !ruby/object:Provider::Terraform::CustomCode
      custom_import: templates/terraform/custom_import/self_link_as_name.erb
      extra_schema_entry: 'templates/terraform/extra_schema_entry/monitoring_uptime_check_config_internal.go.erb'
      post_create: templates/terraform/post_create/set_computed_name.erb
    properties:
      id: !ruby/object:Overrides::Terraform::PropertyOverride
        name: uptimeCheckId
        custom_flatten: "templates/terraform/custom_flatten/id_from_name.erb"
      httpCheck.authInfo.password: !ruby/object:Overrides::Terraform::PropertyOverride
        sensitive: true
        custom_flatten: "templates/terraform/custom_flatten/uptime_check_http_password.erb"
      httpCheck.port: !ruby/object:Overrides::Terraform::PropertyOverride
        default_from_api: true
      resourceGroup.groupId: !ruby/object:Overrides::Terraform::PropertyOverride
        custom_expand: "templates/terraform/custom_expand/resource_from_self_link.go.erb"
        custom_flatten: "templates/terraform/custom_flatten/group_id_to_name.erb"

files: !ruby/object:Provider::Config::Files
  # These files have templating (ERB) code that will be run.
  # This is usually to add licensing info, autogeneration notices, etc.
  compile:
<%= lines(indent(compile('provider/terraform/product~compile.yaml'), 4)) -%>
