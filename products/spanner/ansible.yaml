# Copyright 2017 Google Inc.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

--- !ruby/object:Provider::Ansible::Config
datasources: !ruby/object:Overrides::ResourceOverrides
  Instance: !ruby/object:Overrides::Ansible::ResourceOverride
    facts: !ruby/object:Provider::Ansible::FactsOverride
      has_filters: false
  Database: !ruby/object:Overrides::Ansible::ResourceOverride
    facts: !ruby/object:Provider::Ansible::FactsOverride
      has_filters: false
  # Virtual => true objects that don't need dedicated resources.
  InstanceConfig: !ruby/object:Overrides::Ansible::ResourceOverride
    exclude: true
overrides: !ruby/object:Overrides::ResourceOverrides
  Instance: !ruby/object:Overrides::Ansible::ResourceOverride
    transport: !ruby/object:Overrides::Ansible::Transport
      decoder: decode_response
    custom_code: !ruby/object:Provider::Ansible::CustomCode
      custom_create_resource: true
      custom_update_resource: true
      update: |
        module.fail_json(msg="Spanner objects can't be updated to ensure data safety")
    provider_helpers:
      - 'products/spanner/helpers/python/instance_helpers.py.erb'
  Database: !ruby/object:Overrides::Ansible::ResourceOverride
    custom_code: !ruby/object:Provider::Ansible::CustomCode
      # Instances return partial self-link as name, but we need the name
      pre_action: |
        if 'instance' in module.params and 'name' in module.params['instance']:
          module.params['instance']['name'] = module.params['instance']['name'].split('/')[-1]
      update: |
        module.fail_json(msg="Spanner objects can't be updated to ensure data safety")
    transport: !ruby/object:Overrides::Ansible::Transport
      encoder: encode_request
      decoder: decode_response
    provider_helpers:
      - 'products/spanner/helpers/python/database_helpers.py.erb'
  # Virtual => true objects that don't need dedicated resources.
  InstanceConfig: !ruby/object:Overrides::Ansible::ResourceOverride
    transport: !ruby/object:Overrides::Ansible::Transport
      encoder: encode_request
      decoder: decode_response
    exclude: true
files: !ruby/object:Provider::Config::Files
  resource:
<%= lines(indent(compile('provider/ansible/resource~compile.yaml'), 4)) -%>
