# Copyright 2017 Google Inc.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

--- !ruby/object:Api::Product
name: Bigtable
display_name: Cloud Bigtable
versions:
  - !ruby/object:Api::Product::Version
    name: ga
    base_url: https://bigtableadmin.googleapis.com/v2/
scopes:
  - https://www.googleapis.com/auth/bigtable
apis_required:
  - !ruby/object:Api::Product::ApiReference
    name: Bigtable API
    url: https://console.cloud.google.com/apis/library/bigtable.googleapis.com/
objects:
  - !ruby/object:Api::Resource
    name: 'AppProfile'
    kind: 'bigtable#appProfile'
    base_url: projects/{{project}}/instances/{{instance}}/appProfiles?appProfileId={{app_profile_id}}
    update_url: projects/{{project}}/instances/{{instance}}/appProfiles/{{app_profile_id}}?ignoreWarnings={{ignore_warnings}}
    delete_url: projects/{{project}}/instances/{{instance}}/appProfiles/{{app_profile_id}}?ignoreWarnings={{ignore_warnings}}
    update_verb: :PATCH
    update_mask: true
    self_link: 'projects/{{project}}/instances/{{instance}}/appProfiles/{{app_profile_id}}'
    description: |
      App profile is a configuration object describing how Cloud Bigtable should treat traffic from a particular end user application.
    parameters:
      - !ruby/object:Api::Type::String
        name: 'appProfileId'
        description: 'The unique name of the app profile in the form `[_a-zA-Z0-9][-_.a-zA-Z0-9]*`.'
        required: true
        input: true
        url_param_only: true
      - !ruby/object:Api::Type::String
        name: 'instance'
        description: 'The name of the instance to create the app profile within.'
        input: true
        url_param_only: true
      - !ruby/object:Api::Type::Boolean
        name: 'ignoreWarnings'
        description: 'If true, ignore safety checks when deleting/updating the app profile.'
        default_value: false
        url_param_only: true
    properties:
      - !ruby/object:Api::Type::String
        name: 'name'
        description: 'The unique name of the requested app profile. Values are of the form `projects/<project>/instances/<instance>/appProfiles/<appProfileId>`.'
        output: true
      - !ruby/object:Api::Type::String
        name: 'description'
        description: |
          Long form description of the use case for this app profile.
      - !ruby/object:Api::Type::Boolean
        name: 'multiClusterRoutingUseAny'
        exactly_one_of:
          - single_cluster_routing
          - multi_cluster_routing_use_any
        description: |
          If true, read/write requests are routed to the nearest cluster in the instance, and will fail over to the nearest cluster that is available
          in the event of transient errors or delays. Clusters in a region are considered equidistant. Choosing this option sacrifices read-your-writes
          consistency to improve availability.
        input: true
      - !ruby/object:Api::Type::NestedObject
        name: 'singleClusterRouting'
        exactly_one_of:
          - single_cluster_routing
          - multi_cluster_routing_use_any
        description: |
          Use a single-cluster routing policy.
        input: true
        properties:
            - !ruby/object:Api::Type::String
              name: 'clusterId'
              required: true
              description: |
                The cluster to which read/write requests should be routed.
            - !ruby/object:Api::Type::Boolean
              name: 'allowTransactionalWrites'
              description: |
                If true, CheckAndMutateRow and ReadModifyWriteRow requests are allowed by this app profile.
                It is unsafe to send these requests to the same table/row/column in multiple clusters.
  - !ruby/object:Api::Resource
    name: Instance
    base_url: projects/{{project}}/instances
    description: |
      A collection of Bigtable Tables and the resources that serve them.  All
      tables in an instance are served from all Clusters in the instance.
    async: !ruby/object:Api::OpAsync
      actions: ['create']
      operation: !ruby/object:Api::OpAsync::Operation
        path: 'name'
        # TODO: change this to be less Pythonic.
        # Only Ansible uses this, so it's alright for now.
        base_url: "operations/{module.params['clusters'][0]['location']}/{{op_id}}"
        wait_ms: 1000
      result: !ruby/object:Api::OpAsync::Result
        path: 'response'
        resource_inside_response: true
      status: !ruby/object:Api::OpAsync::Status
        path: 'done'
        complete: True
        allowed:
          - True
          - False
      error: !ruby/object:Api::OpAsync::Error
        path: 'error'
        message: 'message'
    properties:
    - !ruby/object:Api::Type::Enum
      name: state
      description: The current state of the instance.
      values:
      - :STATE_NOT_KNOWN
      - :READY
      - :CREATING
      output: true
    - !ruby/object:Api::Type::String
      name: name
      description: The unique name of the instance.
    - !ruby/object:Api::Type::String
      name: displayName
      description: |
        The descriptive name for this instance as it appears in UIs.
        Can be changed at any time, but should be kept globally unique
        to avoid confusion.
    - !ruby/object:Api::Type::Enum
      name: type
      description: The type of the instance. Defaults to `PRODUCTION`.
      values:
      - :TYPE_UNSPECIFIED
      - :PRODUCTION
      - :DEVELOPMENT
    - !ruby/object:Api::Type::KeyValuePairs
      name: labels
      description: |
        Labels are a flexible and lightweight mechanism for organizing cloud
        resources into groups that reflect a customer's organizational needs and
        deployment strategies. They can be used to filter resources and aggregate
        metrics.
    - !ruby/object:Api::Type::Array
      name: clusters
      description: An array of clusters. Maximum 4.
      item_type: !ruby/object:Api::Type::NestedObject
        properties:
        - !ruby/object:Api::Type::String
          name: name
          description: The unique name of the cluster.
        - !ruby/object:Api::Type::Integer
          name: serveNodes
          description: |
            The number of nodes allocated to this cluster. More nodes enable higher
            throughput and more consistent performance.
        - !ruby/object:Api::Type::Enum
          name: defaultStorageType
          description: |
            The type of storage used by this cluster to serve its
            parent instance's tables, unless explicitly overridden.
          values:
          - :STORAGE_TYPE_UNSPECIFIED
          - :SSD
          - :HDD
        - !ruby/object:Api::Type::String
          name: location
          description: |
            The location where this cluster's nodes and storage reside. For best
            performance, clients should be located as close as possible to this
            cluster. Currently only zones are supported, so values should be of the
            form `projects/<project>/locations/<zone>`.
        - !ruby/object:Api::Type::Enum
          name: state
          description: The current state of the cluster.
          values:
          - :STATE_NOT_KNOWN
          - :READY
          - :CREATING
          - :RESIZING
          - :DISABLED
          output: true
