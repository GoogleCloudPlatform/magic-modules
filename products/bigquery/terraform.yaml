# Copyright 2019 Google Inc.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

--- !ruby/object:Provider::Terraform::Config
legacy_name: 'bigquery'
overrides: !ruby/object:Overrides::ResourceOverrides
  Dataset: !ruby/object:Overrides::Terraform::ResourceOverride
    import_format: ["projects/{{project}}/datasets/{{dataset_id}}"]
    delete_url: projects/{{project}}/datasets/{{dataset_id}}?deleteContents={{delete_contents_on_destroy}}
    # Skipping sweeper due to the abnormal delete_url
    skip_sweeper: true
    examples:
      - !ruby/object:Provider::Terraform::Examples
        name: "bigquery_dataset_basic"
        primary_resource_id: "dataset"
        vars:
          dataset_id: "example_dataset"
          account_name: "bqowner"
      - !ruby/object:Provider::Terraform::Examples
        name: "bigquery_dataset_cmek"
        skip_test: true
        primary_resource_id: "dataset"
        vars:
          dataset_id: "example_dataset"
          key_name: "example-key"
          keyring_name: "example-keyring"
    virtual_fields:
      - !ruby/object:Api::Type::Boolean
        name: 'delete_contents_on_destroy'
        default_value: false
        description: |
          If set to `true`, delete all the tables in the
          dataset when destroying the resource; otherwise,
          destroying the resource will fail if tables are present.
    properties:
      access: !ruby/object:Overrides::Terraform::PropertyOverride
        default_from_api: true
        is_set: true
      access.iamMember: !ruby/object:Overrides::Terraform::PropertyOverride
        exclude: true
      defaultTableExpirationMs: !ruby/object:Overrides::Terraform::PropertyOverride
        validation: !ruby/object:Provider::Terraform::Validation
          function: 'validateDefaultTableExpirationMs'
      datasetReference: !ruby/object:Overrides::Terraform::PropertyOverride
        flatten_object: true
      datasetReference.datasetId: !ruby/object:Overrides::Terraform::PropertyOverride
        validation: !ruby/object:Provider::Terraform::Validation
          function: 'validateDatasetId'
      datasetReference.projectId: !ruby/object:Overrides::Terraform::PropertyOverride
        exclude: true
      id: !ruby/object:Overrides::Terraform::PropertyOverride
        exclude: true
      location: !ruby/object:Overrides::Terraform::PropertyOverride
        input: true
        custom_flatten: templates/terraform/custom_flatten/bigquery_dataset_location.go.erb
      name: !ruby/object:Overrides::Terraform::PropertyOverride
        exclude: true
    custom_code: !ruby/object:Provider::Terraform::CustomCode
      constants: templates/terraform/constants/bigquery_dataset.go.erb
  DatasetAccess: !ruby/object:Overrides::Terraform::ResourceOverride
    exclude_import: true # no unique way to specify
    skip_sweeper: true  # covered by Dataset sweeper
    exclude_validator: true
    mutex: "{{dataset_id}}"
    examples:
      - !ruby/object:Provider::Terraform::Examples
        name: "bigquery_dataset_access_basic_user"
        skip_test: true  # not importable
        primary_resource_id: "access"
        vars:
          dataset_id: "example_dataset"
          account_name: "bqowner"
      - !ruby/object:Provider::Terraform::Examples
        name: "bigquery_dataset_access_view"
        skip_test: true  # not importable
        primary_resource_id: "access"
        vars:
          dataset_id: "example_dataset"
          dataset_id2: "example_dataset2"
          table_id: "example_table"
    properties:
      datasetId: !ruby/object:Overrides::Terraform::PropertyOverride
        ignore_read: true
      role: !ruby/object:Overrides::Terraform::PropertyOverride
        # Bigquery allows for two different formats for specific roles
        # (IAM vs "primitive" format), but will return the primative role in API
        # responses. We identify this fine-grained resource from a list
        # of DatasetAccess objects by comparing role, and we must use the same
        # format when comparing.
        diff_suppress_func: 'resourceBigQueryDatasetAccessRoleDiffSuppress'
        # This custom expand makes sure we are correctly
        # converting IAM roles set in state to their primitive equivalents
        # before comparison.
        custom_expand: "templates/terraform/custom_expand/bigquery_access_role.go.erb"
    custom_code: !ruby/object:Provider::Terraform::CustomCode
      constants: templates/terraform/constants/bigquery_dataset_access.go
  Job: !ruby/object:Overrides::Terraform::ResourceOverride
    import_format: ["projects/{{project}}/jobs/{{job_id}}"]
    skip_delete: true
    examples:
      - !ruby/object:Provider::Terraform::Examples
        name: "bigquery_job_query"
        primary_resource_id: "job"
        vars:
          job_id: "job_query"
          account_name: "bqowner"
        ignore_read_extra:
          - "etag"
      - !ruby/object:Provider::Terraform::Examples
        name: "bigquery_job_load"
        primary_resource_id: "job"
        vars:
          job_id: "job_load"
        ignore_read_extra:
          - "etag"
      - !ruby/object:Provider::Terraform::Examples
        name: "bigquery_job_copy"
        primary_resource_id: "job"
        vars:
          job_id: "job_copy"
          account_name: "bqowner"
          key_name: "example-key"
          keyring_name: "example-keyring"
        test_env_vars:
          project: :PROJECT_NAME
        ignore_read_extra:
          - "etag"
      - !ruby/object:Provider::Terraform::Examples
        name: "bigquery_job_extract"
        primary_resource_id: "job"
        vars:
          job_id: "job_extract"
          account_name: "bqowner"
        ignore_read_extra:
          - "etag"
    properties:
      id: !ruby/object:Overrides::Terraform::PropertyOverride
        exclude: true
      configuration: !ruby/object:Overrides::Terraform::PropertyOverride
        flatten_object: true
      configuration.load.skipLeadingRows: !ruby/object:Overrides::Terraform::PropertyOverride
        validation: !ruby/object:Provider::Terraform::Validation
          function: 'validation.IntAtLeast(0)'
      configuration.load.fieldDelimiter: !ruby/object:Overrides::Terraform::PropertyOverride
        default_from_api: true
      configuration.load.quote: !ruby/object:Overrides::Terraform::PropertyOverride
        default_from_api: true
      configuration.extract.fieldDelimiter: !ruby/object:Overrides::Terraform::PropertyOverride
        default_from_api: true
      configuration.extract.destinationFormat: !ruby/object:Overrides::Terraform::PropertyOverride
        default_from_api: true
      jobReference: !ruby/object:Overrides::Terraform::PropertyOverride
        flatten_object: true
      jobReference.projectId: !ruby/object:Overrides::Terraform::PropertyOverride
        exclude: true
    custom_code: !ruby/object:Provider::Terraform::CustomCode
      encoder: templates/terraform/encoders/bigquery_job.go.erb
  Table: !ruby/object:Overrides::Terraform::ResourceOverride
    exclude: true

# This is for copying files over
files: !ruby/object:Provider::Config::Files
  # These files have templating (ERB) code that will be run.
  # This is usually to add licensing info, autogeneration notices, etc.
  compile:
<%= lines(indent(compile('provider/terraform/product~compile.yaml'), 4)) -%>
