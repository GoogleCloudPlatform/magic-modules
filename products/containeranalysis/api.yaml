# Copyright 2018 Google Inc.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

--- !ruby/object:Api::Product
name: ContainerAnalysis
display_name: Container Registry
versions:
  - !ruby/object:Api::Product::Version
    name: ga
    base_url: https://containeranalysis.googleapis.com/v1/
  - !ruby/object:Api::Product::Version
    name: beta
    base_url: https://containeranalysis.googleapis.com/v1beta1/
scopes:
  - https://www.googleapis.com/auth/cloud-platform
objects:
  - !ruby/object:Api::Resource
    name: 'Note'
    base_url: projects/{{project}}/notes?noteId={{name}}
    self_link: projects/{{project}}/notes/{{name}}
    update_verb: :PATCH
    description: |
      Provides a detailed description of a Note.
    references: !ruby/object:Api::Resource::ReferenceLinks
      guides:
        'Official Documentation': 'https://cloud.google.com/container-analysis/'
      api: 'https://cloud.google.com/container-analysis/api/reference/rest/'
    properties:
      - !ruby/object:Api::Type::String
        name: name
        description: |
          The name of the note.
        required: true
        input: true
      - !ruby/object:Api::Type::NestedObject
        name: attestationAuthority
        description: |
          Note kind that represents a logical attestation "role" or "authority".
          For example, an organization might have one AttestationAuthority for
          "QA" and one for "build". This Note is intended to act strictly as a
          grouping mechanism for the attached Occurrences (Attestations). This
          grouping mechanism also provides a security boundary, since IAM ACLs
          gate the ability for a principle to attach an Occurrence to a given
          Note. It also provides a single point of lookup to find all attached
          Attestation Occurrences, even if they don't all live in the same
          project.
        required: true
        properties:
          - !ruby/object:Api::Type::NestedObject
            name: hint
            description: |
              This submessage provides human-readable hints about the purpose of
              the AttestationAuthority. Because the name of a Note acts as its
              resource reference, it is important to disambiguate the canonical
              name of the Note (which might be a UUID for security purposes)
              from "readable" names more suitable for debug output. Note that
              these hints should NOT be used to look up AttestationAuthorities
              in security sensitive contexts, such as when looking up
              Attestations to verify.
            required: true
            properties:
              - !ruby/object:Api::Type::String
                name: humanReadableName
                description: |
                  The human readable name of this Attestation Authority, for
                  example "qa".
                required: true
