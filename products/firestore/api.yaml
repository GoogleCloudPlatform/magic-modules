# Copyright 2019 Google Inc.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

--- !ruby/object:Api::Product
name: Firestore
versions:
  - !ruby/object:Api::Product::Version
    name: ga
    base_url: https://firestore.googleapis.com/v1/
scopes:
  - https://www.googleapis.com/auth/cloud-platform
async: !ruby/object:Api::OpAsync
  operation: !ruby/object:Api::OpAsync::Operation
    path: 'name'
    base_url: '{{op_id}}'
    wait_ms: 1000
  result: !ruby/object:Api::OpAsync::Result
    path: 'response'
    resource_inside_response: true
  status: !ruby/object:Api::OpAsync::Status
    path: 'done'
    complete: true
    allowed:
      - true
      - false
  error: !ruby/object:Api::OpAsync::Error
    path: 'error'
    message: 'message'
objects:
  - !ruby/object:Api::Resource
    name: 'Index'
    base_url: projects/{{project}}/databases/{{database}}/collectionGroups/{{collection}}/indexes
    self_link: '{{name}}'
    input: true
    description: |
      Cloud Firestore indexes enable simple and complex queries against documents in a database.
    references: !ruby/object:Api::Resource::ReferenceLinks
      guides:
        'Official Documentation': 'https://cloud.google.com/firestore/docs/query-data/indexing'
      api: 'https://cloud.google.com/firestore/docs/reference/rest/v1/projects.databases.collectionGroups.indexes'
    properties:
      - !ruby/object:Api::Type::String
        name: name
        output: true
        description: |
          A server defined name for this index. Format:
          `projects/{{project}}/databases/{{database}}/collectionGroups/{{collection}}/indexes/{{server_generated_id}}`
      - !ruby/object:Api::Type::String
        name: database
        default_value: '(default)'
        description: |
          The Firestore database id. Defaults to `"(default)"`.
      - !ruby/object:Api::Type::String
        name: collection
        required: true
        description: |
          The collection being indexed.
      - !ruby/object:Api::Type::Enum
        name: queryScope
        description: |
          The scope at which a query is run.
        default_value: :COLLECTION
        values:
          - :COLLECTION
          - :COLLECTION_GROUP
      - !ruby/object:Api::Type::Array
        name: fields
        description: |
          The fields supported by this index. The last field entry is always for
          the field path `__name__`. If, on creation, `__name__` was not
          specified as the last field, it will be added automatically with the
          same direction as that of the last field defined. If the final field
          in a composite index is not directional, the `__name__` will be
          ordered `"ASCENDING"` (unless explicitly specified otherwise).
        required: true
        # Single field indexes _exist_, but the API only lets us manage composite ones.
        min_size: 2
        item_type: !ruby/object:Api::Type::NestedObject
          properties:
            - !ruby/object:Api::Type::String
              name: 'fieldPath'
              description: |
                Name of the field.
            - !ruby/object:Api::Type::Enum
              name: 'order'
              # TODO (mbang): Exactly one of order or arrayConfig must be set
              description: |
                Indicates that this field supports ordering by the specified order or comparing using =, <, <=, >, >=.
                Only one of `order` and `arrayConfig` can be specified.
              values:
                - :ASCENDING
                - :DESCENDING
            - !ruby/object:Api::Type::Enum
              name: 'arrayConfig'
              # TODO (mbang): Exactly one of order or arrayConfig must be set
              description: |
                Indicates that this field supports operations on arrayValues. Only one of `order` and `arrayConfig` can
                be specified.
              values:
                - :CONTAINS
  - !ruby/object:Api::Resource
    name: 'Field'
    base_url: 'projects/{{project}}/databases/{{database}}/collectionGroups/{{collection}}/fields'
    self_link: 'projects/{{project}}/databases/{{database}}/collectionGroups/{{collection}}/fields/{{name}}'
    create_verb: :PATCH
    delete_verb: :PATCH
    input: true
    update_mask: true
    description: |
      Represents a single field in the database.
    references: !ruby/object:Api::Resource::ReferenceLinks
      guides:
        'Official Documentation': 'https://cloud.google.com/firestore/docs/query-data/indexing'
      api: 'https://cloud.google.com/firestore/docs/reference/rest/v1/projects.databases.collectionGroups.fields'
    properties:
      - !ruby/object:Api::Type::String
        name: database
        default_value: '(default)'
        description: |
          The Firestore database id. Defaults to `"(default)"`.
      - !ruby/object:Api::Type::String
        name: collection
        required: true
        description: |
          The collection being indexed.
      - !ruby/object:Api::Type::String
        name: name
        required: true
        description: |
          A name of the form
          `projects/{project_id}/databases/{database_id}/collectionGroups/{collectionId}/fields/{field_id}`
      - !ruby/object:Api::Type::String
        name: 'ancestorField'
        output: true
        description: |
          Output only. Specifies the resource name of the Field from which this field's index configuration is set
          (when usesAncestorConfig is true), or from which it would be set if this field had no index
          configuration (when usesAncestorConfig is false).
      - !ruby/object:Api::Type::NestedObject
        name: indexConfig
        description: |
          The index configuration for this field. If unset, field indexing will revert to the configuration defined
          by the ancestorField. To explicitly remove all indexes for this field, specify an index config with an empty
          list of indexes.
        properties:
          - !ruby/object:Api::Type::Array
            name: indexes
            description: |
              The indexes supported for this field.
            item_type: !ruby/object:Api::Type::NestedObject
              properties:
              - !ruby/object:Api::Type::Enum
                name: queryScope
                description: |
                  The scope at which a query is run. One of `"COLLECTION"` or
                  `"COLLECTION_GROUP"`. Defaults to `"COLLECTION"`.
                default_value: :COLLECTION
                values:
                  - :COLLECTION
                  - :COLLECTION_GROUP
              - !ruby/object:Api::Type::Array
                name: fields
                description: |
                  The fields supported by this index. The last field entry is always for
                  the field path `__name__`. If, on creation, `__name__` was not
                  specified as the last field, it will be added automatically with the
                  same direction as that of the last field defined. If the final field
                  in a composite index is not directional, the `__name__` will be
                  ordered `"ASCENDING"` (unless explicitly specified otherwise).
                item_type: !ruby/object:Api::Type::NestedObject
                  properties:
                    - !ruby/object:Api::Type::String
                      name: 'fieldPath'
                      description: |
                        Name of the field.
                    - !ruby/object:Api::Type::Enum
                      name: 'order'
                      # Exactly one of order or arrayConfig must be set
                      description: |
                        Indicates that this field supports ordering by the specified order or comparing using =, <, <=, >, >=.
                        Only one of `order` and `arrayConfig` can be specified.
                      values:
                        - :ASCENDING
                        - :DESCENDING
                    - !ruby/object:Api::Type::Enum
                      name: 'arrayConfig'
                      # Exactly one of order or arrayConfig must be set
                      description: |
                        Indicates that this field supports operations on arrayValues. Only one of `order` and `arrayConfig` can
                        be specified.
                      values:
                          - :CONTAINS