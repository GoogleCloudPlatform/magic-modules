# Copyright 2017 Google Inc.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

--- !ruby/object:Provider::Ansible::Config
# This is where custom code would be defined eventually.
datasources: !ruby/object:Overrides::ResourceOverrides
  Project: !ruby/object:Overrides::Ansible::ResourceOverride
    exclude: true
  ResourceRecordSet: !ruby/object:Overrides::Ansible::ResourceOverride
    facts: !ruby/object:Provider::Ansible::FactsOverride
      has_filters: false
      test: !ruby/object:Provider::Ansible::AnsibleFactsTestInformation
        exists: |
          "'www.testzone-4.com.'in \"{{ results['resources'] | map(attribute='name') | list }}\""
        does_not_exist: |
          "'www.testzone-4.com.'not in \"{{ results['resources'] | map(attribute='name') | list }}\""
    base_url: "projects/{{project}}/managedZones/{{managed_zone}}/rrsets"
  ManagedZone: !ruby/object:Overrides::Ansible::ResourceOverride
    facts: !ruby/object:Provider::Ansible::FactsOverride
      filter: !ruby/object:Provider::Ansible::FilterProp
        name: dnsName
        description: Restricts the list to return only zones with this domain name.
      query_options: false
      filter_api_param: dnsName
overrides: !ruby/object:Overrides::ResourceOverrides
  ResourceRecordSet: !ruby/object:Overrides::Ansible::ResourceOverride
    access_api_results: true
    imports:
      - copy
      - datetime
      - time
    custom_code: !ruby/object:Provider::Ansible::CustomCode
      pre_action: |
        if 'dnsName' not in module.params.get('managed_zone') or 'name' not in module.params.get('managed_zone'):
          module.fail_json(msg="managed_zone dictionary must contain both the name of the zone and the dns name of the zone")
      create: |
        change = create_change(None, updated_record(module), module)
        change_id = int(change['id'])
        if change['status'] == 'pending':
            wait_for_change_to_complete(change_id, module)
        return fetch_wrapped_resource(module, 'dns#resourceRecordSet',
                                      'dns#resourceRecordSetsListResponse',
                                      'rrsets')
      delete: |
        change = create_change(fetch, None, module)
        change_id = int(change['id'])
        if change['status'] == 'pending':
            wait_for_change_to_complete(change_id, module)
        return fetch_wrapped_resource(module, 'dns#resourceRecordSet',
                                      'dns#resourceRecordSetsListResponse',
                                      'rrsets')
      update: |
        change = create_change(fetch, updated_record(module), module)
        change_id = int(change['id'])
        if change['status'] == 'pending':
            wait_for_change_to_complete(change_id, module)
        return fetch_wrapped_resource(module, 'dns#resourceRecordSet',
                                      'dns#resourceRecordSetsListResponse',
                                      'rrsets')
    provider_helpers:
      - 'products/dns/helpers/ansible/provider_resource_set.py.erb'
    hidden:
      - unwrap_resource
      - resource_to_request
      - return_if_object
    properties:
      managed_zone: !ruby/object:Overrides::Ansible::PropertyOverride
        description: |
          Identifies the managed zone addressed by this request. This must be a dictionary that
          contains both a 'name' key and a 'dnsName' key. You can pass in the results of the
          gcp_dns_managed_zone module, which will contain both.
        contain_extra_docs: false
  Project: !ruby/object:Overrides::Ansible::ResourceOverride
    # TODO(alexstephen): Re-evaluate merging Project into Ansible
    exclude: true
files: !ruby/object:Provider::Config::Files
  resource:
<%= lines(indent(compile('provider/ansible/resource~compile.yaml'), 4)) -%>
