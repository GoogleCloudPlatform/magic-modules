# Copyright 2017 Google Inc.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

--- !ruby/object:Provider::Chef::Config
manifest: !ruby/object:Provider::Chef::Manifest
  version: '0.2.0'
  source: 'https://github.com/GoogleCloudPlatform/chef-google-sql'
  issues: 'https://github.com/GoogleCloudPlatform/chef-google-sql/issues'
  summary: 'A Chef cookbook to manage Google Cloud Compute resources'
  description: |
    This cookbook provides the built-in types and services for Chef to manage
    Google Cloud Compute resources, as native Chef types.
  depends:
    - !ruby/object:Provider::Config::Requirements
      name: 'google-gauth'
      versions: '< 0.2.0'
  operating_systems:
<%= indent(include('provider/chef/common~operating_systems.yaml'), 4) %>
overrides: !ruby/object:Provider::ResourceOverrides
  Database: !ruby/object:Provider::Chef::ResourceOverride
    handlers: !ruby/object:Provider::Chef::Handlers
      # TODO(nelsonjr): Once bugs in the body are resolved remove this override.
      return_if_object: |
        # rubocop:disable Metrics/CyclomaticComplexity
        def self.return_if_object(response, kind)
          raise "Bad response: #{response}" \
            unless response.is_a?(Net::HTTPResponse)
          return if response.is_a?(Net::HTTPNotFound)
          return if response.is_a?(Net::HTTPNoContent)
          # TODO(nelsonjr): Remove return of Net::HTTPForbidden from
          # return_if_object once Cloud SQL bug http://b/62635365 is resolved.
          # Currently the API returns 403 for objects that do not exist, even
          # when the user has access to the project. This is being changed to
          # return 404 as it is supposed to be.
          # Once 404 is the correct response, the temporary workaround should
          # be removed.
          return if response.is_a?(Net::HTTPForbidden)
          result = JSON.parse(response.body)
          raise_if_errors result, %w[error errors], 'message'
          raise "Bad response: #{response}" unless response.is_a?(Net::HTTPOK)
          # TODO(nelsonjr): Revert this check back to standard once Cloud SQL
          # bug http://b/62841551 is resolved.
          # Currently the sql#operation#targetLink for create returns a
          # sql#database while for a delete it returns a sql#instance.
          # | raise "Incorrect result: #{result['kind']} (expecting #{kind})" \
          # |   unless result['kind'] == kind
          raise "Incorrect result: #{result['kind']} (expecting #{kind})" \
            unless [kind, 'sql#instance'].include?(result['kind'])
          result
        end
        # rubocop:enable Metrics/CyclomaticComplexity

        def return_if_object(response, kind)
          self.class.return_if_object(response, kind)
        end
  Flag: !ruby/object:Provider::Chef::ResourceOverride
    handlers: !ruby/object:Provider::Chef::Handlers
      update: raise('Cloud SQL flag does not match expectations.')
  Instance: !ruby/object:Provider::Chef::ResourceOverride
    handlers: !ruby/object:Provider::Chef::Handlers
      # TODO(nelsonjr): Once bugs in the body are resolved remove this override.
      return_if_object: |
        # rubocop:disable Metrics/CyclomaticComplexity
        def self.return_if_object(response, kind)
          raise "Bad response: #{response}" \
            unless response.is_a?(Net::HTTPResponse)
          return if response.is_a?(Net::HTTPNotFound)
          return if response.is_a?(Net::HTTPNoContent)
          # TODO(nelsonjr): Remove return of Net::HTTPForbidden from
          # return_if_object once Cloud SQL bug http://b/62635365 is resolved.
          # Currently the API returns 403 for objects that do not exist, even
          # when the user has access to the project. This is being changed to
          # return 404 as it is supposed to be.
          # Once 404 is the correct response, the temporary workaround should
          # be removed.
          return if response.is_a?(Net::HTTPForbidden)
          result = JSON.parse(response.body)
          raise_if_errors result, %w[error errors], 'message'
          raise "Bad response: #{response}" unless response.is_a?(Net::HTTPOK)
          raise "Incorrect result: #{result['kind']} (expecting #{kind})" \
            unless result['kind'] == kind
          result
        end
        # rubocop:enable Metrics/CyclomaticComplexity

        def return_if_object(response, kind)
          self.class.return_if_object(response, kind)
        end
      resource_to_request_patch: |
        unless @__fetched.nil?
          # Convert to pure JSON
          request = JSON.parse(request.to_json)
          request['settings']['settingsVersion'] =
            @__fetched['settings']['settingsVersion']
        end
  SslCert: !ruby/object:Provider::Chef::ResourceOverride
    handlers: !ruby/object:Provider::Chef::Handlers
      update: raise('Cloud SQL SSL certificate mismatch.')
  Tier: !ruby/object:Provider::Chef::ResourceOverride
    handlers: !ruby/object:Provider::Chef::Handlers
      update: raise('Cloud SQL tier does not match expectations.')
examples: !ruby/object:Api::Resource::HashArray
  Database:
    - database.rb
    - delete_database.rb
  Flag:
    - flag.rb
  Instance:
    - instance.rb
    - instance~postgres.rb
    - delete_instance.rb
  SslCert:
    - ssl_cert.rb
  Tier:
    - tier.rb
  User:
    - user.rb
    - delete_user.rb
files: !ruby/object:Provider::Config::Files
  copy:
<%= indent(include('provider/chef/common~copy.yaml'), 4) %>
  compile:
    lib/google/object_store.rb: google/object_store.rb
<%= indent(include('provider/chef/common~compile~before.yaml'), 4) %>
<%= indent(include('provider/chef/common~compile~after.yaml'), 4) %>
<% # common~compile~after.yaml should be the last line of compile: section -%>
test_data: !ruby/object:Provider::Config::TestData
  network: !ruby/object:Api::Resource::HashArray
    User:
      - success1~name
      - success1~title
      - success2~name
      - success2~title
      - success3~name
      - success3~title
style:
  - !ruby/object:Provider::Config::StyleException
    name: libraries/google/sql/property/instance_mysql_replica_configuration.rb
    pinpoints:
      - function: initialize
        exceptions:
          - Metrics/MethodLength
      - function: compare_fields
        exceptions:
          - Metrics/MethodLength
  - !ruby/object:Provider::Config::StyleException
    name: resources/instance.rb
    pinpoints:
      - class: Google::GSQL::Instance
        exceptions:
          - Metrics/ClassLength
      - function: resource_to_request
        exceptions:
          - Metrics/MethodLength
          - Metrics/AbcSize
      - function: self.resource_to_hash
        exceptions:
          - Metrics/MethodLength
  - !ruby/object:Provider::Config::StyleException
    name: resources/database.rb
    pinpoints:
      - class: Google::GSQL::Database
        exceptions:
          - Metrics/ClassLength
  - !ruby/object:Provider::Config::StyleException
    name: resources/ssl_cert.rb
    pinpoints:
      - class: Google::GSQL::SslCert
        exceptions:
          - Metrics/ClassLength
  - !ruby/object:Provider::Config::StyleException
    name: resources/flag.rb
    pinpoints:
      - class: Google::GSQL::Flag
        exceptions:
          - Metrics/ClassLength
  - !ruby/object:Provider::Config::StyleException
    name: resources/tier.rb
    pinpoints:
      - class: Google::GSQL::Tier
        exceptions:
          - Metrics/ClassLength
  - !ruby/object:Provider::Config::StyleException
    name: resources/user.rb
    pinpoints:
      - class: Google::GSQL::User
        exceptions:
          - Metrics/ClassLength
  - !ruby/object:Provider::Config::StyleException
    name: spec/gsql_instance
    pinpoints:
      - test: Instance > present > not_exist > success > title_eq_name > before
        exceptions:
          - Metrics/LineLength
  - !ruby/object:Provider::Config::StyleException
    name: spec/gsql_instance
    pinpoints:
      - test: Instance > present > not_exist > success > title_and_name > before
        exceptions:
          - Metrics/LineLength
changelog:
  - !ruby/object:Provider::Config::Changelog
    version: '0.2.0'
    date: 2017-10-19T09:00:00-0700
    features:
      - Added PostgreSQL support.
  - !ruby/object:Provider::Config::Changelog
    version: '0.1.0'
    date: 2017-10-04T10:00:00-0700
    general: 'Initial release'
