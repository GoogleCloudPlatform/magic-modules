# Copyright 2019 Google Inc.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

--- !ruby/object:Api::Product
name: CloudRun
display_name: Cloud Run
versions:
  - !ruby/object:Api::Product::Version
    name: beta
    base_url: https://run.googleapis.com/v1alpha1/
scopes:
  - https://www.googleapis.com/auth/cloud-platform
objects:
# Cloud Run DomainMappings
- !ruby/object:Api::Resource
  name: DomainMapping
  kind: DomainMapping
  base_url: projects/{{project}}/locations/{{location}}/domainmappings
  references: !ruby/object:Api::Resource::ReferenceLinks
      guides:
        'Official Documentation':
          'https://cloud.google.com/run/docs/mapping-custom-domains'
      api: 'https://cloud.google.com/run/docs/reference/rest/v1alpha1/projects.locations.domainmappings'
  description: |-
    Resource to hold the state and status of a user's domain mapping.

    **Note:** Cloud Run as a product is in beta, however the REST API is currently still an alpha.
    Please use this with caution as it may change when the API moves to beta.
  parameters:
  - !ruby/object:Api::Type::String
    name: location
    description: The location of the cloud run instance. eg us-central1
    url_param_only: true
    required: true
  properties:
  - !ruby/object:Api::Type::String
    name: name
    url_param_only: true
    input: true
    # This is a convenience field handled by terraform encoder/decoders
    exclude: true
    description: |-
      Name should be a verified domain
  - !ruby/object:Api::Type::String
    name: kind
    description: This is always set to DomainMapping
  - !ruby/object:Api::Type::NestedObject
    name: status
    description: The current status of the DomainMapping.
    output: true
    properties:
    - !ruby/object:Api::Type::Array
      name: conditions
      description: |-
        Array of observed DomainMappingConditions, indicating the current state
        of the DomainMapping.
      output: true
      item_type: !ruby/object:Api::Type::NestedObject
        properties:
        - !ruby/object:Api::Type::String
          name: message
          output: true
          description: |-
            Human readable message indicating details about the current status.
        - !ruby/object:Api::Type::String
          name: status
          output: true
          description: Status of the condition, one of True, False, Unknown.
        - !ruby/object:Api::Type::String
          name: reason
          output: true
          description: |-
            One-word CamelCase reason for the condition's current status.
        - !ruby/object:Api::Type::String
          name: type
          output: true
          description: Type of domain mapping condition.
    - !ruby/object:Api::Type::Integer
      name: observedGeneration
      description: |-
        ObservedGeneration is the 'Generation' of the DomainMapping that
        was last processed by the controller.
      output: true
    - !ruby/object:Api::Type::Array
      name: resourceRecords
      description: |-
        The resource records required to configure this domain mapping. These
        records must be added to the domain's DNS configuration in order to
        serve the application via this domain mapping.
      item_type: !ruby/object:Api::Type::NestedObject
        properties:
        - !ruby/object:Api::Type::Enum
          name: type
          description: 'Resource record type. Example: `AAAA`.'
          values:
          - :A
          - :AAAA
          - :CNAME
        - !ruby/object:Api::Type::String
          name: rrdata
          description: |-
            Data for this record. Values vary by record type, as defined in RFC 1035
            (section 5) and RFC 1034 (section 3.6.1).
        - !ruby/object:Api::Type::String
          name: name
          output: true
          description: |-
            Relative name of the object affected by this record. Only applicable for
            `CNAME` records. Example: 'www'.
    - !ruby/object:Api::Type::String
      name: mappedRouteName
      output: true
      description: The name of the route that the mapping currently points to.
  - !ruby/object:Api::Type::String
    name: apiVersion
    description: The API version for this call such as "serving.knative.dev/v1alpha1".
  - !ruby/object:Api::Type::NestedObject
    name: spec
    description: The spec for this DomainMapping.
    required: true
    properties:
    - !ruby/object:Api::Type::Boolean
      name: forceOverride
      description: |-
        If set, the mapping will override any mapping set before this spec was set.
        It is recommended that the user leaves this empty to receive an error
        warning about a potential conflict and only set it once the respective UI
        has given such a warning.
    - !ruby/object:Api::Type::String
      name: routeName
      required: true
      description: |-
        The name of the Cloud Run Service that this DomainMapping applies to.
        The route must exist.
    - !ruby/object:Api::Type::Enum
      name: certificateMode
      description: The mode of the certificate.
      values:
      - :NONE
      - :AUTOMATIC
  - !ruby/object:Api::Type::NestedObject
    name: metadata
    required: true
    description: Metadata associated with this DomainMapping.
    properties:
    - !ruby/object:Api::Type::KeyValuePairs
      name: labels
      description: |-
        Map of string keys and values that can be used to organize and categorize
        (scope and select) objects. May match selectors of replication controllers
        and routes.
        More info: http://kubernetes.io/docs/user-guide/labels
    - !ruby/object:Api::Type::Integer
      name: generation
      description: |-
        A sequence number representing a specific generation of the desired state.
      output: true
    - !ruby/object:Api::Type::String
      name: resourceVersion
      description: |-
        An opaque value that represents the internal version of this object that
        can be used by clients to determine when objects have changed. May be used
        for optimistic concurrency, change detection, and the watch operation on a
        resource or set of resources. They may only be valid for a
        particular resource or set of resources.

        More info:
        https://git.k8s.io/community/contributors/devel/api-conventions.md#concurrency-control-and-consistency
      output: true
    - !ruby/object:Api::Type::String
      name: selfLink
      description: |-
        SelfLink is a URL representing this object.
      output: true
    - !ruby/object:Api::Type::String
      name: uid
      description: |-
        UID is a unique id generated by the server on successful creation of a resource and is not
        allowed to change on PUT operations.

        More info: http://kubernetes.io/docs/user-guide/identifiers#uids
      output: true
    - !ruby/object:Api::Type::String
      name: namespace
      required: true
      description: |-
        In Cloud Run the namespace must be equal to either the
        project ID or project number.
    - !ruby/object:Api::Type::KeyValuePairs
      name: annotations
      description: |-
        Annotations is a key value map stored with a resource that
        may be set by external tools to store and retrieve arbitrary metadata. More
        info: http://kubernetes.io/docs/user-guide/annotations
    - !ruby/object:Api::Type::String
      name: name
      required: true
      input: true
      description: |-
        Name must be unique within a namespace, within a Cloud Run region.
        Is required when creating resources. Name is primarily intended
        for creation idempotence and configuration definition. Cannot be updated.
        More info: http://kubernetes.io/docs/user-guide/identifiers#names



# Cloud Run Service
- !ruby/object:Api::Resource
  name: Service
  kind: Service
  base_url: projects/{{project}}/locations/{{location}}/services
  references: !ruby/object:Api::Resource::ReferenceLinks
      guides:
        'Official Documentation':
          'https://cloud.google.com/run/docs/'
      api: 'https://cloud.google.com/run/docs/reference/rest/v1alpha1/projects.locations.services'
  description: |-
    **Note:** Cloud Run as a product is in beta, however the REST API is currently still an alpha.
    Please use this with caution as it may change when the API moves to beta.

    Service acts as a top-level container that manages a set of Routes and
    Configurations which implement a network service. Service exists to provide a
    singular abstraction which can be access controlled, reasoned about, and
    which encapsulates software lifecycle decisions such as rollout policy and
    team resource ownership. Service acts only as an orchestrator of the
    underlying Routes and Configurations (much as a kubernetes Deployment
    orchestrates ReplicaSets).

    The Service's controller will track the statuses of its owned Configuration
    and Route, reflecting their statuses and conditions as its own.

    See also:
    https://github.com/knative/serving/blob/master/docs/spec/overview.md#service
  parameters:
  - !ruby/object:Api::Type::String
    name: location
    description: The location of the cloud run instance. eg us-central1
    url_param_only: true
    required: true
  properties:
  - !ruby/object:Api::Type::String
    name: name
    url_param_only: true
    input: true
    # This is a convenience field handled by terraform
    exclude: true
    description: |-
      Name must be unique within a namespace, within a Cloud Run region.
      Is required when creating resources. Name is primarily intended
      for creation idempotence and configuration definition. Cannot be updated.
      More info: http://kubernetes.io/docs/user-guide/identifiers#names
  - !ruby/object:Api::Type::String
    name: apiVersion
    description: The API version for this call such as "serving.knative.dev/v1alpha1".
  - !ruby/object:Api::Type::String
    name: kind
    description: This is always set to Service
  - !ruby/object:Api::Type::NestedObject
    name: spec
    required: true
    description: Spec holds the desired state of the Service (from the client).
    properties:
    - !ruby/object:Api::Type::NestedObject
      name: template
      required: true
      description: |-
        template holds the latest specification for the Revision to
        be stamped out. The template references the container image, and may also
        include labels and annotations that should be attached to the Revision.
        To correlate a Revision, and/or to force a Revision to be created when the
        spec doesn't otherwise change, a nonce label may be provided in the
        template metadata. For more details, see:
        https://github.com/knative/serving/blob/master/docs/client-conventions.md#associate-modifications-with-revisions

        Cloud Run does not currently support referencing a build that is
        responsible for materializing the container image from source.
      properties:
      - !ruby/object:Api::Type::NestedObject
        name: spec
        required: true
        description: RevisionSpec holds the desired state of the Revision (from
          the client).
        properties:
        - !ruby/object:Api::Type::Array
          name: containers
          update_verb: :PUT
          required: true
          description: |-
            Container defines the unit of execution for this Revision.
            In the context of a Revision, we disallow a number of the fields of
            this Container, including: name, ports, and volumeMounts.
            The runtime contract is documented here:
            https://github.com/knative/serving/blob/master/docs/runtime-contract.md
          item_type: !ruby/object:Api::Type::NestedObject
            properties:
            - !ruby/object:Api::Type::String
              name: workingDir
              input: true
              description: |-
                Container's working directory.
                If not specified, the container runtime's default will be used, which
                might be configured in the container image.
            - !ruby/object:Api::Type::Array
              name: args
              input: true
              description: |-
                Arguments to the entrypoint.
                The docker image's CMD is used if this is not provided.
                Variable references $(VAR_NAME) are expanded using the container's
                environment. If a variable cannot be resolved, the reference in the input
                string will be unchanged. The $(VAR_NAME) syntax can be escaped with a
                double $$, ie: $$(VAR_NAME). Escaped references will never be expanded,
                regardless of whether the variable exists or not.
                More info:
                https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell
              item_type: Api::Type::String
            - !ruby/object:Api::Type::Array
              name: envFrom
              input: true
              description: |-
                List of sources to populate environment variables in the container.
                All invalid keys will be reported as an event when the container is starting.
                When a key exists in multiple sources, the value associated with the last source will
                take precedence. Values defined by an Env with a duplicate key will take
                precedence.
              item_type: !ruby/object:Api::Type::NestedObject
                properties:
                - !ruby/object:Api::Type::String
                  name: prefix
                  description: |-
                    An optional identifier to prepend to each key in the ConfigMap.
                - !ruby/object:Api::Type::NestedObject
                  name: configMapRef
                  description: |-
                    The ConfigMap to select from.
                  properties:
                  - !ruby/object:Api::Type::Boolean
                    name: optional
                    description: |-
                      Specify whether the ConfigMap must be defined
                  - !ruby/object:Api::Type::NestedObject
                    name: localObjectReference
                    description: The ConfigMap to select from.
                    properties:
                    - !ruby/object:Api::Type::String
                      name: name
                      required: true
                      description: |-
                        Name of the referent.
                        More info:
                        https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                - !ruby/object:Api::Type::NestedObject
                  name: secretRef
                  description: |-
                    The Secret to select from.
                  properties:
                  - !ruby/object:Api::Type::NestedObject
                    name: localObjectReference
                    description: The Secret to select from.
                    properties:
                    - !ruby/object:Api::Type::String
                      name: name
                      required: true
                      description: |-
                        Name of the referent.
                        More info:
                        https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                  - !ruby/object:Api::Type::Boolean
                    name: optional
                    description: |-
                      Specify whether the Secret must be defined
            - !ruby/object:Api::Type::String
              name: image
              required: true
              description: |-
                Docker image name. This is most often a reference to a container located
                in the container registry, such as gcr.io/cloudrun/hello
                More info: https://kubernetes.io/docs/concepts/containers/images
            - !ruby/object:Api::Type::Array
              name: command
              input: true
              description: |-
                Entrypoint array. Not executed within a shell.
                The docker image's ENTRYPOINT is used if this is not provided.
                Variable references $(VAR_NAME) are expanded using the container's
                environment. If a variable cannot be resolved, the reference in the input
                string will be unchanged. The $(VAR_NAME) syntax can be escaped with a
                double $$, ie: $$(VAR_NAME). Escaped references will never be expanded,
                regardless of whether the variable exists or not.
                More info:
                https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell
              item_type: Api::Type::String
            - !ruby/object:Api::Type::Array
              name: env
              input: true
              description: |-
                List of environment variables to set in the container.
              item_type: !ruby/object:Api::Type::NestedObject
                properties:
                - !ruby/object:Api::Type::String
                  name: name
                  description: Name of the environment variable.
                - !ruby/object:Api::Type::String
                  name: value
                  description: |-
                    Variable references $(VAR_NAME) are expanded
                    using the previous defined environment variables in the container and
                    any route environment variables. If a variable cannot be resolved,
                    the reference in the input string will be unchanged. The $(VAR_NAME)
                    syntax can be escaped with a double $$, ie: $$(VAR_NAME). Escaped
                    references will never be expanded, regardless of whether the variable
                    exists or not.
                    Defaults to "".
            - !ruby/object:Api::Type::NestedObject
              name: resources
              description: |-
                Compute Resources required by this container. Used to set values such as max memory
                More info:
                https://kubernetes.io/docs/concepts/storage/persistent-volumes#resources
              properties:
              - !ruby/object:Api::Type::KeyValuePairs
                name: limits
                description: |-
                  Limits describes the maximum amount of compute resources allowed.
                  The values of the map is string form of the 'quantity' k8s type:
                  https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/apimachinery/pkg/api/resource/quantity.go
              - !ruby/object:Api::Type::KeyValuePairs
                name: requests
                description: |-
                  Requests describes the minimum amount of compute resources required.
                  If Requests is omitted for a container, it defaults to Limits if that is
                  explicitly specified, otherwise to an implementation-defined value.
                  The values of the map is string form of the 'quantity' k8s type:
                  https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/apimachinery/pkg/api/resource/quantity.go


        - !ruby/object:Api::Type::Integer
          name: containerConcurrency
          description: |-
            ContainerConcurrency specifies the maximum allowed in-flight (concurrent)
            requests per container of the Revision. Values are:
            - `0` thread-safe, the system should manage the max concurrency. This is
                the default value.
            - `1` not-thread-safe. Single concurrency
            - `2-N` thread-safe, max concurrency of N
        - !ruby/object:Api::Type::String
          # Will be added by the cloud run team soon
          name: serviceAccountName
          exclude: true
          description: Not currently used by Cloud Run.
        - !ruby/object:Api::Type::Enum
          name: servingState
          description: |-
            ServingState holds a value describing the state the resources
            are in for this Revision.
            It is expected
            that the system will manipulate this based on routability and load.
          output: true
          values:
          - :ACTIVE
          - :RESERVE
          - :RETIRED

  - !ruby/object:Api::Type::NestedObject
    name: status
    description: The current status of the Service.
    output: true
    properties:
    - !ruby/object:Api::Type::Array
      name: conditions
      description: |-
        Array of observed Service Conditions, indicating the current ready state of the service.
      output: true
      item_type: !ruby/object:Api::Type::NestedObject
        properties:
        - !ruby/object:Api::Type::String
          name: message
          output: true
          description: |-
            Human readable message indicating details about the current status.
        - !ruby/object:Api::Type::String
          name: status
          output: true
          description: Status of the condition, one of True, False, Unknown.
        - !ruby/object:Api::Type::String
          name: reason
          output: true
          description: |-
            One-word CamelCase reason for the condition's current status.
        - !ruby/object:Api::Type::String
          name: type
          output: true
          description: Type of domain mapping condition.
    - !ruby/object:Api::Type::String
      name: url
      description: |-
        From RouteStatus. URL holds the url that will distribute traffic over the provided traffic
        targets. It generally has the form
        https://{route-hash}-{project-hash}-{cluster-level-suffix}.a.run.app
      output: true
    - !ruby/object:Api::Type::Integer
      name: observedGeneration
      description: |-
        ObservedGeneration is the 'Generation' of the Route that was last processed by the
        controller.

        Clients polling for completed reconciliation should poll until observedGeneration =
        metadata.generation and the Ready condition's status is True or False.
      output: true
    - !ruby/object:Api::Type::String
      name: latestCreatedRevisionName
      description: |-
        From ConfigurationStatus. LatestCreatedRevisionName is the last revision that was created
        from this Service's Configuration. It might not be ready yet, for that use
        LatestReadyRevisionName.
      output: true
    - !ruby/object:Api::Type::String
      name: latestReadyRevisionName
      description: |-
        From ConfigurationStatus. LatestReadyRevisionName holds the name of the latest Revision
        stamped out from this Service's Configuration that has had its "Ready" condition become
        "True".
      output: true

  - !ruby/object:Api::Type::NestedObject
    name: metadata
    required: true
    description: |-
      Metadata associated with this Service, including name, namespace, labels,
      and annotations.
    properties:
    - !ruby/object:Api::Type::KeyValuePairs
      name: labels
      description: |-
        Map of string keys and values that can be used to organize and categorize
        (scope and select) objects. May match selectors of replication controllers
        and routes.
        More info: http://kubernetes.io/docs/user-guide/labels
    - !ruby/object:Api::Type::Integer
      name: generation
      description: |-
        A sequence number representing a specific generation of the desired state.
      output: true
    - !ruby/object:Api::Type::String
      name: resourceVersion
      description: |-
        An opaque value that represents the internal version of this object that
        can be used by clients to determine when objects have changed. May be used
        for optimistic concurrency, change detection, and the watch operation on a
        resource or set of resources. They may only be valid for a
        particular resource or set of resources.

        More info:
        https://git.k8s.io/community/contributors/devel/api-conventions.md#concurrency-control-and-consistency
      output: true
    - !ruby/object:Api::Type::String
      name: selfLink
      description: |-
        SelfLink is a URL representing this object.
      output: true
    - !ruby/object:Api::Type::String
      name: uid
      description: |-
        UID is a unique id generated by the server on successful creation of a resource and is not
        allowed to change on PUT operations.

        More info: http://kubernetes.io/docs/user-guide/identifiers#uids
      output: true
    - !ruby/object:Api::Type::String
      name: namespace
      required: true
      description: |-
        In Cloud Run the namespace must be equal to either the
        project ID or project number.
    - !ruby/object:Api::Type::KeyValuePairs
      name: annotations
      description: |-
        Annotations is a key value map stored with a resource that
        may be set by external tools to store and retrieve arbitrary metadata. More
        info: http://kubernetes.io/docs/user-guide/annotations
    - !ruby/object:Api::Type::String
      name: name
      required: true
      description: |-
        Name must be unique within a namespace, within a Cloud Run region.
        Is required when creating resources. Name is primarily intended
        for creation idempotence and configuration definition. Cannot be updated.
        More info: http://kubernetes.io/docs/user-guide/identifiers#names
