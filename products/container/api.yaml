# Copyright 2017 Google Inc.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

--- !ruby/object:Api::Product
name: Container
display_name: Google Kubernetes Engine
versions:
  - !ruby/object:Api::Product::Version
    name: ga
    default: true
    base_url: https://container.googleapis.com/v1/
  - !ruby/object:Api::Product::Version
    name: beta
    base_url: https://container.googleapis.com/v1beta1/
scopes:
  - https://www.googleapis.com/auth/cloud-platform
apis_required:
  - !ruby/object:Api::Product::ApiReference
    name: Kubernetes Engine API
    url: https://console.cloud.google.com/apis/library/container.googleapis.com/
objects:
  - !ruby/object:Api::Resource
    name: 'Cluster'
<%= indent(compile('products/container/async.yaml'), 4) %>
    base_url: 'projects/{{project}}/locations/{{location}}/clusters'
    description: 'A Google Container Engine cluster.'
    collection_url_response: !ruby/object:Api::Resource::ResponseList
      items: 'clusters'
    parameters:
      - !ruby/object:Api::Type::String
        name: 'location'
        description: 'The location where the cluster is deployed'
        required: true
    properties:
      - !ruby/object:Api::Type::String
        name: 'name'
        description: |
          The name of this cluster. The name must be unique within this project
          and location, and can be up to 40 characters. Must be Lowercase letters,
          numbers, and hyphens only. Must start with a letter. Must end with a
          number or a letter.
      - !ruby/object:Api::Type::String
        name: 'description'
        description: 'An optional description of this cluster.'
      - !ruby/object:Api::Type::Integer
        name: 'initialNodeCount'
        description: |
          The number of nodes to create in this cluster. You must ensure that
          your Compute Engine resource quota is sufficient for this number of
          instances. You must also have available firewall and routes quota. For
          requests, this field should only be used in lieu of a "nodePool"
          object, since this configuration (along with the "nodeConfig") will be
          used to create a "NodePool" object with an auto-generated name. Do not
          use this and a nodePool at the same time.
        required: true
        input: true
      - !ruby/object:Api::Type::NestedObject
        name: 'nodeConfig'
        description: |
          Parameters used in creating the cluster's nodes.

          For requests, this field should only be used in lieu of a "nodePool"
          object, since this configuration (along with the "initialNodeCount")
          will be used to create a "NodePool" object with an auto-generated
          name. Do not use this and a nodePool at the same time. For responses,
          this field will be populated with the node configuration of the first
          node pool. If unspecified, the defaults are used.
        input: true
        properties:
<%= indent(compile('products/container/node_config.yaml'), 10) %>
      - !ruby/object:Api::Type::NestedObject
        name: 'masterAuth'
        description: |
          The authentication information for accessing the master endpoint.
        properties:
          # TODO(nelsonjr): Make this a ResourceRef pointing to the Compute
          # resources (external to this product)
          # | - !ruby/object:Api::Type::ResourceRef
          # |   name: 'machineType'
          # |   product: 'Compute'
          # |   resource: 'MachineType'
          # |   imports: 'name'
          - !ruby/object:Api::Type::String
            name: 'username'
            description: |
              The username to use for HTTP basic authentication to the master
              endpoint.
          - !ruby/object:Api::Type::String
            name: 'password'
            description: |
              The password to use for HTTP basic authentication to the master
              endpoint. Because the master endpoint is open to the Internet, you
              should create a strong password.
          - !ruby/object:Api::Type::String
            name: 'clusterCaCertificate'
            description: |
              Base64-encoded public certificate that is the root of trust for
              the cluster.
            output: true
          - !ruby/object:Api::Type::String
            name: 'clientCertificate'
            description: |
              Base64-encoded public certificate used by clients to authenticate
              to the cluster endpoint.
            output: true
          - !ruby/object:Api::Type::String
            name: 'clientKey'
            description: |
              Base64-encoded private key used by clients to authenticate to the
              cluster endpoint.
            output: true
      - !ruby/object:Api::Type::Enum
        name: 'loggingService'
        description: |
          The logging service the cluster should use to write logs. Currently
          available options:

          logging.googleapis.com - the Google Cloud Logging service.
          none - no logs will be exported from the cluster.

          if left as an empty string,logging.googleapis.com will be used.
        values:
          - 'logging.googleapis.com'
          - 'none'
      - !ruby/object:Api::Type::Enum
        name: 'monitoringService'
        description: |
          The monitoring service the cluster should use to write metrics.
          Currently available options:

          monitoring.googleapis.com - the Google Cloud Monitoring service.
          none - no metrics will be exported from the cluster.

          if left as an empty string, monitoring.googleapis.com will be used.
        values:
          - 'monitoring.googleapis.com'
          - 'none'
      # This is an x-product resource reference.
      - !ruby/object:Api::Type::String
        name: 'network'
        description: |
          The name of the Google Compute Engine network to which the cluster is
          connected. If left unspecified, the default network will be used.
      - !ruby/object:Api::Type::NestedObject
        name: 'privateClusterConfig'
        description: Configuration for a private cluster.
        properties:
          - !ruby/object:Api::Type::Boolean
            name: 'enablePrivateNodes'
            description: >
              Whether nodes have internal IP addresses only. If enabled, all
              nodes are given only RFC 1918 private addresses and communicate
              with the master via private networking.
          - !ruby/object:Api::Type::Boolean
            name: 'enablePrivateEndpoint'
            description: Whether the master's internal IP address is used as the cluster endpoint.
          - !ruby/object:Api::Type::String
            name: masterIpv4CidrBlock
            description: >
              The IP range in CIDR notation to use for the hosted master
              network. This range will be used for assigning internal IP
              addresses to the master or set of masters, as well as the ILB
              VIP. This range must not overlap with any other ranges in use
              within the cluster's network.
          - !ruby/object:Api::Type::String
            name: privateEndpoint
            description:  The internal IP address of this cluster's master endpoint.
            output: true
          - !ruby/object:Api::Type::String
            name: publicEndpoint
            description: The external IP address of this cluster's master endpoint.
            output: true
      - !ruby/object:Api::Type::String
        name: 'clusterIpv4Cidr'
        description: |
          The IP address range of the container pods in this cluster, in CIDR
          notation (e.g. 10.96.0.0/14). Leave blank to have one automatically
          chosen or specify a /14 block in 10.0.0.0/8.
      - !ruby/object:Api::Type::String
        name: 'enableTpu'
        min_version: beta
        description: |
          (Optional) Whether to enable Cloud TPU resources in this cluster.
          See the official documentation - https://cloud.google.com/tpu/docs/kubernetes-engine-setup
      - !ruby/object:Api::Type::String
        name: 'tpuIpv4CidrBlock'
        output: true
        min_version: beta
        description: |
          The IP address range of the Cloud TPUs in this cluster, in
          [CIDR](http://en.wikipedia.org/wiki/Classless_Inter-Domain_Routing)
          notation (e.g. `1.2.3.4/29`).
      - !ruby/object:Api::Type::NestedObject
        name: 'addonsConfig'
        description: |
          Configurations for the various addons available to run in the cluster.
        properties:
          - !ruby/object:Api::Type::NestedObject
            name: 'httpLoadBalancing'
            description: |
              Configuration for the HTTP (L7) load balancing controller addon,
              which makes it easy to set up HTTP load balancers for services in
              a cluster.
            properties:
              - !ruby/object:Api::Type::Boolean
                name: 'disabled'
                description: |
                  Whether the HTTP Load Balancing controller is enabled in the
                  cluster. When enabled, it runs a small pod in the cluster that
                  manages the load balancers.
          - !ruby/object:Api::Type::NestedObject
            name: 'horizontalPodAutoscaling'
            description: |
              Configuration for the horizontal pod autoscaling feature, which
              increases or decreases the number of replica pods a replication
              controller has based on the resource usage of the existing pods.
            properties:
              - !ruby/object:Api::Type::Boolean
                name: 'disabled'
                description: |
                  Whether the Horizontal Pod Autoscaling feature is enabled in
                  the cluster. When enabled, it ensures that a Heapster pod is
                  running in the cluster, which is also used by the Cloud
                  Monitoring service.
      # TODO(nelsonjr): This is a ResourceRef but on a resource on another
      # product (Compute). Figure out how to represent/implement this. For now
      # making it a string.
      - !ruby/object:Api::Type::String
        name: 'subnetwork'
        description: |
          The name of the Google Compute Engine subnetwork to which the cluster
          is connected.
      # TODO(nelsonjr): 'nodePools' will not be supported inline here (until we
      # have a way to add a compile()/include() to the api.yaml. For the time
      # being NodePool will be described outside in their own resource, reaching
      # the same behavior and also compliant with the current API.
      # 'enableKubernetesAlpha' not supported: we are only producing GA API.
      - !ruby/object:Api::Type::String
        name: 'endpoint'
        description: |
          The IP address of this cluster's master endpoint.

          The endpoint can be accessed from the internet at
          https://username:password@endpoint/

          See the masterAuth property of this resource for username and password
          information.
        output: true
      - !ruby/object:Api::Type::String
        name: 'initialClusterVersion'
        description: |
          The software version of the master endpoint and kubelets used in the
          cluster when it was first created. The version can be upgraded over
          time.
        output: true
      - !ruby/object:Api::Type::String
        name: 'currentMasterVersion'
        description: 'The current software version of the master endpoint.'
        output: true
      - !ruby/object:Api::Type::String
        name: 'currentNodeVersion'
        description: |
          The current version of the node software components. If they are
          currently at multiple versions because they're in the process of being
          upgraded, this reflects the minimum version of all nodes.
        output: true
      - !ruby/object:Api::Type::Time
        name: 'createTime'
        description: |
          The time the cluster was created, in RFC3339 text format.
        output: true
      # | 'status' is not applicable for state enforcement
      # | 'statusMessage' is not applicable for state enforcement
      - !ruby/object:Api::Type::Integer
        name: 'nodeIpv4CidrSize'
        description: |
          The size of the address space on each node for hosting containers.
          This is provisioned from within the container_ipv4_cidr range.
        output: true
      - !ruby/object:Api::Type::String
        name: 'servicesIpv4Cidr'
        description: |
          The IP address range of the Kubernetes services in this cluster, in
          CIDR notation (e.g. 1.2.3.4/29). Service addresses are typically put
          in the last /16 from the container CIDR.
        output: true
      # | 'instanceGroupUrls' not supported as it is dynamically created by the
      # |  server and admin has no way to predict it
      - !ruby/object:Api::Type::Integer
        name: 'currentNodeCount'
        description: 'The number of nodes currently in the cluster.'
        output: true
      - !ruby/object:Api::Type::Time
        name: 'expireTime'
        description: |
          The time the cluster will be automatically deleted in RFC3339 text
          format.
        output: true
  - !ruby/object:Api::Resource
    name: 'NodePool'
<%= indent(compile('products/container/async.yaml'), 4) %>
    base_url: projects/{{project}}/zones/{{location}}/clusters/{{cluster}}/nodePools
    description: |
      NodePool contains the name and configuration for a cluster's node pool.
      Node pools are a set of nodes (i.e. VM's), with a common configuration and
      specification, under the control of the cluster master. They may have a
      set of Kubernetes labels applied to them, which may be used to reference
      them during pod scheduling. They may also be resized up or down, to
      accommodate the workload.
    collection_url_response: !ruby/object:Api::Resource::ResponseList
      items: 'nodePools'
    parameters:
      - !ruby/object:Api::Type::ResourceRef
        name: 'cluster'
        resource: 'Cluster'
        imports: 'name'
        description: 'The cluster this node pool belongs to.'
        required: true
      - !ruby/object:Api::Type::String
        name: 'location'
        description: 'The location where the node pool is deployed'
        required: true
    properties:
      - !ruby/object:Api::Type::String
        name: 'name'
        description: 'The name of the node pool.'
      - !ruby/object:Api::Type::NestedObject
        name: 'config'
        description: 'The node configuration of the pool.'
        properties:
<%= indent(compile('products/container/node_config.yaml'), 10) %>
      - !ruby/object:Api::Type::Integer
        name: 'initialNodeCount'
        description: |
          The initial node count for the pool. You must ensure that your Compute
          Engine resource quota is sufficient for this number of instances. You
          must also have available firewall and routes quota.
        required: true
        input: true
      # | 'instanceGroupUrls' not supported as it is dynamically created by the
      # |  server and admin has no way to predict it
      # NodePool updates use a different name for version for updating.
      # TODO(alexstephen): Support NodePool updates.
      # Setting as `input: true` until fixed.
      - !ruby/object:Api::Type::String
        name: 'version'
        description: 'The version of the Kubernetes of this node.'
        input: true
      # | 'status' is not applicable for state enforcement
      # | 'statusMessage' is not applicable for state enforcement
      - !ruby/object:Api::Type::NestedObject
        name: 'autoscaling'
        description: |
          Autoscaler configuration for this NodePool. Autoscaler is enabled only
          if a valid configuration is present.
        properties:
          - !ruby/object:Api::Type::Boolean
            name: 'enabled'
            description: 'Is autoscaling enabled for this node pool.'
          - !ruby/object:Api::Type::Integer
            name: 'minNodeCount'
            description: |
              Minimum number of nodes in the NodePool. Must be >= 1 and <=
              maxNodeCount.
          - !ruby/object:Api::Type::Integer
            name: 'maxNodeCount'
            description: |
              Maximum number of nodes in the NodePool. Must be >= minNodeCount.
              There has to enough quota to scale up the cluster.
      - !ruby/object:Api::Type::NestedObject
        name: 'management'
        description: 'Management configuration for this NodePool.'
        properties:
          - !ruby/object:Api::Type::Boolean
            name: 'autoUpgrade'
            description: |
              A flag that specifies whether node auto-upgrade is enabled for the
              node pool. If enabled, node auto-upgrade helps keep the nodes in
              your node pool up to date with the latest release version of
              Kubernetes.
          - !ruby/object:Api::Type::Boolean
            name: 'autoRepair'
            description: |
              A flag that specifies whether the node auto-repair is enabled for
              the node pool. If enabled, the nodes in this node pool will be
              monitored and, if they fail health checks too many times, an
              automatic repair action will be triggered.
          - !ruby/object:Api::Type::NestedObject
            name: 'upgradeOptions'
            description: 'Specifies the Auto Upgrade knobs for the node pool.'
            properties:
              - !ruby/object:Api::Type::Time
                name: 'autoUpgradeStartTime'
                description: |
                  This field is set when upgrades are about to commence with the
                  approximate start time for the upgrades, in RFC3339 text
                  format.
                output: true
              - !ruby/object:Api::Type::String
                name: 'description'
                description: |
                  This field is set when upgrades are about to commence with the
                  description of the upgrade.
                output: true
  - !ruby/object:Api::Resource
    name: 'KubeConfig'
    base_url: 'unused'
    description: |
      Generates a compatible Kuberenetes '.kube/config' file
    properties:
      - !ruby/object:Api::Type::String
        name: 'name'
        description: 'The config file kubectl settings will be written to.'
        required: true
      - !ruby/object:Api::Type::ResourceRef
        name: 'cluster'
        resource: 'Cluster'
        imports: 'name'
        description: 'A reference to Cluster resource'
        required: true
      # TODO(nelsonjr): Make 'zone' a ResourceRef once cross-module references
      # are possible.
      - !ruby/object:Api::Type::String
        name: 'location'
        description: 'The location where the container is deployed'
        required: true
      - !ruby/object:Api::Type::String
        name: 'context'
        description: 'The name of the context. Defaults to cluster name.'
        required: true
