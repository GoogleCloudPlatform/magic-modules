# Copyright 2017 Google Inc.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

--- !ruby/object:Api::Product
name: Container
display_name: Google Kubernetes Engine
versions:
  - !ruby/object:Api::Product::Version
    name: ga
    base_url: https://container.googleapis.com/v1/
  - !ruby/object:Api::Product::Version
    name: beta
    base_url: https://container.googleapis.com/v1beta1/
scopes:
  - https://www.googleapis.com/auth/cloud-platform
apis_required:
  - !ruby/object:Api::Product::ApiReference
    name: Kubernetes Engine API
    url: https://console.cloud.google.com/apis/library/container.googleapis.com/
async: !ruby/object:Api::OpAsync
  operation: !ruby/object:Api::OpAsync::Operation
    kind: 'container#operation'
    path: 'name'
    base_url: 'projects/{{project}}/locations/{{location}}/operations/{{op_id}}'
    wait_ms: 1000
  result: !ruby/object:Api::OpAsync::Result
    path: 'targetLink'
  status: !ruby/object:Api::OpAsync::Status
    path: 'status'
    complete: 'DONE'
    allowed:
      - 'PENDING'
      - 'RUNNING'
      - 'DONE'
      - 'ABORTING'
  error: !ruby/object:Api::OpAsync::Error
    path: 'error/errors'
    message: 'message'
objects:
  - !ruby/object:Api::Resource
    name: 'Cluster'
    base_url: 'projects/{{project}}/locations/{{location}}/clusters'
    description: 'A Google Container Engine cluster.'
    parameters:
      - !ruby/object:Api::Type::String
        name: 'location'
        description: 'The location where the cluster is deployed'
        required: true
      - !ruby/object:Api::Type::String
        name: 'kubectlPath'
        description: |
          The path that the kubectl config file will be written to.

          The file will not be created if this path is unset.

          Any existing file at this path will be completely overwritten.

          This requires the PyYaml library.
      - !ruby/object:Api::Type::String
        name: 'kubectlContext'
        description: 'The name of the context for the kubectl config file. Will default to the cluster name'
    properties:
      - !ruby/object:Api::Type::String
        name: 'name'
        description: |
          The name of this cluster. The name must be unique within this project
          and location, and can be up to 40 characters. Must be Lowercase letters,
          numbers, and hyphens only. Must start with a letter. Must end with a
          number or a letter.
      - !ruby/object:Api::Type::String
        name: 'description'
        description: 'An optional description of this cluster.'
      - !ruby/object:Api::Type::Integer
        name: 'initialNodeCount'
        description: |
          The number of nodes to create in this cluster. You must ensure that
          your Compute Engine resource quota is sufficient for this number of
          instances. You must also have available firewall and routes quota. For
          requests, this field should only be used in lieu of a "nodePool"
          object, since this configuration (along with the "nodeConfig") will be
          used to create a "NodePool" object with an auto-generated name. Do not
          use this and a nodePool at the same time.

          This field has been deprecated. Please use nodePool.initial_node_count instead.
        input: true
      - !ruby/object:Api::Type::NestedObject
        name: 'nodeConfig'
        description: |
          Parameters used in creating the cluster's nodes.

          For requests, this field should only be used in lieu of a "nodePool"
          object, since this configuration (along with the "initialNodeCount")
          will be used to create a "NodePool" object with an auto-generated
          name. Do not use this and a nodePool at the same time. For responses,
          this field will be populated with the node configuration of the first
          node pool. If unspecified, the defaults are used.
        input: true
        properties:
          - !ruby/object:Api::Type::String
            name: 'machineType'
            description: |
              The name of a Google Compute Engine machine type (e.g.
              n1-standard-1).  If unspecified, the default machine type is
              n1-standard-1.
          - !ruby/object:Api::Type::Integer
            name: 'diskSizeGb'
            description: |
              Size of the disk attached to each node, specified in GB. The
              smallest allowed disk size is 10GB. If unspecified, the default
              disk size is 100GB.
          - !ruby/object:Api::Type::Array
            name: 'oauthScopes'
            item_type: Api::Type::String
            description: |
              The set of Google API scopes to be made available on all of the
              node VMs under the "default" service account.

              The following scopes are recommended, but not required, and by
              default are not included:

              https://www.googleapis.com/auth/compute is required for mounting
              persistent storage on your nodes.
              https://www.googleapis.com/auth/devstorage.read_only is required
              for communicating with gcr.io (the Google Container Registry).

              If unspecified, no scopes are added, unless Cloud Logging or Cloud
              Monitoring are enabled, in which case their required scopes will
              be added.
          - !ruby/object:Api::Type::String
            name: 'serviceAccount'
            description: |
              The Google Cloud Platform Service Account to be used by the node
              VMs.  If no Service Account is specified, the "default" service
              account is used.
          - !ruby/object:Api::Type::KeyValuePairs
            name: 'metadata'
            description: |
              The metadata key/value pairs assigned to instances in the cluster.

              Keys must conform to the regexp [a-zA-Z0-9-_]+ and be less than
              128 bytes in length. These are reflected as part of a URL in the
              metadata server. Additionally, to avoid ambiguity, keys must not
              conflict with any other metadata keys for the project or be one of
              the four reserved keys: "instance-template", "kube-env",
              "startup-script", and "user-data"

              Values are free-form strings, and only have meaning as interpreted
              by the image running in the instance. The only restriction placed
              on them is that each value's size must be less than or equal to 32
              KB.

              The total size of all keys and values must be less than 512 KB.

              An object containing a list of "key": value pairs.
              Example: { "name": "wrench", "mass": "1.3kg", "count": "3" }.
          - !ruby/object:Api::Type::String
            name: 'imageType'
            description: |
              The image type to use for this node.  Note that for a given image
              type, the latest version of it will be used.
          - !ruby/object:Api::Type::KeyValuePairs
            name: 'labels'
            description: |
              The map of Kubernetes labels (key/value pairs) to be applied to
              each node. These will added in addition to any default label(s)
              that Kubernetes may apply to the node. In case of conflict in
              label keys, the applied set may differ depending on the Kubernetes
              version -- it's best to assume the behavior is undefined and
              conflicts should be avoided. For more information, including usage
              and the valid values, see:
                http://kubernetes.io/v1.1/docs/user-guide/labels.html

              An object containing a list of "key": value pairs.
              Example: { "name": "wrench", "mass": "1.3kg", "count": "3" }.
          - !ruby/object:Api::Type::Integer
            name: 'localSsdCount'
            description: |
              The number of local SSD disks to be attached to the node.

              The limit for this value is dependant upon the maximum number of
              disks available on a machine per zone. See:

              https://cloud.google.com/compute/docs/disks/local-ssd#local_ssd_limits

              for more information.
          - !ruby/object:Api::Type::Array
            name: 'tags'
            item_type: Api::Type::String
            description: |
              The list of instance tags applied to all nodes. Tags are used to
              identify valid sources or targets for network firewalls and are
              specified by the client during cluster or node pool creation. Each
              tag within the list must comply with RFC1035.
          - !ruby/object:Api::Type::Boolean
            name: 'preemptible'
            description: |
              Whether the nodes are created as preemptible VM instances. See:
              https://cloud.google.com/compute/docs/instances/preemptible for
              more information about preemptible VM instances.
          - !ruby/object:Api::Type::Array
            name: 'accelerators'
            description: |
              A list of hardware accelerators to be attached to each node. See
              https://cloud.google.com/compute/docs/gpus for more information
              about support for GPUs.
            item_type: !ruby/object:Api::Type::NestedObject
              properties:
                  # API calls for a String, despite this being a number.
                - !ruby/object:Api::Type::String
                  name: 'acceleratorCount'
                  description: The number of accelerator cards exposed to an instance.
                - !ruby/object:Api::Type::String
                  name: 'acceleratorType'
                  description: The accelerator type resource name
          - !ruby/object:Api::Type::String
            name: 'diskType'
            description: |
              Type of the disk attached to each node (e.g. 'pd-standard'
              or 'pd-ssd')

              If unspecified, the default disk type is 'pd-standard'
          - !ruby/object:Api::Type::String
            name: 'minCpuPlatform'
            description: |
              Minimum CPU platform to be used by this instance. The instance
              may be scheduled on the specified or newer CPU platform.
          - !ruby/object:Api::Type::Array
            name: 'taints'
            description: >
              List of kubernetes taints to be applied to each node.

              For more information, including usage and the valid values, see:
              https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
            item_type: !ruby/object:Api::Type::NestedObject
              properties:
                - !ruby/object:Api::Type::String
                  name: 'key'
                  description: Key for taint
                - !ruby/object:Api::Type::String
                  name: 'value'
                  description: Value for taint
                - !ruby/object:Api::Type::Enum
                  name: 'effect'
                  description: Effect for taint
                  values:
                    - "EFFECT_UNSPECIFIED"
                    - "NO_SCHEDULE"
                    - "PREFER_NO_SCHEDULE"
                    - "NO_EXECUTE"
      - !ruby/object:Api::Type::NestedObject
        name: 'masterAuth'
        description: |
          The authentication information for accessing the master endpoint.
        properties:
          - !ruby/object:Api::Type::String
            name: 'username'
            description: |
              The username to use for HTTP basic authentication to the master
              endpoint.
          - !ruby/object:Api::Type::String
            name: 'password'
            description: |
              The password to use for HTTP basic authentication to the master
              endpoint. Because the master endpoint is open to the Internet, you
              should create a strong password with a minimum of 16 characters.
          - !ruby/object:Api::Type::NestedObject
            name: 'clientCertificateConfig'
            description: |
              Configuration for client certificate authentication on the
              cluster. For clusters before v1.12, if no configuration is
              specified, a client certificate is issued.
            properties:
              - !ruby/object:Api::Type::Boolean
                name: 'issueClientCertificate'
                description: Issue a client certificate.
          - !ruby/object:Api::Type::String
            name: 'clusterCaCertificate'
            description: |
              Base64-encoded public certificate that is the root of trust for
              the cluster.
            output: true
          - !ruby/object:Api::Type::String
            name: 'clientCertificate'
            description: |
              Base64-encoded public certificate used by clients to authenticate
              to the cluster endpoint.
            output: true
          - !ruby/object:Api::Type::String
            name: 'clientKey'
            description: |
              Base64-encoded private key used by clients to authenticate to the
              cluster endpoint.
            output: true
      - !ruby/object:Api::Type::Enum
        name: 'loggingService'
        description: |
          The logging service the cluster should use to write logs. Currently
          available options:

          logging.googleapis.com - the Google Cloud Logging service.
          none - no logs will be exported from the cluster.

          if left as an empty string,logging.googleapis.com will be used.
        values:
          - 'logging.googleapis.com'
          - 'none'
      - !ruby/object:Api::Type::Enum
        name: 'monitoringService'
        description: |
          The monitoring service the cluster should use to write metrics.
          Currently available options:

          monitoring.googleapis.com - the Google Cloud Monitoring service.
          none - no metrics will be exported from the cluster.

          if left as an empty string, monitoring.googleapis.com will be used.
        values:
          - 'monitoring.googleapis.com'
          - 'none'
      # This is an x-product resource reference.
      - !ruby/object:Api::Type::String
        name: 'network'
        description: |
          The name of the Google Compute Engine network to which the cluster is
          connected. If left unspecified, the default network will be used.
      - !ruby/object:Api::Type::NestedObject
        name: 'privateClusterConfig'
        description: Configuration for a private cluster.
        properties:
          - !ruby/object:Api::Type::Boolean
            name: 'enablePrivateNodes'
            description: |
              Whether nodes have internal IP addresses only. If enabled, all
              nodes are given only RFC 1918 private addresses and communicate
              with the master via private networking.
          - !ruby/object:Api::Type::Boolean
            name: 'enablePrivateEndpoint'
            description: Whether the master's internal IP address is used as the cluster endpoint.
          - !ruby/object:Api::Type::String
            name: masterIpv4CidrBlock
            description: |
              The IP range in CIDR notation to use for the hosted master
              network. This range will be used for assigning internal IP
              addresses to the master or set of masters, as well as the ILB
              VIP. This range must not overlap with any other ranges in use
              within the cluster's network.
          - !ruby/object:Api::Type::String
            name: privateEndpoint
            description:  The internal IP address of this cluster's master endpoint.
            output: true
          - !ruby/object:Api::Type::String
            name: publicEndpoint
            description: The external IP address of this cluster's master endpoint.
            output: true
      - !ruby/object:Api::Type::String
        name: 'clusterIpv4Cidr'
        description: |
          The IP address range of the container pods in this cluster, in CIDR
          notation (e.g. 10.96.0.0/14). Leave blank to have one automatically
          chosen or specify a /14 block in 10.0.0.0/8.
      - !ruby/object:Api::Type::Boolean
        name: 'enableTpu'
        description: |
          (Optional) Whether to enable Cloud TPU resources in this cluster.
          See the official documentation - https://cloud.google.com/tpu/docs/kubernetes-engine-setup
      - !ruby/object:Api::Type::String
        name: 'tpuIpv4CidrBlock'
        output: true
        description: |
          The IP address range of the Cloud TPUs in this cluster, in
          [CIDR](http://en.wikipedia.org/wiki/Classless_Inter-Domain_Routing)
          notation (e.g. `1.2.3.4/29`).
      - !ruby/object:Api::Type::NestedObject
        name: 'addonsConfig'
        description: |
          Configurations for the various addons available to run in the cluster.
        properties:
          - !ruby/object:Api::Type::NestedObject
            name: 'httpLoadBalancing'
            description: |
              Configuration for the HTTP (L7) load balancing controller addon,
              which makes it easy to set up HTTP load balancers for services in
              a cluster.
            properties:
              - !ruby/object:Api::Type::Boolean
                name: 'disabled'
                description: |
                  Whether the HTTP Load Balancing controller is enabled in the
                  cluster. When enabled, it runs a small pod in the cluster that
                  manages the load balancers.
          - !ruby/object:Api::Type::NestedObject
            name: 'horizontalPodAutoscaling'
            description: |
              Configuration for the horizontal pod autoscaling feature, which
              increases or decreases the number of replica pods a replication
              controller has based on the resource usage of the existing pods.
            properties:
              - !ruby/object:Api::Type::Boolean
                name: 'disabled'
                description: |
                  Whether the Horizontal Pod Autoscaling feature is enabled in
                  the cluster. When enabled, it ensures that a Heapster pod is
                  running in the cluster, which is also used by the Cloud
                  Monitoring service.
          - !ruby/object:Api::Type::NestedObject
            name: 'kubernetesDashboard'
            description: |
                Configuration for the Kubernetes Dashboard. This addon is deprecated,
                and will be disabled in 1.15. It is recommended to use the Cloud Console
                to manage and monitor your Kubernetes clusters, workloads and applications.
            properties:
              - !ruby/object:Api::Type::Boolean
                name: 'disabled'
                description: |
                  Whether the Kubernetes Dashboard is enabled for this cluster.
          - !ruby/object:Api::Type::NestedObject
            name: 'networkPolicyConfig'
            description: |
              Configuration for NetworkPolicy. This only tracks whether the
              addon is enabled or not on the Master, it does not track whether
              network policy is enabled for the nodes.
            properties:
              - !ruby/object:Api::Type::Boolean
                name: 'disabled'
                description: Whether NetworkPolicy is enabled for this cluster.
      - !ruby/object:Api::Type::String
        name: 'subnetwork'
        description: |
          The name of the Google Compute Engine subnetwork to which the cluster
          is connected.
      # TODO: figure out nodePools[]
      - !ruby/object:Api::Type::Array
        name: 'locations'
        description: |
          The list of Google Compute Engine zones in which the cluster's nodes
          should be located.
        item_type: Api::Type::String
      - !ruby/object:Api::Type::KeyValuePairs
        name: 'resourceLabels'
        description: |
          The resource labels for the cluster to use to annotate any related
          Google Compute Engine resources.
      - !ruby/object:Api::Type::Fingerprint
        name: 'labelFingerprint'
        description: The fingerprint of the set of labels for this cluster.
      - !ruby/object:Api::Type::NestedObject
        name: 'legacyAbac'
        description: Configuration for the legacy ABAC authorization mode.
        properties:
          - !ruby/object:Api::Type::Boolean
            name: 'enabled'
            description: |
              Whether the ABAC authorizer is enabled for this cluster. When
              enabled, identities in the system, including service accounts,
              nodes, and controllers, will have statically granted permissions
              beyond those provided by the RBAC configuration or IAM.
      - !ruby/object:Api::Type::NestedObject
        name: 'networkPolicy'
        description: |
          Configuration options for the NetworkPolicy feature.
        properties:
          - !ruby/object:Api::Type::Enum
            name: 'provider'
            description: The selected network policy provider.
            values:
              - "PROVIDER_UNSPECIFIED"
              - "CALICO"
          - !ruby/object:Api::Type::Boolean
            name: 'enabled'
            description: Whether network policy is enabled on the cluster.
      - !ruby/object:Api::Type::NestedObject
            name: 'defaultMaxPodsConstraint'
            description: |
              The default constraint on the maximum number of pods that can be
              run simultaneously on a node in the node pool of this cluster.
              Only honored if cluster created with IP Alias support.
            properties:
              - !ruby/object:Api::Type::String
                name: 'maxPodsPerNode'
                description: Constraint enforced on the max num of pods per node.
      - !ruby/object:Api::Type::NestedObject
        name: 'ipAllocationPolicy'
        description: Configuration for controlling how IPs are allocated in the cluster
        properties:
          - !ruby/object:Api::Type::Boolean
            name: 'useIpAliases'
            description: Whether alias IPs will be used for pod IPs in the cluster
          - !ruby/object:Api::Type::Boolean
            name: 'createSubnetwork'
            description: Whether a new subnetwork will be created automatically for the cluster
          - !ruby/object:Api::Type::String
            name: 'subnetworkName'
            description: |
              A custom subnetwork name to be used if createSubnetwork is true.
              If this field is empty, then an automatic name will be chosen for
              the new subnetwork.
          - !ruby/object:Api::Type::String
            name: 'clusterSecondaryRangeName'
            description: |
              The name of the secondary range to be used for the cluster CIDR
              block. The secondary range will be used for pod IP addresses.
              This must be an existing secondary range associated with the
              cluster subnetwork
          - !ruby/object:Api::Type::String
            name: 'servicesSecondaryRangeName'
            description: |
              The name of the secondary range to be used as for the services
              CIDR block. The secondary range will be used for service
              ClusterIPs. This must be an existing secondary range associated
              with the cluster subnetwork.
          - !ruby/object:Api::Type::String
            name: 'clusterIpv4CidrBlock'
            description: |
              The IP address range for the cluster pod IPs. If this field is
              set, then cluster.cluster_ipv4_cidr must be left blank.

              This field is only applicable when useIpAliases is true.

              Set to blank to have a range chosen with the default size.

              Set to /netmask (e.g. /14) to have a range chosen with a specific netmask.
          - !ruby/object:Api::Type::String
            name: 'nodeIpv4CidrBlock'
            description: |
              The IP address range of the instance IPs in this cluster.

              This is applicable only if createSubnetwork is true.

              Set to blank to have a range chosen with the default size.

              Set to /netmask (e.g. /14) to have a range chosen with a specific netmask.
          - !ruby/object:Api::Type::String
            name: 'servicesIpv4CidrBlock'
            description: |
              The IP address range of the services IPs in this cluster. If blank, a range will be automatically chosen with the default size.

              This field is only applicable when useIpAliases is true.

              Set to blank to have a range chosen with the default size.

              Set to /netmask (e.g. /14) to have a range chosen with a specific netmask.
          - !ruby/object:Api::Type::String
            name: 'tpuIpv4CidrBlock'
            description: |
              The IP address range of the Cloud TPUs in this cluster. If unspecified, a range will be automatically chosen with the default size.

              This field is only applicable when useIpAliases is true.

              If unspecified, the range will use the default size.

              Set to /netmask (e.g. /14) to have a range chosen with a specific netmask.
      - !ruby/object:Api::Type::String
        name: 'endpoint'
        description: |
          The IP address of this cluster's master endpoint.

          The endpoint can be accessed from the internet at
          https://username:password@endpoint/

          See the masterAuth property of this resource for username and password
          information.
        output: true
      - !ruby/object:Api::Type::String
        name: 'initialClusterVersion'
        description: |
          The software version of the master endpoint and kubelets used in the
          cluster when it was first created. The version can be upgraded over
          time.
        output: true
      - !ruby/object:Api::Type::String
        name: 'currentMasterVersion'
        description: 'The current software version of the master endpoint.'
        output: true
      - !ruby/object:Api::Type::String
        name: 'currentNodeVersion'
        description: |
          The current version of the node software components. If they are
          currently at multiple versions because they're in the process of being
          upgraded, this reflects the minimum version of all nodes.
        output: true
      - !ruby/object:Api::Type::Time
        name: 'createTime'
        description: |
          The time the cluster was created, in RFC3339 text format.
        output: true
      - !ruby/object:Api::Type::Enum
        name: 'status'
        description: The current status of this cluster.
        output: true
        values: 
          - STATUS_UNSPECIFIED
          - PROVISIONING
          - RUNNING
          - RECONCILING
          - STOPPING
          - ERROR
          - DEGRADED
      - !ruby/object:Api::Type::String
        name: 'statusMessage'
        description: Additional information about the current status of this cluster, if available.
        output: true
      - !ruby/object:Api::Type::Integer
        name: 'nodeIpv4CidrSize'
        description: |
          The size of the address space on each node for hosting containers.
          This is provisioned from within the container_ipv4_cidr range.
        output: true
      - !ruby/object:Api::Type::String
        name: 'servicesIpv4Cidr'
        description: |
          The IP address range of the Kubernetes services in this cluster, in
          CIDR notation (e.g. 1.2.3.4/29). Service addresses are typically put
          in the last /16 from the container CIDR.
        output: true
      # | 'instanceGroupUrls' not supported as it is dynamically created by the
      # |  server and admin has no way to predict it
      - !ruby/object:Api::Type::Integer
        name: 'currentNodeCount'
        description: 'The number of nodes currently in the cluster.'
        output: true
      - !ruby/object:Api::Type::Time
        name: 'expireTime'
        description: |
          The time the cluster will be automatically deleted in RFC3339 text
          format.
        output: true
      - !ruby/object:Api::Type::Array
        name: 'conditions'
        description: Which conditions caused the current cluster state.
        output: true
        item_type: !ruby/object:Api::Type::NestedObject
          properties:
            - !ruby/object:Api::Type::String
              name: 'code'
              description: Machine-friendly representation of the condition
            - !ruby/object:Api::Type::String
              name: 'message'
              description: Human-friendly representation of the condition
      - !ruby/object:Api::Type::NestedObject
        name: 'masterAuthorizedNetworksConfig'
        description: Configuration for controlling how IPs are allocated in the cluster
        properties:
          - !ruby/object:Api::Type::Boolean
            name: 'enabled'
            description: Whether or not master authorized networks is enabled.
          - !ruby/object:Api::Type::Array
            name: 'cidrBlocks'
            description: Define up to 50 external networks that could access Kubernetes master through HTTPS.
            item_type: !ruby/object:Api::Type::NestedObject
              properties:
                - !ruby/object:Api::Type::String
                  name: 'displayName'
                  description: Optional field used to identify cidr blocks
                - !ruby/object:Api::Type::String
                  name: 'cidrBlock'
                  description: Block specified in CIDR notation
      - !ruby/object:Api::Type::Array
        name: 'nodePools'
        description: Node pools belonging to this cluster
        output: true
        item_type: !ruby/object:Api::Type::NestedObject
          properties:
            - !ruby/object:Api::Type::String
              name: 'name'
              description: Name of the node pool
  - !ruby/object:Api::Resource
    name: 'NodePool'
    base_url: projects/{{project}}/locations/{{location}}/clusters/{{cluster}}/nodePools
    description: |
      NodePool contains the name and configuration for a cluster's node pool.
      Node pools are a set of nodes (i.e. VM's), with a common configuration and
      specification, under the control of the cluster master. They may have a
      set of Kubernetes labels applied to them, which may be used to reference
      them during pod scheduling. They may also be resized up or down, to
      accommodate the workload.
    parameters:
      - !ruby/object:Api::Type::ResourceRef
        name: 'cluster'
        resource: 'Cluster'
        imports: 'name'
        description: 'The cluster this node pool belongs to.'
        required: true
      - !ruby/object:Api::Type::String
        name: 'location'
        description: 'The location where the node pool is deployed'
        required: true
    properties:
      - !ruby/object:Api::Type::String
        name: 'name'
        description: 'The name of the node pool.'
      - !ruby/object:Api::Type::NestedObject
        name: 'config'
        description: 'The node configuration of the pool.'
        properties:
          - !ruby/object:Api::Type::String
            name: 'machineType'
            description: |
              The name of a Google Compute Engine machine type (e.g.
              n1-standard-1).  If unspecified, the default machine type is
              n1-standard-1.
          - !ruby/object:Api::Type::Integer
            name: 'diskSizeGb'
            description: |
              Size of the disk attached to each node, specified in GB. The
              smallest allowed disk size is 10GB. If unspecified, the default
              disk size is 100GB.
          - !ruby/object:Api::Type::Array
            name: 'oauthScopes'
            item_type: Api::Type::String
            description: |
              The set of Google API scopes to be made available on all of the
              node VMs under the "default" service account.

              The following scopes are recommended, but not required, and by
              default are not included:

              https://www.googleapis.com/auth/compute is required for mounting
              persistent storage on your nodes.
              https://www.googleapis.com/auth/devstorage.read_only is required
              for communicating with gcr.io (the Google Container Registry).

              If unspecified, no scopes are added, unless Cloud Logging or Cloud
              Monitoring are enabled, in which case their required scopes will
              be added.
          - !ruby/object:Api::Type::String
            name: 'serviceAccount'
            description: |
              The Google Cloud Platform Service Account to be used by the node
              VMs.  If no Service Account is specified, the "default" service
              account is used.
          - !ruby/object:Api::Type::KeyValuePairs
            name: 'metadata'
            description: |
              The metadata key/value pairs assigned to instances in the cluster.

              Keys must conform to the regexp [a-zA-Z0-9-_]+ and be less than
              128 bytes in length. These are reflected as part of a URL in the
              metadata server. Additionally, to avoid ambiguity, keys must not
              conflict with any other metadata keys for the project or be one of
              the four reserved keys: "instance-template", "kube-env",
              "startup-script", and "user-data"

              Values are free-form strings, and only have meaning as interpreted
              by the image running in the instance. The only restriction placed
              on them is that each value's size must be less than or equal to 32
              KB.

              The total size of all keys and values must be less than 512 KB.

              An object containing a list of "key": value pairs.
              Example: { "name": "wrench", "mass": "1.3kg", "count": "3" }.
          - !ruby/object:Api::Type::String
            name: 'imageType'
            description: |
              The image type to use for this node.  Note that for a given image
              type, the latest version of it will be used.
          - !ruby/object:Api::Type::KeyValuePairs
            name: 'labels'
            description: |
              The map of Kubernetes labels (key/value pairs) to be applied to
              each node. These will added in addition to any default label(s)
              that Kubernetes may apply to the node. In case of conflict in
              label keys, the applied set may differ depending on the Kubernetes
              version -- it's best to assume the behavior is undefined and
              conflicts should be avoided. For more information, including usage
              and the valid values, see:
                http://kubernetes.io/v1.1/docs/user-guide/labels.html

              An object containing a list of "key": value pairs.
              Example: { "name": "wrench", "mass": "1.3kg", "count": "3" }.
          - !ruby/object:Api::Type::Integer
            name: 'localSsdCount'
            description: |
              The number of local SSD disks to be attached to the node.

              The limit for this value is dependant upon the maximum number of
              disks available on a machine per zone. See:

              https://cloud.google.com/compute/docs/disks/local-ssd#local_ssd_limits

              for more information.
          - !ruby/object:Api::Type::Array
            name: 'tags'
            item_type: Api::Type::String
            description: |
              The list of instance tags applied to all nodes. Tags are used to
              identify valid sources or targets for network firewalls and are
              specified by the client during cluster or node pool creation. Each
              tag within the list must comply with RFC1035.
          - !ruby/object:Api::Type::Boolean
            name: 'preemptible'
            description: |
              Whether the nodes are created as preemptible VM instances. See:
              https://cloud.google.com/compute/docs/instances/preemptible for
              more information about preemptible VM instances.
          - !ruby/object:Api::Type::Array
            name: 'accelerators'
            description: A list of hardware accelerators to be attached to each node
            item_type: !ruby/object:Api::Type::NestedObject
              properties:
                - !ruby/object:Api::Type::Integer
                  name: 'acceleratorCount'
                  description: The number of the accelerator cards exposed to an instance.
                - !ruby/object:Api::Type::String
                  name: 'acceleratorType'
                  description: The accelerator type resource name
          - !ruby/object:Api::Type::String
            name: 'diskType'
            description: |
              Type of the disk attached to each node (e.g. 'pd-standard' or 'pd-ssd')

              If unspecified, the default disk type is 'pd-standard'
          - !ruby/object:Api::Type::String
            name: 'minCpuPlatform'
            description: |
              Minimum CPU platform to be used by this instance. The instance may be scheduled on the specified or newer CPU platform
          - !ruby/object:Api::Type::Array
            name: 'taints'
            description: List of kubernetes taints to be applied to each node.
            item_type: !ruby/object:Api::Type::NestedObject
              properties:
                - !ruby/object:Api::Type::String
                  name: 'key'
                  description: Key for taint
                - !ruby/object:Api::Type::String
                  name: 'value'
                  description: Value for taint
                - !ruby/object:Api::Type::String
                  name: 'effect'
                  description: Effect for taint
      - !ruby/object:Api::Type::Integer
        name: 'initialNodeCount'
        description: |
          The initial node count for the pool. You must ensure that your Compute
          Engine resource quota is sufficient for this number of instances. You
          must also have available firewall and routes quota.
        required: true
        input: true
      - !ruby/object:Api::Type::String
        name: 'status'
        description: 'Status of nodes in this pool instance'
        output: true
      - !ruby/object:Api::Type::String
        name: 'statusMessage'
        description: 'Additional information about the current status of this node pool instance'
        output: true
      # | 'instanceGroupUrls' not supported as it is dynamically created by the
      # |  server and admin has no way to predict it
      # NodePool updates use a different name for version for updating.
      # TODO(alexstephen): Support NodePool updates.
      # Setting as `input: true` until fixed.
      - !ruby/object:Api::Type::String
        name: 'version'
        description: 'The version of the Kubernetes of this node.'
        input: true
      # | 'status' is not applicable for state enforcement
      # | 'statusMessage' is not applicable for state enforcement
      - !ruby/object:Api::Type::NestedObject
        name: 'autoscaling'
        description: |
          Autoscaler configuration for this NodePool. Autoscaler is enabled only
          if a valid configuration is present.
        properties:
          - !ruby/object:Api::Type::Boolean
            name: 'enabled'
            description: 'Is autoscaling enabled for this node pool.'
          - !ruby/object:Api::Type::Integer
            name: 'minNodeCount'
            description: |
              Minimum number of nodes in the NodePool. Must be >= 1 and <=
              maxNodeCount.
          - !ruby/object:Api::Type::Integer
            name: 'maxNodeCount'
            description: |
              Maximum number of nodes in the NodePool. Must be >= minNodeCount.
              There has to enough quota to scale up the cluster.
      - !ruby/object:Api::Type::NestedObject
        name: 'management'
        description: 'Management configuration for this NodePool.'
        properties:
          - !ruby/object:Api::Type::Boolean
            name: 'autoUpgrade'
            description: |
              A flag that specifies whether node auto-upgrade is enabled for the
              node pool. If enabled, node auto-upgrade helps keep the nodes in
              your node pool up to date with the latest release version of
              Kubernetes.
          - !ruby/object:Api::Type::Boolean
            name: 'autoRepair'
            description: |
              A flag that specifies whether the node auto-repair is enabled for
              the node pool. If enabled, the nodes in this node pool will be
              monitored and, if they fail health checks too many times, an
              automatic repair action will be triggered.
          - !ruby/object:Api::Type::NestedObject
            name: 'upgradeOptions'
            description: 'Specifies the Auto Upgrade knobs for the node pool.'
            properties:
              - !ruby/object:Api::Type::Time
                name: 'autoUpgradeStartTime'
                description: |
                  This field is set when upgrades are about to commence with the
                  approximate start time for the upgrades, in RFC3339 text
                  format.
                output: true
              - !ruby/object:Api::Type::String
                name: 'description'
                description: |
                  This field is set when upgrades are about to commence with the
                  description of the upgrade.
                output: true
      - !ruby/object:Api::Type::NestedObject
        name: 'maxPodsConstraint'
        description: |
          The constraint on the maximum number of pods that can be run simultaneously on a node in the node pool.
        properties:
          - !ruby/object:Api::Type::Integer
            name: 'maxPodsPerNode'
            description: Constraint enforced on the max num of pods per node.
      - !ruby/object:Api::Type::Array
        name: 'conditions'
        description: Which conditions caused the current node pool state.
        item_type: !ruby/object:Api::Type::NestedObject
          properties:
            - !ruby/object:Api::Type::Enum
              name: 'code'
              description: Machine-friendly representation of the condition
              values:
                - UNKNOWN
                - GCE_STOCKOUT
                - GKE_SERVICE_ACCOUNT_DELETED
                - GCE_QUOTA_EXCEEDED
                - SET_BY_OPERATOR
      - !ruby/object:Api::Type::Integer
        name: 'podIpv4CidrSize'
        description: The pod CIDR block size per node in this node pool.
        output: true
