# Copyright 2017 Google Inc.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# TODO(nelsonjr): Change all objects so each test run in parallel: between same
# provider (e.g. DNS managed zone vs. record set) and across provides (e.g.
# Puppet compute address vs. Chef compute address). Once this is done make all
# tests run completely in parallel.

- !ruby/object:Chef::Tester
  product: 'Container'
  tests:
    - name: 'Cluster'
      phases:
        # Auto network
        - name: 'create'
          apply:
            - run: 'google-gcontainer::tests~cluster'
              env:
                cluster_id: cluster-{{run_id}}
              outputs:
                - - 'Chef Client finished, 1/2 resources updated'
        - name: 'create(again)'
          apply:
            - run: 'google-gcontainer::tests~cluster'
              env:
                cluster_id: cluster-{{run_id}}
              outputs:
                - - 'Chef Client finished, 0/2 resources updated'
        - name: 'delete'
          apply:
            - run: 'google-gcontainer::tests~delete_cluster'
              env:
                cluster_id: cluster-{{run_id}}
              outputs:
                - - 'Chef Client finished, 1/2 resources updated'
        - name: 'delete'
          apply:
            - run: 'google-gcontainer::tests~delete_cluster'
              env:
                cluster_id: cluster-{{run_id}}
              outputs:
                - - 'Chef Client finished, 0/2 resources updated'
    - name: 'NodePool'
      phases:
        - name: 'create'
          apply:
            - run: 'google-gcontainer::tests~cluster'
              env:
                cluster_id: nodepool-{{run_id}}
              outputs:
                - - 'Chef Client finished, 1/2 resources updated'
        - name: 'create(again)'
          apply:
            - run: 'google-gcontainer::tests~cluster'
              env:
                cluster_id: nodepool-{{run_id}}
              outputs:
                - - 'Chef Client finished, 0/2 resources updated'
        - name: 'create'
          apply:
            - run: 'google-gcontainer::tests~node_pool'
              env:
                cluster_id: nodepool-{{run_id}}
              outputs:
                - - 'Chef Client finished, 1/3 resources updated'
        - name: 'create(again)'
          apply:
            - run: 'google-gcontainer::tests~node_pool'
              env:
                cluster_id: nodepool-{{run_id}}
              outputs:
                - - 'Chef Client finished, 0/3 resources updated'
        - name: 'delete'
          apply:
            - run: 'google-gcontainer::tests~delete_node_pool'
              env:
                cluster_id: nodepool-{{run_id}}
              outputs:
                - - 'Chef Client finished, 1/3 resources updated'
        - name: 'delete(again)'
          apply:
            - run: 'google-gcontainer::tests~delete_node_pool'
              env:
                cluster_id: nodepool-{{run_id}}
              outputs:
                - - 'Chef Client finished, 0/3 resources updated'
        # Cleanup Node Pools
        - name: 'cleanup'
          apply:
            - run: 'google-gcontainer::tests~delete_cluster'
              env:
                cluster_id: nodepool-{{run_id}}
              outputs:
                - - 'Chef Client finished, 1/2 resources updated'
        - name: 'cleanup(again)'
          apply:
            - run: 'google-gcontainer::tests~delete_cluster'
              env:
                cluster_id: nodepool-{{run_id}}
              outputs:
                - - 'Chef Client finished, 0/2 resources updated'
