name: TGC Build and Unit Test

permissions: read-all

env:
  status_suffix: "-build-and-unit-tests"

on:
  workflow_dispatch:
    inputs:
      owner:
        description: 'The owner of the fork'
        required: false
        default: 'modular-magician'
      repo:
        description: 'The Base Repository to pull from'
        required: false
        default: 'terraform-google-conversion'
      branch:
        description: 'The branch or sha of the tgc execute against'
        required: true
      sha:
        description: "The commit SHA in magic-modules repository where the status result will be posted"
        required: true

concurrency:
  group: test-tgc-${{ github.event.inputs.owner }}-${{ github.event.inputs.repo }}-${{ github.event.inputs.branch }}
  cancel-in-progress: true

jobs:
  build-and-unit-test:
    permissions:
      statuses: write
    runs-on: ubuntu-latest
    timeout-minutes: 30
    steps:
    - name: Get Job URL
      if: ${{ !cancelled() }}
      id: get_job
      run: |
        response=$(curl --get -Ss -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" -H "Accept: application/vnd.github.v3+json" "https://api.github.com/repos/${{ github.repository }}/actions/runs/${{ github.run_id }}/attempts/${{ github.run_attempt }}/jobs")
        html_url=$(echo "$response" | jq -r --arg job_name "${{ github.job }}" '.jobs | map(select(.name == $job_name)) | .[0].html_url')
        echo "url=${html_url}" >> $GITHUB_OUTPUT
    - name: Post Pending Status to Pull Request
      if: ${{ !cancelled() }}
      run: |
        curl -X POST -H "Authorization: token ${{secrets.GITHUB_TOKEN}}" \
        -H "Accept: application/vnd.github.v3+json" \
        "https://api.github.com/repos/GoogleCloudPlatform/magic-modules/statuses/${{github.event.inputs.sha}}" \
        -d '{
        "context": "${{ github.event.inputs.repo }}${{ env.status_suffix }}",
        "target_url": "${{ steps.get_job.outputs.url }}",
        "state": "pending"
        }'
    - name: Checkout Repository
      uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.2
      with:
        repository: ${{ github.event.inputs.owner }}/${{ github.event.inputs.repo }}
        ref: ${{ github.event.inputs.branch }}
        fetch-depth: 2
    - name: Cache Go modules and build cache
      uses: actions/cache@0c45773b623bea8c8e75f6c82b208c3cf94ea4f9 # v4.0.2
      with:
        path: |
          ~/go/pkg/mod
        key: ${{ runner.os }}-test-${{ github.event.inputs.repo }}-${{ hashFiles('go.sum') }}
        restore-keys: |
          ${{ runner.os }}-test-${{ github.event.inputs.repo }}-${{ hashFiles('go.sum') }}
          ${{ runner.os }}-test-${{ github.event.inputs.repo }}-
    - name: Check for Code Changes
      id: pull_request
      run: |
        gofiles=$(git diff --name-only HEAD~1 | { grep -e "\.go$" -e "go.mod$" -e "go.sum$" || test $? = 1; })
        if [ -z "$gofiles" ]; then
          echo "has_changes=false" >> $GITHUB_OUTPUT
        else
          echo "has_changes=true" >> $GITHUB_OUTPUT
        fi
    - name: Set up Go
      if: ${{ !failure() && steps.pull_request.outputs.has_changes == 'true' }}
      uses: actions/setup-go@0c52d547c9bc32b1aa3301fd7a9cb496313a4491 # v5.0.0
      with:
        go-version: '^1.21'
    - name: Build Terraform Google Conversion
      if: ${{ !failure() && steps.pull_request.outputs.has_changes == 'true' }}
      run: |
        go mod edit -replace github.com/hashicorp/terraform-provider-google-beta=github.com/${{ github.event.inputs.owner }}/terraform-provider-google-beta@${{ github.event.inputs.branch }}
        go mod tidy
        make build
    - name: Run Unit Tests
      if: ${{ !failure() && steps.pull_request.outputs.has_changes == 'true' }}
      run: |
        make test
    - name: Post Result Status to Pull Request
      if: ${{ !cancelled() }}
      run: |
        curl -X POST -H "Authorization: token ${{secrets.GITHUB_TOKEN}}" \
        -H "Accept: application/vnd.github.v3+json" \
        "https://api.github.com/repos/GoogleCloudPlatform/magic-modules/statuses/${{github.event.inputs.sha}}" \
        -d '{
        "context": "${{ github.event.inputs.repo }}${{ env.status_suffix }}",
        "target_url": "${{ steps.get_job.outputs.url }}",
        "state": "${{ job.status }}"
        }'
