{{/* Copyright 2021 Google LLC. All Rights Reserved.

	Licensed under the Apache License, Version 2.0 (the "License");
	you may not use this file except in compliance with the License.
	You may obtain a copy of the License at

			http://www.apache.org/licenses/LICENSE-2.0

	Unless required by applicable law or agreed to in writing, software
	distributed under the License is distributed on an "AS IS" BASIS,
	WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	See the License for the specific language governing permissions and
	limitations under the License. */}}
// Copyright (c) HashiCorp, Inc.
// SPDX-License-Identifier: MPL-2.0

// ----------------------------------------------------------------------------
//
//     ***     AUTO GENERATED CODE    ***    Type: DCL     ***
//
// ----------------------------------------------------------------------------
//
//     This file is managed by Magic Modules (https://github.com/GoogleCloudPlatform/magic-modules)
//     and is based on the DCL (https://github.com/GoogleCloudPlatform/declarative-resource-client-library).
//     Changes will need to be made to the DCL or Magic Modules instead of here.
//
//     We are not currently able to accept contributions to this file. If changes
//     are required, please file an issue at https://github.com/hashicorp/terraform-provider-google/issues/new/choose
//
// ----------------------------------------------------------------------------

package transport

import (
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/schema"
	framework_schema "github.com/hashicorp/terraform-plugin-framework/provider/schema"
	"github.com/hashicorp/terraform-plugin-framework/schema/validator"
)

// empty string is passed for dcl default since dcl
// [hardcodes the values](https://github.com/GoogleCloudPlatform/declarative-resource-client-library/blob/main/services/google/eventarc/beta/trigger_internal.go#L96-L103)
{{range $index, $pkg := .}}
{{- if $pkg.ShouldWriteProductBasePath }}
var {{$pkg.BasePathIdentifier.ToTitle}}EndpointEntryKey = "{{$pkg.BasePathIdentifier}}_custom_endpoint"
var {{$pkg.BasePathIdentifier.ToTitle}}EndpointEntry = &schema.Schema{
	Type:         schema.TypeString,
	Optional:     true,
}
{{- end}}
{{end}}

type DCLConfig struct {
{{- range $index, $pkg := . }}
{{- if $pkg.ShouldWriteProductBasePath }}
	{{$pkg.BasePathIdentifier.ToTitle}}BasePath string
{{- end}}
{{- end}}
}

func ConfigureDCLProvider(provider *schema.Provider) {
{{- range $index, $pkg := . }}
{{- if $pkg.ShouldWriteProductBasePath }}
	provider.Schema[{{$pkg.BasePathIdentifier.ToTitle}}EndpointEntryKey] = {{$pkg.BasePathIdentifier.ToTitle}}EndpointEntry
{{- end}}
{{- end}}
}

func HandleDCLCustomEndpointDefaults(d *schema.ResourceData) {
{{- range $index, $pkg := . }}
{{- if $pkg.ShouldWriteProductBasePath }}
	if d.Get({{$pkg.BasePathIdentifier.ToTitle}}EndpointEntryKey) == "" {
		d.Set({{$pkg.BasePathIdentifier.ToTitle}}EndpointEntryKey, MultiEnvDefault([]string{
			"GOOGLE_{{$pkg.BasePathIdentifier.ToUpper}}_CUSTOM_ENDPOINT",
		}, ""))
	}
{{- end}}
{{- end}}
}

// plugin-framework provider set-up
func ConfigureDCLCustomEndpointAttributesFramework(frameworkSchema *framework_schema.Schema) {
{{- range $index, $pkg := . }}
{{- if $pkg.ShouldWriteProductBasePath }}
	frameworkSchema.Attributes["{{$pkg.BasePathIdentifier}}_custom_endpoint"] = framework_schema.StringAttribute{
		Optional: true,
        Validators: []validator.String{
            CustomEndpointValidator(),
        },
	}
{{- end}}
{{- end}}
}

func ProviderDCLConfigure(d *schema.ResourceData, config *Config) interface{} {
	// networkConnectivity uses mmv1 basePath, assuredworkloads has a location variable in the basepath, can't be defined here.
	config.ApikeysBasePath = "https://apikeys.googleapis.com/v2/"
	config.AssuredWorkloadsBasePath = d.Get(AssuredWorkloadsEndpointEntryKey).(string)
	config.CloudBuildWorkerPoolBasePath = "https://cloudbuild.googleapis.com/v1/"
	config.CloudResourceManagerBasePath = "https://cloudresourcemanager.googleapis.com/"
	config.EventarcBasePath = "https://eventarc.googleapis.com/v1/"
	config.FirebaserulesBasePath = "https://firebaserules.googleapis.com/v1/"
	config.GKEHubFeatureBasePath = "https://gkehub.googleapis.com/v1beta1/"
	config.RecaptchaEnterpriseBasePath = "https://recaptchaenterprise.googleapis.com/v1/"

	return config
}
