{{/* Copyright 2021 Google LLC. All Rights Reserved.

	Licensed under the Apache License, Version 2.0 (the "License");
	you may not use this file except in compliance with the License.
	You may obtain a copy of the License at

			http://www.apache.org/licenses/LICENSE-2.0

	Unless required by applicable law or agreed to in writing, software
	distributed under the License is distributed on an "AS IS" BASIS,
	WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	See the License for the specific language governing permissions and
	limitations under the License. */}}
	// ----------------------------------------------------------------------------
	//
	//     ***     AUTO GENERATED CODE    ***    AUTO GENERATED CODE     ***
	//
	// ----------------------------------------------------------------------------
	//
	//     This file is automatically generated by Magic Modules and manual
	//     changes will be clobbered when the file is regenerated.
	//
	//     Please read more about how to change this file in
	//     .github/CONTRIBUTING.md.
	//
	// ----------------------------------------------------------------------------

package google

import (
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/schema"
)

{{range $index, $pkg := .}}
{{- if $pkg.WriteBasePath }}
var {{$pkg.ProductType}}EndpointEntryKey = "{{$pkg.ProductName}}_custom_endpoint"
var {{$pkg.ProductType}}EndpointEntry = &schema.Schema{
	Type:         schema.TypeString,
	Optional:     true,
	DefaultFunc: schema.MultiEnvDefaultFunc([]string{
		"GOOGLE_{{$pkg.ProductNameUpper}}_CUSTOM_ENDPOINT",
	}, ""),
}
{{- end}}
{{end}}

//Add new values to config.go.erb config object declaration
{{- range $index, $pkg := . }}
{{- if $pkg.WriteBasePath }}
//{{$pkg.ProductType}}BasePath string
{{- end}}
// client{{$pkg.ProductType}}DCL *{{$pkg.PackageName}}Dcl.Client
{{- end}}

//Add new values to config.go.erb object initialization
{{- range $index, $pkg := . }}
// c.client{{$pkg.ProductType}}DCL = {{$pkg.PackageName}}Dcl.NewClient(dcl.NewConfig(dclClientOptions, dclUserAgentOptions,dclLoggerOptions, dcl.WithBasePath(c.{{$pkg.ProductType}}BasePath)))
{{- end}}

//Add new values to provider.go.erb schema initialization
{{- range $index, $pkg := . }}
{{- if $pkg.WriteBasePath }}
// {{$pkg.ProductType}}EndpointEntryKey:               {{$pkg.ProductType}}EndpointEntry,
{{- end}}
{{- end}}

//Add new values to provider.go.erb - provider block read
{{- range $index, $pkg := . }}
{{- if $pkg.WriteBasePath }}
// config.{{$pkg.ProductType}}BasePath = d.Get({{$pkg.ProductType}}EndpointEntryKey).(string)
{{- end}}
{{- end}}

