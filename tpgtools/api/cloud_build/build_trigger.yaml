components:
  schemas:
    BuildTrigger:
      properties:
        build:
          description: The build to run.
          properties:
            images:
              description: A list of images to be pushed upon the successful completion
                of all build steps. The images are pushed using the builder service
                account's credentials. The digests of the pushed images will be stored
                in the `Build` resource's results field. If any of the images fail
                to be pushed, the build status is marked `FAILURE`.
              items:
                type: string
                x-dcl-go-type: string
              type: array
              x-dcl-go-name: Images
              x-dcl-list-type: list
            logsBucket:
              description: Google Cloud Storage bucket where logs should be written
                (see (https://cloud.google.com/storage/docs/bucket-naming#requirements)).
                Logs file names will be of the format `${logs_bucket}/log-${build_id}.txt`.
              type: string
              x-dcl-go-name: LogsBucket
            queueTtl:
              description: TTL in queue for this build. If provided and the build
                is enqueued longer than this value, the build will expire and the
                build status will be `EXPIRED`. The TTL starts ticking from create_time.
              type: string
              x-dcl-go-name: QueueTtl
            secrets:
              description: Secrets to decrypt using Cloud Key Management Service.
              items:
                properties:
                  kmsKeyName:
                    description: Cloud KMS key name to use to decrypt these envs.
                    type: string
                    x-dcl-go-name: KmsKeyName
                  secretEnv:
                    additionalProperties:
                      type: string
                    description: Map of environment variable name to its encrypted
                      value. Secret environment variables must be unique across all
                      of a build's secrets, and must be used by at least one build
                      step. Values can be at most 64 KB in size. There can be at most
                      100 secret values across all of a build's secrets.
                    type: object
                    x-dcl-go-name: SecretEnv
                required:
                - kmsKeyName
                type: object
                x-dcl-go-type: BuildTriggerBuildSecrets
              type: array
              x-dcl-go-name: Secrets
              x-dcl-list-type: list
            source:
              description: The location of the source files to build.
              properties:
                repoSource:
                  description: If provided, get the source from this location in a
                    Cloud Source Repository.
                  properties:
                    branchName:
                      description: Regex matching branches to build. The syntax of
                        the regular expressions accepted is the syntax accepted by
                        RE2 and described at https://github.com/google/re2/wiki/Syntax
                      type: string
                      x-dcl-go-name: BranchName
                    commitSha:
                      description: Explicit commit SHA to build.
                      type: string
                      x-dcl-go-name: CommitSha
                    dir:
                      description: Directory, relative to the source root, in which
                        to run the build. This must be a relative path. If a step's
                        `dir` is specified and is an absolute path, this value is
                        ignored for that step's execution.
                      type: string
                      x-dcl-go-name: Dir
                    invertRegex:
                      description: Only trigger a build if the revision regex does
                        NOT match the revision regex.
                      type: boolean
                      x-dcl-go-name: InvertRegex
                    projectId:
                      description: ID of the project that owns the Cloud Source Repository.
                        If omitted, the project ID requesting the build is assumed.
                      type: string
                      x-dcl-go-name: ProjectId
                      x-dcl-server-default: true
                    repoName:
                      description: Required. Name of the Cloud Source Repository.
                      type: string
                      x-dcl-go-name: RepoName
                    substitutions:
                      additionalProperties:
                        type: string
                      description: 'Substitutions to use in a triggered build. Should
                        only be used with RunBuildTrigger '
                      type: object
                      x-dcl-go-name: Substitutions
                    tagName:
                      description: Regex matching tags to build. The syntax of the
                        regular expressions accepted is the syntax accepted by RE2
                        and described at https://github.com/google/re2/wiki/Syntax
                      type: string
                      x-dcl-go-name: TagName
                  required:
                  - repoName
                  type: object
                  x-dcl-go-name: RepoSource
                  x-dcl-go-type: BuildTriggerBuildSourceRepoSource
                storageSource:
                  description: If provided, get the source from this location in Google
                    Cloud Storage.
                  properties:
                    bucket:
                      description: Google Cloud Storage bucket containing the source
                        (see (https://cloud.google.com/storage/docs/bucket-naming#requirements)).
                      type: string
                      x-dcl-go-name: Bucket
                    generation:
                      description: Google Cloud Storage generation for the object.
                        If the generation is omitted, the latest generation will be
                        used.
                      type: string
                      x-dcl-go-name: Generation
                    object:
                      description: Google Cloud Storage object containing the source.
                        This object must be a gzipped archive file (`.tar.gz`) containing
                        source to build.
                      type: string
                      x-dcl-go-name: Object
                  required:
                  - bucket
                  - object
                  type: object
                  x-dcl-go-name: StorageSource
                  x-dcl-go-type: BuildTriggerBuildSourceStorageSource
              type: object
              x-dcl-go-name: Source
              x-dcl-go-type: BuildTriggerBuildSource
            steps:
              description: Required. The operations to be performed on the workspace.
              items:
                properties:
                  args:
                    description: A list of arguments that will be presented to the
                      step when it is started. If the image used to run the step's
                      container has an entrypoint, the `args` are used as arguments
                      to that entrypoint. If the image does not define an entrypoint,
                      the first element in args is used as the entrypoint, and the
                      remainder will be used as arguments.
                    items:
                      type: string
                      x-dcl-go-type: string
                    type: array
                    x-dcl-go-name: Args
                    x-dcl-list-type: list
                  dir:
                    description: Working directory to use when running this step's
                      container. If this value is a relative path, it is relative
                      to the build's working directory. If this value is absolute,
                      it may be outside the build's working directory, in which case
                      the contents of the path may not be persisted across build step
                      executions, unless a `volume` for that path is specified. If
                      the build specifies a `RepoSource` with `dir` and a step with
                      a `dir`, which specifies an absolute path, the `RepoSource`
                      `dir` is ignored for the step's execution.
                    type: string
                    x-dcl-go-name: Dir
                  entrypoint:
                    description: Entrypoint to be used instead of the build step image's
                      default entrypoint. If unset, the image's default entrypoint
                      is used.
                    type: string
                    x-dcl-go-name: Entrypoint
                  env:
                    description: A list of environment variable definitions to be
                      used when running a step. The elements are of the form "KEY=VALUE"
                      for the environment variable "KEY" being given the value "VALUE".
                    items:
                      type: string
                      x-dcl-go-type: string
                    type: array
                    x-dcl-go-name: Env
                    x-dcl-list-type: list
                  id:
                    description: Unique identifier for this build step, used in `wait_for`
                      to reference this build step as a dependency.
                    type: string
                    x-dcl-go-name: Id
                  name:
                    description: Required. The name of the container image that will
                      run this particular build step. If the image is available in
                      the host's Docker daemon's cache, it will be run directly. If
                      not, the host will attempt to pull the image first, using the
                      builder service account's credentials if necessary. The Docker
                      daemon's cache will already have the latest versions of all
                      of the officially supported build steps ((https://github.com/GoogleCloudPlatform/cloud-builders)).
                      The Docker daemon will also have cached many of the layers for
                      some popular images, like "ubuntu", "debian", but they will
                      be refreshed at the time you attempt to use them. If you built
                      an image in a previous build step, it will be stored in the
                      host's Docker daemon's cache and is available to use as the
                      name for a later build step.
                    type: string
                    x-dcl-go-name: Name
                  pullTiming:
                    description: Output only. Stores timing information for pulling
                      this build step's builder image only.
                    properties:
                      endTime:
                        description: End of time span.
                        type: string
                        x-dcl-go-name: EndTime
                        x-kubernetes-immutable: true
                      startTime:
                        description: Start of time span.
                        type: string
                        x-dcl-go-name: StartTime
                        x-kubernetes-immutable: true
                    readOnly: true
                    type: object
                    x-dcl-go-name: PullTiming
                    x-dcl-go-type: BuildTriggerBuildStepsPullTiming
                    x-kubernetes-immutable: true
                  secretEnv:
                    description: A list of environment variables which are encrypted
                      using a Cloud Key Management Service crypto key. These values
                      must be specified in the build's `Secret`.
                    items:
                      type: string
                      x-dcl-go-type: string
                    type: array
                    x-dcl-go-name: SecretEnv
                    x-dcl-list-type: list
                  status:
                    description: Output only. Status of the build step. At this time,
                      build step status is only updated on build completion; step
                      status is not updated in real-time as the build progresses.
                    enum:
                    - STATUS_UNKNOWN
                    - QUEUED
                    - WORKING
                    - SUCCESS
                    - FAILURE
                    - INTERNAL_ERROR
                    - TIMEOUT
                    - CANCELLED
                    - EXPIRED
                    readOnly: true
                    type: string
                    x-dcl-go-name: Status
                    x-dcl-go-type: BuildTriggerBuildStepsStatusEnum
                    x-kubernetes-immutable: true
                  timeout:
                    default: 300s
                    description: Time limit for executing this build step. If not
                      defined, the step has no time limit and will be allowed to continue
                      to run until either it completes or the build itself times out.
                    type: string
                    x-dcl-go-name: Timeout
                  timing:
                    description: Output only. Stores timing information for executing
                      this build step.
                    properties:
                      endTime:
                        description: End of time span.
                        type: string
                        x-dcl-go-name: EndTime
                        x-kubernetes-immutable: true
                      startTime:
                        description: Start of time span.
                        type: string
                        x-dcl-go-name: StartTime
                        x-kubernetes-immutable: true
                    readOnly: true
                    type: object
                    x-dcl-go-name: Timing
                    x-dcl-go-type: BuildTriggerBuildStepsTiming
                    x-kubernetes-immutable: true
                  volumes:
                    description: List of volumes to mount into the build step. Each
                      volume is created as an empty volume prior to execution of the
                      build step. Upon completion of the build, volumes and their
                      contents are discarded. Using a named volume in only one step
                      is not valid as it is indicative of a build request with an
                      incorrect configuration.
                    items:
                      properties:
                        name:
                          description: Name of the volume to mount. Volume names must
                            be unique per build step and must be valid names for Docker
                            volumes. Each named volume must be used by at least two
                            build steps.
                          type: string
                          x-dcl-go-name: Name
                        path:
                          description: Path at which to mount the volume. Paths must
                            be absolute and cannot conflict with other volume paths
                            on the same build step or with certain reserved volume
                            paths.
                          type: string
                          x-dcl-go-name: Path
                      required:
                      - name
                      - path
                      type: object
                      x-dcl-go-type: BuildTriggerBuildStepsVolumes
                    type: array
                    x-dcl-go-name: Volumes
                    x-dcl-list-type: list
                  waitFor:
                    description: The ID(s) of the step(s) that this build step depends
                      on. This build step will not start until all the build steps
                      in `wait_for` have completed successfully. If `wait_for` is
                      empty, this build step will start when all previous build steps
                      in the `Build.Steps` list have completed successfully.
                    items:
                      type: string
                      x-dcl-go-type: string
                    type: array
                    x-dcl-go-name: WaitFor
                    x-dcl-list-type: list
                required:
                - name
                type: object
                x-dcl-go-type: BuildTriggerBuildSteps
              type: array
              x-dcl-go-name: Steps
              x-dcl-list-type: list
            substitutions:
              additionalProperties:
                type: string
              description: Substitutions data for `Build` resource.
              type: object
              x-dcl-go-name: Substitutions
            tags:
              description: Tags for annotation of a `Build`. These are not docker
                tags.
              items:
                type: string
                x-dcl-go-type: string
              type: array
              x-dcl-go-name: Tags
              x-dcl-list-type: list
            timeout:
              default: 600s
              description: Amount of time that this build should be allowed to run,
                to second granularity. If this amount of time elapses, work on the
                build will cease and the build status will be `TIMEOUT`. `timeout`
                starts ticking from `startTime`. Default time is ten minutes.
              type: string
              x-dcl-go-name: Timeout
          required:
          - steps
          type: object
          x-dcl-go-name: Build
          x-dcl-go-type: BuildTriggerBuild
        createTime:
          description: Output only. Time when the trigger was created.
          readOnly: true
          type: string
          x-dcl-go-name: CreateTime
          x-kubernetes-immutable: true
        description:
          description: Human-readable description of this trigger.
          type: string
          x-dcl-go-name: Description
        disabled:
          description: If true, the trigger will never automatically execute a build.
          type: boolean
          x-dcl-go-name: Disabled
        filename:
          description: 'Path, from the source root, to a file whose contents is used
            for the template. '
          type: string
          x-dcl-go-name: Filename
        github:
          description: GitHubEventsConfig describes the configuration of a trigger
            that creates a build whenever a GitHub event is received. Mutually exclusive
            with `trigger_template`.
          properties:
            name:
              description: 'Name of the repository. For example: The name for https://github.com/googlecloudplatform/cloud-builders
                is "cloud-builders".'
              type: string
              x-dcl-go-name: Name
            owner:
              description: 'Owner of the repository. For example: The owner for https://github.com/googlecloudplatform/cloud-builders
                is "googlecloudplatform".'
              type: string
              x-dcl-go-name: Owner
            pullRequest:
              description: filter to match changes in pull requests.
              properties:
                branch:
                  description: Regex of branches to match. The syntax of the regular
                    expressions accepted is the syntax accepted by RE2 and described
                    at https://github.com/google/re2/wiki/Syntax
                  type: string
                  x-dcl-go-name: Branch
                commentControl:
                  description: Configure builds to run whether a repository owner
                    or collaborator need to comment `/gcbrun`.
                  enum:
                  - COMMENTS_DISABLED
                  - COMMENTS_ENABLED
                  - COMMENTS_ENABLED_FOR_EXTERNAL_CONTRIBUTORS_ONLY
                  type: string
                  x-dcl-go-name: CommentControl
                  x-dcl-go-type: BuildTriggerGithubPullRequestCommentControlEnum
                invertRegex:
                  description: If true, branches that do NOT match the git_ref will
                    trigger a build.
                  type: boolean
                  x-dcl-go-name: InvertRegex
              required:
              - branch
              type: object
              x-dcl-go-name: PullRequest
              x-dcl-go-type: BuildTriggerGithubPullRequest
            push:
              description: filter to match changes in refs like branches, tags.
              properties:
                branch:
                  description: Regexes matching branches to build. The syntax of the
                    regular expressions accepted is the syntax accepted by RE2 and
                    described at https://github.com/google/re2/wiki/Syntax
                  type: string
                  x-dcl-go-name: Branch
                invertRegex:
                  description: When true, only trigger a build if the revision regex
                    does NOT match the git_ref regex.
                  type: boolean
                  x-dcl-go-name: InvertRegex
                tag:
                  description: Regexes matching tags to build. The syntax of the regular
                    expressions accepted is the syntax accepted by RE2 and described
                    at https://github.com/google/re2/wiki/Syntax
                  type: string
                  x-dcl-go-name: Tag
              type: object
              x-dcl-go-name: Push
              x-dcl-go-type: BuildTriggerGithubPush
          type: object
          x-dcl-go-name: Github
          x-dcl-go-type: BuildTriggerGithub
        id:
          description: Output only. Unique identifier of the trigger.
          readOnly: true
          type: string
          x-dcl-go-name: Id
          x-kubernetes-immutable: true
        ignoredFiles:
          description: ignored_files and included_files are file glob matches using
            https://golang.org/pkg/path/filepath/#Match extended with support for
            "\\\*\\\*". If ignored_files and changed files are both empty, then they
            are not used to determine whether or not to trigger a build. If ignored_files
            is not empty, then we ignore any files that match any of the ignored_file
            globs. If the change has no files that are outside of the ignored_files
            globs, then we do not trigger a build.
          items:
            type: string
            x-dcl-go-type: string
          type: array
          x-dcl-go-name: IgnoredFiles
          x-dcl-list-type: list
        includedFiles:
          description: If any of the files altered in the commit pass the ignored_files
            filter and included_files is empty, then as far as this filter is concerned,
            we should trigger the build. If any of the files altered in the commit
            pass the ignored_files filter and included_files is not empty, then we
            make sure that at least one of those files matches a included_files glob.
            If not, then we do not trigger a build.
          items:
            type: string
            x-dcl-go-type: string
          type: array
          x-dcl-go-name: IncludedFiles
          x-dcl-list-type: list
        name:
          description: 'User-assigned name of the trigger. Must be unique within the
            project. Trigger names must meet the following requirements: + They must
            contain only alphanumeric characters and dashes. + They can be 1-64 characters
            long. + They must begin and end with an alphanumeric character.'
          type: string
          x-dcl-go-name: Name
        project:
          description: The project to run builds in.
          type: string
          x-dcl-go-name: Project
          x-kubernetes-immutable: true
        substitutions:
          additionalProperties:
            type: string
          description: 'Substitutions for Build resource. The keys must match the
            following regular expression: `^_+$`.'
          type: object
          x-dcl-go-name: Substitutions
        tags:
          description: Tags for annotation of a `BuildTrigger`
          items:
            type: string
            x-dcl-go-type: string
          type: array
          x-dcl-go-name: Tags
          x-dcl-list-type: list
        triggerTemplate:
          description: Template describing the types of source changes to trigger
            a build. Branch and tag names in trigger templates are interpreted as
            regular expressions. Any branch or tag change that matches that regular
            expression will trigger a build. Mutually exclusive with `github`.
          properties:
            branchName:
              description: Regex matching branches to build. The syntax of the regular
                expressions accepted is the syntax accepted by RE2 and described at
                https://github.com/google/re2/wiki/Syntax
              type: string
              x-dcl-go-name: BranchName
            commitSha:
              description: Explicit commit SHA to build.
              type: string
              x-dcl-go-name: CommitSha
            dir:
              description: Directory, relative to the source root, in which to run
                the build. This must be a relative path. If a step's `dir` is specified
                and is an absolute path, this value is ignored for that step's execution.
              type: string
              x-dcl-go-name: Dir
            invertRegex:
              description: Only trigger a build if the revision regex does NOT match
                the revision regex.
              type: boolean
              x-dcl-go-name: InvertRegex
            projectId:
              description: ID of the project that owns the Cloud Source Repository.
                If omitted, the project ID requesting the build is assumed.
              type: string
              x-dcl-go-name: ProjectId
              x-dcl-server-default: true
            repoName:
              default: default
              description: Required. Name of the Cloud Source Repository.
              type: string
              x-dcl-go-name: RepoName
            tagName:
              description: Regex matching tags to build. The syntax of the regular
                expressions accepted is the syntax accepted by RE2 and described at
                https://github.com/google/re2/wiki/Syntax
              type: string
              x-dcl-go-name: TagName
          type: object
          x-dcl-go-name: TriggerTemplate
          x-dcl-go-type: BuildTriggerTriggerTemplate
      required:
      - name
      - project
      title: BuildTrigger
      type: object
      x-dcl-id: projects/{{project}}/triggers/{{name}}
      x-dcl-locations: []
      x-dcl-parent-container: project
      x-dcl-uses-state-hint: false
info:
  description: DCL Specification for the cloudbuild BuildTrigger resource
  title: BuildTrigger
paths:
    list:
      description: The function called used to list information about many BuildTrigger
      parameters:
      - name: project
        required: true
        schema:
          type: string
