# Copyright 2020 Google LLC. All Rights Reserved.
# 
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
# 
#     http://www.apache.org/licenses/LICENSE-2.0
# 
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
components:
  schemas:
    Autoscaler:
      properties:
        autoscalingPolicy:
          description: 'The configuration parameters for the autoscaling algorithm.
            You can define one or more of the policies for an autoscaler: \\\`cpuUtilization\\\`,
            \\\`customMetricUtilizations\\\`, and \\\`loadBalancingUtilization\\\`.
            If none of these are specified, the default will be to autoscale based
            on \\\`cpuUtilization\\\` to \\\`0.6\\\` or 60%.'
          properties:
            coolDownPeriodSec:
              description: The number of seconds that the autoscaler should wait before
                it starts collecting information from a new instance. This prevents
                the autoscaler from collecting information when the instance is initializing,
                during which the collected usage would not be reliable. The default
                time autoscaler waits is 60 seconds. Virtual machine initialization
                times might vary because of numerous factors. We recommend that you
                test how long an instance may take to initialize. To do this, create
                an instance and time the startup process.
              format: int64
              type: integer
              x-dcl-go-name: CoolDownPeriodSec
              x-kubernetes-immutable: true
              default: 60
            cpuUtilization:
              description: Defines the CPU utilization policy that allows the autoscaler
                to scale based on the average CPU utilization of a managed instance
                group.
              properties:
                utilizationTarget:
                  description: The target CPU utilization that the autoscaler should
                    maintain. Must be a float value in the range (0, 1\\\]. If not
                    specified, the default is \\\`0.6\\\`. If the CPU level is below
                    the target utilization, the autoscaler scales down the number
                    of instances until it reaches the minimum number of instances
                    you specified or until the average CPU of your instances reaches
                    the target utilization. If the average CPU is above the target
                    utilization, the autoscaler scales up until it reaches the maximum
                    number of instances you specified or until the average utilization
                    reaches the target utilization.
                  format: double
                  type: number
                  x-dcl-go-name: UtilizationTarget
              required:
              - utilizationTarget
              type: object
              x-dcl-go-name: CpuUtilization
              x-dcl-go-type: AutoscalerAutoscalingPolicyCpuUtilization
              x-dcl-server-default: true
            customMetricUtilizations:
              description: Configuration parameters of autoscaling based on a custom
                metric.
              items:
                properties:
                  filter:
                    description: A filter string, compatible with a Stackdriver Monitoring
                      filter string for TimeSeries.list API call. This filter is used
                      to select a specific TimeSeries for the purpose of autoscaling
                      and to determine whether the metric is exporting per-instance
                      or per-group data.
                    type: string
                    x-dcl-go-name: Filter
                  metric:
                    description: The identifier (type) of the Stackdriver Monitoring
                      metric. The metric cannot have negative values. The metric must
                      have a value type of \\\`INT64\\\` or \\\`DOUBLE\\\`.
                    type: string
                    x-dcl-go-name: Metric
                  singleInstanceAssignment:
                    description: If scaling is based on a per-group metric value that
                      represents the total amount of work to be done or resource usage,
                      set this value to an amount assigned for a single instance of
                      the scaled group.
                    format: double
                    type: number
                    x-dcl-go-name: SingleInstanceAssignment
                  utilizationTarget:
                    description: The target value of the metric that autoscaler should
                      maintain. This must be a positive value. A utilization metric
                      scales number of virtual machines handling requests to increase
                      or decrease proportionally to the metric. For example, a good
                      metric to use as a utilization\_target is `https://www.googleapis.com/compute/v1/instance/network/received_bytes_count`.
                      The autoscaler will work to keep this value constant for each
                      of the instances.
                    format: double
                    type: number
                    x-dcl-go-name: UtilizationTarget
                  utilizationTargetType:
                    description: Defines how target utilization value is expressed
                      for a Stackdriver Monitoring metric. Either `GAUGE`, `DELTA_PER_SECOND`,
                      or `DELTA_PER_MINUTE`.
                    enum:
                    - GAUGE
                    - DELTA_PER_SECOND
                    - DELTA_PER_MINUTE
                    type: string
                    x-dcl-go-name: UtilizationTargetType
                    x-dcl-go-type: AutoscalerAutoscalingPolicyCustomMetricUtilizationsUtilizationTargetTypeEnum
                required:
                - metric
                type: object
                x-dcl-go-type: AutoscalerAutoscalingPolicyCustomMetricUtilizations
              type: array
              x-dcl-go-name: CustomMetricUtilizations
              x-dcl-list-type: list
            loadBalancingUtilization:
              description: Configuration parameters of autoscaling based on load balancer.
              properties:
                utilizationTarget:
                  description: Fraction of backend capacity utilization (set in HTTP(S)
                    load balancing configuration) that autoscaler should maintain.
                    Must be a positive float value. If not defined, the default is
                    \\\`0.8\\\`.
                  format: double
                  type: number
                  x-dcl-go-name: UtilizationTarget
              required:
              - utilizationTarget
              type: object
              x-dcl-go-name: LoadBalancingUtilization
              x-dcl-go-type: AutoscalerAutoscalingPolicyLoadBalancingUtilization
            maxNumReplicas:
              description: The maximum number of instances that the autoscaler can
                scale up to. This is required when creating or updating an autoscaler.
                The maximum number of replicas should not be lower than minimal number
                of replicas.
              format: int64
              type: integer
              x-dcl-go-name: MaxNumReplicas
            minNumReplicas:
              description: The minimum number of replicas that the autoscaler can
                scale down to. This cannot be less than 0. If not provided, autoscaler
                will choose a default value depending on maximum number of instances
                allowed.
              format: int64
              type: integer
              x-dcl-go-name: MinNumReplicas
              x-dcl-send-empty: true
            mode:
              default: "ON"
              description: Defines operating mode for this policy.
              enum:
              - "OFF"
              - "ON"
              - ONLY_SCALE_OUT
              - ONLY_UP
              type: string
              x-dcl-go-name: Mode
              x-dcl-go-type: AutoscalerAutoscalingPolicyModeEnum
            scaleInControl:
              properties:
                maxScaledInReplicas:
                  description: Maximum allowed number (or %) of VMs that can be deducted
                    from the peak recommendation during the window autoscaler looks
                    at when computing recommendations. Possibly all these VMs can
                    be deleted at once so user service needs to be prepared to lose
                    that many VMs in one step.
                  properties:
                    calculated:
                      description: |-
                        Absolute value of VM instances calculated based on the specific mode.

                        - If the value is `fixed`, then the `calculated` value is equal to the `fixed` value.
                        - If the value is a `percent`, then the `calculated` value is `percent`/100 \* `targetSize`. For example, the `calculated` value of a 80% of a managed instance group with 150 instances would be (80/100 \* 150) = 120 VM instances. If there is a remainder, the number is rounded up.
                      format: int64
                      readOnly: true
                      type: integer
                      x-dcl-go-name: Calculated
                      x-kubernetes-immutable: true
                    fixed:
                      description: Specifies a fixed number of VM instances. This
                        must be a positive integer.
                      format: int64
                      type: integer
                      x-dcl-go-name: Fixed
                    percent:
                      description: Specifies a percentage of instances between 0 to
                        100%, inclusive. For example, specify `80` for 80%.
                      format: int64
                      type: integer
                      x-dcl-go-name: Percent
                  type: object
                  x-dcl-go-name: MaxScaledInReplicas
                  x-dcl-go-type: AutoscalerAutoscalingPolicyScaleInControlMaxScaledInReplicas
                timeWindowSec:
                  description: How long back autoscaling should look when computing
                    recommendations to include directives regarding slower scale in,
                    as described above.
                  format: int64
                  type: integer
                  x-dcl-go-name: TimeWindowSec
              type: object
              x-dcl-go-name: ScaleInControl
              x-dcl-go-type: AutoscalerAutoscalingPolicyScaleInControl
              x-dcl-server-default: true
          required:
          - minNumReplicas
          - maxNumReplicas
          type: object
          x-dcl-go-name: AutoscalingPolicy
          x-dcl-go-type: AutoscalerAutoscalingPolicy
        creationTimestamp:
          description: Creation timestamp in \[RFC3339\](https://www.ietf.org/rfc/rfc3339.txt)
            text format.
          type: string
          x-dcl-go-name: CreationTimestamp
          readOnly: true
        description:
          description: An optional description of this resource. Provide this property
            when you create the resource.
          type: string
          x-dcl-go-name: Description
        id:
          description: The unique identifier for the resource. This identifier is
            defined by the server. (-- For time of migration from Autoscaler backend
            this field will accept values which will be stored as legacy autoscaler
            id. --)
          format: int64
          readOnly: true
          type: integer
          x-dcl-go-name: Id
          x-kubernetes-immutable: true
        name:
          description: Name of the resource. Provided by the client when the resource
            is created. The name must be 1-63 characters long, and comply with \\\[RFC1035\\\](https://www.ietf.org/rfc/rfc1035.txt).
            Specifically, the name must be 1-63 characters long and match the regular
            expression \\\\\\\`)?\\\\\\\` which means the first character must be
            a lowercase letter, and all following characters must be a dash, lowercase
            letter, or digit, except the last character, which cannot be a dash.
          type: string
          x-dcl-go-name: Name
          x-kubernetes-immutable: true
        project:
          description: The project for the resource
          type: string
          x-dcl-go-name: Project
          x-kubernetes-immutable: true
        recommendedSize:
          description: Target recommended MIG size (number of instances) computed
            by autoscaler. Autoscaler calculates recommended MIG size even when autoscaling
            policy mode is different from ON. This field is empty when autoscaler
            is not connected to the existing managed instance group or autoscaler
            did not generate its prediction.
          format: int64
          readOnly: true
          type: integer
          x-dcl-go-name: RecommendedSize
          x-kubernetes-immutable: true
        region:
          description: URL of the [region](/compute/docs/regions-zones/#available)
            where the instance group resides (for autoscalers living in regional scope).
          type: string
          x-dcl-go-name: Region
          x-kubernetes-immutable: true
        scalingScheduleStatus:
          additionalProperties:
            type: string
          description: Status information of existing scaling schedules.
          type: object
          x-dcl-go-name: ScalingScheduleStatus
          x-kubernetes-immutable: true
        selfLink:
          description: Server-defined URL for the resource.
          readOnly: true
          type: string
          x-dcl-go-name: SelfLink
          x-kubernetes-immutable: true
        selfLinkWithId:
          description: Server-defined URL for this resource with the resource id.
          type: string
          x-dcl-go-name: SelfLinkWithId
          x-kubernetes-immutable: true
        status:
          description: |-
            The status of the autoscaler configuration. Current set of possible values:

            - `PENDING`: Autoscaler backend hasn't read new/updated configuration.
            - `DELETING`: Configuration is being deleted.
            - `ACTIVE`: Configuration is acknowledged to be effective. Some warnings might be present in the `statusDetails` field.
            - `ERROR`: Configuration has errors. Actionable for users. Details are present in the `statusDetails` field.

             New values might be added in the future.
          enum:
          - PENDING
          - RUNNING
          - DONE
          readOnly: true
          type: string
          x-dcl-go-name: Status
          x-dcl-go-type: AutoscalerStatusEnum
          x-kubernetes-immutable: true
        statusDetails:
          description: Human-readable details about the current state of the autoscaler.
            Read the documentation for [Commonly returned status messages](/compute/docs/autoscaler/understanding-autoscaler-decisions#commonly_returned_status_messages)
            for examples of status messages you might encounter.
          items:
            properties:
              message:
                description: The status message.
                type: string
                x-dcl-go-name: Message
                x-kubernetes-immutable: true
              type:
                description: |-
                  The type of error, warning, or notice returned. Current set of possible values:

                  - `ALL_INSTANCES_UNHEALTHY` (WARNING): All instances in the instance group are unhealthy (not in RUNNING state).
                  - `BACKEND_SERVICE_DOES_NOT_EXIST` (ERROR): There is no backend service attached to the instance group.
                  - `CAPPED_AT_MAX_NUM_REPLICAS` (WARNING): Autoscaler recommends a size greater than maxNumReplicas.
                  - `CUSTOM_METRIC_DATA_POINTS_TOO_SPARSE` (WARNING): The custom metric samples are not exported often enough to be a credible base for autoscaling.
                  - `CUSTOM_METRIC_INVALID` (ERROR): The custom metric that was specified does not exist or does not have the necessary labels.
                  - `MIN_EQUALS_MAX` (WARNING): The minNumReplicas is equal to maxNumReplicas. This means the autoscaler cannot add or remove instances from the instance group.
                  - `MISSING_CUSTOM_METRIC_DATA_POINTS` (WARNING): The autoscaler did not receive any data from the custom metric configured for autoscaling.
                  - `MISSING_LOAD_BALANCING_DATA_POINTS` (WARNING): The autoscaler is configured to scale based on a load balancing signal but the instance group has not received any requests from the load balancer.
                  - `MODE_OFF` (WARNING): Autoscaling is turned off. The number of instances in the group won't change automatically. The autoscaling configuration is preserved.
                  - `MODE_ONLY_UP` (WARNING): Autoscaling is in the "Autoscale only up" mode. The autoscaler can add instances but not remove any.
                  - `MORE_THAN_ONE_BACKEND_SERVICE` (ERROR): The instance group cannot be autoscaled because it has more than one backend service attached to it.
                  - `NOT_ENOUGH_QUOTA_AVAILABLE` (ERROR): There is insufficient quota for the necessary resources, such as CPU or number of instances.
                  - `REGION_RESOURCE_STOCKOUT` (ERROR): Shown only for regional autoscalers: there is a resource stockout in the chosen region.
                  - `SCALING_TARGET_DOES_NOT_EXIST` (ERROR): The target to be scaled does not exist.
                  - `UNSUPPORTED_MAX_RATE_LOAD_BALANCING_CONFIGURATION` (ERROR): Autoscaling does not work with an HTTP/S load balancer that has been configured for maxRate.
                  - `ZONE_RESOURCE_STOCKOUT` (ERROR): For zonal autoscalers: there is a resource stockout in the chosen zone. For regional autoscalers: in at least one of the zones you're using there is a resource stockout.

                   New values might be added in the future. Some of the values might not be available in all API versions.
                enum:
                - PATH
                - OTHER
                - PARAMETER
                type: string
                x-dcl-go-name: Type
                x-dcl-go-type: AutoscalerStatusDetailsTypeEnum
                x-kubernetes-immutable: true
            type: object
            x-dcl-go-type: AutoscalerStatusDetails
          readOnly: true
          type: array
          x-dcl-go-name: StatusDetails
          x-dcl-list-type: list
          x-kubernetes-immutable: true
        target:
          description: URL of the managed instance group that this autoscaler will
            scale.
          type: string
          x-dcl-go-name: Target
          x-dcl-references:
          - field: name
            resource: Compute/InstanceGroupManager
        zone:
          description: URL of the \\\[zone\\\](/compute/docs/regions-zones/#available)
            where the instance group resides (for autoscalers living in zonal scope).
          type: string
          x-dcl-go-name: Zone
          x-kubernetes-immutable: true
      required:
      - name
      - target
      - autoscalingPolicy
      - project
      title: Autoscaler
      type: object
      x-dcl-id: projects/{{project}}/zones/{{zone}}/autoscalers/{{name}}
      x-dcl-locations:
      - zone
      - region
      x-dcl-parent-container: project
      x-dcl-uses-state-hint: false
info:
  description: DCL Specification for the compute Autoscaler resource
  title: Compute/Autoscaler
paths:
  list:
    description: The function called used to list information about many Autoscaler
    parameters:
    - name: project
      required: true
    - name: region
      required: true
    - name: zone
      required: true
