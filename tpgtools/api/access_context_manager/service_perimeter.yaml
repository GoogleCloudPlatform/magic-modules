components:
  schemas:
    ServicePerimeter:
      properties:
        createTime:
          description: 'Time the AccessPolicy was created in UTC. '
          format: date-time
          readOnly: true
          type: string
          x-dcl-go-name: CreateTime
          x-kubernetes-immutable: true
        description:
          description: 'Description of the ServicePerimeter and its use. Does not
            affect behavior. '
          type: string
          x-dcl-go-name: Description
        name:
          description: 'Resource name for the ServicePerimeter. The short_name component
            must begin with a letter and only include alphanumeric and ''_''. Format:
            accessPolicies/{policy_id}/servicePerimeters/{short_name} '
          type: string
          x-dcl-go-name: Name
          x-kubernetes-immutable: true
        perimeterType:
          default: PERIMETER_TYPE_REGULAR
          description: 'Specifies the type of the Perimeter. There are two types:
            regular and bridge. Regular Service Perimeter contains resources, access
            levels, and restricted services. Every resource can be in at most ONE
            regular Service Perimeter.  In addition to being in a regular service
            perimeter, a resource can also be in zero or more perimeter bridges. A
            perimeter bridge only contains resources. Cross project operations are
            permitted if all effected resources share some perimeter (whether bridge
            or regular). Perimeter Bridge does not contain access levels or services:
            those are governed entirely by the regular perimeter that resource is
            in.  Perimeter Bridges are typically useful when building more complex
            topologies with many independent perimeters that need to share some data
            with a common perimeter, but should not be able to share data among themselves. '
          enum:
          - PERIMETER_TYPE_REGULAR
          - PERIMETER_TYPE_BRIDGE
          type: string
          x-dcl-go-name: PerimeterType
          x-dcl-go-type: ServicePerimeterPerimeterTypeEnum
          x-kubernetes-immutable: true
        policy:
          description: 'The AccessPolicy this ServicePerimeter lives in. Format: accessPolicies/{policy_id} '
          type: string
          x-dcl-go-name: Policy
          x-kubernetes-immutable: true
        spec:
          description: 'Proposed (or dry run) ServicePerimeter configuration. This
            configuration allows to specify and test ServicePerimeter configuration
            without enforcing actual access restrictions. Only allowed to be set when
            the "useExplicitDryRunSpec" flag is set. '
          properties:
            accessLevels:
              description: 'A list of AccessLevel resource names that allow resources
                within the ServicePerimeter to be accessed from the internet. AccessLevels
                listed must be in the same policy as this ServicePerimeter. Referencing
                a nonexistent AccessLevel is a syntax error. If no AccessLevel names
                are listed, resources within the perimeter can only be accessed via
                GCP calls with request origins within the perimeter. For Service Perimeter
                Bridge, must be empty.  Format: accessPolicies/{policy_id}/accessLevels/{access_level_name} '
              items:
                type: string
                x-dcl-go-type: string
              type: array
              x-dcl-go-name: AccessLevels
              x-dcl-list-type: list
            resources:
              description: 'A list of GCP resources that are inside of the service
                perimeter. Currently only projects are allowed. Format: projects/{project_number} '
              items:
                type: string
                x-dcl-go-type: string
              type: array
              x-dcl-go-name: Resources
              x-dcl-list-type: list
            restrictedServices:
              description: 'GCP services that are subject to the Service Perimeter
                restrictions. Must contain a list of services. For example, if `storage.googleapis.com`
                is specified, access to the storage buckets inside the perimeter must
                meet the perimeter''s access restrictions. '
              items:
                type: string
                x-dcl-go-type: string
              type: array
              x-dcl-go-name: RestrictedServices
              x-dcl-list-type: list
            vpcAccessibleServices:
              description: Configuration for APIs allowed within Perimeter.
              properties:
                allowedServices:
                  description: The list of APIs usable within the Service Perimeter.
                    Must be empty unless 'enableRestriction' is True.
                  items:
                    type: string
                    x-dcl-go-type: string
                  type: array
                  x-dcl-go-name: AllowedServices
                  x-dcl-list-type: list
                enableRestriction:
                  description: Whether to restrict API calls within the Service Perimeter
                    to the list of APIs specified in 'allowedServices'.
                  type: boolean
                  x-dcl-go-name: EnableRestriction
              type: object
              x-dcl-go-name: VPCAccessibleServices
              x-dcl-go-type: ServicePerimeterSpecVPCAccessibleServices
          type: object
          x-dcl-go-name: Spec
          x-dcl-go-type: ServicePerimeterSpec
        status:
          description: 'ServicePerimeter configuration. Specifies sets of resources,
            restricted services and access levels that determine perimeter content
            and boundaries. '
          properties:
            accessLevels:
              description: 'A list of AccessLevel resource names that allow resources
                within the ServicePerimeter to be accessed from the internet. AccessLevels
                listed must be in the same policy as this ServicePerimeter. Referencing
                a nonexistent AccessLevel is a syntax error. If no AccessLevel names
                are listed, resources within the perimeter can only be accessed via
                GCP calls with request origins within the perimeter. For Service Perimeter
                Bridge, must be empty.  Format: accessPolicies/{policy_id}/accessLevels/{access_level_name} '
              items:
                type: string
                x-dcl-go-type: string
              type: array
              x-dcl-go-name: AccessLevels
              x-dcl-list-type: list
            resources:
              description: 'A list of GCP resources that are inside of the service
                perimeter. Currently only projects are allowed. Format: projects/{project_number} '
              items:
                type: string
                x-dcl-go-type: string
              type: array
              x-dcl-go-name: Resources
              x-dcl-list-type: list
            restrictedServices:
              description: 'GCP services that are subject to the Service Perimeter
                restrictions. Must contain a list of services. For example, if `storage.googleapis.com`
                is specified, access to the storage buckets inside the perimeter must
                meet the perimeter''s access restrictions. '
              items:
                type: string
                x-dcl-go-type: string
              type: array
              x-dcl-go-name: RestrictedServices
              x-dcl-list-type: list
            vpcAccessibleServices:
              description: Configuration for APIs allowed within Perimeter.
              properties:
                allowedServices:
                  description: The list of APIs usable within the Service Perimeter.
                    Must be empty unless 'enableRestriction' is True.
                  items:
                    type: string
                    x-dcl-go-type: string
                  type: array
                  x-dcl-go-name: AllowedServices
                  x-dcl-list-type: list
                enableRestriction:
                  description: Whether to restrict API calls within the Service Perimeter
                    to the list of APIs specified in 'allowedServices'.
                  type: boolean
                  x-dcl-go-name: EnableRestriction
              type: object
              x-dcl-go-name: VPCAccessibleServices
              x-dcl-go-type: ServicePerimeterStatusVPCAccessibleServices
          type: object
          x-dcl-go-name: Status
          x-dcl-go-type: ServicePerimeterStatus
        title:
          description: 'Human readable title. Must be unique within the Policy. '
          type: string
          x-dcl-go-name: Title
        updateTime:
          description: 'Time the AccessPolicy was updated in UTC. '
          format: date-time
          readOnly: true
          type: string
          x-dcl-go-name: UpdateTime
          x-kubernetes-immutable: true
        useExplicitDryRunSpec:
          description: Use explicit dry run spec flag. Ordinarily, a dry-run spec
            implicitly exists for all Service Perimeters, and that spec is identical
            to the status for those Service Perimeters. When this flag is set, it
            inhibits the generation of the implicit spec, thereby allowing the user
            to explicitly provide a configuration ("spec") to use in a dry-run version
            of the Service Perimeter. This allows the user to test changes to the
            enforced config ("status") without actually enforcing them. This testing
            is done through analyzing the differences between currently enforced and
            suggested restrictions. useExplicitDryRunSpec must bet set to True if
            any of the fields in the spec are set to non-default values.
          type: boolean
          x-dcl-go-name: UseExplicitDryRunSpec
          x-kubernetes-immutable: true
      required:
      - title
      - policy
      - name
      title: ServicePerimeter
      type: object
      x-dcl-id: accessPolicies/{{policy}}/servicePerimeters/{{name}}
      x-dcl-locations: []
      x-dcl-parent-container: organization
info:
  description: DCL Specification for the accesscontextmanager ServicePerimeter resource
  title: ServicePerimeter
paths:
  /:
    apply:
      description: The function called used to alter a ServicePerimeter
    delete:
      description: The function called used to delete a ServicePerimeter
      parameters:
      - name: Policy
        required: true
        schema:
          type: string
      - name: Name
        required: true
        schema:
          type: string
    get:
      description: The function called used to get information about a ServicePerimeter
      parameters:
      - name: Policy
        required: true
        schema:
          type: string
      - name: Name
        required: true
        schema:
          type: string
    list:
      description: The function called used to list information about many ServicePerimeter
      parameters:
      - name: Policy
        required: true
        schema:
          type: string
