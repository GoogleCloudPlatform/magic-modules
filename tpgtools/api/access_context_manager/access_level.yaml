components:
  schemas:
    AccessLevel:
      properties:
        basic:
          description: A set of predefined conditions for the access level and a combining
            function.
          properties:
            combiningFunction:
              description: How the conditions list should be combined to determine
                if a request is granted this AccessLevel. If AND is used, each Condition
                in conditions must be satisfied for the AccessLevel to be applied.
                If OR is used, at least one Condition in conditions must be satisfied
                for the AccessLevel to be applied. Defaults to AND if unspecified.
              enum:
              - AND
              - OR
              type: string
              x-dcl-go-name: CombiningFunction
              x-dcl-go-type: AccessLevelBasicCombiningFunctionEnum
            conditions:
              description: A set of requirements for the AccessLevel to be granted.
              items:
                properties:
                  devicePolicy:
                    description: Device specific restrictions, all restrictions must
                      hold for the Condition to be true. If not specified, all devices
                      are allowed.
                    properties:
                      allowedDeviceManagementLevels:
                        description: A list of allowed device management levels. An
                          empty list allows all management levels.
                        items:
                          type: string
                          x-dcl-go-type: AccessLevelBasicConditionsDevicePolicyAllowedDeviceManagementLevelsEnum
                          enum:
                          - MANAGEMENT_UNSPECIFIED
                          - NONE
                          - BASIC
                          - COMPLETE
                        type: array
                        x-dcl-go-name: AllowedDeviceManagementLevels
                        x-dcl-list-type: list
                      allowedEncryptionStatuses:
                        description: A list of allowed encryptions statuses. An empty
                          list allows all statuses.
                        items:
                          type: string
                          x-dcl-go-type: AccessLevelBasicConditionsDevicePolicyAllowedEncryptionStatusesEnum
                          enum:
                          - OS_UNSPECIFIED
                          - DESKTOP_MAC
                          - DESKTOP_WINDOWS
                          - DESKTOP_LINUX
                          - DESKTOP_CHROME_OS
                        type: array
                        x-dcl-go-name: AllowedEncryptionStatuses
                        x-dcl-list-type: list
                      osConstraints:
                        description: A list of allowed OS versions. An empty list
                          allows all types and all versions.
                        items:
                          properties:
                            minimumVersion:
                              description: 'The minimum allowed OS version. If not
                                set, any version of this OS satisfies the constraint.
                                Format: "major.minor.patch" such as "10.5.301", "9.2.1".'
                              type: string
                              x-dcl-go-name: MinimumVersion
                            osType:
                              description: The operating system type of the device.
                              enum:
                              - OS_UNSPECIFIED
                              - DESKTOP_MAC
                              - DESKTOP_WINDOWS
                              - DESKTOP_LINUX
                              - DESKTOP_CHROME_OS
                              type: string
                              x-dcl-go-name: OsType
                              x-dcl-go-type: AccessLevelBasicConditionsDevicePolicyOsConstraintsOsTypeEnum
                            requireVerifiedChromeOs:
                              description: Only allows requests from devices with
                                a verified Chrome OS. Verifications includes requirements
                                that the device is enterprise-managed, conformant
                                to domain policies, and the caller has permission
                                to call the API targeted by the request.
                              type: boolean
                              x-dcl-go-name: RequireVerifiedChromeOs
                          type: object
                          x-dcl-go-type: AccessLevelBasicConditionsDevicePolicyOsConstraints
                        type: array
                        x-dcl-go-name: OsConstraints
                        x-dcl-list-type: list
                      requireAdminApproval:
                        description: Allowed device management levels, an empty list
                          allows all management levels.
                        type: boolean
                        x-dcl-go-name: RequireAdminApproval
                      requireCorpOwned:
                        description: Whether the device needs to be corp owned.
                        type: boolean
                        x-dcl-go-name: RequireCorpOwned
                      requireScreenlock:
                        description: Whether or not screenlock is required for the
                          DevicePolicy to be true. Defaults to false.
                        type: boolean
                        x-dcl-go-name: RequireScreenlock
                    type: object
                    x-dcl-go-name: DevicePolicy
                    x-dcl-go-type: AccessLevelBasicConditionsDevicePolicy
                  ipSubnetworks:
                    description: A list of CIDR block IP subnetwork specification.
                      May be IPv4 or IPv6. Note that for a CIDR IP address block,
                      the specified IP address portion must be properly truncated
                      (i.e. all the host bits must be zero) or the input is considered
                      malformed. For example, "192.0.2.0/24" is accepted but "192.0.2.1/24"
                      is not. Similarly, for IPv6, "2001:db8::/32" is accepted whereas
                      "2001:db8::1/32" is not. The originating IP of a request must
                      be in one of the listed subnets in order for this Condition
                      to be true. If empty, all IP addresses are allowed.
                    items:
                      type: string
                      x-dcl-go-type: string
                    type: array
                    x-dcl-go-name: IPSubnetworks
                    x-dcl-list-type: list
                  members:
                    description: 'An allowed list of members (users, groups, service
                      accounts). The signed-in user originating the request must be
                      a part of one of the provided members. If not specified, a request
                      may come from any user (logged in/not logged in, not present
                      in any groups, etc.). Formats: `user:{emailid}`, `group:{emailid}`,
                      `serviceAccount:{emailid}`'
                    items:
                      type: string
                      x-dcl-go-type: string
                    type: array
                    x-dcl-go-name: Members
                    x-dcl-list-type: list
                  negate:
                    description: Whether to negate the Condition. If true, the Condition
                      becomes a NAND over its non-empty fields, each field must be
                      false for the Condition overall to be satisfied. Defaults to
                      false.
                    type: boolean
                    x-dcl-go-name: Negate
                  regions:
                    description: The request must originate from one of the provided
                      countries/regions.
                    items:
                      type: string
                      x-dcl-go-type: string
                    type: array
                    x-dcl-go-name: Regions
                    x-dcl-list-type: list
                  requiredAccessLevels:
                    description: 'A list of other access levels defined in the same
                      Policy, referenced by resource name. Referencing an AccessLevel
                      which does not exist is an error. All access levels listed must
                      be granted for the Condition to be true. Format: accessPolicies/{policy_id}/accessLevels/{short_name}'
                    items:
                      type: string
                      x-dcl-go-type: string
                    type: array
                    x-dcl-go-name: RequiredAccessLevels
                    x-dcl-list-type: list
                type: object
                x-dcl-go-type: AccessLevelBasicConditions
              type: array
              x-dcl-go-name: Conditions
              x-dcl-list-type: list
          type: object
          x-dcl-go-name: Basic
          x-dcl-go-type: AccessLevelBasic
        createTime:
          description: Time the AccessPolicy was created in UTC.
          format: date-time
          type: string
          readOnly: true
          x-dcl-go-name: CreateTime
        description:
          description: Description of the AccessLevel and its use. Does not affect
            behavior.
          type: string
          x-dcl-go-name: Description
        name:
          description: 'Resource name for the Access Level. The short_name component
            must begin with a letter and only include alphanumeric and ''_''. Format:
            accessPolicies/{policy_id}/accessLevels/{short_name}'
          type: string
          x-dcl-go-name: Name
        policy:
          description: The access policy for this access level.
          type: string
          x-dcl-go-name: Policy
          x-dcl-references:
          - field: name
            resource: Accesscontextmanager/AccessPolicy
          x-kubernetes-immutable: true
        title:
          description: Human readable title. Must be unique within the Policy.
          type: string
          x-dcl-go-name: Title
        updateTime:
          description: Time the AccessPolicy was updated in UTC.
          format: date-time
          type: string
          readOnly: true
          x-dcl-go-name: UpdateTime
      required:
      - title
      - name
      title: AccessLevel
      type: object
      x-dcl-id: accessPolicies/{{policy}}/accessLevels/{{name}}
      x-dcl-locations: []
      x-dcl-parent-container: organization
info:
  description: DCL Specification for the accesscontextmanager AccessLevel resource
  title: AccessLevel
paths:
  /:
    apply:
      description: The function called used to alter a AccessLevel
    delete:
      description: The function called used to delete a AccessLevel
      parameters:
      - name: policy
        required: true
        schema:
          type: string
      - name: name
        required: true
        schema:
          type: string
    get:
      description: The function called used to get information about a AccessLevel
      parameters:
      - name: policy
        required: true
        schema:
          type: string
      - name: name
        required: true
        schema:
          type: string
    list:
      description: The function called used to list information about many AccessLevel
      parameters:
      - name: policy
        required: true
        schema:
          type: string
