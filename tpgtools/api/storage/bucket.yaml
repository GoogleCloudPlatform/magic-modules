components:
  schemas:
    Bucket:
      properties:
        cors:
          description: 'The bucket''s Cross-Origin Resource Sharing (CORS) configuration. '
          items:
            properties:
              maxAgeSeconds:
                description: 'The value, in seconds, to return in the Access-Control-Max-Age
                  header used in preflight responses. '
                format: int32
                type: integer
                x-dcl-go-name: MaxAgeSeconds
              method:
                description: 'The list of HTTP methods on which to include CORS response
                  headers, (GET, OPTIONS, POST, etc) Note: "*" is permitted in the
                  list of methods, and means "any method". '
                items:
                  type: string
                  x-dcl-go-type: string
                type: array
                x-dcl-go-name: Method
                x-dcl-list-type: list
              origin:
                description: 'The list of Origins eligible to receive CORS response
                  headers. Note: "*" is permitted in the list of origins, and means
                  "any Origin". '
                items:
                  type: string
                  x-dcl-go-type: string
                type: array
                x-dcl-go-name: Origin
                x-dcl-list-type: list
              responseHeader:
                description: 'The list of HTTP headers other than the simple response
                  headers to give permission for the user-agent to share across domains. '
                items:
                  type: string
                  x-dcl-go-type: string
                type: array
                x-dcl-go-name: ResponseHeader
                x-dcl-list-type: list
            type: object
            x-dcl-go-type: BucketCors
          type: array
          x-dcl-go-name: Cors
          x-dcl-list-type: list
        lifecycle:
          description: 'The bucket''s lifecycle configuration.  See https://developers.google.com/storage/docs/lifecycle
            for more information. '
          properties:
            rule:
              description: 'A lifecycle management rule, which is made of an action
                to take and the condition(s) under which the action will be taken. '
              items:
                properties:
                  action:
                    description: The action to take.
                    properties:
                      storageClass:
                        description: 'Target storage class. Required if the type of
                          the action is SetStorageClass. '
                        type: string
                        x-dcl-go-name: StorageClass
                      type:
                        description: 'Type of the action. Currently, only Delete and
                          SetStorageClass are supported. '
                        enum:
                        - Delete
                        - SetStorageClass
                        type: string
                        x-dcl-go-name: Type
                        x-dcl-go-type: BucketLifecycleRuleActionTypeEnum
                    type: object
                    x-dcl-go-name: Action
                    x-dcl-go-type: BucketLifecycleRuleAction
                  condition:
                    description: 'The condition(s) under which the action will be
                      taken. '
                    properties:
                      age:
                        description: 'Age of an object (in days). This condition is
                          satisfied when an object reaches the specified age. '
                        format: int32
                        type: integer
                        x-dcl-go-name: Age
                      createdBefore:
                        description: 'A date in RFC 3339 format with only the date
                          part (for instance, "2013-01-15"). This condition is satisfied
                          when an object is created before midnight of the specified
                          date in UTC. '
                        format: date-time
                        type: string
                        x-dcl-go-name: CreatedBefore
                      matchesStorageClass:
                        description: 'Objects having any of the storage classes specified
                          by this condition will be matched. Values include MULTI_REGIONAL,
                          REGIONAL, NEARLINE, COLDLINE, STANDARD, and DURABLE_REDUCED_AVAILABILITY. '
                        items:
                          type: string
                          x-dcl-go-type: string
                        type: array
                        x-dcl-go-name: MatchesStorageClass
                        x-dcl-list-type: list
                      numNewerVersions:
                        description: 'Relevant only for versioned objects. If the
                          value is N, this condition is satisfied when there are at
                          least N versions (including the live version) newer than
                          this version of the object. '
                        format: int32
                        type: integer
                        x-dcl-go-name: NumNewerVersions
                      withState:
                        description: 'Match to live and/or archived objects. Unversioned
                          buckets have only live objects. Supported values include:
                          ''LIVE'', ''ARCHIVED'', ''ANY''.'
                        enum:
                        - LIVE
                        - ARCHIVED
                        - ANY
                        type: string
                        x-dcl-go-name: WithState
                        x-dcl-go-type: BucketLifecycleRuleConditionWithStateEnum
                    type: object
                    x-dcl-go-name: Condition
                    x-dcl-go-type: BucketLifecycleRuleCondition
                type: object
                x-dcl-go-type: BucketLifecycleRule
              type: array
              x-dcl-go-name: Rule
              x-dcl-list-type: list
          type: object
          x-dcl-go-name: Lifecycle
          x-dcl-go-type: BucketLifecycle
        location:
          description: 'The location of the bucket. Object data for objects in the
            bucket resides in physical storage within this region. Defaults to `US`. '
          type: string
          x-dcl-go-name: Location
          x-kubernetes-immutable: true
        logging:
          description: 'The bucket''s logging configuration, which defines the destination
            bucket and optional name prefix for the current bucket''s logs. '
          properties:
            logBucket:
              description: 'The destination bucket where the current bucket''s logs
                should be placed. '
              type: string
              x-dcl-go-name: LogBucket
            logObjectPrefix:
              description: The object prefix for log objects. If it's not provided,
                it defaults to the bucket's name.
              type: string
              x-dcl-go-name: LogObjectPrefix
          type: object
          x-dcl-go-name: Logging
          x-dcl-go-type: BucketLogging
        name:
          description: 'The name of the bucket. '
          type: string
          x-dcl-go-name: Name
          x-kubernetes-immutable: true
        project:
          description: The project id of the resource.
          type: string
          x-dcl-go-name: Project
          x-kubernetes-immutable: true
        storageClass:
          description: 'The bucket''s default storage class, used whenever no storageClass
            is specified for a newly-created object. This defines how objects in the
            bucket are stored and determines the SLA and the cost of storage. Values
            include MULTI_REGIONAL, REGIONAL, STANDARD, NEARLINE, COLDLINE, ARCHIVE,
            and DURABLE_REDUCED_AVAILABILITY. If this value is not specified when
            the bucket is created, it will default to STANDARD. For more information,
            see storage classes. '
          enum:
          - MULTI_REGIONAL
          - REGIONAL
          - STANDARD
          - NEARLINE
          - COLDLINE
          - ARCHIVE
          - DURABLE_REDUCED_AVAILABILITY
          type: string
          x-dcl-go-name: StorageClass
          x-dcl-go-type: BucketStorageClassEnum
        versioning:
          description: The bucket's versioning configuration.
          properties:
            enabled:
              description: 'While set to true, versioning is fully enabled for this
                bucket. '
              type: boolean
              x-dcl-go-name: Enabled
          type: object
          x-dcl-go-name: Versioning
          x-dcl-go-type: BucketVersioning
        website:
          description: 'The bucket''s website configuration, controlling how the service
            behaves when accessing bucket contents as a web site. See the Static Website
            Examples for more information. '
          properties:
            mainPageSuffix:
              description: 'If the requested object path is missing, the service will
                ensure the path has a trailing ''/'', append this suffix, and attempt
                to retrieve the resulting object. This allows the creation of index.html
                objects to represent directory pages. '
              type: string
              x-dcl-go-name: MainPageSuffix
            notFoundPage:
              description: 'If the requested object path is missing, and any mainPageSuffix
                object is missing, if applicable, the service will return the named
                object from this bucket as the content for a 404 Not Found result. '
              type: string
              x-dcl-go-name: NotFoundPage
          type: object
          x-dcl-go-name: Website
          x-dcl-go-type: BucketWebsite
      required:
      - project
      - location
      - name
      title: Bucket
      type: object
      x-dcl-id: b/{{name}}?userProject={{project}}
      x-dcl-locations: []
      x-dcl-parent-container: project
info:
  description: DCL Specification for the storage Bucket resource
  title: Bucket
paths:
  /:
    apply:
      description: The function called used to alter a Bucket
    delete:
      description: The function called used to delete a Bucket
      parameters:
      - name: project
        required: true
        schema:
          type: string
      - name: name
        required: true
        schema:
          type: string
    get:
      description: The function called used to get information about a Bucket
      parameters:
      - name: project
        required: true
        schema:
          type: string
      - name: name
        required: true
        schema:
          type: string
    list:
      description: The function called used to list information about many Bucket
      parameters:
      - name: project
        required: true
        schema:
          type: string
