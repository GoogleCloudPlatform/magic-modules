#!/bin/bash

CORE_TESTS+=('check_80_chars')
MOD_TESTS+=('check_80_chars')

# Returns the entries in the config that have 80_chars:forgive for the product
# being tested.
forgive_80chars() {
  local -r name=$1

  grep -E "${name}.*=.*80_chars:forgive" "${presubmit_cfg}"
}

# Executes trailing_spaces check
# @return 0 if the test passed, 1 otherwise
check_80_chars() {
  local -r name=$1
  local -r extensions=('rb' 'erb' 'yaml' 'sh')

  if $spaces; then
    files=()
    for ext in ${extensions[*]}; do
      files+=(
        $(find . -type f -name "*.${ext}" | grep build/presubmit)
        $(find . -type f -name "*.${ext}" | grep -v build \
            | grep -v "files/spec~.*yaml" \
            | grep -v "./spec/data/network/.*.yaml" \
            | grep -v "./tests/end2end/plan.yaml")
      )
    done

    forgive_files=$(forgive_80chars "${name//build\//}")

    if [[ -z ${files[*]} ]]; then
      log "No files for >80 characters test"
    else
      violations=$(grep -Hn '.\{81\}' ${files[*]})

      if [[ ! -z $violations && ! -z $forgive_files ]]; then
        # Let's try to forgive violations based on config
        IFS='|'
        while read dummy file mask; do
          violations=$(grep -v -E ".\/${file}:.*${mask}" <<< "${violations}")
        done <<< "$forgive_files"
        unset IFS
      fi

      if [[ ! -z $violations ]]; then
        echo "Files with >80 characters per line:"
        echo "${violations}"
        fatal "80 characters failed for '${name}'"
        return 1
      fi
    fi
  else
    warn "80 characters skipped for '${name}'"
    return 1
  fi

  log "No 80 characters failures for '${name}'" 1>&2
  return 0
}
