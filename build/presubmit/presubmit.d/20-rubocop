#!/bin/bash

CORE_TESTS+=('check_rubocop')
MOD_TESTS+=('check_rubocop')

# Checks if presubmit.cfg specifies to not use --ignore-parent-exclusion flag
# @return 0 if the flag should be not used, 1 otherwise
rubocop_flag() {
  local -r provider=$1
  local -r product=$2

  grep -E "${provider}/${product}.*=.*rubocop:noflag" "${presubmit_cfg}" \
    1>/dev/null
}

run_rubocop() {
  if rubocop_flag "${provider}" "${product}"; then
    log "Module ${name} will not use custom rubocop flag" 1>&2
    bundle exec rubocop 1>&2
  else
    bundle exec rubocop --ignore-parent-exclusion 1>&2
  fi
}

# Executes rubocop check
# @return 0 if the test passed, 1 otherwise
check_rubocop() {
  local -r name=$1

  if $rubocop; then
    # TODO(alexstephen): Monitor rubocop upsteam changes
    # https://github.com/bbatsov/rubocop/pull/4329
    # Change will allow rubocop to use --ignore-parent-exclusion flag
    # Current rubocop upstream will not check Chef files because of
    # AllCops/Exclude
    # Remove no_rubocop_flag check once this reaches upstream.

    attempts=1
    run_rubocop
    local status=$?
    while [[ $status == 2 && attempts -lt 3 ]]; do
      log "Rubocop failed due to internal error. Trying again." 1>&2
      attempts=$((attempts + 1))
      run_rubocop
      status=$?
    done

    if [[ $status -ne 0 ]]; then
      fatal "Rubocop failed for '${name}'"
      return 1
    fi
  else
    warn "Rubocop skipped for '${name}'"
    return 1
  fi

  log "No rubocop failures for '${name}'" 1>&2
  return 0
}
