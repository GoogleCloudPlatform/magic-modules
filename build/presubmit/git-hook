#!/bin/bash
# Copyright 2017 Google Inc.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# Magic-Id: f313f5ad-f07f-4ba6-a84e-cd15fc0393ee (used to verify hook is in git)
#
# Ensures that the presubmit was run before allowing push the change upstream.
#
# You can disable verification with a --no-verify option or by setting NO_SQ=1
# environment variable.

declare -r z40=0000000000000000000000000000000000000000
declare -r max_presubmit_age=60
declare -r disable_presubmit_check=${NO_SQ:-0}

fatal() {
  echo -e "\x1b[31m\x1b[1m[FAILED]  \x1b[21m $*\x1b[0m"
}

success() {
  echo -e "\x1b[32m\x1b[1m[SUCCESS] \x1b[21m $*\x1b[0m"
}

info() {
  echo -e "\x1b[36m\x1b[1m[INFO]   \x1b[21m $*\x1b[0m"
}

parse_date() {
  case $(uname -s) in
    Darwin)
      date -j -f '%a, %d %b %Y %T %z' "$*" +%s
      ;;
    *)
      date -d "$*" +%s
      ;;
  esac
}

IFS=' '
while read _ local_sha remote_branch remote_sha
do
  if [[ "$local_sha" == "$z40" ]]; then
    continue
  fi

  if [[ "$remote_sha" == "$z40" ]]; then
    # New branch, examine all commits
    range="$local_sha"
  else
    # Update to existing branch, examine new commits
    range="$remote_sha..$local_sha"
  fi

  if [[ $remote_branch =~ ^refs/[^/]*/dev/${USER}/ ]]; then
    info "Presubmit requirement lifted for developer branch"
    disable_presubmit_check=1
  fi

  # Check for age of presubmit
  if [[ $disable_presubmit_check -ne 1 ]]; then
    commit_date_log=$(git show -s -n 1 --format=%cD "$range")
    commit_date=$(parse_date "$commit_date_log")

    presubmit_date_log=$(git rev-list -n 1 --format=%B "$range" \
      | sed -n '/BEGIN/,/END/p' | grep 'Executed @' | sed -e 's/.*@ *//')
    if [[ -z "$presubmit_date_log" ]]; then
      fatal "Presubmit not found in commit '$range'"
      exit 1
    fi
    presubmit_date=$(parse_date "$presubmit_date_log")

    presubmit_age=$(( commit_date - presubmit_date ))
    info "Presubmit last run ${presubmit_age} seconds ago"
    if [[ $presubmit_age -gt $max_presubmit_age ]]; then
      fatal "Presubmit run is too old. It was run ${presubmit_age} seconds ago"
      exit 1
    else
      success "Presubmit is present and recent"
    fi
  fi
done

exit 0
