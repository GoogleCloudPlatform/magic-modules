#!/bin/bash

gather_code_coverage() {
  local -r proj=$1
  local before_coverage=''
  local after_coverage=''

  if git show origin/master:coverage/.last_run.json 1>/dev/null 2>&1; then
    before_coverage=$(git show origin/master:coverage/.last_run.json \
      | ruby -e 'require "json";
                 puts JSON.parse(STDIN.read)["result"]["covered_percent"]')
  fi
  if [[ -f coverage/.last_run.json ]]; then
    after_coverage=$(ruby -e 'require "json";
      puts JSON.parse(STDIN.read)["result"] ["covered_percent"]' \
        < coverage/.last_run.json)
  fi
  if [[     -z ${before_coverage} && -z ${after_coverage} ]]; then
    log_coverage_status "Project '${proj}' has no coverage information :-("
  elif [[   -z ${before_coverage} ]]; then
    local -r blocks=$(perc_as_blocks 0 "${after_coverage}")
    log_coverage_status "${blocks} Project '${proj}' ${after_coverage}% :-)"
  elif [[ ! -z ${before_coverage} && -z ${after_coverage} ]]; then
    local -r blocks=$(perc_as_blocks "${before_coverage}" 0)
    log_coverage_status \
      "${blocks} Project '${proj}' removed coverage information :-("
  elif float_eq "$before_coverage" "$after_coverage"; then
    local -r blocks=$(perc_as_blocks "${before_coverage}" "${before_coverage}")
    log_coverage_status "${blocks} Project '${proj}' ${before_coverage}%"
  else
    local -r blocks=$(perc_as_blocks "${before_coverage}" "${after_coverage}")
    s=$(ruby -e "puts ${before_coverage} > ${after_coverage} ? ':-(' : ':-)'")
    log_coverage_status \
      "${blocks} Project '${proj}' ${before_coverage}% -> ${after_coverage}% $s"
  fi
}
