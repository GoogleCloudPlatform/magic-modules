apiVersion: core.cnrm.cloud.google.com/v1alpha1
kind: ServiceMapping
metadata:
  name: compute.cnrm.cloud.google.com
  namespace: cnrm-system
spec:
  name: Compute
  version: v1alpha1
  resources:
    - name: google_compute_address
      kind: ComputeAddress
      idTemplate: "projects/{{project}}/regions/{{region}}/addresses/{{name}}"
      metadataMapping:
        name: name
      resourceReferences:
        - key: subnetworkRef
          tfField: subnetwork
          kind: ComputeSubnetwork
          required: false
    - name: google_compute_autoscaler
      kind: ComputeAutoscaler
      idTemplate: "projects/{{project}}/zones/{{zone}}/autoscalers/{{name}}"
      metadataMapping:
        name: name
      resourceReferences:
        - key: targetRef
          tfField: target
          kind: ComputeInstanceGroupManager
          required: true
    - name: google_compute_backend_bucket
      kind: ComputeBackendBucket
      idTemplate: "projects/{{project}}/global/backendBuckets/{{name}}"
      metadataMapping:
        name: name
    - name: google_compute_backend_bucket_signed_url_key
      kind: ComputeBackendBucketSignedUrlKey
      idTemplate: "projects/{{project}}/global/backendBuckets/{{backend_bucket}}/{{name}}"
      metadataMapping:
    - name: google_compute_backend_service
      kind: ComputeBackendService
      idTemplate: "projects/{{project}}/global/backendServices/{{name}}"
      metadataMapping:
        name: name
    - name: google_compute_region_backend_service
      kind: ComputeRegionBackendService
      idTemplate: "projects/{{project}}/regions/{{regionRef.name}}/backendServices/{{name}}"
      metadataMapping:
        name: name
      resourceReferences:
    - name: google_compute_backend_service_signed_url_key
      kind: ComputeBackendServiceSignedUrlKey
      idTemplate: "projects/{{project}}/global/backendServices/{{backend_service}}/{{name}}"
      metadataMapping:
    - name: google_compute_disk
      kind: ComputeDisk
      idTemplate: "projects/{{project}}/zones/{{zone}}/disks/{{name}}"
      metadataMapping:
        name: name
        labels: labels
      resourceReferences:
        - key: typeRef
          tfField: type
          kind: ComputeDiskType
          required: false
    - name: google_compute_firewall
      kind: ComputeFirewall
      idTemplate: "projects/{{project}}/global/firewalls/{{name}}"
      metadataMapping:
        name: name
      resourceReferences:
        - key: networkRef
          tfField: network
          kind: ComputeNetwork
          required: true
    - name: google_compute_forwarding_rule
      kind: ComputeForwardingRule
      idTemplate: "projects/{{project}}/regions/{{region}}/forwardingRules/{{name}}"
      metadataMapping:
        name: name
      resourceReferences:
        - key: backendServiceRef
          tfField: backendService
          kind: ComputeBackendService
          required: false
        - key: networkRef
          tfField: network
          kind: ComputeNetwork
          required: false
        - key: subnetworkRef
          tfField: subnetwork
          kind: ComputeSubnetwork
          required: false
        - key: targetRef
          tfField: target
          kind: ComputeTargetPool
          required: false
    - name: google_compute_global_address
      kind: ComputeGlobalAddress
      idTemplate: "projects/{{project}}/global/addresses/{{name}}"
      metadataMapping:
        name: name
      resourceReferences:
        - key: networkRef
          tfField: network
          kind: ComputeNetwork
          required: false
    - name: google_compute_global_forwarding_rule
      kind: ComputeGlobalForwardingRule
      idTemplate: "projects/{{project}}/global/forwardingRules/{{name}}"
      metadataMapping:
        name: name
    - name: google_compute_http_health_check
      kind: ComputeHttpHealthCheck
      idTemplate: "projects/{{project}}/global/httpHealthChecks/{{name}}"
      metadataMapping:
        name: name
    - name: google_compute_https_health_check
      kind: ComputeHttpsHealthCheck
      idTemplate: "projects/{{project}}/global/httpsHealthChecks/{{name}}"
      metadataMapping:
        name: name
    - name: google_compute_health_check
      kind: ComputeHealthCheck
      idTemplate: "projects/{{project}}/global/healthChecks/{{name}}"
      metadataMapping:
        name: name
    - name: google_compute_image
      kind: ComputeImage
      idTemplate: "projects/{{project}}/global/images/{{name}}"
      metadataMapping:
        name: name
        labels: labels
      resourceReferences:
        - key: sourceDiskRef
          tfField: sourceDisk
          kind: ComputeDisk
          required: false
    - name: google_compute_interconnect_attachment
      kind: ComputeInterconnectAttachment
      idTemplate: "projects/{{project}}/regions/{{region}}/interconnectAttachments/{{name}}"
      metadataMapping:
        name: name
      resourceReferences:
        - key: routerRef
          tfField: router
          kind: ComputeRouter
          required: true
    - name: google_compute_network
      kind: ComputeNetwork
      idTemplate: "projects/{{project}}/global/networks/{{name}}"
      metadataMapping:
        name: name
    - name: google_compute_network_endpoint
      kind: ComputeNetworkEndpoint
      idTemplate: "projects/{{project}}/zones/{{zone}}/networkEndpointGroups/{{network_endpoint_group}}/{{instanceRef.name}}/{{ip_address}}/{{port}}"
      metadataMapping:
      resourceReferences:
        - key: instanceRef
          tfField: instance
          kind: ComputeInstance
          required: true
    - name: google_compute_network_endpoint_group
      kind: ComputeNetworkEndpointGroup
      idTemplate: "projects/{{project}}/zones/{{zone}}/networkEndpointGroups/{{name}}"
      metadataMapping:
        name: name
      resourceReferences:
        - key: networkRef
          tfField: network
          kind: ComputeNetwork
          required: true
        - key: subnetworkRef
          tfField: subnetwork
          kind: ComputeSubnetwork
          required: false
    - name: google_compute_node_group
      kind: ComputeNodeGroup
      idTemplate: "projects/{{project}}/zones/{{zone}}/nodeGroups/{{name}}"
      metadataMapping:
        name: name
      resourceReferences:
        - key: nodeTemplateRef
          tfField: nodeTemplate
          kind: ComputeNodeTemplate
          required: true
    - name: google_compute_node_template
      kind: ComputeNodeTemplate
      idTemplate: "projects/{{project}}/regions/{{region}}/nodeTemplates/{{name}}"
      metadataMapping:
        name: name
    - name: google_compute_region_autoscaler
      kind: ComputeRegionAutoscaler
      idTemplate: "projects/{{project}}/regions/{{region}}/autoscalers/{{name}}"
      metadataMapping:
        name: name
    - name: google_compute_region_disk
      kind: ComputeRegionDisk
      idTemplate: "projects/{{project}}/regions/{{region}}/disks/{{name}}"
      metadataMapping:
        name: name
        labels: labels
      resourceReferences:
        - key: typeRef
          tfField: type
          kind: ComputeRegionDiskType
          required: false
    - name: google_compute_route
      kind: ComputeRoute
      idTemplate: "projects/{{project}}/global/routes/{{name}}"
      metadataMapping:
        name: name
      resourceReferences:
        - key: networkRef
          tfField: network
          kind: ComputeNetwork
          required: true
        - key: nextHopInstanceRef
          tfField: nextHopInstance
          kind: ComputeInstance
          required: false
        - key: nextHopVpnTunnelRef
          tfField: nextHopVpnTunnel
          kind: ComputeVpnTunnel
          required: false
    - name: google_compute_router
      kind: ComputeRouter
      idTemplate: "projects/{{project}}/regions/{{region}}/routers/{{name}}"
      metadataMapping:
        name: name
      resourceReferences:
        - key: networkRef
          tfField: network
          kind: ComputeNetwork
          required: true
    - name: google_compute_snapshot
      kind: ComputeSnapshot
      idTemplate: "projects/{{project}}/global/snapshots/{{name}}"
      metadataMapping:
        name: name
        labels: labels
    - name: google_compute_ssl_certificate
      kind: ComputeSslCertificate
      idTemplate: "projects/{{project}}/global/sslCertificates/{{name}}"
      metadataMapping:
        name: name
    - name: google_compute_ssl_policy
      kind: ComputeSslPolicy
      idTemplate: "projects/{{project}}/global/sslPolicies/{{name}}"
      metadataMapping:
        name: name
    - name: google_compute_subnetwork
      kind: ComputeSubnetwork
      idTemplate: "projects/{{project}}/regions/{{regionRef.name}}/subnetworks/{{name}}"
      metadataMapping:
        name: name
      resourceReferences:
        - key: networkRef
          tfField: network
          kind: ComputeNetwork
          required: true
    - name: google_compute_target_http_proxy
      kind: ComputeTargetHttpProxy
      idTemplate: "projects/{{project}}/global/targetHttpProxies/{{name}}"
      metadataMapping:
        name: name
      resourceReferences:
        - key: urlMapRef
          tfField: urlMap
          kind: ComputeUrlMap
          required: true
    - name: google_compute_target_https_proxy
      kind: ComputeTargetHttpsProxy
      idTemplate: "projects/{{project}}/global/targetHttpsProxies/{{name}}"
      metadataMapping:
        name: name
      resourceReferences:
        - key: sslPolicyRef
          tfField: sslPolicy
          kind: ComputeSslPolicy
          required: false
        - key: urlMapRef
          tfField: urlMap
          kind: ComputeUrlMap
          required: true
    - name: google_compute_target_instance
      kind: ComputeTargetInstance
      idTemplate: "projects/{{project}}/zones/{{zone}}/targetInstances/{{name}}"
      metadataMapping:
        name: name
      resourceReferences:
        - key: instanceRef
          tfField: instance
          kind: ComputeInstance
          required: true
    - name: google_compute_target_ssl_proxy
      kind: ComputeTargetSslProxy
      idTemplate: "projects/{{project}}/global/targetSslProxies/{{name}}"
      metadataMapping:
        name: name
      resourceReferences:
        - key: backendServiceRef
          tfField: backendService
          kind: ComputeBackendService
          required: true
        - key: sslPolicyRef
          tfField: sslPolicy
          kind: ComputeSslPolicy
          required: false
    - name: google_compute_target_tcp_proxy
      kind: ComputeTargetTcpProxy
      idTemplate: "projects/{{project}}/global/targetTcpProxies/{{name}}"
      metadataMapping:
        name: name
      resourceReferences:
        - key: backendServiceRef
          tfField: backendService
          kind: ComputeBackendService
          required: true
    - name: google_compute_vpn_gateway
      kind: ComputeVpnGateway
      idTemplate: "projects/{{project}}/regions/{{region}}/targetVpnGateways/{{name}}"
      metadataMapping:
        name: name
      resourceReferences:
        - key: networkRef
          tfField: network
          kind: ComputeNetwork
          required: true
    - name: google_compute_url_map
      kind: ComputeUrlMap
      idTemplate: "projects/{{project}}/global/urlMaps/{{name}}"
      metadataMapping:
        name: name
      resourceReferences:
        - key: defaultServiceRef
          tfField: defaultService
          kind: ComputeBackendService
          required: true
    - name: google_compute_vpn_tunnel
      kind: ComputeVpnTunnel
      idTemplate: "projects/{{project}}/regions/{{region}}/vpnTunnels/{{name}}"
      metadataMapping:
        name: name
      resourceReferences:
        - key: targetVpnGatewayRef
          tfField: targetVpnGateway
          kind: ComputeVpnGateway
          required: false
        - key: routerRef
          tfField: router
          kind: ComputeRouter
          required: false
