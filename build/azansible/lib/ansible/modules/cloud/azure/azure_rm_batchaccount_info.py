#!/usr/bin/python
#
# Copyright (C) 2019 Junyi Yi (@JunyiYi)
#
# GNU General Public License v3.0+ (see COPYING or https://www.gnu.org/licenses/gpl-3.0.txt)

# ----------------------------------------------------------------------------
#
#     ***     AUTO GENERATED CODE    ***    AUTO GENERATED CODE     ***
#
# ----------------------------------------------------------------------------
#
#     This file is automatically generated by Magic Modules and manual
#     changes will be clobbered when the file is regenerated.
#
#     Please read more about how to change this file at
#     https://www.github.com/GoogleCloudPlatform/magic-modules
#
# ----------------------------------------------------------------------------

from __future__ import absolute_import, division, print_function
__metaclass__ = type

ANSIBLE_METADATA = {'metadata_version': '1.1',
                    'status': ["preview"],
                    'supported_by': 'community'}

DOCUMENTATION = '''
---
module: azure_rm_batchaccount_info
version_added: "2.9"
short_description: Gather info for Azure Batch Account
description:
    - Gather info for Azure Batch Account.

options:
    resource_group:
        description:
        - The name of the resource group in which to create the Batch Account.
        required: true
    name:
        description:
        - The name of the Batch Account.
    tags:
        description:
        - A mapping of tags to assign to the batch account.

extends_documentation_fragment:
    - azure

author:
    - "Junyi Yi (@JunyiYi)"
'''

EXAMPLES = '''
  - name: Get instance of Batch Account
    azure_rm_batchaccount:
        resource_group: MyResGroup
        name: test_object

  - name: List instances of Batch Account
    azure_rm_batchaccount:
        resource_group: MyResGroup
'''

RETURN = '''
items:
    description: List of items
    returned: always
    type: complex
    contains:
        id:
            description:
            - The ID of the Batch account.
            returned: always
            type: str
            sample: "/subscriptions/xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx/resourceGroups/myResourceGroup/providers/Microsoft.Batch/batchAccounts/sampleacct"
        resource_group:
            description:
            - The name of the resource group in which to create the Batch Account.
            returned: always
            type: str
        name:
            description:
            - The name of the Batch Account.
            returned: always
            type: str
        location:
            description:
            - Specifies the supported Azure location where the resource exists.
            returned: always
            type: str
        account_endpoint:
            description:
            - The account endpoint used to interact with the Batch service.
            returned: always
            type: str
            sample: sampleacct.westus.batch.azure.com
        auto_storage_account:
            description:
            - The ID of the Batch Account auto storage account.
            returned: always
            type: str
            sample: "/subscriptions/xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx/resourceGroups/myResourceGroup/providers/Microsoft.Storage/storageAccounts/sample-acct"
        key_vault_reference:
            description:
            - A reference to the Azure key vault associated with the Batch account.
            returned: always
            type: complex
            contains:
                id:
                    description:
                    - The resource ID of the Azure key vault associated with the Batch
                        account.
                    returned: always
                    type: str
                url:
                    description:
                    - The URL of the Azure key vault associated with the Batch account.
                    returned: always
                    type: str
        pool_allocation_mode:
            description:
            - The pool acclocation mode of the Batch Account.
            returned: always
            type: str
        tags:
            description:
            - A mapping of tags to assign to the batch account.
            returned: always
            type: str
'''

################################################################################
# Imports
################################################################################
from ansible.module_utils.gcp_utils import navigate_hash, GcpSession, GcpModule, GcpRequest
import json

################################################################################
# Main
################################################################################


def main():
    module = GcpModule(
        argument_spec=dict(
        )
    )

    if not module.params['scopes']:
        module.params['scopes'] = ['NotUsedInAzure']

    items = fetch_list(module, collection(module))
    if items.get('items'):
        items = items.get('items')
    else:
        items = []
    return_value = {
        'items': items
    }
    module.exit_json(**return_value)


def collection(module):
    return "NotUsedInAzureNotUsedInAzure".format(**module.params)


def fetch_list(module, link):
    auth = GcpSession(module, 'zbatchaccount')
    response = auth.get(link)
    return return_if_object(module, response)


def return_if_object(module, response):
    # If not found, return nothing.
    if response.status_code == 404:
        return None

    # If no content, return nothing.
    if response.status_code == 204:
        return None

    try:
        module.raise_for_status(response)
        result = response.json()
    except getattr(json.decoder, 'JSONDecodeError', ValueError) as inst:
        module.fail_json(msg="Invalid JSON response with error: %s" % inst)

    if navigate_hash(result, ['error', 'errors']):
        module.fail_json(msg=navigate_hash(result, ['error', 'errors']))

    return result


if __name__ == "__main__":
    main()
