// API returns empty objects for nested empty lists so this behavior is
// generating unnecessary diff. The below four functions mitigates that diff for
// each individual filter fields.
func intelligenceFilterExcludedCloudStorageLocationsDiffSuppress(k, old, new string, d *schema.ResourceData) bool {
  if new == "1" && old == "0" {
    if v, ok := d.GetOkExists("filter.0.excluded_cloud_storage_locations.0.locations"); ok {
      l := v.([]interface{})
      if len(l) == 0 {
        return true
      }
    }
  }
  return false
}

func intelligenceFilterExcludedCloudStorageBucketsDiffSuppress(k, old, new string, d *schema.ResourceData) bool {
  if new == "1" && old == "0" {
    if v, ok := d.GetOkExists("filter.0.excluded_cloud_storage_buckets.0.bucket_id_regexes"); ok {
      l := v.([]interface{})
      if len(l) == 0 {
        return true
      }
    }
  }
  return false
}

func intelligenceFilterincludedCloudStorageLocationsDiffSuppress(k, old, new string, d *schema.ResourceData) bool {
  if new == "1" && old == "0" {
    if v, ok := d.GetOkExists("filter.0.included_cloud_storage_locations.0.locations"); ok {
      l := v.([]interface{})
      if len(l) == 0 {
        return true
      }
    }
  }
  return false
}


func intelligenceFilterincludedCloudStorageBucketsDiffSuppress(k, old, new string, d *schema.ResourceData) bool {
  if new == "1" && old == "0" {
    if v, ok := d.GetOkExists("filter.0.included_cloud_storage_buckets.0.bucket_id_regexes"); ok {
      l := v.([]interface{})
      if len(l) == 0 {
        return true
      }
    }
  }
  return false
}

// This is required to mitigate a diff generated by nested Diff Suppressions.
// AtLeastOneOf prevents empty `filter` object but the nested diff suppressions
// of suppressing empty list's diff can generate unnecessary empty `filter`
// object.
func intelligenceFilterDiffSuppress(k, old, new string, d *schema.ResourceData) bool {
  if new == "1" && old == "0" {
    empty := true
    if _, ok := d.GetOkExists("filter.0.included_cloud_storage_buckets"); ok {
      if v, ok := d.GetOkExists("filter.0.included_cloud_storage_buckets.0.bucket_id_regexes"); ok {
        l := v.([]interface{})
        if len(l) != 0 {
          empty = false
        }
      }
    }
    if _, ok := d.GetOkExists("filter.0.excluded_cloud_storage_buckets"); ok {
      if v, ok := d.GetOkExists("filter.0.excluded_cloud_storage_buckets.0.bucket_id_regexes"); ok {
        l := v.([]interface{})
        if len(l) != 0 {
          empty = false
        }
      }
    }
    if _, ok := d.GetOkExists("filter.0.included_cloud_storage_locations"); ok {
      if v, ok := d.GetOkExists("filter.0.included_cloud_storage_locations.0.locations"); ok {
        l := v.([]interface{})
        if len(l) != 0 {
          empty = false
        }
      }
    }
    if _, ok := d.GetOkExists("filter.0.excluded_cloud_storage_locations"); ok {
      if v, ok := d.GetOkExists("filter.0.excluded_cloud_storage_locations.0.locations"); ok {
        l := v.([]interface{})
        if len(l) != 0 {
          empty = false
        }
      }
    }
    if empty {
      return true
    }
  }
  return false
}
