{{- if ne $.Compiler "terraformgoogleconversion-codegen" }}
func resourceComputeRegionSecurityPolicySpecRulesDiffSuppress(k, o, n string, d *schema.ResourceData) bool {
    oldCount, newCount := d.GetChange("rules.#")
    var count int
    // There could be duplicates - worth continuing even if the counts are unequal.
    if oldCount.(int) < newCount.(int) {
        count = newCount.(int)
    } else {
        count = oldCount.(int)
    }

    old := make([]interface{}, 0, count)
    new := make([]interface{}, 0, count)
    for i := 0; i < count; i++ {
        o, n := d.GetChange(fmt.Sprintf("rules.%d", i))

        if o != nil {
            old = append(old, o)
        }
        if n != nil {
            new = append(new, n)
        }
    }

    oldSet := schema.NewSet(schema.HashResource(ResourceComputeRegionSecurityPolicy().Schema["rules"].Elem.(*schema.Resource)), old)
    newSet := schema.NewSet(schema.HashResource(ResourceComputeRegionSecurityPolicy().Schema["rules"].Elem.(*schema.Resource)), new)

    return oldSet.Equal(newSet)
}

{{- end }}