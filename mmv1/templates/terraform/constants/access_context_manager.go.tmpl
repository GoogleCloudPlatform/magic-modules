func {{$.ResourceName}}EgressToResourcesDiffSuppressFunc(_, _, _ string, d *schema.ResourceData) bool {
    old, new := d.GetChange("egress_to.0.resources")

    oldResources, err := tpgresource.InterfaceSliceToStringSlice(old)
    if err != nil {
        log.Printf("[ERROR] Failed to convert config value: %s", err)
        return false
    }

    newResources, err := tpgresource.InterfaceSliceToStringSlice(new)
    if err != nil {
        log.Printf("[ERROR] Failed to convert config value: %s", err)
        return false
    }

    sort.Strings(oldResources)
    sort.Strings(newResources)

    return slices.Equal(oldResources, newResources)
}

func {{$.ResourceName}}IngressToResourcesDiffSuppressFunc(_, _, _ string, d *schema.ResourceData) bool {
    old, new := d.GetChange("ingress_to.0.resources")

    oldResources, err := tpgresource.InterfaceSliceToStringSlice(old)
    if err != nil {
        log.Printf("[ERROR] Failed to convert config value: %s", err)
        return false
    }

    newResources, err := tpgresource.InterfaceSliceToStringSlice(new)
    if err != nil {
        log.Printf("[ERROR] Failed to convert config value: %s", err)
        return false
    }

    sort.Strings(oldResources)
    sort.Strings(newResources)

    return slices.Equal(oldResources, newResources)
}

func {{$.ResourceName}}EgressFromIdentitiesDiffSuppressFunc(_, _, _ string, d *schema.ResourceData) bool {
    old, new := d.GetChange("egress_from.0.identities")

    oldResources, err := tpgresource.InterfaceSliceToStringSlice(old)
    if err != nil {
        log.Printf("[ERROR] Failed to convert egress from identities config value: %s", err)
        return false
    }

    newResources, err := tpgresource.InterfaceSliceToStringSlice(new)
    if err != nil {
        log.Printf("[ERROR] Failed to convert egress from identities api value: %s", err)
        return false
    }

    sort.Strings(oldResources)
    sort.Strings(newResources)

    return slices.Equal(oldResources, newResources)
}

func {{$.ResourceName}}IngressFromIdentitiesDiffSuppressFunc(_, _, _ string, d *schema.ResourceData) bool {
    old, new := d.GetChange("ingress_from.0.identities")

    oldResources, err := tpgresource.InterfaceSliceToStringSlice(old)
    if err != nil {
        log.Printf("[ERROR] Failed to convert ingress from identities config value: %s", err)
        return false
    }

    newResources, err := tpgresource.InterfaceSliceToStringSlice(new)
    if err != nil {
        log.Printf("[ERROR] Failed to convert ingress from identities api value: %s", err)
        return false
    }

    sort.Strings(oldResources)
    sort.Strings(newResources)

    return slices.Equal(oldResources, newResources)
}

func {{$.ResourceName}}IdentityTypeDiffSuppressFunc(_, old, new string, _ *schema.ResourceData) bool {
    if old == "" && new == "IDENTITY_TYPE_UNSPECIFIED" {
       return true
    }

    return old == new
}
