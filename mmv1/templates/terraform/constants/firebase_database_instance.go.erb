func enableRTDB(config *Config, d *schema.ResourceData, project string, billingProject string, userAgent string) error {
	url, err := replaceVars(d, config, "{{FirebaseDatabaseBasePath}}projects/{{project}}/locations/{{region}}/instances/{{instance_id}}:reenable")
	if err != nil {
		return err
	}

	res, err := sendRequest(config, "POST", billingProject, url, userAgent, nil)
	if err != nil {
		return fmt.Errorf("Error reenabling firebase_database_instance %q: %s", d.Id(), err)
	} else {
		log.Printf("[DEBUG] Finished reenabling firebase_database_instance %q: %#v", d.Id(), res)
	}
	return nil
}

func disableRTDB(config *Config, d *schema.ResourceData, project string, billingProject string, userAgent string) error {
	url, err := replaceVars(d, config, "{{FirebaseDatabaseBasePath}}projects/{{project}}/locations/{{region}}/instances/{{instance_id}}:disable")
	if err != nil {
		return err
	}

	res, err := sendRequest(config, "POST", billingProject, url, userAgent, nil)
	if err != nil {
		return fmt.Errorf("Error disabling firebase_database_instance %q: %s", d.Id(), err)
	} else {
		log.Printf("[DEBUG] Finished disabling firebase_database_instance %q: %#v", d.Id(), res)
	}
	return nil
}
