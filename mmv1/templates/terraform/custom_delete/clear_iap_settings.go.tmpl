url, err := tpgresource.ReplaceVars(d, config, "{{"{{"}}IapBasePath{{"}}"}}{{"{{"}}name{{"}}"}}:iapSettings")
if err != nil {
	return err
}

project, err := tpgresource.GetProject(d, config)
if err != nil {
	return fmt.Errorf("Error fetching project for Settings: %s", err)
}

headers := make(http.Header)

obj := make(map[string]interface{})

log.Printf("[DEBUG] Updating Settings %q: %#v", d.Id(), obj)

res, err := transport_tpg.SendRequest(transport_tpg.SendRequestOptions{
	Config:    config,
	Method:    "PATCH",
	Project:   project,
	RawURL:    url,
	UserAgent: userAgent,
	Body:      obj,
	Timeout:   d.Timeout(schema.TimeoutUpdate),
	Headers:   headers,
})

if err != nil {
	return fmt.Errorf("Error updating Settings %q: %s", d.Id(), err)
} else {
	log.Printf("[DEBUG] Finished updating Settings %q: %#v", d.Id(), res)
}

return nil

