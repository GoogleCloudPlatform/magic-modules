if d.Get("deletion_policy") == "FORCE" {
    obj := make(map[string]interface{})
    obj["enableFloorSettingEnforcement"] = false 

    url, err := tpgresource.ReplaceVars(d, config, "{{"{{"}}parent{{"}}"}}/locations/{{"{{"}}location{{"}}"}}/floorSetting")
    if err != nil {
        return err
    }

    log.Printf("[DEBUG] Clearing Model Armor Floor Setting %q: %#v", d.Id(), obj)
    updateMask := []string{}

    updateMask = append(updateMask, "enableFloorSettingEnforcement")
    // updateMask is a URL parameter but not present in the schema, so ReplaceVars
    // won't set it
    url, err = transport_tpg.AddQueryParams(url, map[string]string{"updateMask": strings.Join(updateMask, ",")})
    if err != nil {
        return err
    }
    res, err := transport_tpg.SendRequest(transport_tpg.SendRequestOptions{
        Config: config,
        Method: "PATCH",
        RawURL: url,
        UserAgent: userAgent,
        Body: obj,
        Timeout: d.Timeout(schema.TimeoutUpdate),
    })

    if err != nil {
        return fmt.Errorf("Error clearing  Model Armor  Floor Setting %q: %s", d.Id(), err)
    } else {
        log.Printf("[DEBUG] Finished clearing  Model Armor  Floor Setting %q: %#v", d.Id(), res)
    }

    return nil
}
return nil