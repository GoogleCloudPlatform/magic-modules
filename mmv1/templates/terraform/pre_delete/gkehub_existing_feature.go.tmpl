// Make sure that mandatory/default features continue to exist.

if d.Get("name").(string) == "rbacrolebindingactuation" {
  getUrl, err := tpgresource.ReplaceVars(d, config, "{{"{{"}}GKEHub2BasePath{{"}}"}}projects/{{"{{"}}project{{"}}"}}/locations/{{"{{"}}location{{"}}"}}/features/{{"{{"}}name{{"}}"}}")
  if err != nil {
  	return err
  }
  _, err = transport_tpg.SendRequest(transport_tpg.SendRequestOptions{
  	Config:    config,
  	Method:    "GET",
  	Project:   billingProject,
  	RawURL:    getUrl,
  	UserAgent: userAgent,
  	Headers:   headers,
  })
  
  if err == nil {
  	// Fleet feature exists as expected
  	log.Printf("[DEBUG] Fleet feature already exists %s", d.Get("name"))
  	id, err := tpgresource.ReplaceVars(d, config, "{{$.GetIdFormat}}")
    if err != nil {
      return fmt.Errorf("Error constructing id: %s", err)
    }
    d.SetId(id)
    d.Set("spec", nil)
    return resourceGKEHub2FeatureUpdate(d, meta)
  }
}
