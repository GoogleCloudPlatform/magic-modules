if d.Get("state").(string) == "ENABLED" {
	disableUrl, err := replaceVars(d, config, "{{PrivatecaBasePath}}projects/{{project}}/locations/{{location}}/caPools/{{pool}}/certificateAuthorities/{{certificate_authority_id}}:disable")
	if err != nil {
		return err
	}

	log.Printf("[DEBUG] Disabling CertificateAuthority: %#v", obj)

	dRes, err := sendRequest(config, "POST", billingProject, disableUrl, userAgent, nil)
	if err != nil {
		return fmt.Errorf("Error disabling CertificateAuthority: %s", err)
	}

	var opRes map[string]interface{}
	err = privatecaOperationWaitTimeWithResponse(
		config, dRes, &opRes, project, "Disabling CertificateAuthority", userAgent,
		d.Timeout(schema.TimeoutDelete))
	if err != nil {
		return fmt.Errorf("Error waiting to disable CertificateAuthority: %s", err)
	}
}
