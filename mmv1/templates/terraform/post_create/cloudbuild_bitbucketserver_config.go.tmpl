log.Printf("[DEBUG] Finished creating BitbucketServerConfig without connected repos: %q: %#v", d.Id(), res)

if v, ok := d.GetOkExists("connected_repositories"); !tpgresource.IsEmptyValue(reflect.ValueOf(connectedRepositoriesProp)) && (ok || !reflect.DeepEqual(v, connectedRepositoriesProp)) {
    connectedReposPropArray, ok := connectedRepositoriesProp.([]interface{})
    if !ok {
        return fmt.Errorf("Error reading connected_repositories")
    }

    requests := make([]interface{}, len(connectedReposPropArray))
    for i := 0; i < len(connectedReposPropArray); i++ {
        connectedRepo := make(map[string]interface{})
        connectedRepo["parent"] = id
        connectedRepo["repo"] = connectedReposPropArray[i]

        connectedRepoRequest := make(map[string]interface{})
        connectedRepoRequest["parent"] = id
        connectedRepoRequest["bitbucketServerConnectedRepository"] = connectedRepo
        
        requests[i] = connectedRepoRequest
    }
    obj = make(map[string]interface{})
    obj["requests"] = requests

    url, err = tpgresource.ReplaceVars(d, config, "{{"{{"}}CloudBuildBasePath{{"}}"}}projects/{{"{{"}}project{{"}}"}}/locations/{{"{{"}}location{{"}}"}}/bitbucketServerConfigs/{{"{{"}}config_id{{"}}"}}/connectedRepositories:batchCreate")
    if err != nil {
        return err
    }

    res, err = transport_tpg.SendRequest(transport_tpg.SendRequestOptions{
        Config: config,
        Method: "POST",
        Project: billingProject,
        RawURL: url,
        UserAgent: userAgent,
        Body: obj,
        Timeout: d.Timeout(schema.TimeoutCreate),
    })
    if err != nil {
        return fmt.Errorf("Error creating connected_repositories: %s", err)
    }

    err = CloudBuildOperationWaitTime(
        config, res, project, "Creating connected_repositories on BitbucketServerConfig", userAgent,
        d.Timeout(schema.TimeoutCreate))
    if err != nil {
        return fmt.Errorf("Error waiting to create connected_repositories: %s", err)
    }
} else {
    log.Printf("[DEBUG] No connected repositories found to create: %#v", connectedRepositoriesProp)
}
