
loginProfile, ok := res["loginProfile"]
if !ok {
  return fmt.Errorf("Create response didn't contain critical fields. Create may not have succeeded.")
}

// `fingerprint` is autogenerated from the api so needs to be set post-create
sshPublicKeys := loginProfile.(map[string]interface{})["sshPublicKeys"]
for _,sshPublicKey := range sshPublicKeys.(map[string]interface{}) {
  if sshPublicKey.(map[string]interface{})["key"].(string)== d.Get("key") {
    if err := d.Set("fingerprint", sshPublicKey.(map[string]interface{})["fingerprint"].(string)); err != nil {
    	return fmt.Errorf("Error setting fingerprint: %s", err)
    }
    break
  }
}

// Store the ID now
id, err = tpgresource.ReplaceVars(d, config, "users/{{"{{"}}user{{"}}"}}/sshPublicKeys/{{"{{"}}fingerprint{{"}}"}}")
if err != nil {
	return fmt.Errorf("Error constructing id: %s", err)
}
d.SetId(id)

// Wait 10s for write propagation; should be usually done in ~7s max.
time.Sleep(10 * time.Second)
