resource "google_cloud_run_v2_service" "{{$.PrimaryResourceId}}" {
  name     = "{{index $.PrefixedVars "cloud_run_service_name"}}"
  description = "description updating"
  location = "us-central1"
  deletion_protection = false
  annotations = {
    generated-by = "magic-modules-files"
  }
  ingress = "INGRESS_TRAFFIC_ALL"
  binary_authorization {
    use_default = true
    breakglass_justification = "Some justification"
  }
  labels = {
    label-1 = "value-update"
  }
  client = "client-update"
  client_version = "client-version-update"
  scaling {
    min_instance_count = 1
    max_instance_count = 2
  }
  template {
    labels = {
      label-1 = "value-update"
    }
    timeout = "500s"
    service_account = google_service_account.service_account.email
    execution_environment = "EXECUTION_ENVIRONMENT_GEN1"
    annotations = {
      generated-by = "magic-modules"
    }
    containers {
      name = "container-update"
      image = "us-docker.pkg.dev/cloudrun/container/hello"
      env {
        name = "SOURCE_UPDATE"
        value = "remote-update"
      }
      env {
        name = "TARGET_UPDATE"
        value = "home-update"
      }
      ports {
        name = "h2c"
        container_port = 8080
      }
      resources {
        cpu_idle = true
        startup_cpu_boost = false
        limits = {
          cpu = "2"
          memory = "8Gi"
        }
      }
    }
    vpc_access{
      connector = google_vpc_access_connector.connector.id
      egress = "ALL_TRAFFIC"
    }
    session_affinity = true
  }
  traffic {
    type = "TRAFFIC_TARGET_ALLOCATION_TYPE_LATEST"
    percent = 100
    tag = "tt-update"
  }
}

resource "google_service_account" "service_account" {
  account_id   = "{{index $.PrefixedVars "service_account_id"}}"
  display_name = "Test Service Account"
}

resource "google_vpc_access_connector" "connector" {
  name          = "{{index $.PrefixedVars "vpc_access_connector_name"}}"
  subnet {
    name = google_compute_subnetwork.custom_test.name
  }
  machine_type = "e2-standard-4"
  min_instances = 2
  max_instances = 3
  region        = "us-central1"
}
resource "google_compute_subnetwork" "custom_test" {
  name          = "{{index $.PrefixedVars "compute_subnetwork_name"}}"
  ip_cidr_range = "10.2.0.0/28"
  region        = "us-central1"
  network       = google_compute_network.custom_test.id
}
resource "google_compute_network" "custom_test" {
  name                    = "{{index $.PrefixedVars "compute_network_name"}}"
  auto_create_subnetworks = false
}