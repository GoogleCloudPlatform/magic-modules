state := d.Get("state").(string)
desired_state := d.Get("desired_state").(string)

if state != desired_state || stopInstance{
  verb := "start"
  if desired_state == "STOPPED" {
    verb = "stop"
  }
  pRes, err := modifyWorkbenchInstanceState(config, d, project, billingProject, userAgent, verb)
  if err != nil {
    return err
  }

  if err := waitForWorkbenchOperation(config, d, project, billingProject, userAgent, pRes); err != nil {
    return fmt.Errorf("Error waiting to modify Workbench Instance state: %s", err)
  }

  if verb == "start"{
    if err := waitForWorkbenchInstanceActive(d, config, d.Timeout(schema.TimeoutUpdate) - time.Minute); err != nil {
      return fmt.Errorf("Workbench instance %q did not reach ACTIVE state: %q", d.Get("name").(string), err)
    }

  }

} else {
  log.Printf("[DEBUG] Workbench Instance %q has state %q.", name, state)
}
