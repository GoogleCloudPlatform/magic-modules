func flatten<%= prefix -%><%= titlelize_property(property) -%>(v interface{}, d *schema.ResourceData, config *transport_tpg.Config) interface{} {
  if v == nil {
    return nil
  }

  bundles := v.(map[string]interface{})
  transformedBundles := make([]map[string]interface{}, 0, len(bundles))

  keys := []string{}
  for bundleName := range bundles {
    keys = append(keys, bundleName)
  }
  sort.Strings(keys)

  for _, bundleName := range keys {
    raw := bundles[bundleName]
    bundle := raw.(map[string]interface{})
    bundle["name"] = bundleName
    bundle["exempted_namespaces"] = bundle["exemptedNamespaces"]
    delete(bundle, "exemptedNamespaces")
    transformedBundles = append(transformedBundles, bundle)
  }

  return transformedBundles
}
