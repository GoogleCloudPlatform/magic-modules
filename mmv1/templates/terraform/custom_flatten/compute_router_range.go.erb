<%# The license inside this block applies to this file.
	# Copyright 2024 Google Inc.
	# Licensed under the Apache License, Version 2.0 (the "License");
	# you may not use this file except in compliance with the License.
	# You may obtain a copy of the License at
	#
	#     http://www.apache.org/licenses/LICENSE-2.0
	#
	# Unless required by applicable law or agreed to in writing, software
	# distributed under the License is distributed on an "AS IS" BASIS,
	# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	# See the License for the specific language governing permissions and
	# limitations under the License.
-%>
func flatten<%= prefix -%><%= titlelize_property(property) -%>(v interface{}, d *schema.ResourceData, config *transport_tpg.Config) interface{} {
	if v == nil {
		return v
	}
	l := v.([]interface{})
	apiData := make([]map[string]interface{}, 0, len(l))
	for _, raw := range l {
		original := raw.(map[string]interface{})
		if len(original) < 1 {
			// Do not include empty json objects coming back from the api
			continue
		}
		apiData = append(apiData, map[string]interface{}{
			"description": original["description"],
			"range":  original["range"],
		})
	}
	configData := []map[string]interface{}{}
	if v, ok := d.GetOk("advertised_ip_ranges"); ok {
		for _, item := range v.([]interface{}) {
			configData = append(configData, item.(map[string]interface{}))
		}
	}
	sorted, err := tpgresource.SortMapsByConfigOrder(configData, apiData, "range")
	if err != nil {
		log.Printf("[ERROR] Could not support API response for advertisedIpRanges.0.range: %s", err)
		return apiData
	}
	return sorted
}
