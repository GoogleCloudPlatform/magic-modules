{{- /*
	The license inside this block applies to this file
	Copyright 2024 Google Inc.
	Licensed under the Apache License, Version 2.0 (the "License");
	you may not use this file except in compliance with the License.
	You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0
	Unless required by applicable law or agreed to in writing, software
	distributed under the License is distributed on an "AS IS" BASIS,
	WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	See the License for the specific language governing permissions and
	limitations under the License.
*/}}

// The custom expander transforms input into something like this:
// authorization {
//    admin_users [
//      { username = "user1" },
//      { username = "user2" }
//    ]
//    admin_groups [
//      { group = "group1" },
//      { group = "group2" },
//    ]
// }
// The custom flattener transforms input back into something like this:
// authorization {
//    admin_users = [
//      "user1",
//      "user2"
//    ]
//    admin_groups = [
//      "group1",
//      "group2"
//    ],
// }
func flatten{{$.GetPrefix}}{{$.TitlelizeProperty}}(v interface{}, d *schema.ResourceData, config *transport_tpg.Config) interface{} {
	if v == nil || len(v.(map[string]interface{})) == 0 {
		return nil
	}

	transformed := make(map[string][]string)
	if v.(map[string]interface{})["adminUsers"] != nil {
		orig := v.(map[string]interface{})["adminUsers"].([]interface{})
		transformed["admin_users"] = make([]string, len(orig))
		for i, u := range orig {
			if u != nil {
				transformed["admin_users"][i] = u.(map[string]interface{})["username"].(string)
			}
		}
	}
	if v.(map[string]interface{})["adminGroups"] != nil {
		orig := v.(map[string]interface{})["adminGroups"].([]interface{})
		transformed["admin_groups"] = make([]string, len(orig))
		for i, u := range orig {
			if u != nil {
				transformed["admin_groups"][i] = u.(map[string]interface{})["group"].(string)
			}
		}
	}

	return []interface{}{transformed}
}
