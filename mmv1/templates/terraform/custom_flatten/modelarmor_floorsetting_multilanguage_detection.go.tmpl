func flatten{{$.GetPrefix}}{{$.TitlelizeProperty}}(v interface{}, d *schema.ResourceData, config *transport_tpg.Config) interface{} {
    if v == nil {
        return []interface{}{map[string]interface{}{"enable_multi_language_detection": false}}
    }
    original, ok := v.(map[string]interface{})
    if !ok {
        return nil // Should not happen if API is consistent
    }
    // Populating the field even if the returned block is empty.
    transformed := make(map[string]interface{})

    if val, ok := original["enableMultiLanguageDetection"]; ok {
        transformed["enable_multi_language_detection"] = val
    } else {
        // Since the field is REQUIRED in the schema and the block exists, default to false if the key is missing from the API response.
        transformed["enable_multi_language_detection"] = false
    }
    return []interface{}{transformed}
}