///////////////////////////////////////////////////////////////////////////////////////////////////
// Modify response for the following fields that are ignore_read (i.e. removed in the response): //
///////////////////////////////////////////////////////////////////////////////////////////////////

//   - 'handlers.2.event_handler.0.fulfillment.0.advanced_settings.0.audio_export_gcs_destination'
//   - 'handlers.2.event_handler.0.fulfillment.0.advanced_settings.0.logging_settings'
setHandlers2EventHandlerFulfillmentAdvancedSettings0 := func(data map[string]interface{}) {
	// --- Traverse to the parent map ---
	handlers, ok := data["handlers"].([]interface{})
	if !ok { return }

	if len(handlers) <= 2 { return }
	handler, ok := handlers[2].(map[string]interface{})
	if !ok { return }

	eventHandler, ok := handler["event_handler"].(map[string]interface{})
	if !ok { return }

	fulfillment, ok := eventHandler["fulfillment"].(map[string]interface{})
	if !ok { return }

	advancedSettings, ok := fulfillment["advanced_settings"].([]interface{})
	if !ok { return }
    
	if len(advancedSettings) == 0 { return }
    // Get the final parent map that holds our target key.
	settingsMap, ok := advancedSettings[0].(map[string]interface{})
	if !ok { return }

	// --- Update the value in the parent map ---
	settingsMap["audio_export_gcs_destination"] = map[string]interface{}{"uri": "gs://tf-test-dialogflowcx-bucketuldirhyyor/prefix-"}
	settingsMap["loggingSettings"] = map[string]interface{}{
		"enableConsentBasedRedaction": true,
		"enableInteractionLogging": true,
		"enableStackdriverLogging": true,
	}
}
setHandlers2EventHandlerFulfillmentAdvancedSettings0(res)

//   - 'handlers.6.lifecycle_handler.0.fulfillment.0.advanced_settings.0.audio_export_gcs_destination'
//   - 'handlers.6.lifecycle_handler.0.fulfillment.0.advanced_settings.0.logging_settings'
setHandlers6LifecycleHandlerFulfillmentAdvancedSettings0 := func(data map[string]interface{}) {
	// --- Traverse to the parent map ---
	handlers, ok := data["handlers"].([]interface{})
	if !ok { return }

	if len(handlers) <= 6 { return }
	handler, ok := handlers[6].(map[string]interface{})
	if !ok { return }

	eventHandler, ok := handler["lifecycle_handler"].(map[string]interface{})
	if !ok { return }

	fulfillment, ok := eventHandler["fulfillment"].(map[string]interface{})
	if !ok { return }

	advancedSettings, ok := fulfillment["advanced_settings"].([]interface{})
	if !ok { return }
    
	if len(advancedSettings) == 0 { return }
    // Get the final parent map that holds our target key.
	settingsMap, ok := advancedSettings[0].(map[string]interface{})
	if !ok { return }

	// --- Update the value in the parent map ---
	settingsMap["audio_export_gcs_destination"] = map[string]interface{}{"uri": "gs://tf-test-dialogflowcx-bucketuldirhyyor/prefix-"}
	settingsMap["loggingSettings"] = map[string]interface{}{
		"enableConsentBasedRedaction": true,
		"enableInteractionLogging": true,
		"enableStackdriverLogging": true,
	}
}
setHandlers6LifecycleHandlerFulfillmentAdvancedSettings0(res)

return res, nil
