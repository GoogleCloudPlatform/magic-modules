{{- /*
	The license inside this block applies to this file
	Copyright 2024 Google Inc.
	Licensed under the Apache License, Version 2.0 (the "License");
	you may not use this file except in compliance with the License.
	You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0
	Unless required by applicable law or agreed to in writing, software
	distributed under the License is distributed on an "AS IS" BASIS,
	WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	See the License for the specific language governing permissions and
	limitations under the License.
*/}}
// terraform resource config
config := meta.(*transport_tpg.Config)

// The API returns all monitored projects
monitoredProjects, _ := res["monitoredProjects"].([]interface{})

// Convert configured terraform monitored_project resource name to a ProjectNumber
expectedProject, configProjectErr := config.NewResourceManagerClient(config.UserAgent).Projects.Get(d.Get("name").(string)).Do()
if configProjectErr != nil {
	return nil, configProjectErr
}
expectedProjectNumber := strconv.FormatInt(expectedProject.ProjectNumber, 10)

log.Printf("[DEBUG] Scanning for ProjectNumber: %s.", expectedProjectNumber)

// Iterate through the list of monitoredProjects to make sure one matches the configured monitored_project
for _, monitoredProjectRaw := range monitoredProjects {
	if monitoredProjectRaw == nil {
		continue
	}
	monitoredProject := monitoredProjectRaw.(map[string]interface{})

	// MonitoredProject names have the format locations/global/metricsScopes/[metricScopeProjectNumber]/projects/[projectNumber]
	monitoredProjectName := monitoredProject["name"]

	// `res` contains the MonitoredProjects of the relevant metrics scope
	log.Printf("[DEBUG] Matching ProjectNumbers: %s to %s.", expectedProjectNumber, monitoredProjectName)
	if strings.HasSuffix(monitoredProjectName.(string), fmt.Sprintf("/%s", expectedProjectNumber)) {
		// Match found - set response object name to match
		res["name"] = monitoredProjectName
		log.Printf("[DEBUG] Matched ProjectNumbers: %s and %s.", expectedProjectNumber, monitoredProjectName)
		return res, nil
	}
}
log.Printf("[DEBUG] MonitoringMonitoredProject couldn't be matched.")
return nil, nil
