// sslManagementType does not get returned with the beta endpoint. Hence, if sslSettings is set
// and sslManagementType is set, we return that value. Otherwise, we carry over the old value
// from state by calling d.Get("ssl_settings.0.ssl_management_type")
if v, ok := res["sslSettings"]; ok {
  original := v.(map[string]interface{})
  if _, ok := original["sslManagementType"]; !ok {
      original["sslManagementType"] = d.Get("ssl_settings.0.ssl_management_type")
  }
  res["sslSettings"] = original
} else {
  // If ssl_settings is not set, we call d.Get("ssl_settings.0.ssl_management_type"), create sslSettings,
  // and store the retrieved value in sslManagementType
  transformed := make(map[string]interface{})
  transformed["sslManagementType"] = d.Get("ssl_settings.0.ssl_management_type")
  res["sslSettings"] = transformed
}

return res, nil
