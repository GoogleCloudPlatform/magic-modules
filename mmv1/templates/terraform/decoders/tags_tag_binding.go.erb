<%# The license inside this block applies to this file.
	# Copyright 2021 Google Inc.
	# Licensed under the Apache License, Version 2.0 (the "License");
	# you may not use this file except in compliance with the License.
	# You may obtain a copy of the License at
	#
	#     http://www.apache.org/licenses/LICENSE-2.0
	#
	# Unless required by applicable law or agreed to in writing, software
	# distributed under the License is distributed on an "AS IS" BASIS,
	# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	# See the License for the specific language governing permissions and
	# limitations under the License.
-%>
// func resourceTagBindingDecoder(d *schema.ResourceData, meta interface{}, res map[string]interface{}) (map[string]interface{}, error)
if _, ok := res["tagBindings"]; !ok {
	return res, nil
}
expectedName := d.Get("name")
for _, itemRaw := range res["tagBindings"].([]interface{}) {
	item := itemRaw.(map[string]interface{})
	itemName := flattenTagsTagBindingName(item["name"], d, meta.(*Config))
	if itemName != expectedName {
		log.Printf(
			"[DEBUG] Skipping item with name=%#v, looking for %#v",
			itemName,
			expectedName,
		)
		continue
	}
	log.Printf("[DEBUG] Found item for resource %q: %#v", d.Id(), item)
	return item, nil
}
return nil, nil
