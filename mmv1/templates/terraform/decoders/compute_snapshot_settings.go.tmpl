// storage locations keep existing in the API after changing from SPECIFIC_LOCATIONS to NEAREST_MULTI_REGION or LOCAL_REGION
// However, they only are "active" when the policy is SPECIFIC_LOCATIONS
policyVal := d.Get("storage_location.policy")
policy, ok := policyVal.(string)
if ok && policy != "SPECIFIC_LOCATIONS" {
    if storageLocation, ok := res["storageLocation"].(map[string]interface{}); ok && storageLocation != nil {
        delete(storageLocation, "locations")
    }
}

return res, nil