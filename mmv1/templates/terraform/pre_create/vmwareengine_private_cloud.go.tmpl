// Check if the project exists in a deleted state
pcMarkedForDeletion, err := isPrivateCloudInDeletedState(config, d, billingProject, userAgent)
if err != nil {
        return fmt.Errorf("Error checking if Private Cloud exists and is marked for deletion: %s", err)
}
if pcMarkedForDeletion {
    log.Printf("[DEBUG] Private Cloud exists and is marked for deletion. Triggering UNDELETE of the Private Cloud.\n")
    url, err = tpgresource.ReplaceVars(d, config, "{{VmwareengineBasePath}}projects/{{project}}/locations/{{location}}/privateClouds/{{name}}:undelete")
	if err != nil {
		return err
	}
    obj = make(map[string]interface{})
} else {
    log.Printf("[DEBUG] Private Cloud is not found to be marked for deletion. Triggering CREATE of the Private Cloud.\n")
}
