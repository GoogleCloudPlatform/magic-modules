data "google_project" "project" {
  provider = google-beta
}

resource "google_compute_firewall_policy_with_rules" "<%= ctx[:primary_resource_id] %>" {
  short_name = "<%= ctx[:vars]['policy_name'] %>"
  description = "Terraform test"
  parent = "organizations/<%= ctx[:test_env_vars]['org_id'] %>"
  provider = google-beta

  rule {
    description    = "tcp rule"
    priority       = 1000
    enable_logging = true
    action         = "allow"
    direction      = "EGRESS"
    match {
      layer4_config {
        ip_protocol = "tcp"
        ports       = [8080, 7070]
      }
      dest_ip_ranges = ["11.100.0.1/32"]
      dest_fqdns = ["www.yyy.com", "www.zzz.com"]
      dest_region_codes = ["HK", "IN"]
      dest_threat_intelligences = ["iplist-search-engines-crawlers", "iplist-tor-exit-nodes"]
      dest_address_groups = [google_network_security_address_group.address_group_1.id]
    }
    target_resources = ["https://www.googleapis.com/compute/beta/projects/${data.google_project.project.name}/global/networks/default"]
  }
  rule {
    description    = "udp rule"
    priority       = 2000
    enable_logging = false
    action         = "deny"
    direction      = "INGRESS"
    match {
      layer4_config {
        ip_protocol = "udp"
      }
      src_ip_ranges = ["0.0.0.0/0"]
      src_fqdns = ["www.abc.com", "www.def.com"]
      src_region_codes = ["US", "CA"]
      src_threat_intelligences = ["iplist-known-malicious-ips", "iplist-public-clouds"]
      src_address_groups = [google_network_security_address_group.address_group_1.id]
    }
    disabled = true
  }
  rule {
    description    = "security profile group rule"
    rule_name      = "tcp rule"
    priority       = 3000
    enable_logging = false
    action         = "apply_security_profile_group"
    direction      = "INGRESS"
    match {
      layer4_config {
        ip_protocol = "tcp"
      }
      src_ip_ranges = ["0.0.0.0/0"]
    }
    target_service_accounts = ["test@google.com"]
    security_profile_group = "//networksecurity.googleapis.com/${google_network_security_security_profile_group.security_profile_group_1.id}"
    tls_inspect = true
  }
}

resource "google_network_security_address_group" "address_group_1" {
  provider    = google-beta
  name        = "<%= ctx[:vars]['address_group_name'] %>"
  parent      = "organizations/<%= ctx[:test_env_vars]['org_id'] %>"
  description = "Global address group"
  location    = "global"
  items       = ["208.80.154.224/32"]
  type        = "IPV4"
  capacity    = 100
}

resource "google_network_security_security_profile_group" "security_profile_group_1" {
  provider                  = google-beta
  name                      = "<%= ctx[:vars]['security_profile_group_name'] %>"
  parent                    = "organizations/<%= ctx[:test_env_vars]['org_id'] %>"
  description               = "my description"
  threat_prevention_profile = google_network_security_security_profile.security_profile_1.id
}

resource "google_network_security_security_profile" "security_profile_1" {
  provider    = google-beta
  name        = "<%= ctx[:vars]['security_profile_name'] %>"
  type        = "THREAT_PREVENTION"
  parent      = "organizations/<%= ctx[:test_env_vars]['org_id'] %>"
  location    = "global"
}
