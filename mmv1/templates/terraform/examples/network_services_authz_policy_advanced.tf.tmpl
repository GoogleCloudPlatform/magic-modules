resource "google_compute_network" "default" {
  name                    = "{{index $.Vars "network_name"}}"
  project                 = "{{index $.TestEnvVars "project"}}"
  auto_create_subnetworks = false
}

resource "google_compute_subnetwork" "default" {
  name          = "{{index $.Vars "subnet_name"}}"
  project       = "{{index $.TestEnvVars "project"}}"
  region        = "us-west1"
  ip_cidr_range = "10.1.2.0/24"
  network       = google_compute_network.default.id
}

resource "google_compute_subnetwork" "proxy_only" {
  name          = "{{index $.Vars "proxy_subnet_name"}}"
  project       = "{{index $.TestEnvVars "project"}}"
  region        = "us-west1"
  ip_cidr_range = "10.129.0.0/23"
  purpose       = "REGIONAL_MANAGED_PROXY"
  role          = "ACTIVE"
  network       = google_compute_network.default.id
}

resource "google_compute_address" "default" {
  name         = "{{index $.Vars "address_name"}}"
  project      = "{{index $.TestEnvVars "project"}}"
  region       = "us-west1"
  subnetwork   = google_compute_subnetwork.default.id
  address_type = "INTERNAL"
  purpose      = "GCE_ENDPOINT"
}

resource "google_compute_region_health_check" "default" {
  name    = "{{index $.Vars "health_check_name"}}"
  project = "{{index $.TestEnvVars "project"}}"
  region  = "us-west1"

  http_health_check {
    port_specification = "USE_SERVING_PORT"
  }
}

resource "google_compute_region_backend_service" "url_map" {
  name                  = "{{index $.Vars "backend_url_name"}}"
  project               = "{{index $.TestEnvVars "project"}}"
  region                = "us-west1"
  load_balancing_scheme = "INTERNAL_MANAGED"

  health_checks = [google_compute_region_health_check.default.id]
}

resource "google_compute_region_url_map" "default" {
  name            = "{{index $.Vars "url_name"}}"
  project         = "{{index $.TestEnvVars "project"}}"
  region          = "us-west1"
  default_service = google_compute_region_backend_service.url_map.id
}

resource "google_compute_region_target_http_proxy" "default" {
  name    = "{{index $.Vars "target_proxy_name"}}"
  project = "{{index $.TestEnvVars "project"}}"
  region  = "us-west1"
  url_map = google_compute_region_url_map.default.id
}

resource "google_compute_forwarding_rule" "default" {
  name                  = "{{index $.Vars "forwarding_rule_name"}}"
  project               = "{{index $.TestEnvVars "project"}}"
  region                = "us-west1"
  load_balancing_scheme = "INTERNAL_MANAGED"
  network               = google_compute_network.default.id
  subnetwork            = google_compute_subnetwork.default.id
  ip_protocol           = "TCP"
  port_range            = "80"
  target                = google_compute_region_target_http_proxy.default.id
  ip_address            = google_compute_address.default.id

  depends_on = [google_compute_subnetwork.proxy_only]
}

resource "google_compute_region_backend_service" "authz_extension" {
  name    = "{{index $.Vars "backend_authz_name"}}"
  project = "{{index $.TestEnvVars "project"}}"
  region  = "us-west1"

  protocol              = "HTTP2"
  load_balancing_scheme = "INTERNAL_MANAGED"
  port_name             = "grpc"
}

resource "google_network_services_authz_extension" "default" {
  name     = "{{index $.Vars "authz_extension_name"}}"
  project  = "{{index $.TestEnvVars "project"}}"
  location = "us-west1"

  description           = "my description"
  load_balancing_scheme = "INTERNAL_MANAGED"
  authority             = "ext11.com"
  service               = google_compute_region_backend_service.authz_extension.self_link
  timeout               = "0.1s"
  fail_open             = false
  forward_headers       = ["Authorization"]
}

resource "google_network_security_authz_policy" "{{$.PrimaryResourceId}}" {
  name        = "{{index $.Vars "resource_name"}}"
  project     = "{{index $.TestEnvVars "project"}}"
  location    = "us-west1"
  description = "my description"

  target {
    load_balancing_scheme = "INTERNAL_MANAGED"
    resources = [ google_compute_forwarding_rule.default.self_link ]
  }

  action = "CUSTOM"
  custom_provider {
    authz_extension {
      resources = [ google_network_services_authz_extension.default.id ]
    }
  }
}