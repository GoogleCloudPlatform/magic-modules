resource "google_dialogflow_cx_agent" "agent" {
  display_name          = "{{index $.Vars "agent_name"}}"
  location              = "global"
  default_language_code = "en"
  time_zone             = "America/New_York"
  description           = "Example description."
}

resource "google_storage_bucket" "bucket" {
  name                        = "{{index $.Vars "bucket_name"}}"
  location                    = "US"
  uniform_bucket_level_access = true
}

resource "google_dialogflow_cx_webhook" "my_webhook" {
  parent       = google_dialogflow_cx_agent.agent.id
  display_name = "MyWebhook"
  generic_web_service {
    uri = "https://example.com"
  }
}

resource "google_dialogflow_cx_tool" "my_tool" {
  parent       = google_dialogflow_cx_agent.agent.id
  display_name = "Example Tool"
  description  = "Example Description"
  open_api_spec {
    text_schema = <<EOF
    {
      "openapi": "3.0.0",
      "info": {
        "title": "Simple Pets API",
        "version": "1.0.0"
      },
      "servers": [
        {
          "url": "https://api.example.com/v1"
        }
      ],
      "paths": {
        "/pets": {
          "get": {
            "summary": "List all pets",
            "operationId": "listPets",
            "responses": {
              "200": {
                "description": "An array of pets",
                "content": {
                  "application/json": {
                    "schema": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Pet"
                      }
                    }
                  }
                }
              }
            }
          },
          "post": {
            "summary": "Create a new pet",
            "operationId": "createPet",
            "requestBody": {
              "description": "Pet to add to the store",
              "required": true,
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Pet"
                  }
                }
              }
            },
            "responses": {
              "201": {
                "description": "Pet created",
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/Pet"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "components": {
        "schemas": {
          "Pet": {
            "type": "object",
            "required": [
              "id",
              "name"
            ],
            "properties": {
              "id": {
                "type": "integer",
                "format": "int64"
              },
              "name": {
                "type": "string"
              }
            }
          }
        }
      }
    }
    EOF
  }
}

resource "google_dialogflow_cx_generator" "my_generator" {
  parent = google_dialogflow_cx_agent.agent.id
  display_name = "TF Prompt generator"
  llm_model_settings {
    model = "gemini-2.0-flash-001"
    prompt_text = "Return me some great results"
  }
  prompt_text {
    text = "Send me great results in french"
  }
  model_parameter {
    temperature = 0.55
  }
}

resource "google_dialogflow_cx_playbook" "{{$.PrimaryResourceId}}" {
  parent       = google_dialogflow_cx_agent.agent.id
  display_name = "Playbook Example with Fulfillment"
  goal         = "Example Goal"
  instruction {
    guidelines = "Example Guidelines"
    steps {
      text = "step 1"
      steps = jsonencode([
        {
          "text": "step 1 1"
        },
        {
          "text": "step 1 2",
          "steps": [
            {
              "text": "step 1 2 1"
            },
            {
              "text": "step 1 2 2"
            }
          ]
        },
        {
          "text": "step 1 3"
        }
      ])
    }
    steps {
      text = "step 2"
    }
    steps {
      text = "step 3"
    }
  }

  input_parameter_definitions {
    name = "schema-reference-example"
    description = "An example description."
    type_schema {
      schema_reference {
        schema = "Pet"
        tool = google_dialogflow_cx_tool.my_tool.id
      }
    }
  }

  input_parameter_definitions {
    name = "inline-schema-string-example"
    description = "An example description."
    type_schema {
      inline_schema {
        type = "STRING"
      }
    }
  }

  input_parameter_definitions {
    name = "inline-schema-number-array-example"
    description = "An example description."
    type_schema {
      inline_schema {
        type = "ARRAY"
        items = jsonencode({
          "inlineSchema": {
            "type": "NUMBER"
          }
        })
      }
    }
  }

  output_parameter_definitions {
    name = "schema-reference-example"
    description = "An example description."
    type_schema {
      schema_reference {
        schema = "Pet"
        tool = google_dialogflow_cx_tool.my_tool.id
      }
    }
  }

  output_parameter_definitions {
    name = "inline-schema-string-example"
    description = "An example description."
    type_schema {
      inline_schema {
        type = "STRING"
      }
    }
  }

  output_parameter_definitions {
    name = "inline-schema-number-array-example"
    description = "An example description."
    type_schema {
      inline_schema {
        type = "ARRAY"
        items = jsonencode({
          "inlineSchema": {
            "type": "NUMBER"
          }
        })
      }
    }
  }

  llm_model_settings {
    model = "gemini-2.0-flash-001"
    prompt_text = "Return me some great results"
  }

  referenced_tools = [google_dialogflow_cx_tool.my_tool.id]
}
