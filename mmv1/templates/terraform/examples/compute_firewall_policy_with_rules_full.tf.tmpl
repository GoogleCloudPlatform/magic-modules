data "google_project" "project" {
  provider = google-beta
}

resource "google_compute_firewall_policy_with_rules" "{{$.PrimaryResourceId}}" {
  provider    = google-beta
  short_name  = "{{index $.Vars "fw_policy"}}"
  description = "Terraform test"
  parent      = "organizations/{{index $.TestEnvVars "org_id"}}"

  rule {
    description      = "tcp rule"
    priority         = 1000
    enable_logging   = true
    action           = "allow"
    direction        = "EGRESS"
    target_resources = ["https://www.googleapis.com/compute/beta/projects/${data.google_project.project.name}/global/networks/default"]

    match {
      dest_ip_ranges            = ["11.100.0.1/32"]
      dest_fqdns                = ["www.yyy.com", "www.zzz.com"]
      dest_region_codes         = ["HK", "IN"]
      dest_threat_intelligences = ["iplist-search-engines-crawlers", "iplist-tor-exit-nodes"]
      dest_address_groups       = [google_network_security_address_group.address_group_1.id]

      layer4_config {
        ip_protocol = "tcp"
        ports       = [8080, 7070]
      }
    }
  }

  rule {
    description    = "udp rule"
    priority       = 2000
    enable_logging = false
    action         = "deny"
    direction      = "INGRESS"
    disabled       = true

    match {
      src_ip_ranges            = ["0.0.0.0/0"]
      src_fqdns                = ["www.abc.com", "www.def.com"]
      src_region_codes         = ["US", "CA"]
      src_threat_intelligences = ["iplist-known-malicious-ips", "iplist-public-clouds"]
      src_address_groups       = [google_network_security_address_group.address_group_1.id]

      layer4_config {
        ip_protocol = "udp"
      }
    }
  }

  rule {
    description             = "security profile group rule"
    rule_name               = "tcp rule"
    priority                = 3000
    enable_logging          = false
    action                  = "apply_security_profile_group"
    direction               = "INGRESS"
    target_service_accounts = ["test@google.com"]
    security_profile_group  = "//networksecurity.googleapis.com/${google_network_security_security_profile_group.security_profile_group_1.id}"
    tls_inspect             = true

    match {
      src_ip_ranges = ["0.0.0.0/0"]

      layer4_config {
        ip_protocol = "tcp"
      }
    }
  }

  rule {
    description    = "network scope rule 1"
    rule_name      = "network scope 1"
    priority       = 4000
    enable_logging = false
    action         = "allow"
    direction      = "INGRESS"
    match {
      src_ip_ranges     = ["11.100.0.1/32"]
      src_network_scope = "VPC_NETWORKS"
      src_networks      = [google_compute_network.network.id]

      layer4_config {
        ip_protocol = "tcp"
        ports       = [8080]
      }
    }
  }

  rule {
    description    = "network scope rule 2"
    rule_name      = "network scope 2"
    priority       = 5000
    enable_logging = false
    action         = "allow"
    direction      = "EGRESS"
    match {
      dest_ip_ranges     = ["0.0.0.0/0"]
      dest_network_scope = "INTERNET"

      layer4_config {
        ip_protocol = "tcp"
        ports       = [8080]
      }
    }
  }
}

resource "google_network_security_address_group" "address_group_1" {
  provider    = google-beta
  name        = "{{index $.Vars "address_group"}}"
  parent      = "organizations/{{index $.TestEnvVars "org_id"}}"
  description = "Global address group"
  location    = "global"
  items       = ["208.80.154.224/32"]
  type        = "IPV4"
  capacity    = 100
}

resource "google_network_security_security_profile_group" "security_profile_group_1" {
  provider                  = google-beta
  name                      = "{{index $.Vars "security_profile_group"}}"
  parent                    = "organizations/{{index $.TestEnvVars "org_id"}}"
  description               = "my description"
  threat_prevention_profile = google_network_security_security_profile.security_profile_1.id
}

resource "google_network_security_security_profile" "security_profile_1" {
  provider    = google-beta
  name        = "{{index $.Vars "security_profile"}}"
  type        = "THREAT_PREVENTION"
  parent      = "organizations/{{index $.TestEnvVars "org_id"}}"
  location    = "global"
}

resource "google_compute_network" "network" {
  provider                = google-beta
  name                    = "{{index $.Vars "network"}}"
  auto_create_subnetworks = false
}
