resource "google_vertex_ai_reasoning_engine" "{{$.PrimaryResourceId}}" {
  display_name = "{{index $.Vars "name"}}"
  description  = "A basic reasoning engine"
  region       = "us-central1"

  # encryption_spec {
  #   kms_key_name = google_kms_crypto_key.key.id
  # }

  spec {
    agent_framework = "google-adk"
    class_methods   = []
    # service_account = google_service_account.service_account.email

    deployment_spec {

      # This is references inside the pickle file.
      env {
        name  = "PROJECT_ID"
        value = data.google_project.project.id
      }

      env {
        name  = "var_2"
        value = "value_2"
      }

      secret_env {
        name = "secret_var_1"

        secret_ref {
          secret  = google_secret_manager_secret.secret.secret_id
          version = "latest"
        }
      }

      secret_env {
        name = "secret_var_2"

        secret_ref {
          secret  = google_secret_manager_secret.secret.secret_id
          version = "latest"
        }
      }
    }

    package_spec {
      dependency_files_gcs_uri = "${google_storage_bucket.bucket.url}/${google_storage_bucket_object.bucket_obj_dependencies_tar_gz.name}"
      pickle_object_gcs_uri    = "${google_storage_bucket.bucket.url}/${google_storage_bucket_object.bucket_obj_pickle.name}"
      python_version           = "3.11"
      requirements_gcs_uri     = "${google_storage_bucket.bucket.url}/${google_storage_bucket_object.bucket_obj_requirements_txt.name}"
    }
  }

  depends_on = [
    # google_kms_crypto_key_iam_member.crypto_key_iam,
    # google_kms_crypto_key_iam_member.crypto_key_iam_def_sa,
    google_project_iam_member.sa_iam_ai_platform_user,
    google_project_iam_member.sa_iam_object_viewer,
    google_project_iam_member.sa_iam_viewer,
    google_secret_manager_secret_iam_member.secret_access,
    google_secret_manager_secret_version.secret_version
  ]
}

resource "google_secret_manager_secret_version" "secret_version" {
  secret      = google_secret_manager_secret.secret.id
  secret_data = "test"
}

resource "google_secret_manager_secret" "secret" {
  secret_id = "secret"

  replication {
    auto {}
  }
}

resource "google_secret_manager_secret_iam_member" "secret_access" {
  secret_id  = google_secret_manager_secret.secret.id
  role       = "roles/secretmanager.secretAccessor"
  member     = google_service_account.service_account.member
}

resource "google_storage_bucket" "bucket" {
  name                        = "{{index $.Vars "bucket_name"}}"
  location                    = "us-central1"
  uniform_bucket_level_access = true
  force_destroy               = true
}

resource "google_storage_bucket_object" "bucket_obj_requirements_txt" {
  name   = "requirements.txt"
  bucket = google_storage_bucket.bucket.id
  source = "./test-fixtures/requirements_adk.txt"
}

resource "google_storage_bucket_object" "bucket_obj_pickle" {
  name   = "code.pkl"
  bucket = google_storage_bucket.bucket.id
  source = "./test-fixtures/pickle_adk.pkl"
}

resource "google_storage_bucket_object" "bucket_obj_dependencies_tar_gz" {
  name   = "dependencies.tar.gz"
  bucket = google_storage_bucket.bucket.id
  source = "./test-fixtures/dependencies_adk.tar.gz"
}

resource "google_service_account" "service_account" {
  account_id   = "reasoning-sa"
  display_name = "Reasoning Engine Service Account"
}

resource "google_project_iam_member" "sa_iam_object_viewer" {
  role    = "roles/storage.objectViewer"
  project = data.google_project.project.id
  member  = google_service_account.service_account.member
}

resource "google_project_iam_member" "sa_iam_ai_platform_user" {
  role    = "roles/aiplatform.user"
  project = data.google_project.project.id
  member  = google_service_account.service_account.member
}

resource "google_project_iam_member" "sa_iam_viewer" {
  role    = "roles/editor"
  project = data.google_project.project.id
  member  = google_service_account.service_account.member
}

# resource "google_kms_key_ring" "keyring" {
#   name     = "keyring"
#   location = "us-central1"
# }

# resource "google_kms_crypto_key" "key" {
#   name     = "key"
#   key_ring = google_kms_key_ring.keyring.id
# }

# resource "google_kms_crypto_key_iam_member" "crypto_key_iam_def_sa" {
#   crypto_key_id = google_kms_crypto_key.key.id
#   role          = "roles/cloudkms.cryptoKeyEncrypterDecrypter"
#   member        = "serviceAccount:service-${data.google_project.project.number}@gcp-sa-aiplatform-re.iam.gserviceaccount.com"
# }

data "google_project" "project" {
}
