resource "google_compute_url_map" "{{$.PrimaryResourceId}}" {
  provider    = google-beta
  name        = "{{index $.Vars "url_map_name"}}"
  description = "a description"

  default_service = google_compute_backend_service.example.id

  default_custom_error_response_policy {
    error_response_rule {
      match_response_codes = ["5xx"] # All 5xx responses will be catched
      path = "/*"
      override_response_code = 502
    }
    error_service = google_compute_backend_bucket.error.id
  }

  host_rule {
    hosts        = ["mysite.com"]
    path_matcher = "mysite"
  }

  path_matcher {
    name            = "mysite"
    default_service = google_compute_backend_service.example.id

    default_custom_error_response_policy {
      error_response_rule {
        match_response_codes = ["4xx", "5xx"] # All 4xx and 5xx responses will be catched on path login
        path = "/login"
        override_response_code = 404
      }
      error_response_rule {
        match_response_codes = ["503"] # Only a 503 response will be catched on path example
        path = "/example"
        override_response_code = 502
      }
      error_service = google_compute_backend_bucket.error.id
    }

    path_rule {
      paths   = ["/*"]
      service = google_compute_backend_service.example.id

      custom_error_response_policy {
        error_response_rule {
          match_response_codes = ["4xx"]
          path = "/register"
          override_response_code = 401
        }
        error_service = google_compute_backend_bucket.error.id
      }
    }
  }
}

resource "google_compute_backend_service" "example" {
  provider    = google-beta
  name        = "{{index $.Vars "backend_service_name"}}"
  port_name   = "http"
  protocol    = "HTTP"
  timeout_sec = 10
  load_balancing_scheme = "EXTERNAL_MANAGED"

  health_checks = [google_compute_http_health_check.default.id]
}

resource "google_compute_http_health_check" "default" {
  provider           = google-beta
  name               = "{{index $.Vars "http_health_check_name"}}"
  request_path       = "/"
  check_interval_sec = 1
  timeout_sec        = 1
}

resource "google_compute_backend_bucket" "error" {
  provider    = google-beta
  name        = "{{index $.Vars "error_backend_bucket_name"}}"
  bucket_name = google_storage_bucket.error.name
  enable_cdn  = true
}

resource "google_storage_bucket" "error" {
  provider    = google-beta
  name        = "{{index $.Vars "storage_bucket_name"}}"
  location    = "US"
}
