resource "google_project" "project" {
  project_id = "dci-tf-%{random_suffix}"
  name = "Service Project"
  org_id = "{{index $.TestEnvVars "org_id"}}"
  billing_account = "{{index $.TestEnvVars "billing_account"}}"
  deletion_policy = "DELETE"
}

# Grant Permissions
resource "google_project_iam_member" "apphub_permissions" {
  project = google_project.project.project_id
  role = "roles/apphub.admin"
  member = "serviceAccount:hashicorp-test-runner@ci-test-project-188019.iam.gserviceaccount.com"
}

resource "google_project_iam_member" "insights_agent" {
  project = google_project.project.project_id
  role = "roles/developerconnect.insightsAgent"
  member = "serviceAccount:66214305248-compute@developer.gserviceaccount.com"
}

# Enable APIs
resource "google_project_service" "apphub_api_service" {
  project = google_project.project.project_id
  service = "apphub.googleapis.com"
  disable_dependent_services=true
  depends_on = [google_project.project]
}

resource "google_project_service" "containeranalysis_api" {
  project = google_project.project.project_id
  service = "containeranalysis.googleapis.com"
  disable_dependent_services=true
  depends_on = [google_project.project]
}

resource "google_project_service" "containerscanning_api" {
  project = google_project.project.project_id
  service = "containerscanning.googleapis.com"
  disable_dependent_services=true
  depends_on = [google_project.project]
}

resource "google_project_service" "container_api" {
  project = google_project.project.project_id
  service = "container.googleapis.com"
  disable_dependent_services=true
  depends_on = [google_project.project]
}

resource "google_project_service" "artifactregistry_api" {
  project = google_project.project.project_id
  service = "artifactregistry.googleapis.com"
  disable_dependent_services=true
  depends_on = [google_project.project]
}

resource "google_project_service" "cloudbuild_api" {
  project = google_project.project.project_id
  service = "cloudbuild.googleapis.com"
  disable_dependent_services=true
  depends_on = [google_project.project]
}

resource "google_project_service" "cloudasset_api" {
  project = google_project.project.project_id
  service = "cloudasset.googleapis.com"
  disable_dependent_services=true
  depends_on = [google_project.project]
}

resource "google_project_service" "compute_api" {
  project = google_project.project.project_id
  service = "compute.googleapis.com"
  disable_dependent_services=true
  depends_on = [google_project.project]
}

resource "google_project_service" "devconnect_api" {
  project = google_project.project.project_id
  service = "developerconnect.googleapis.com"
  depends_on = [google_project.project]
}

# Wait delay after enabling APIs and granting permissions
resource "time_sleep" "wait_for_propagation" {
  depends_on = [
    google_project_iam_member.apphub_permissions,
    google_project_iam_member.insights_agent,
    google_project_service.apphub_api_service,
    google_project_service.containeranalysis_api,
    google_project_service.containerscanning_api,
    google_project_service.container_api,
    google_project_service.artifactregistry_api,
    google_project_service.artifactregistry_api,
    google_project_service.cloudbuild_api,
    google_project_service.cloudasset_api,
    google_project_service.compute_api,
    google_project_service.devconnect_api,
  ]
  create_duration  = "120s"
}

resource "google_apphub_application" "my_apphub_application" {
  location = "us-central1"
  application_id = "tf-test-example-application%{random_suffix}"
  scope {
    type = "REGIONAL"
  }
  project = google_project.project.project_id
  depends_on = [time_sleep.wait_for_propagation]
}

resource "google_developer_connect_insights_config" "insights_config" {
  location = "us-central1"
  insights_config_id = "tf-test-ic%{random_suffix}"
  project = google_project.project.project_id
  annotations = {}
  labels = {}
  app_hub_application = format("//apphub.googleapis.com/projects/%s/locations/%s/applications/%s",
        google_project.project.number,
        google_apphub_application.my_apphub_application.location,
        google_apphub_application.my_apphub_application.application_id)
  artifact_configs {
    google_artifact_analysis {
        project_id = google_project.project.project_id
    }
    google_artifact_registry {
        artifact_registry_package = "my-package"
        project_id                = google_project.project.project_id
    }
    uri = "us-docker.pkg.dev/my-project/my-repo/my-image"
  }
  depends_on = [time_sleep.wait_for_propagation]
}
