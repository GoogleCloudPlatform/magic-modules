resource "google_vertex_ai_endpoint" "{{$.PrimaryResourceId}}" {
  name         = "{{index $.Vars "endpoint_name"}}"
  display_name = "sample-endpoint"
  description  = "A sample vertex endpoint"
  location     = "us-central1"
  region       = "us-central1"
  labels       = {
    label-one = "value-one"
  }
  network      = "projects/${data.google_project.project.number}/global/networks/${google_compute_network.vertex_network.name}"
  encryption_spec {
    kms_key_name = "{{index $.Vars "kms_key_name"}}"
  }
  predict_request_response_logging_config {
    bigquery_destination {
      output_uri = "bq://${data.google_project.project.project_id}.${google_bigquery_dataset.bq_dataset.dataset_id}.request_response_logging"
    }
    enabled       = true
    sampling_rate = 0.1
  }
  traffic_split = jsonencode({
    "12345" = 100
  })

  depends_on   = [
    google_service_networking_connection.vertex_vpc_connection
  ]
}

resource "google_service_networking_connection" "vertex_vpc_connection" {
  network                 = google_compute_network.vertex_network.id
  service                 = "servicenetworking.googleapis.com"
  reserved_peering_ranges = [google_compute_global_address.vertex_range.name]
}

resource "google_compute_global_address" "vertex_range" {
  name          = "{{index $.Vars "address_name"}}"
  purpose       = "VPC_PEERING"
  address_type  = "INTERNAL"
  prefix_length = 24
  network       = google_compute_network.vertex_network.id
}

resource "google_compute_network" "vertex_network" {
  name       = "{{index $.Vars "network_name"}}"
}

resource "google_kms_crypto_key_iam_member" "crypto_key" {
  crypto_key_id = "{{index $.Vars "kms_key_name"}}"
  role          = "roles/cloudkms.cryptoKeyEncrypterDecrypter"
  member        = "serviceAccount:service-${data.google_project.project.number}@gcp-sa-aiplatform.iam.gserviceaccount.com"
}

resource "google_bigquery_dataset" "bq_dataset" {
  dataset_id                 = "{{index $.Vars "dataset_id"}}"
  friendly_name              = "logging dataset"
  description                = "This is a dataset that requests are logged to"
  location                   = "US"
  delete_contents_on_destroy = true
}

data "google_project" "project" {}
