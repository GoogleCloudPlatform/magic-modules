resource "google_storage_bucket" "images" {
  provider                    = google-beta
  project                     = "<%= ctx[:test_env_vars]['project_id'] %>"
  name                        = "<%= ctx[:vars]['bucket_id'] %>"
  location                    = "US"
  uniform_bucket_level_access = true

  # Delete all objects when the bucket is deleted
  force_destroy = true
}

resource "google_firebase_extensions_instance" "resize_image" {
  provider = google-beta
  project  = "<%= ctx[:test_env_vars]['project_id'] %>"
  instance_id = "<%= ctx[:vars]['instance-id'] %>"
  config {
    extension_ref = "firebase/storage-resize-images"
    extension_version = "0.2.2"

    # The following params apply to the firebase/storage-resize-images extension. 
    # Different extensions may have different params
    params = {
      DELETE_ORIGINAL_FILE = false
      MAKE_PUBLIC          = false
      IMAGE_TYPE           = false
      IS_ANIMATED          = true
      FUNCTION_MEMORY      = 1024
      DO_BACKFILL          = false
      IMG_SIZES            = "200x200"
      IMG_BUCKET           = google_storage_bucket.images.name
    }

    system_params = {
      "firebaseextensions.v1beta.function/location"                   = "<%= ctx[:vars]['location'] %>"
      "firebaseextensions.v1beta.function/maxInstances"               = 3000
      "firebaseextensions.v1beta.function/minInstances"               = 0
      "firebaseextensions.v1beta.function/vpcConnectorEgressSettings" = "VPC_CONNECTOR_EGRESS_SETTINGS_UNSPECIFIED"
    }

    allowed_event_types = [
      "firebase.extensions.storage-resize-images.v1.onCompletion"
    ]

    eventarc_channel = "projects/<%= ctx[:test_env_vars]['project_id'] %>/locations/<%= ctx[:vars]['location'] %>/channels/firebase"
  }
}