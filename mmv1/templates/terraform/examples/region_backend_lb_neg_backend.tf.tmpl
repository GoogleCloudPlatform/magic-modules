data "google_compute_network_endpoint_group" "ilb_network_endpoint_group_zonal" {
  count   = {{ if or (eq (index $.Vars "environment") "qa") (eq (index $.Vars "environment") "test") (eq (index $.Vars "environment") "dev") }}1{{ else }}0{{ end }}
  name    = "name-{{index $.Vars "environment"}}-jira-neg"
  project = "{{index $.Vars "project_id"}}"
  zone    = "us-central1-a"

  depends_on = [
    helm_release.jira
  ]
}

resource "google_compute_region_health_check" "ilb_health_check_zonal" {
  count   = {{ if or (eq (index $.Vars "environment") "qa") (eq (index $.Vars "environment") "test") (eq (index $.Vars "environment") "dev") }}1{{ else }}0{{ end }}
  name    = "name-{{index $.Vars "environment"}}-ilb-health-check"
  project = "{{index $.Vars "project_id"}}"
  region  = "us-central1"
  
  timeout_sec         = 5
  check_interval_sec  = 5
  healthy_threshold   = 2
  unhealthy_threshold = 2

  http_health_check {
    port               = "8080"
    request_path       = "/status"
    port_specification = "USE_FIXED_PORT"
  }
}

resource "google_compute_region_backend_service" "ilb_backend_service_zonal" {
  count                 = {{ if or (eq (index $.Vars "environment") "dev") (eq (index $.Vars "environment") "test") (eq (index $.Vars "environment") "qa") }}1{{ else }}0{{ end }}
  name                  = "name-{{index $.Vars "environment"}}-ilb-backend-service"
  project               = "{{index $.Vars "project_id"}}"
  region                = "us-central1"
  health_checks         = [google_compute_region_health_check.ilb_health_check_zonal[0].id]
  protocol              = "HTTP"
  load_balancing_scheme = "INTERNAL_MANAGED"
  enable_cdn            = false
  session_affinity      = "GENERATED_COOKIE"
  locality_lb_policy    = "RING_HASH"
  timeout_sec           = 300

  backend {
    group                 = data.google_compute_network_endpoint_group.ilb_network_endpoint_group_zonal[0].id
    balancing_mode        = "RATE"
    max_rate_per_endpoint = 1000
    capacity_scaler       = 1.0
  }

  consistent_hash {
    minimum_ring_size = 1024
  }
}

resource "google_compute_region_url_map" "ilb_url_map_zonal" {
  count           = {{ if or (eq (index $.Vars "environment") "dev") (eq (index $.Vars "environment") "test") (eq (index $.Vars "environment") "qa") }}1{{ else }}0{{ end }}
  name            = "name-{{index $.Vars "environment"}}-ilb-url-map"
  project         = "{{index $.Vars "project_id"}}"
  region          = "us-central1"
  default_service = google_compute_region_backend_service.ilb_backend_service_zonal[0].id
}

resource "google_compute_region_target_http_proxy" "ilb_target_http_proxy_zonal" {
  count   = {{ if or (eq (index $.Vars "environment") "dev") (eq (index $.Vars "environment") "test") (eq (index $.Vars "environment") "qa") }}1{{ else }}0{{ end }}
  name    = "name-{{index $.Vars "environment"}}-ilb-https-proxy"
  project = "{{index $.Vars "project_id"}}"
  region  = "us-central1"
  url_map = google_compute_region_url_map.ilb_url_map_zonal[0].id
}

resource "google_compute_forwarding_rule" "ilb_global_forwarding_rule_zonal" {
  count                 = {{ if or (eq (index $.Vars "environment") "dev") (eq (index $.Vars "environment") "test") (eq (index $.Vars "environment") "qa") }}1{{ else }}0{{ end }}
  name                  = "name-{{index $.Vars "environment"}}-ilb-global-forwarding-rule"
  project               = "{{index $.Vars "project_id"}}"
  region                = "us-central1"
  network               = data.google_compute_network.network.self_link
  subnetwork            = data.google_compute_subnetwork.subnet.self_link
  ip_protocol           = "TCP"
  load_balancing_scheme = "INTERNAL_MANAGED"
  port_range            = "80"
  target                = google_compute_region_target_http_proxy.ilb_target_http_proxy_zonal[0].self_link  
  ip_address            = data.google_compute_address.nginx_ingress_ip.address
}
