# Used to retrieve project_number later
data "google_project" "project" {
  provider = google-beta
}

# Enable Eventarc API
resource "google_project_service" "eventarc" {
  provider = google-beta
  service            = "eventarc.googleapis.com"
  disable_on_destroy = false
}

# Enable Pub/Sub API
resource "google_project_service" "pubsub" {
  provider = google-beta
  service            = "pubsub.googleapis.com"
  disable_on_destroy = false
}

# Enable Workflows API
resource "google_project_service" "workflows" {
  provider = google-beta
  service            = "workflows.googleapis.com"
  disable_on_destroy = false
}



# Create a service account for Eventarc trigger and Workflows
resource "google_service_account" "eventarc_workflows_service_account" {
  provider = google-beta
  account_id   = "{{index $.Vars "service_account"}}"
  display_name = "Eventarc Workflows Service Account"
}

# Grant the logWriter role to the service account
resource "google_project_iam_member" "project_binding_eventarc" {
  provider = google-beta
  project = data.google_project.project.id
  role    = "roles/logging.logWriter"

  member = "serviceAccount:${google_service_account.eventarc_workflows_service_account.email}"

  depends_on = [google_service_account.eventarc_workflows_service_account]
}

# Grant the workflows.invoker role to the service account
resource "google_project_iam_member" "project_binding_workflows" {
  provider = google-beta
  project = data.google_project.project.id
  role    = "roles/workflows.invoker"

  member = "serviceAccount:${google_service_account.eventarc_workflows_service_account.email}"

  depends_on = [google_service_account.eventarc_workflows_service_account]
}


# Define and deploy a workflow
resource "google_workflows_workflow" "workflows_example" {
  name            = "{{index $.Vars "pubsub_workflow_tf"}}"
  provider = google-beta
  region          = "us-central1"
  description     = "A sample workflow"
  service_account = google_service_account.eventarc_workflows_service_account.id
  # Imported main workflow YAML file
  source_contents = templatefile("test-fixtures/workflow.yaml",{})

  depends_on = [google_project_service.workflows, 
google_service_account.eventarc_workflows_service_account]
}


# Create an Eventarc trigger routing Pub/Sub events to Workflows
resource "google_eventarc_trigger" "{{$.PrimaryResourceId}}" {
  name     = "{{index $.Vars "trigger_pubsub_workflow_tf"}}"
  provider = google-beta
  location = "us-central1"
  matching_criteria {
    attribute = "type"
    value     = "google.cloud.pubsub.topic.v1.messagePublished"
  }
  destination {
    workflow = google_workflows_workflow.workflows_example.id
  }


  service_account = google_service_account.eventarc_workflows_service_account.id

  depends_on = [google_project_service.pubsub, google_project_service.eventarc, 
google_service_account.eventarc_workflows_service_account]
}

