# Example of setting up a App Engine service with a static outbound IP

# [START appengine_service_static_network]
resource "google_compute_network" "default" {
  name = "<%= ctx[:vars]['appengine_static_ip_network'] %>"
}
# [END appengine_service_static_network]

# [START appengine_service_static_subnet]
resource "google_compute_subnetwork" "default" {
  name          = "<%= ctx[:vars]['appengine_static_ip'] %>"
  ip_cidr_range = "10.124.0.16/28"
  network       = google_compute_network.default.id
  region        = "us-central1"
}
# [END appengine_service_static_subnet]

# [START appengine_service_static_vpc_conn]
resource "google_project_service" "vpc" {
  service = "vpcaccess.googleapis.com"
  disable_on_destroy = false
}

resource "google_vpc_access_connector" "default" {
  provider = google-beta
  name     = "<%= ctx[:vars]['appengine_static_ip_conn'] %>"

  subnet {
    name = google_compute_subnetwork.default.name
  }

  # Wait for VPC API enablement
  # before creating this resource
  depends_on = [
    google_project_service.vpc
  ]
}
# [END appengine_service_static_vpc_conn]

# [START appengine_service_static_router]
resource "google_compute_router" "default" {
  name    = "<%= ctx[:vars]['appengine_static_ip_router'] %>"
  network = google_compute_network.default.name
  region  = google_compute_subnetwork.default.region
}
# [END appengine_service_static_router]

# [START appengine_service_static_addr]
resource "google_compute_address" "default" {
  name   = "<%= ctx[:vars]['appengine_static_ip_addr'] %>"
  region = google_compute_subnetwork.default.region
}
# [END appengine_service_static_addr]

# [START appengine_service_static_nat]
resource "google_compute_router_nat" "default" {
  name   = "<%= ctx[:vars]['appengine_static_nat'] %>"
  router = google_compute_router.default.name
  region = google_compute_subnetwork.default.region

  nat_ip_allocate_option = "MANUAL_ONLY"
  nat_ips                = [google_compute_address.default.self_link]

  source_subnetwork_ip_ranges_to_nat = "LIST_OF_SUBNETWORKS"
  subnetwork {
    name                    = google_compute_subnetwork.default.id
    source_ip_ranges_to_nat = ["ALL_IP_RANGES"]
  }
}
# [END appengine_service_static_nat]

# [START appengine_service_static_service]
resource "google_app_engine_standard_app_version" "<%= ctx[:primary_resource_id] %>" {
  version_id = "v1"
  service    = "myapp"
  runtime    = "nodejs10"

  entrypoint {
    shell = "node ./app.js"
  }

  deployment {
    zip {
      source_url = "https://storage.googleapis.com/${google_storage_bucket.bucket.name}/${google_storage_bucket_object.object.name}"
    }
  }

  vpc_access_connector {
    name           = google_vpc_access_connector.default.name
    egress_setting = "ALL_TRAFFIC"
  }

  env_variables = {
    port = "8080"
  }

  automatic_scaling {
    max_concurrent_requests = 10
    min_idle_instances = 1
    max_idle_instances = 3
    min_pending_latency = "1s"
    max_pending_latency = "5s"
    standard_scheduler_settings {
      target_cpu_utilization = 0.5
      target_throughput_utilization = 0.75
      min_instances = 2
      max_instances = 10
    }
  }

  delete_service_on_destroy = true
}
# [END appengine_service_static_service]

# [START google_storage_bucket]
resource "google_storage_bucket" "bucket" {
  name     = "<%= ctx[:vars]['bucket_name'] %>"
  location = "US"
}
# [END google_storage_bucket]

# [START google_storage_bucket_object]
resource "google_storage_bucket_object" "object" {
  name   = "hello-world.zip"
  bucket = google_storage_bucket.bucket.name
  source = "./test-fixtures/appengine/hello-world.zip"
}
# [END google_storage_bucket_object]
