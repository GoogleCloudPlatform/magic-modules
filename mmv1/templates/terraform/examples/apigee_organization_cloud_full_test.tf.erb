data "google_client_config" "current" {
  provider   = google-beta
}

resource "google_compute_network" "apigee_network" {
  provider   = google-beta

  name       = "<%= ctx[:vars]['network_id'] %>"
}

resource "google_compute_global_address" "apigee_range" {
  provider      = google-beta

  name          = "<%= ctx[:vars]['network_range_id'] %>"
  purpose       = "VPC_PEERING"
  address_type  = "INTERNAL"
  prefix_length = 16
  network       = google_compute_network.apigee_network.id
}

resource "google_service_networking_connection" "apigee_vpc_connection" {
  provider                = google-beta

  network                 = google_compute_network.apigee_network.id
  service                 = "servicenetworking.googleapis.com"
  reserved_peering_ranges = [google_compute_global_address.apigee_range.name]
}

resource "google_kms_key_ring" "apigee_keyring" {
  provider = google-beta

  name     = "<%= ctx[:vars]['keyring_id'] %>"
  location = "us-central1"
}

resource "google_kms_crypto_key" "apigee_key" {
  provider        = google-beta

  name            = "<%= ctx[:vars]['key_id'] %>"
  key_ring        = google_kms_key_ring.apigee_keyring.id
}

resource "google_project_service_identity" "apigee_sa" {
  provider = google-beta

  project  = data.google_client_config.current.project
  service  = "apigee.googleapis.com"
}

resource "google_kms_crypto_key_iam_binding" "apigee_sa_keyuser" {
  provider      = google-beta

  crypto_key_id = google_kms_crypto_key.apigee_key.id
  role          = "roles/cloudkms.cryptoKeyEncrypterDecrypter"

  members = [
    "serviceAccount:${google_project_service_identity.apigee_sa.email}",
  ]
}

resource "google_apigee_organization" "<%= ctx[:primary_resource_id] %>" {
  provider                             = google-beta

  analytics_region                     = "us-central1"
  display_name                         = "apigee-org"
  description                          = "Terraform-provisioned Apigee Org."
  project_id                           = data.google_client_config.current.project
  authorized_network                   = google_compute_network.apigee_network.id
  runtime_database_encryption_key_name = google_kms_crypto_key.apigee_key.id

  depends_on = [
    google_service_networking_connection.apigee_vpc_connection,
    google_kms_crypto_key_iam_binding.apigee_sa_keyuser,
  ]
}
