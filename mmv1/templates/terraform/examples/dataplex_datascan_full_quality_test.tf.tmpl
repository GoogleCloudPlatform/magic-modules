resource "google_bigquery_dataset" "tf_test_dataset" {
  dataset_id = "tf_test_dataset_id_%{random_suffix}"
  default_table_expiration_ms = 3600000
}

resource "google_bigquery_table" "tf_test_table" {
  dataset_id          = google_bigquery_dataset.tf_test_dataset.dataset_id
  table_id            = "tf_test_table_id_%{random_suffix}"
  deletion_protection = false
  schema              = <<EOF
    [
    {
      "name": "name",
      "type": "STRING",
      "mode": "NULLABLE"
    },
    {
      "name": "station_id",
      "type": "INTEGER",
      "mode": "NULLABLE",
      "description": "The id of the bike station"
    },
    {
      "name": "address",
      "type": "STRING",
      "mode": "NULLABLE",
      "description": "The address of the bike station"
    },
    {
      "name": "power_type",
      "type": "STRING",
      "mode": "NULLABLE",
      "description": "The powert type of the bike station"
    },
    {
      "name": "property_type",
      "type": "STRING",
      "mode": "NULLABLE",
      "description": "The type of the property"
    },
    {
      "name": "number_of_docks",
      "type": "INTEGER",
      "mode": "NULLABLE",
      "description": "The number of docks the property have"
    },
    {
      "name": "footprint_length",
      "type": "INTEGER",
      "mode": "NULLABLE",
      "description": "The footpring lenght of the property"
    },
    {
      "name": "council_district",
      "type": "INTEGER",
      "mode": "NULLABLE",
      "description": "The council district the property is in"
    }
    ]
  EOF
}


resource "google_dataplex_datascan" "{{$.PrimaryResourceId}}" {
  location = "us-central1"
  display_name = "Full Datascan Quality Publishing"
  data_scan_id = "{{index $.Vars "datascan_name"}}"
  description = "Example resource - Full Datascan Quality with Publishing enabled"
  labels = {
    author = "billing"
  }

  data {
    resource = "//bigquery.googleapis.com/projects/{{index $.TestEnvVars "project_name"}}/datasets/${google_bigquery_dataset.tf_test_dataset.dataset_id}/tables/${google_bigquery_table.tf_test_table.table_id}"
  }

  execution_spec {
    trigger {
      schedule {
        cron = "TZ=America/New_York 1 1 * * *"
      }
    }
  }

  data_quality_spec {
    sampling_percent = 5
    row_filter = "station_id > 1000"
    catalog_publishing_enabled = true
    post_scan_actions {
      notification_report {
        recipients {
          emails = ["jane.doe@example.com"]
        }
        score_threshold_trigger {
          score_threshold = 86
        }
      }
    }
    
    rules {
      column = "address"
      dimension = "VALIDITY"
      threshold = 0.99
      non_null_expectation {}
    }

    rules {
      column = "council_district"
      dimension = "VALIDITY"
      ignore_null = true
      threshold = 0.9
      range_expectation {
        min_value = 1
        max_value = 10
        strict_min_enabled = true
        strict_max_enabled = false
      }
    }

    rules {
      column = "power_type"
      dimension = "VALIDITY"
      ignore_null = false
      regex_expectation {
        regex = ".*solar.*"
      }
    }

    rules {
      column = "property_type"
      dimension = "VALIDITY"
      ignore_null = false
      set_expectation {
        values = ["sidewalk", "parkland"]
      }
    }


    rules {
      column = "address"
      dimension = "UNIQUENESS"
      uniqueness_expectation {}
    }

    rules {
      column = "number_of_docks"
      dimension = "VALIDITY"
      statistic_range_expectation {
        statistic = "MEAN"
        min_value = 5
        max_value = 15
        strict_min_enabled = true
        strict_max_enabled = true
      }
    }

    rules {
      column = "footprint_length"
      dimension = "VALIDITY"
      row_condition_expectation {
        sql_expression = "footprint_length > 0 AND footprint_length <= 10"
      }
    }

    rules {
      dimension = "VALIDITY"
      table_condition_expectation {
        sql_expression = "COUNT(*) > 0"
      }
    }

    rules {
      dimension = "VALIDITY"
      sql_assertion {
        sql_statement = "select * from {{index $.TestEnvVars "project_name"}}.${google_bigquery_dataset.tf_test_dataset.dataset_id}.${google_bigquery_table.tf_test_table.table_id} where address is null"
      }
    }
  }


  project = "{{index $.TestEnvVars "project_name"}}"
}
