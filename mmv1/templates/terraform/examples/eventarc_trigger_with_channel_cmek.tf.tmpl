resource "google_kms_crypto_key" "crypto_key" {
  name     = "{{index $.Vars "key_name"}}"
  key_ring = google_kms_key_ring.key_ring.id
}

resource "google_kms_key_ring" "key_ring" {
  name     = "{{index $.Vars "key_ring_name"}}"
  location = "us-central1"
}

resource "google_kms_crypto_key_iam_member" "key_member" {
	crypto_key_id = google_kms_crypto_key.crypto_key.id
	role      = "roles/cloudkms.cryptoKeyEncrypterDecrypter"
    member = "serviceAccount:service-${data.google_project.project.number}@gcp-sa-eventarc.iam.gserviceaccount.com"
}

resource "google_eventarc_channel" "test_channel" {
	location = "us-central1"
	name     = "{{index $.Vars "channel_name"}}"
	crypto_key_name = google_kms_crypto_key.crypto_key.id
	third_party_provider = "${data.google_project.project.id}/locations/us-central1/providers/datadog"
	depends_on = [google_kms_crypto_key_iam_member.key_member]
}

resource "google_cloud_run_service" "default" {
	name     = "{{index $.Vars "service_name"}}"
	location = "us-central1"

	template {
		spec {
			containers {
				image = "gcr.io/cloudrun/hello"
				ports {
					container_port = 8080
				}
			}
			container_concurrency = 50
			timeout_seconds = 100
		}
	}

	traffic {
		percent         = 100
		latest_revision = true
	}
}

resource "google_service_account" "trigger_service_account" {
  account_id = "{{index $.Vars "service_account_id"}}"
}

resource "google_eventarc_trigger" "{{$.PrimaryResourceId}}" {
	name = "{{index $.Vars "trigger_name"}}"
	location = "us-central1"
	matching_criteria {
		attribute = "type"
		value = "datadog.v1.alert"
	}
	destination {
		cloud_run_service {
			service = google_cloud_run_service.default.name
			region = "us-central1"
		}
	}
	service_account = google_service_account.trigger_service_account.email
	channel = google_eventarc_channel.test_channel.id
}

data "google_project" "project" {}
