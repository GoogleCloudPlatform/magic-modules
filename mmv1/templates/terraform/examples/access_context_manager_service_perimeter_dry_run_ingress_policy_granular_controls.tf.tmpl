resource "google_access_context_manager_service_perimeter" "storage-perimeter" {
  parent = "accesspolicies/${google_access_context_manager_access_policy.access-policy.name}"
  name   = "accesspolicies/${google_access_context_manager_access_policy.access-policy.name}/serviceperimeters/storage-perimeter"
  title  = "Storage Perimeter"
  status {
    restricted_services = ["storage.googleapis.com"]
  }
  lifecycle {
    ignore_changes = [spec[0].ingress_policies] # Allows ingress policies to be managed by google_access_context_manager_service_perimeter_dry_run_ingress_policy resources
  }
}

resource "google_access_context_manager_service_perimeter_dry_run_ingress_policy" "ingress_policy" {
  perimeter = "${google_access_context_manager_service_perimeter.storage-perimeter.name}"
  title = "{{index $.Vars "ingress_policy_title"}}"
  ingress_from {
    sources {
      resource = "projects/1234" 
    }
    identities = ["group:database-admins@google.com"]
    identities = ["principal://iam.googleapis.com/locations/global/workforcePools/1234/subject/janedoe"]
    identities = ["principalSet://iam.googleapis.com/locations/global/workforcePools/1234/*"]
  }
  ingress_to {
    resources = [ "*" ]
    roles = ["roles/bigquery.admin", "organizations/1234/roles/bigquery_custom_role"]
  }
  lifecycle {
    create_before_destroy = true
  }
}


resource "google_access_context_manager_access_policy" "access-policy" {
  parent = "organizations/123456789"
  title  = "Storage Policy"
}
