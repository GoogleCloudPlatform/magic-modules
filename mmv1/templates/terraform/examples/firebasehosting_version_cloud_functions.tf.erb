resource "google_firebase_hosting_site" "default" {
  provider = google-beta
  project  = "<%= ctx[:test_env_vars]['project_id'] %>"
  site_id  = "<%= ctx[:vars]['site_id'] %>"
}

resource "google_storage_bucket" "bucket" {
  provider = google-beta
  project  = "<%= ctx[:test_env_vars]['project_id'] %>"
  name     = "<%= ctx[:vars]['site_id'] %>-function-source"  # Every bucket name must be globally unique
  location = "US"
  uniform_bucket_level_access = true
}

resource "google_storage_bucket_object" "object" {
  provider = google-beta
  name   = "function-source.zip"
  bucket = google_storage_bucket.bucket.name
  source = "<%= ctx[:vars]['zip_path'] %>"  # Add path to the zipped function source code
}

resource "google_cloudfunctions_function" "function" {
  provider = google-beta
  project  = "<%= ctx[:test_env_vars]['project_id'] %>"

  name        = "<%= ctx[:vars]['cloud_function_id'] %>"
  description = "A Cloud Function connected to Firebase Hosing"
  runtime     = "nodejs16"

  available_memory_mb   = 128
  source_archive_bucket = google_storage_bucket.bucket.name
  source_archive_object = google_storage_bucket_object.object.name
  trigger_http          = true
  entry_point           = "helloHttp"
}

resource "google_firebase_hosting_version" "default" {
  provider = google-beta
  site_id  = google_firebase_hosting_site.default.site_id
  config {
    rewrites {
      glob = "/hello/**"
      function = google_cloudfunctions_function.function.name
    }
  }
}

resource "google_firebase_hosting_release" "default" {
  provider     = google-beta
  site_id      = google_firebase_hosting_site.default.site_id
  version_name = google_firebase_hosting_version.default.name
  message      = "Cloud Functions Integration"
}