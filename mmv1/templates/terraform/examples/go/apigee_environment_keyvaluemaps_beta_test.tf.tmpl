resource "google_project" "project" { 
   provider = google-beta 
  
   project_id      = "tf-test%{random_suffix}" 
   name            = "tf-test%{random_suffix}" 
   org_id          = "{{index $.TestEnvVars "org_id"}}" 
   billing_account = "{{index $.TestEnvVars "billing_account"}}" 
 } 
  
 resource "google_project_service" "apigee" { 
   provider = google-beta 
  
   project = google_project.project.project_id 
   service = "apigee.googleapis.com" 
 } 
  
 resource "google_project_service" "compute" { 
   provider = google-beta 
  
   project = google_project.project.project_id 
   service = "compute.googleapis.com" 
   depends_on = [google_project_service.apigeeconnect]
 } 
  
 resource "google_project_service" "servicenetworking" { 
   provider = google-beta 
  
   project = google_project.project.project_id 
   service = "servicenetworking.googleapis.com" 
   depends_on = [google_project_service.compute]
 } 
  
 resource "google_project_service" "kms" { 
   provider = google-beta 
  
   project = google_project.project.project_id 
   service = "cloudkms.googleapis.com" 
   depends_on = [google_project_service.servicenetworking]
 } 

 resource "google_project_service" "apigeeconnect" {
  provider = google-beta 

  project = google_project.project.project_id
  service = "apigeeconnect.googleapis.com"
  depends_on = [google_project_service.apigee]
}
  
 resource "google_compute_network" "apigee_network" { 
   provider = google-beta 
  
   name       = "apigee-network" 
   project    = google_project.project.project_id 
   depends_on = [google_project_service.compute] 
 } 
  
 resource "google_compute_global_address" "apigee_range" { 
   provider = google-beta 
  
   name          = "apigee-range" 
   purpose       = "VPC_PEERING" 
   address_type  = "INTERNAL" 
   prefix_length = 16 
   network       = google_compute_network.apigee_network.id 
   project       = google_project.project.project_id 
 } 
  
 resource "google_service_networking_connection" "apigee_vpc_connection" { 
   provider = google-beta 
  
   network                 = google_compute_network.apigee_network.id 
   service                 = "servicenetworking.googleapis.com" 
   reserved_peering_ranges = [google_compute_global_address.apigee_range.name] 
   depends_on              = [google_project_service.servicenetworking] 
 } 
  
 resource "google_kms_key_ring" "apigee_keyring" { 
   provider = google-beta 
  
   name       = "apigee-keyring" 
   location   = "us-central1" 
   project    = google_project.project.project_id 
   depends_on = [google_project_service.kms] 
 } 
  
 resource "google_kms_crypto_key" "apigee_key" { 
   provider = google-beta 
  
   name            = "apigee-key" 
   key_ring        = google_kms_key_ring.apigee_keyring.id 
 } 
  
 resource "google_project_service_identity" "apigee_sa" { 
   provider = google-beta 
  
   project = google_project.project.project_id 
   service = google_project_service.apigee.service 
 } 
  
 resource "google_kms_crypto_key_iam_binding" "apigee_sa_keyuser" { 
   provider = google-beta 
  
   crypto_key_id = google_kms_crypto_key.apigee_key.id 
   role          = "roles/cloudkms.cryptoKeyEncrypterDecrypter" 
  
   members = [ 
     "serviceAccount:${google_project_service_identity.apigee_sa.email}", 
   ] 
 } 
  
 resource "google_apigee_organization" "apigee_org" { 
   provider = google-beta 
  
   display_name                         = "apigee-org" 
   description                          = "Terraform-managed Apigee Org" 
   analytics_region                     = "us-central1" 
   project_id                           = google_project.project.project_id 
   authorized_network                   = google_compute_network.apigee_network.id 
   billing_type                         = "EVALUATION" 
   runtime_type                         = "CLOUD"
   runtime_database_encryption_key_name = google_kms_crypto_key.apigee_key.id 
   properties { 
     property { 
       name = "features.hybrid.enabled" 
       value = "true" 
     } 
     property { 
       name = "features.mart.connect.enabled" 
       value = "true" 
     } 
   } 
  
   depends_on = [ 
     google_service_networking_connection.apigee_vpc_connection, 
     google_kms_crypto_key_iam_binding.apigee_sa_keyuser, 
   ] 
 } 

resource "google_apigee_environment" "apigee_environment" {
  provider = google-beta 

  org_id       = google_apigee_organization.apigee_org.id
  name         = "tf-test-env%{random_suffix}"
  description  = "Apigee Environment"
  display_name = "Apigee Environment"
}

resource "google_apigee_instance" "apigee_instance" {
  provider = google-beta 

  name     = "tf-test%{random_suffix}"
  location = "us-central1"
  org_id   = google_apigee_organization.apigee_org.id
}

resource "google_apigee_instance_attachment" "apigee_instance_attachment" {
  provider = google-beta 

  instance_id  = google_apigee_instance.apigee_instance.id
  environment  = google_apigee_environment.apigee_environment.name
}

resource "google_apigee_environment_keyvaluemaps" "{{$.PrimaryResourceId}}" {
  provider = google-beta 
  
  env_id    = google_apigee_environment.apigee_environment.id
  name      = "tf-test-env-kvms%{random_suffix}"
  depends_on = [
    google_apigee_organization.apigee_org,
    google_apigee_environment.apigee_environment,
    google_apigee_instance.apigee_instance,
    google_apigee_instance_attachment.apigee_instance_attachment
  ]
}
