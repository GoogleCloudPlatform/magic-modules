data "google_project" "project" {
  provider = google-beta
}

data "google_container_aws_versions" "versions" {
  provider = google-beta
  project = data.google_project.project.project_id
  location = "us-west1"
}

resource "google_container_aws_cluster" "primary" {
  provider = google-beta
  location = "us-west1"
  name     = "<%= ctx[:vars]['name'] %>-cp"
  description = "A sample aws cluster"
  project     = data.google_project.project.project_id

  authorization {
    admin_users {
      username = "<%= ctx[:test_env_vars]['service_account'] %>"
    }
  }

  aws_region = "<%= ctx[:vars]['aws_region'] %>"

  control_plane {
    aws_services_authentication {
      role_arn          = "arn:aws:iam::<%= ctx[:vars]['aws_acct_id'] %>:role/<%= ctx[:vars]['byo_prefix'] %>-1p-dev-oneplatform"
    }

    config_encryption {
      kms_key_arn = "arn:aws:kms:<%= ctx[:vars]['aws_region'] %>:<%= ctx[:vars]['aws_acct_id'] %>:key/<%= ctx[:vars]['aws_db_key'] %>"
    }

    database_encryption {
      kms_key_arn = "arn:aws:kms:<%= ctx[:vars]['aws_region'] %>:<%= ctx[:vars]['aws_acct_id'] %>:key/<%= ctx[:vars]['aws_db_key'] %>"
    }

    iam_instance_profile = "<%= ctx[:vars]['byo_prefix'] %>-1p-dev-controlplane"
    subnet_ids           = ["<%= ctx[:vars]['aws_subnet'] %>"]
    version              = data.google_container_aws_versions.versions.valid_versions[0]

    tags = {
      owner = "<%= ctx[:test_env_vars]['service_account'] %>"
    }
  }

  fleet {
    project = "projects/${data.google_project.project.number}"
  }

  networking {
    pod_address_cidr_blocks     = ["10.2.0.0/16"]
    service_address_cidr_blocks = ["10.1.0.0/16"]
    vpc_id                      = "<%= ctx[:vars]['aws_vpc'] %>"
  }
}

resource "google_container_aws_node_pool" "primary" {
  provider = google-beta
  location = "us-west1"
  name     = "<%= ctx[:vars]['name'] %>-np"
  project  = data.google_project.project.project_id
  cluster  = google_container_aws_cluster.primary.name
  version  = data.google_container_aws_versions.versions.valid_versions[0]

  autoscaling {
    min_node_count = 1
    max_node_count = 5
  }

  subnet_id = "<%= ctx[:vars]['aws_subnet'] %>"

  max_pods_constraint {
    max_pods_per_node = 110
  }

  config {
    spot_config {
      instance_types = ["m5.large"]
    }

    iam_instance_profile = "<%= ctx[:vars]['byo_prefix'] %>-1p-dev-nodepool"

    config_encryption {
      kms_key_arn = "arn:aws:kms:<%= ctx[:vars]['aws_region'] %>:<%= ctx[:vars]['aws_acct_id'] %>:key/<%= ctx[:vars]['aws_db_key'] %>"
    }

    instance_placement {
      tenancy = "DEFAULT"
    }
  }

  management {
    auto_repair = true
  }
}
