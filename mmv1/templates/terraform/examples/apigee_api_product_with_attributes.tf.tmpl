data "google_client_config" "current" {}

resource "google_compute_network" "apigee_network" {
  name = "apigee-network"
}

resource "google_compute_global_address" "apigee_range" {
  name          = "apigee-range"
  purpose       = "VPC_PEERING"
  address_type  = "INTERNAL"
  prefix_length = 16
  network       = google_compute_network.apigee_network.id
}

resource "google_service_networking_connection" "apigee_vpc_connection" {
  network                 = google_compute_network.apigee_network.id
  service                 = "servicenetworking.googleapis.com"
  reserved_peering_ranges = [google_compute_global_address.apigee_range.name]
}

resource "google_apigee_organization" "apigee_org" {
  analytics_region   = "us-central1"
  project_id         = data.google_client_config.current.project
  authorized_network = google_compute_network.apigee_network.id
  depends_on         = [google_service_networking_connection.apigee_vpc_connection]
}

resource "google_apigee_instance" "apigee_instance" {
  name               = "{{index $.Vars "instance_name"}}"
  location           = "us-central1"
  org_id             = google_apigee_organization.apigee_org.id
  peering_cidr_range = "SLASH_22"
}

resource "google_apigee_api_product" "full_api_product" {
  org_id        = google_apigee_organization.apigee_org.id
  name          = "{{index $.Vars "product_name"}}"
  display_name  = "My full API Product"

  approval_type = "auto"

  description   = "This is a sample API Product created with Terraform."

  quota               = "10000"
  quota_interval      = "1"
  quota_time_unit     = "day"
  quota_counter_scope = "PROXY"

  environments = ["dev", "hom"]
  scopes = [
    "read:weather",
    "write:reports"
  ]

  attributes {
    name  = "access"
    value = "private"
  }

  attributes {
    name  = "custom"
    value = "value"
  }

  operation_group {
    operation_config_type = "proxy"

    operation_configs {
      api_source = "anoter-proxy"

      operations {
        resource = "/"
        methods  = ["POST", "GET"]
      }

      quota {
        limit     = "1000"
        interval  = "5"
        time_unit = "minute"
      }

      attributes {
        name  = "custom"
        value = "value"
      }
    }

    operation_configs {
      api_source = "hello-world"

      operations {
        resource = "/test"
        methods  = ["POST", "GET"]
      }

      quota {
        limit     = "10"
        interval  = "30"
        time_unit = "second"
      }

      attributes {
        name  = "custom"
        value = "value"
      }
    }
  }

  graphql_operation_group {
    operation_config_type = "proxy"

    operation_configs {
      api_source = "hello-world"

      quota {
        limit     = "30"
        interval  = "50"
        time_unit = "second"
      }

      operations {
        operation_types = ["QUERY"]
        operation       = "test"
      }

      attributes {
        name  = "custom"
        value = "value"
      }
    }

    operation_configs {
      api_source = "another-proxy"

      quota {
        limit     = "50000"
        interval  = "12"
        time_unit = "hour"
      }

      operations {
        operation_types = ["MUTATION"]
        operation       = "test"
      }

      attributes {
        name  = "custom"
        value = "value"
      }
    }
  }

  grpc_operation_group {

    operation_configs {
      api_source = "another-proxy"
      service    = "grpc another test"
      methods    = ["method3", "method4"]

      quota {
        limit     = "1000000"
        interval  = "1"
        time_unit = "month"
      }

      attributes {
        name  = "graph"
        value = "value"
      }
    }

    operation_configs {
      api_source = "hello-world"
      service    = "grpc test"
      methods    = ["method1", "method2"]

      quota {
        limit     = "5"
        interval  = "1"
        time_unit = "second"
      }

      attributes {
        name  = "graph"
        value = "value"
      }
    }
  }

  depends_on = [
    google_apigee_instance.apigee_instance
  ]
}
