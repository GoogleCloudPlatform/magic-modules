obj["createStatement"] = fmt.Sprintf("CREATE DATABASE `%s`", obj["name"])
dialect, dialectOk := obj["databaseDialect"];
retentionPeriod, retentionPeriodOk := obj["versionRetentionPeriod"];

if dialectOk && dialect == "POSTGRESQL" {
    obj["createStatement"] = fmt.Sprintf("CREATE DATABASE \"%s\"", obj["name"])
}

if retentionPeriodOk && dialect != "POSTGRESQL" {
        // Only include GOOGLE_STANDARD_SQL syntax in create encoder because : 
        // "DDL statements other than <CREATE DATABASE> are not allowed in database creation request for PostgreSQL-enabled databases"
        retentionDdl := fmt.Sprintf("ALTER DATABASE `%s` SET OPTIONS (version_retention_period=\"%s\")", obj["name"], retentionPeriod)

        // Handle scenario where ddl is not set at create stage
        var extraStatements []interface{}
        switch v := obj["extraStatements"].(type) {
        case []interface{}:
            extraStatements = v
        default:
            extraStatements = make([]interface{}, 0)
        }

        extraStatements = append(extraStatements, retentionDdl)
        obj["extraStatements"] = extraStatements
}

delete(obj, "name")
delete(obj, "versionRetentionPeriod")
delete(obj, "instance")
return obj, nil
