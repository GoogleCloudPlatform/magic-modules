config := meta.(*transport_tpg.Config)

if err := tpgresource.ParseImportId([]string{
    "projects/(?P<project>[^/]+)/zones/(?P<zone>[^/]+)/instanceGroups/(?P<instance_group>[^/]+)/(?P<instance>.+)",
    "(?P<project>[^/]+)/(?P<zone>[^/]+)/(?P<instance_group>[^/]+)/(?P<instance>.+)",
    "(?P<zone>[^/]+)/(?P<instance_group>[^/]+)/(?P<instance>.+)",
    "(?P<instance_group>[^/]+)/(?P<instance>.+)",
}, d, config); err != nil {
	return nil, err
}

// Replace import id for the resource id
id, err := tpgresource.ReplaceVars(d, config, "{{"{{"}}project{{"}}"}}/{{"{{"}}zone{{"}}"}}/{{"{{"}}instance_group{{"}}"}}/{{"{{"}}instance{{"}}"}}")
if err != nil {
  return nil, fmt.Errorf("Error constructing id: %s", err)
}
d.SetId(id)

return []*schema.ResourceData{d}, nil
