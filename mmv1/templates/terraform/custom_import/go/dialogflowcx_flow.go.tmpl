config := meta.(*transport_tpg.Config)
	
// current import_formats can't import fields with forward slashes in their value and parent contains slashes
if err := tpgresource.ParseImportId([]string{
    "(?P<parent>.+)/flows/(?P<name>[^/]+)",
    "(?P<parent>.+)/(?P<name>[^/]+)",
}, d, config); err != nil {
    return nil, err
}

// Replace import id for the resource id
id, err := tpgresource.ReplaceVars(d, config, "{{"{{"}}parent{{"}}"}}/flows/{{"{{"}}name{{"}}"}}")
if err != nil {
    return nil, fmt.Errorf("Error constructing id: %s", err)
}
d.SetId(id)

// Set is_default_start_flow if the resource is actually the Default Start Flow
if d.Get("name").(string) == "00000000-0000-0000-0000-000000000000" {
    d.Set("is_default_start_flow", true)
}

return []*schema.ResourceData{d}, nil