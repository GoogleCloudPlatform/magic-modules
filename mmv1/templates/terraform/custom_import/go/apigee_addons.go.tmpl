config := meta.(*transport_tpg.Config)

// current import_formats can't import fields with forward slashes in their value
if err := tpgresource.ParseImportId([]string{"(?P<org>.+)"}, d, config); err != nil {
	return nil, err
}

parts := strings.Split(d.Get("org").(string), "/")

var projectId string
switch len(parts) {
	case 1:
		projectId = parts[0]
	case 2:
		projectId = parts[1]
	default:
		return nil, fmt.Errorf(
			"Saw %s when the org is expected to have shape %s or %s",
			d.Get("org"),
			"{{"{{"}}org{{"}}"}}",
			"organizations/{{"{{"}}org{{"}}"}}",
		)
}

if err := d.Set("org", projectId); err != nil {
	return nil, fmt.Errorf("Error setting organization: %s", err)
}

// Replace import id for the resource id
id, err := tpgresource.ReplaceVars(d, config, "organizations/{{"{{"}}org{{"}}"}}")
if err != nil {
	return nil, fmt.Errorf("Error constructing id: %s", err)
}
d.SetId(id)

return []*schema.ResourceData{d}, nil
