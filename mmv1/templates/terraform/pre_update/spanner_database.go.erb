<%- # the license inside this block applies to this file
	# Copyright 2022 Google Inc.
	# Licensed under the Apache License, Version 2.0 (the "License");
	# you may not use this file except in compliance with the License.
	# You may obtain a copy of the License at
	#
	#     http://www.apache.org/licenses/LICENSE-2.0
	#
	# Unless required by applicable law or agreed to in writing, software
	# distributed under the License is distributed on an "AS IS" BASIS,
	# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	# See the License for the specific language governing permissions and
	# limitations under the License.
-%>

if d.HasChange("enable_drop_protection") {
		updateMask := []string{"enableDropProtection"}
		patchUrl, err := tpgresource.ReplaceVars(d, config, "{{SpannerBasePath}}projects/{{project}}/instances/{{instance}}/databases/{{name}}")
		if err != nil {
			return err
		}
		// updateMask is a URL parameter but not present in the schema, so ReplaceVars
		// won't set it
		patchUrl, err = transport_tpg.AddQueryParams(patchUrl, map[string]string{"updateMask": strings.Join(updateMask, ",")})
		if err != nil {
			return err
		}
		patchObj := map[string]interface{}{"enableDropProtection": d.Get("enable_drop_protection")}
		res, err := transport_tpg.SendRequest(transport_tpg.SendRequestOptions{
			Config:    config,
			Method:    "PATCH",
			Project:   billingProject,
			RawURL:    patchUrl,
			UserAgent: userAgent,
			Body:      patchObj,
			Timeout:   d.Timeout(schema.TimeoutUpdate),
		})
		if err != nil {
			return fmt.Errorf("Error updating enableDropDatabaseProtection on Database: %s", err)
		} else {
			log.Printf("[DEBUG] Finished updating enableDropDatabaseProtection %q: %#v", d.Id(), res)
		}
}

if len(obj["statements"].([]string)) == 0 {
	// Return early to avoid making an API call that errors,
	// due to containing no DDL SQL statements
	return resourceSpannerDatabaseRead(d, meta)
}

if resourceSpannerDBVirtualUpdate(d, ResourceSpannerDatabase().Schema) {
    if d.Get("deletion_protection") != nil {
        if err := d.Set("deletion_protection", d.Get("deletion_protection")); err != nil {
            return fmt.Errorf("Error reading Instance: %s", err)
        }
    }
    return nil
}
