if d.HasChange("aspects") {
	url, err = transport_tpg.AddQueryParams(url, map[string]string{"deleteMissingAspects": "true"})
	if err != nil {
		return err
	}

	aspectKeysOfInterest := make(map[string]struct{})
	currentAspects, futureAspects := d.GetChange("aspects")
	
	err = AddAspectsToSet(aspectKeysOfInterest, currentAspects)
	
	if err != nil {
		return err
	}
	
	err = AddAspectsToSet(aspectKeysOfInterest, futureAspects)
	
	if err != nil {
		return err
	}      

	aspectKeysArray := make([]string, 0, len(aspectKeysOfInterest))
	
	for key := range aspectKeysOfInterest {
		aspectKeysArray = append(aspectKeysArray, key)
	}
	
	sort.Strings(aspectKeysArray)
	
        genericAspectKeysArray := make([]interface{}, len(aspectKeysArray))
        for i, key := range aspectKeysArray {
		genericAspectKeysArray[i] = key
        }       
	
	url, err = transport_tpg.AddArrayQueryParams(url, "aspectKeys", genericAspectKeysArray)
	if err != nil {
		return err
	}
}
