{{/* The license inside this block applies to this file
  Copyright 2024 Google LLC. All Rights Reserved.

  Licensed under the Apache License, Version 2.0 (the "License");
  you may not use this file except in compliance with the License.
  You may obtain a copy of the License at

      http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License. */ -}}
{{- /* NOTE NOTE NOTE
    The newlines in this file are *load bearing*.  This file outputs
    Markdown, which is extremely sensitive to newlines.  You have got
    to have a newline after every attribute and property, because
    otherwise MD will think the next element is part of the previous
    property's bullet point.  You cannot have any double newlines in the
    middle of a property or attribute, because MD will think that the
    empty line ends the bullet point and the indentation will be off.
    You must have a newline before and after all --- document indicators,
    and you must have a newline before and after all - - - hlines.
    You cannot have more than one blank line between properties.
    The --- document indicator must be the first line of the file.
    As long as you only use `build_property_documentation`, it all works
    fine - but when you need to add custom docs (notes, etc), you need
    to remember these things.

    Know also that the `lines` function in heavy use in MagicModules will
    strip exactly one trailing newline - unless that's what you've designed
    your docstring for, it's easier to insert newlines where you need them
    manually.  That's why, in this file, we use `lines` on anything which
    is generated from a ruby function, but skip it on anything that is
    directly inserted from YAML. */ -}}
---
# ----------------------------------------------------------------------------
#
#     ***     AUTO GENERATED CODE    ***    Type: MMv1     ***
#
# ----------------------------------------------------------------------------
#
#     This file is automatically generated by Magic Modules and manual
#     changes will be clobbered when the file is regenerated.
#
#     Please read more about how to change this file in
#     .github/CONTRIBUTING.md.
#
# ----------------------------------------------------------------------------
subcategory: "{{$.ProductMetadata.DisplayName}}"
description: |-
  Collection of resources to manage IAM policy for {{$.ProductMetadata.DisplayName}} {{$.Name}}
---

# IAM policy for {{$.ProductMetadata.DisplayName}} {{$.Name}}
Three different resources help you manage your IAM policy for {{$.ProductMetadata.DisplayName}} {{$.Name}}. Each of these resources serves a different use case:

* `{{ $.IamTerraformName }}_policy`: Authoritative. Sets the IAM policy for the {{ lower $.Name }} and replaces any existing policy already attached.
* `{{ $.IamTerraformName }}_binding`: Authoritative for a given role. Updates the IAM policy to grant a role to a list of members. Other roles within the IAM policy for the {{ lower $.Name }} are preserved.
* `{{ $.IamTerraformName }}_member`: Non-authoritative. Updates the IAM policy to grant a role to a new member. Other members for the role for the {{ lower $.Name }} are preserved.

A data source can be used to retrieve policy data in advent you do not need creation

* `{{ $.IamTerraformName }}_policy`: Retrieves the IAM policy for the {{ lower $.Name }}

~> **Note:** `{{ $.IamTerraformName }}_policy` **cannot** be used in conjunction with `{{ $.IamTerraformName }}_binding` and `{{ $.IamTerraformName }}_member` or they will fight over what your policy should be.

~> **Note:** `{{ $.IamTerraformName }}_binding` resources **can be** used in conjunction with `{{ $.IamTerraformName }}_member` resources **only if** they do not grant privilege to the same role.
{{ if $.IamPolicy.IamConditionsRequestType }}
~> **Note:**  This resource supports IAM Conditions but they have some known limitations which can be found [here](https://cloud.google.com/iam/docs/conditions-overview#limitations). Please review this article if you are having issues with IAM Conditions.
{{- end }}
{{ if or (eq $.MinVersionObj.Name "beta") (eq $.IamPolicy.MinVersion "beta") }}
~> **Warning:** This resource is in beta, and should be used with the terraform-provider-google-beta provider.
See [Provider Versions](https://terraform.io/docs/providers/google/guides/provider_versions.html) for more details on beta resources.
{{- end }}

## {{ $.IamTerraformName }}_policy

```hcl
data "google_iam_policy" "admin" {
{{- if eq $.MinVersionObj.Name "beta" }}
  provider = google-beta
{{- end }}
  binding {
    role = "{{if $.IamPolicy.AdminIamRole}}{{$.IamPolicy.AdminIamRole }}{{else}}{{$.IamPolicy.AllowedIamRole}}{{end}}"
    members = [
      "user:jane@example.com",
    ]
  }
}

resource "{{ $.IamTerraformName }}_policy" "policy" {
{{- if eq $.MinVersionObj.Name "beta" }}
  provider = google-beta
{{- end }}
{{- $.CustomTemplate $.IamPolicy.ExampleConfigBody false }}
  policy_data = data.google_iam_policy.admin.policy_data
}
```
{{ if $.IamPolicy.IamConditionsRequestType }}
With IAM Conditions:

```hcl
data "google_iam_policy" "admin" {
{{ if eq $.MinVersionObj.Name "beta" }}
  provider = google-beta
{{- end }}
  binding {
    role = "{{if $.IamPolicy.AdminIamRole}}{{$.IamPolicy.AdminIamRole }}{{else}}{{$.IamPolicy.AllowedIamRole}}{{end}}"
    members = [
      "user:jane@example.com",
    ]

    condition {
      title       = "expires_after_2019_12_31"
      description = "Expiring at midnight of 2019-12-31"
      expression  = "request.time < timestamp(\"2020-01-01T00:00:00Z\")"
    }
  }
}

resource "{{ $.IamTerraformName }}_policy" "policy" {
{{- if eq $.MinVersionObj.Name "beta" }}
  provider = google-beta
{{- end }}
{{- $.CustomTemplate $.IamPolicy.ExampleConfigBody false }}
  policy_data = data.google_iam_policy.admin.policy_data
}
```
{{- end }}
## {{ $.IamTerraformName }}_binding

```hcl
resource "{{ $.IamTerraformName }}_binding" "binding" {
{{- if eq $.MinVersionObj.Name "beta" }}
  provider = google-beta
{{- end -}}
{{- $.CustomTemplate $.IamPolicy.ExampleConfigBody false }}
  role = "{{if $.IamPolicy.AdminIamRole}}{{$.IamPolicy.AdminIamRole }}{{else}}{{$.IamPolicy.AllowedIamRole}}{{end}}"
  members = [
    "user:jane@example.com",
  ]
}
```
{{ if $.IamPolicy.IamConditionsRequestType }}
With IAM Conditions:

```hcl
resource "{{ $.IamTerraformName }}_binding" "binding" {
{{- if eq $.MinVersionObj.Name "beta" }}
  provider = google-beta
{{- end }}
{{- $.CustomTemplate $.IamPolicy.ExampleConfigBody false }}
  role = "{{if $.IamPolicy.AdminIamRole}}{{$.IamPolicy.AdminIamRole }}{{else}}{{$.IamPolicy.AllowedIamRole}}{{end}}"
  members = [
    "user:jane@example.com",
  ]

  condition {
    title       = "expires_after_2019_12_31"
    description = "Expiring at midnight of 2019-12-31"
    expression  = "request.time < timestamp(\"2020-01-01T00:00:00Z\")"
  }
}
```
{{- end }}
## {{ $.IamTerraformName }}_member

```hcl
resource "{{ $.IamTerraformName }}_member" "member" {
{{- if eq $.MinVersionObj.Name "beta" -}}
  provider = google-beta
{{- end -}}
{{- $.CustomTemplate $.IamPolicy.ExampleConfigBody false }}
  role = "{{if $.IamPolicy.AdminIamRole}}{{$.IamPolicy.AdminIamRole }}{{else}}{{$.IamPolicy.AllowedIamRole}}{{end}}"
  member = "user:jane@example.com"
}
```
{{ if $.IamPolicy.IamConditionsRequestType -}}
With IAM Conditions:

```hcl
resource "{{ $.IamTerraformName }}_member" "member" {
{{- if eq $.MinVersionObj.Name "beta" }}
  provider = google-beta
{{- end -}}
{{- $.CustomTemplate $.IamPolicy.ExampleConfigBody false }}
  role = "{{if $.IamPolicy.AdminIamRole}}{{$.IamPolicy.AdminIamRole}}{{else}}{{$.IamPolicy.AllowedIamRole}}{{end}}"
  member = "user:jane@example.com"

  condition {
    title       = "expires_after_2019_12_31"
    description = "Expiring at midnight of 2019-12-31"
    expression  = "request.time < timestamp(\"2020-01-01T00:00:00Z\")"
  }
}
```
{{- end }}

## Argument Reference

The following arguments are supported:

{{ range $param := $.IamSelfLinkProperties }}
{{-   if eq $param.Name "name" -}}
* `{{ $.IamParentResourceName }}` - (Required) Used to find the parent resource to bind the IAM policy to
{{-   else if or (eq (underscore $param.Name) "region") (eq (underscore $param.Name) "zone") }}
* `{{ underscore $param.Name }}` - (Optional) {{ $param.Description }} Used to find the parent resource to bind the IAM policy to. If not specified,
  the value will be parsed from the identifier of the parent resource. If no {{ underscore $param.Name }} is provided in the parent identifier and no
  {{ underscore $param.Name }} is specified, it is taken from the provider configuration.
{{-  else }}
* `{{ underscore $param.Name }}` - (Required) {{ $param.Description }} Used to find the parent resource to bind the IAM policy to
{{-  end }}
{{- end }}
{{- if $.IamPolicy.BaseUrl }}
{{-   if contains $.IamPolicy.BaseUrl "{{project}}" }}
{{- /* The following new line allow for project to be bullet-formatted properly. */}}

* `project` - (Optional) The ID of the project in which the resource belongs.
    If it is not provided, the project will be parsed from the identifier of the parent resource. If no project is provided in the parent identifier and no project is specified, the provider project is used.
{{-   end }}
{{- else if contains $.BaseUrl "{{project}}" }}
{{- /* The following new line allow for project to be bullet-formatted properly. */}}

* `project` - (Optional) The ID of the project in which the resource belongs.
    If it is not provided, the project will be parsed from the identifier of the parent resource. If no project is provided in the parent identifier and no project is specified, the provider project is used.
{{- end }}

* `member/members` - (Required) Identities that will be granted the privilege in `role`.
  Each entry can have one of the following values:
  * **allUsers**: A special identifier that represents anyone who is on the internet; with or without a Google account.
  * **allAuthenticatedUsers**: A special identifier that represents anyone who is authenticated with a Google account or a service account.
  * **user:{emailid}**: An email address that represents a specific Google account. For example, alice@gmail.com or joe@example.com.
  * **serviceAccount:{emailid}**: An email address that represents a service account. For example, my-other-app@appspot.gserviceaccount.com.
  * **group:{emailid}**: An email address that represents a Google group. For example, admins@example.com.
  * **domain:{domain}**: A G Suite domain (primary, instead of alias) name that represents all the users of that domain. For example, google.com or example.com.
  * **projectOwner:projectid**: Owners of the given project. For example, "projectOwner:my-example-project"
  * **projectEditor:projectid**: Editors of the given project. For example, "projectEditor:my-example-project"
  * **projectViewer:projectid**: Viewers of the given project. For example, "projectViewer:my-example-project"

* `role` - (Required) The role that should be applied. Only one
    `{{ $.IamTerraformName }}_binding` can be used per role. Note that custom roles must be of the format
    `[projects|organizations]/{parent-name}/roles/{role-name}`.

* `policy_data` - (Required only by `{{ $.IamTerraformName }}_policy`) The policy data generated by
  a `google_iam_policy` data source.

{{ if $.IamPolicy.IamConditionsRequestType -}}
* `condition` - (Optional) An [IAM Condition](https://cloud.google.com/iam/docs/conditions-overview) for a given binding.
  Structure is documented below.

---

The `condition` block supports:

* `expression` - (Required) Textual representation of an expression in Common Expression Language syntax.

* `title` - (Required) A title for the expression, i.e. a short string describing its purpose.

* `description` - (Optional) An optional description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI.

~> **Warning:** Terraform considers the `role` and condition contents (`title`+`description`+`expression`) as the
  identifier for the binding. This means that if any part of the condition is changed out-of-band, Terraform will
  consider it to be an entirely different resource and will treat it as such.
{{- end -}}
## Attributes Reference

In addition to the arguments listed above, the following computed attributes are
exported:

* `etag` - (Computed) The etag of the IAM policy.

## Import

For all import syntaxes, the "resource in question" can take any of the following forms:
{{ range $idFormat := $.ImportIdFormatsFromIam }}
* {{ $idFormat }}
{{- end }}

Any variables not passed in the import command will be taken from the provider configuration.

{{$.ProductMetadata.DisplayName}} {{lower $.Name}} IAM resources can be imported using the resource identifiers, role, and member.

IAM member imports use space-delimited identifiers: the resource in question, the role, and the member identity, e.g.
```
$ terraform import {{ $.IamTerraformName }}_member.editor "{{ $.FirstIamImportIdFormat }} {{$.IamPolicy.AllowedIamRole}} user:jane@example.com"
```

IAM binding imports use space-delimited identifiers: the resource in question and the role, e.g.
```
$ terraform import {{ $.IamTerraformName }}_binding.editor "{{ $.FirstIamImportIdFormat }} {{$.IamPolicy.AllowedIamRole}}"
```

IAM policy imports use the identifier of the resource in question, e.g.
```
$ terraform import {{ $.IamTerraformName }}_policy.editor {{ $.FirstIamImportIdFormat }}
```

-> **Custom Roles**: If you're importing a IAM resource with a custom role, make sure to use the
 full name of the custom role, e.g. `[projects/my-project|organizations/my-org]/roles/my-custom-role`.

{{ if contains $.BaseUrl "{{project}}" -}}
## User Project Overrides

This resource supports [User Project Overrides](https://registry.terraform.io/providers/hashicorp/google/latest/docs/guides/provider_reference#user_project_override).
{{- end }}
