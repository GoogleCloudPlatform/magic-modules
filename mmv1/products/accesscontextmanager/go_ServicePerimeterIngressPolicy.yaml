# Copyright 2024 Google Inc.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# Warning: This is a temporary file, and should not be edited directly
---
name: 'ServicePerimeterIngressPolicy'
description: |
  Manage a single IngressPolicy in the status (enforced) configuration for a service perimeter.
  IngressPolicies match requests based on ingressFrom and ingressTo stanzas. For an ingress policy to match,
  both the ingressFrom and ingressTo stanzas must be matched. If an IngressPolicy matches a request,
  the request is allowed through the perimeter boundary from outside the perimeter.
  For example, access from the internet can be allowed either based on an AccessLevel or,
  for traffic hosted on Google Cloud, the project of the source network.
  For access from private networks, using the project of the hosting network is required.
  Individual ingress policies can be limited by restricting which services and/
  or actions they match using the ingressTo field.

  ~> **Note:** By default, updates to this resource will remove the IngressPolicy from the
  from the perimeter and add it back in a non-atomic manner. To ensure that the new IngressPolicy
  is added before the old one is removed, add a `lifecycle` block with `create_before_destroy = true` to this resource.
references:
  guides:
  api: 'https://cloud.google.com/access-context-manager/docs/reference/rest/v1/accessPolicies.servicePerimeters#ingresspolicy'
docs:
id_format: '{{perimeter}}'
base_url: ''
self_link: '{{perimeter}}'
create_url: '{{perimeter}}'
create_verb: 'PATCH'
update_mask: true
delete_verb: 'PATCH'
immutable: true
mutex: '{{perimeter}}'
import_format:
  - '{{perimeter}}'
exclude_import: true
timeouts:
  insert_minutes: 20
  update_minutes: 20
  delete_minutes: 20
autogen_async: true
async:
  actions: ['create', 'delete', 'update']
  type: 'OpAsync'
  operation:
    base_url: '{{op_id}}'
    path: 'name'
    wait_ms: 1000
  result:
    path: 'response'
    resource_inside_response: true
  error:
    path: 'error'
    message: 'message'
identity:
  - ingressFrom
  - ingressTo
nested_query:
  keys:
    - status
    - ingressPolicies
  is_list_of_ids: false
  modify_by_patch: true
custom_code:
  custom_import: 'templates/terraform/custom_import/go/access_context_manager_service_perimeter_ingress_policy.go.tmpl'
exclude_tgc: true
exclude_sweeper: true
examples:
  - name: 'access_context_manager_service_perimeter_ingress_policy'
    skip_test: true
parameters:
  - name: 'perimeter'
    type: ResourceRef
    description: |
      The name of the Service Perimeter to add this resource to.
    url_param_only: true
    required: true
    resource: 'ServicePerimeter'
    imports: 'name'
properties:
  - name: 'ingressFrom'
    type: NestedObject
    description: |
      Defines the conditions on the source of a request causing this `IngressPolicy`
      to apply.
    properties:
      - name: 'identityType'
        type: Enum
        description: |
          Specifies the type of identities that are allowed access from outside the
          perimeter. If left unspecified, then members of `identities` field will be
          allowed access.
        enum_values:
          - 'ANY_IDENTITY'
          - 'ANY_USER_ACCOUNT'
          - 'ANY_SERVICE_ACCOUNT'
      - name: 'identities'
        type: Array
        description: |
          A list of identities that are allowed access through this ingress policy.
          Should be in the format of email address. The email address should represent
          individual user or service account only.
        item_type:
          type: String
      - name: 'sources'
        type: Array
        description: |
          Sources that this `IngressPolicy` authorizes access from.
        item_type:
          type: NestedObject
          properties:
            - name: 'accessLevel'
              type: String
              description: |
                An `AccessLevel` resource name that allow resources within the
                `ServicePerimeters` to be accessed from the internet. `AccessLevels` listed
                must be in the same policy as this `ServicePerimeter`. Referencing a nonexistent
                `AccessLevel` will cause an error. If no `AccessLevel` names are listed,
                resources within the perimeter can only be accessed via Google Cloud calls
                with request origins within the perimeter.
                Example `accessPolicies/MY_POLICY/accessLevels/MY_LEVEL.`
                If * is specified, then all IngressSources will be allowed.
            - name: 'resource'
              type: String
              description: |
                A Google Cloud resource that is allowed to ingress the perimeter.
                Requests from these resources will be allowed to access perimeter data.
                Currently only projects and VPCs are allowed.
                Project format: `projects/{projectNumber}`
                VPC network format:
                `//compute.googleapis.com/projects/{PROJECT_ID}/global/networks/{NAME}`.
                The project may be in any Google Cloud organization, not just the
                organization that the perimeter is defined in. `*` is not allowed, the case
                of allowing all Google Cloud resources only is not supported.
  - name: 'ingressTo'
    type: NestedObject
    description: |
      Defines the conditions on the `ApiOperation` and request destination that cause
      this `IngressPolicy` to apply.
    properties:
      - name: 'resources'
        type: Array
        description: |
          A list of resources, currently only projects in the form
          `projects/<projectnumber>`, protected by this `ServicePerimeter`
          that are allowed to be accessed by sources defined in the
          corresponding `IngressFrom`. A request matches if it contains
          a resource in this list. If `*` is specified for resources,
          then this `IngressTo` rule will authorize access to all
          resources inside the perimeter, provided that the request
          also matches the `operations` field.
        item_type:
          type: String
      - name: 'operations'
        type: Array
        description: |
          A list of `ApiOperations` the sources specified in corresponding `IngressFrom`
          are allowed to perform in this `ServicePerimeter`.
        item_type:
          type: NestedObject
          properties:
            - name: 'serviceName'
              type: String
              description: |
                The name of the API whose methods or permissions the `IngressPolicy` or
                `EgressPolicy` want to allow. A single `ApiOperation` with `serviceName`
                field set to `*` will allow all methods AND permissions for all services.
            - name: 'methodSelectors'
              type: Array
              description: |
                API methods or permissions to allow. Method or permission must belong to
                the service specified by serviceName field. A single `MethodSelector` entry
                with `*` specified for the method field will allow all methods AND
                permissions for the service specified in `serviceName`.
              item_type:
                type: NestedObject
                properties:
                  - name: 'method'
                    type: String
                    description: |
                      Value for method should be a valid method name for the corresponding
                      serviceName in `ApiOperation`. If `*` used as value for `method`, then
                      ALL methods and permissions are allowed.
                  - name: 'permission'
                    type: String
                    description: |
                      Value for permission should be a valid Cloud IAM permission for the
                      corresponding `serviceName` in `ApiOperation`.
