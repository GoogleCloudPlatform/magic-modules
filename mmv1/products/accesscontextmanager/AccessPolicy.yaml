# Copyright 2018 Google Inc.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

--- !ruby/object:Api::Resource
name: 'AccessPolicy'
base_url: accessPolicies
self_link: 'accessPolicies/{{name}}'
update_verb: :PATCH
update_mask: true
references: !ruby/object:Api::Resource::ReferenceLinks
  guides:
    'Access Policy Quickstart': 'https://cloud.google.com/access-context-manager/docs/quickstart'
  api: 'https://cloud.google.com/access-context-manager/docs/reference/rest/v1/accessPolicies'
description: |
  AccessPolicy is a container for AccessLevels (which define the necessary
  attributes to use GCP services) and ServicePerimeters (which define
  regions of services able to freely pass data within a perimeter). An
  access policy is globally visible within an organization, and the
  restrictions it specifies apply to all projects within an organization.
docs: !ruby/object:Provider::Terraform::Docs
  warning: |
    If you are using User ADCs (Application Default Credentials) with this resource,
    you must specify a `billing_project` and set `user_project_override` to true
    in the provider configuration. Otherwise the ACM API will return a 403 error.
    Your account must have the `serviceusage.services.use` permission on the
    `billing_project` you defined.
autogen_async: true
id_format: '{{name}}'
import_format: ['{{name}}']
iam_policy: !ruby/object:Api::Resource::IamPolicy
  parent_resource_attribute: 'name'
  allowed_iam_role: 'roles/accesscontextmanager.policyAdmin'
  method_name_separator: ':'
  fetch_iam_policy_verb: :POST
  import_format: ['accessPolicies/{{name}}', '{{name}}']
  iam_conditions_request_type: null
examples:
  - !ruby/object:Provider::Terraform::Examples
    name: 'access_context_manager_access_policy_basic'
    skip_test: true
    primary_resource_id: 'access-policy'
  - !ruby/object:Provider::Terraform::Examples
    name: 'access_context_manager_access_policy_scoped'
    skip_test: true
    skip_import_test: true
    primary_resource_id: 'access-policy'
    test_env_vars:
      org_id: :ORG_ID
      project: :PROJECT_NAME
# Skipping the sweeper due to the non-standard base_url
skip_sweeper: true
custom_code: !ruby/object:Provider::Terraform::CustomCode
  post_create: templates/terraform/post_create/accesspolicy.erb
parameters:
  - !ruby/object:Api::Type::String
    name: parent
    immutable: true
    required: true
    description: |
      The parent of this AccessPolicy in the Cloud Resource Hierarchy.
      Format: organizations/{organization_id}
  - !ruby/object:Api::Type::String
    name: title
    required: true
    description: |
      Human readable title. Does not affect behavior.
  - !ruby/object:Api::Type::Array
    name: scopes
    description: |
      Folder or project on which this policy is applicable.
      Format: folders/{{folder_id}} or projects/{{project_id}}
    item_type: Api::Type::String
    max_size: 1
properties:
  - !ruby/object:Api::Type::String
    name: name
    description: |
      Resource name of the AccessPolicy. Format: {policy_id}
    output: true
    custom_flatten: templates/terraform/custom_flatten/name_from_self_link.erb
  - !ruby/object:Api::Type::Time
    name: 'createTime'
    description: |
      Time the AccessPolicy was created in UTC.
    output: true
  - !ruby/object:Api::Type::Time
    name: 'updateTime'
    description: |
      Time the AccessPolicy was updated in UTC.
    output: true
