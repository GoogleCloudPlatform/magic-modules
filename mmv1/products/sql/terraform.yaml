# Copyright 2019 Google Inc.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

--- !ruby/object:Provider::Terraform::Config
client_name: 'SqlAdmin'
overrides: !ruby/object:Overrides::ResourceOverrides
  Database: !ruby/object:Overrides::Terraform::ResourceOverride
    mutex: "google-sql-database-instance-{{project}}-{{instance}}"
    read_error_transform: "transformSQLDatabaseReadError"
    import_format: ["projects/{{project}}/instances/{{instance}}/databases/{{name}}",
                    "{{project}}/{{instance}}/{{name}}",
                    "instances/{{instance}}/databases/{{name}}",
                    "{{instance}}/{{name}}",
                    "{{name}}"]
    # This resource is a child resource
    skip_sweeper: true
    examples:
      - !ruby/object:Provider::Terraform::Examples
        name: "sql_database_basic"
        primary_resource_id: "database"
        vars:
          database_name: "my-database"
          database_instance_name: "my-database-instance"
          deletion_protection: "true"
        test_vars_overrides:
          deletion_protection: "false"
        oics_vars_overrides:
          deletion_protection: "false"
      - !ruby/object:Provider::Terraform::Examples
        name: "sql_database_deletion_policy"
        primary_resource_id: "database_deletion_policy"
        ignore_read_extra:
          - "deletion_policy"
        vars:
          database_name: "my-database"
          database_instance_name: "my-database-instance"
          deletion_protection: "true"
        test_vars_overrides:
          deletion_protection: "false"
        oics_vars_overrides:
          deletion_protection: "false"
    properties:
      collation: !ruby/object:Overrides::Terraform::PropertyOverride
        default_from_api: true
      charset: !ruby/object:Overrides::Terraform::PropertyOverride
        default_from_api: true
        diff_suppress_func: 'caseDiffSuppress'
    virtual_fields:
      # TODO: make this an enum in a future major version. If using this field as a reference, look at PerInstanceConfig's minimal_action field for enum configuration.
      - !ruby/object:Api::Type::String
        name: 'deletion_policy'
        description: |
          The deletion policy for the database. Setting ABANDON allows the resource 
          to be abandoned rather than deleted. This is useful for Postgres, where databases cannot be 
          deleted from the API if there are users other than cloudsqlsuperuser with access. Possible 
          values are: "ABANDON", "DELETE". Defaults to "DELETE".
        default_value: "DELETE"
    custom_code: !ruby/object:Provider::Terraform::CustomCode
      pre_delete: templates/terraform/pre_delete/sql_database_deletion_policy.erb
  SourceRepresentationInstance: !ruby/object:Overrides::Terraform::ResourceOverride
    examples:
      - !ruby/object:Provider::Terraform::Examples
        name: "sql_source_representation_instance_basic"
        primary_resource_id: "instance"
        vars:
          name: "my-instance"
        ignore_read_extra:
          - "password"
    properties:
      onPremisesConfiguration: !ruby/object:Overrides::Terraform::PropertyOverride
        flatten_object: true
      onPremisesConfiguration.host: !ruby/object:Overrides::Terraform::PropertyOverride
        validation: !ruby/object:Provider::Terraform::Validation
          function: 'validateIpAddress'
      onPremisesConfiguration.port: !ruby/object:Overrides::Terraform::PropertyOverride
        validation: !ruby/object:Provider::Terraform::Validation
          function: 'validation.IntBetween(0, 65535)'
      onPremisesConfiguration.password: !ruby/object:Overrides::Terraform::PropertyOverride
        sensitive: true
        custom_flatten: templates/terraform/custom_flatten/source_representation_instance_configuration_password.go.erb
      region: !ruby/object:Overrides::Terraform::PropertyOverride
        required: false
        default_from_api: true
        description: |
          The Region in which the created instance should reside.
          If it is not provided, the provider region is used.
    custom_code: !ruby/object:Provider::Terraform::CustomCode
      encoder: 'templates/terraform/encoders/sql_source_representation_instance.go.erb'
      decoder: 'templates/terraform/decoders/sql_source_representation_instance.go.erb'
  Flag: !ruby/object:Overrides::Terraform::ResourceOverride
    exclude: true
  Instance: !ruby/object:Overrides::Terraform::ResourceOverride
    exclude: true
  SslCert: !ruby/object:Overrides::Terraform::ResourceOverride
    exclude: true
  Tier: !ruby/object:Overrides::Terraform::ResourceOverride
    exclude: true
  User: !ruby/object:Overrides::Terraform::ResourceOverride
    exclude: true

files: !ruby/object:Provider::Config::Files
  # These files have templating (ERB) code that will be run.
  # This is usually to add licensing info, autogeneration notices, etc.
  compile:
<%= lines(indent(compile('provider/terraform/product~compile.yaml'), 4)) -%>
