<<<<<<< HEAD
# Copyright 2023 Google Inc.
=======
# Copyright 2024 Google Inc.
>>>>>>> 2fdda66097e2c96688e59f7c58c1f717c7785856
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

<<<<<<< HEAD
--- !ruby/object:Api::Resource
name: 'Database'
kind: 'sql#database'
base_url: projects/{{project}}/instances/{{instance}}/databases
has_self_link: true
collection_url_key: 'items'
description: |
  Represents a SQL database inside the Cloud SQL instance, hosted in
  Google's cloud.
mutex: 'google-sql-database-instance-{{project}}-{{instance}}'
read_error_transform: 'transformSQLDatabaseReadError'
import_format:
  [
    'projects/{{project}}/instances/{{instance}}/databases/{{name}}',
    '{{project}}/{{instance}}/{{name}}',
    'instances/{{instance}}/databases/{{name}}',
    '{{instance}}/{{name}}',
    '{{name}}',
  ]
# Sweeper skipped as this resource has customized deletion.
skip_sweeper: true
examples:
  - !ruby/object:Provider::Terraform::Examples
    name: 'sql_database_basic'
=======
---
name: 'Database'
kind: 'sql#database'
description: |
  Represents a SQL database inside the Cloud SQL instance, hosted in
  Google's cloud.
docs:
base_url: 'projects/{{project}}/instances/{{instance}}/databases'
has_self_link: true
mutex: 'google-sql-database-instance-{{project}}-{{instance}}'
import_format:
  - 'projects/{{project}}/instances/{{instance}}/databases/{{name}}'
  - '{{project}}/{{instance}}/{{name}}'
  - 'instances/{{instance}}/databases/{{name}}'
  - '{{instance}}/{{name}}'
  - '{{name}}'
timeouts:
  insert_minutes: 20
  update_minutes: 20
  delete_minutes: 20
async:
  actions: ['create', 'delete', 'update']
  type: 'OpAsync'
  operation:
    base_url: 'projects/{{project}}/operations/{{op_id}}'
    kind: 'sql#operation'
    path: 'name'
    wait_ms: 1000
  result:
    path: 'targetLink'
    resource_inside_response: false
  error:
    path: 'error/errors'
    message: 'message'
collection_url_key: 'items'
custom_code:
  pre_delete: 'templates/terraform/pre_delete/sql_database_deletion_policy.tmpl'
# Sweeper skipped as this resource has customized deletion.
exclude_sweeper: true
read_error_transform: 'transformSQLDatabaseReadError'
examples:
  - name: 'sql_database_basic'
>>>>>>> 2fdda66097e2c96688e59f7c58c1f717c7785856
    primary_resource_id: 'database'
    vars:
      database_name: 'my-database'
      database_instance_name: 'my-database-instance'
      deletion_protection: 'true'
    test_vars_overrides:
<<<<<<< HEAD
      deletion_protection: 'false'
    oics_vars_overrides:
      deletion_protection: 'false'
  - !ruby/object:Provider::Terraform::Examples
    name: 'sql_database_deletion_policy'
    primary_resource_id: 'database_deletion_policy'
    ignore_read_extra:
      - 'deletion_policy'
=======
      'deletion_protection': 'false'
    oics_vars_overrides:
      'deletion_protection': 'false'
  - name: 'sql_database_deletion_policy'
    primary_resource_id: 'database_deletion_policy'
>>>>>>> 2fdda66097e2c96688e59f7c58c1f717c7785856
    vars:
      database_name: 'my-database'
      database_instance_name: 'my-database-instance'
      deletion_protection: 'true'
    test_vars_overrides:
<<<<<<< HEAD
      deletion_protection: 'false'
    oics_vars_overrides:
      deletion_protection: 'false'
virtual_fields:
  # TODO: make this an enum in a future major version. If using this field as a reference, look at PerInstanceConfig's minimal_action field for enum configuration.
  - !ruby/object:Api::Type::String
    name: 'deletion_policy'
=======
      'deletion_protection': 'false'
    oics_vars_overrides:
      'deletion_protection': 'false'
    ignore_read_extra:
      - 'deletion_policy'
virtual_fields:
  # TODO: make this an enum in a future major version. If using this field as a reference, look at PerInstanceConfig's minimal_action field for enum configuration.
  - name: 'deletion_policy'
>>>>>>> 2fdda66097e2c96688e59f7c58c1f717c7785856
    description: |
      The deletion policy for the database. Setting ABANDON allows the resource
      to be abandoned rather than deleted. This is useful for Postgres, where databases cannot be
      deleted from the API if there are users other than cloudsqlsuperuser with access. Possible
      values are: "ABANDON", "DELETE". Defaults to "DELETE".
<<<<<<< HEAD
    default_value: 'DELETE'
custom_code: !ruby/object:Provider::Terraform::CustomCode
  pre_delete: templates/terraform/pre_delete/sql_database_deletion_policy.erb
parameters:
  - !ruby/object:Api::Type::String
    name: 'instance'
=======
    type: String
    default_value: "DELETE"
parameters:
  - name: 'instance'
    type: String
>>>>>>> 2fdda66097e2c96688e59f7c58c1f717c7785856
    description: |
      The name of the Cloud SQL instance. This does not include the project
      ID.
    required: true
    immutable: true
properties:
<<<<<<< HEAD
  - !ruby/object:Api::Type::String
    name: 'charset'
=======
  - name: 'charset'
    type: String
>>>>>>> 2fdda66097e2c96688e59f7c58c1f717c7785856
    description: |
      The charset value. See MySQL's
      [Supported Character Sets and Collations](https://dev.mysql.com/doc/refman/5.7/en/charset-charsets.html)
      and Postgres' [Character Set Support](https://www.postgresql.org/docs/9.6/static/multibyte.html)
      for more details and supported values. Postgres databases only support
      a value of `UTF8` at creation time.
    default_from_api: true
    diff_suppress_func: 'tpgresource.CaseDiffSuppress'
<<<<<<< HEAD
  - !ruby/object:Api::Type::String
    name: 'collation'
=======
  - name: 'collation'
    type: String
>>>>>>> 2fdda66097e2c96688e59f7c58c1f717c7785856
    description: |
      The collation value. See MySQL's
      [Supported Character Sets and Collations](https://dev.mysql.com/doc/refman/5.7/en/charset-charsets.html)
      and Postgres' [Collation Support](https://www.postgresql.org/docs/9.6/static/collation.html)
      for more details and supported values. Postgres databases only support
      a value of `en_US.UTF8` at creation time.
    default_from_api: true
<<<<<<< HEAD
  - !ruby/object:Api::Type::String
    name: 'name'
    required: true
    immutable: true
    description: |
      The name of the database in the Cloud SQL instance.
      This does not include the project ID or instance name.
=======
  - name: 'name'
    type: String
    description: |
      The name of the database in the Cloud SQL instance.
      This does not include the project ID or instance name.
    required: true
    immutable: true
>>>>>>> 2fdda66097e2c96688e59f7c58c1f717c7785856
