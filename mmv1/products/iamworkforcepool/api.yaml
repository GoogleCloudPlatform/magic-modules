# Copyright 2022 Google Inc.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

--- !ruby/object:Api::Product
name: IAMWorkforcePool
display_name: Cloud IAM
versions:
  - !ruby/object:Api::Product::Version
    name: beta
    base_url: https://iam.googleapis.com/v1/
scopes:
  - https://www.googleapis.com/auth/iam
apis_required:
  - !ruby/object:Api::Product::ApiReference
    name: Identity and Access Management (IAM) API
    url: https://console.cloud.google.com/apis/library/iam.googleapis.com/
async: !ruby/object:Api::OpAsync
  operation: !ruby/object:Api::OpAsync::Operation
    path: 'name'
    base_url: '{{op_id}}'
    wait_ms: 1000
  result: !ruby/object:Api::OpAsync::Result
    path: 'targetLink'
  status: !ruby/object:Api::OpAsync::Status
    path: 'done'
    complete: True
    allowed:
      - true
      - false
  error: !ruby/object:Api::OpAsync::Error
    path: 'error'
    message: 'message'
objects:
  - !ruby/object:Api::Resource
    name: 'WorkforcePool'
    base_url: locations/{{location}}/workforcePools
    self_link: locations/{{location}}/workforcePools/{{workforce_pool_id}}
    create_url: locations/{{location}}/workforcePools?workforcePoolId={{workforce_pool_id}}
    update_verb: :PATCH
    update_mask: true
    min_version: beta
    description: |
      Represents a collection of external workforces. Provides namespaces for
      federated users that can be referenced in IAM policies.
      Note: Ask your Google Cloud account team to request access to workforce identity
      federation for your billing/quota project. The account team notifies you when the project is
      granted access.
    references: !ruby/object:Api::Resource::ReferenceLinks
      guides:
        'Manage pools':
          'https://cloud.google.com/iam/docs/manage-workforce-identity-pools-providers#manage_pools'
      api: 'https://cloud.google.com/iam/docs/reference/rest/v1/locations.workforcePools'
    properties:
      - !ruby/object:Api::Type::String
        name: 'location'
        description: The location for the resource.
        required: true
        input: true
        url_param_only: true
      - !ruby/object:Api::Type::String
        name: 'workforcePoolId'
        description: |
          The name of the pool. The ID must be a globally unique string of 6 to 63 lowercase letters,
          digits, or hyphens. It must start with a letter, and cannot have a trailing hyphen.
          The prefix `gcp-` is reserved for use by Google, and may not be specified.
        required: true
        input: true
        url_param_only: true
      - !ruby/object:Api::Type::String
        name: 'name'
        description: |
          Output only. The resource name of the pool.
          Format: `locations/{location}/workforcePools/{workforcePoolId}`
        output: true
      - !ruby/object:Api::Type::String
        name: 'parent'
        description: |
          Immutable. The resource name of the parent. Format: `organizations/{org-id}`.
        required: true
        input: true
      - !ruby/object:Api::Type::String
        name: 'displayName'
        description: A user-specified display name of the pool in Google Cloud Console. Cannot exceed 32 characters.
      - !ruby/object:Api::Type::String
        name: 'description'
        description: A user-specified description of the pool. Cannot exceed 256 characters.
      - !ruby/object:Api::Type::Enum
        name: 'state'
        description: |
          Output only. The state of the pool.
           * STATE_UNSPECIFIED: State unspecified.
           * ACTIVE: The pool is active, and may be used in Google Cloud policies.
           * DELETED: The pool is soft-deleted. Soft-deleted pools are permanently deleted
             after approximately 30 days. You can restore a soft-deleted pool using
             [UndeleteWorkforcePool][WorkforcePools.UndeleteWorkforcePool].
             You cannot reuse the ID of a soft-deleted pool until it is permanently deleted.
             While a pool is deleted, you cannot use it to exchange tokens, or use
             existing tokens to access resources. If the pool is undeleted, existing
             tokens grant access again.
        output: true
        values:
          - :STATE_UNSPECIFIED
          - :ACTIVE
          - :DELETED
      - !ruby/object:Api::Type::Boolean
        name: 'disabled'
        description: |
          Whether the pool is disabled. You cannot use a disabled pool to exchange tokens,
          or use existing tokens to access resources. If the pool is re-enabled, existing tokens grant access again.
      - !ruby/object:Api::Type::String
        name: 'sessionDuration'
        description: |
          Duration that the Google Cloud access tokens, console sign-in sessions,
          and `gcloud` sign-in sessions from this pool are valid.  
          Must be greater than 15 minutes (900s) and less than 12 hours (43200s).
          If `sessionDuration` is not configured, minted credentials have a default duration of one hour (3600s).
          A duration in seconds with up to nine fractional digits, ending with '`s`'. Example: "`3.5s`".
        default_value: '3600s'
  - !ruby/object:Api::Resource
    name: 'WorkforcePoolProvider'
    base_url: locations/{{location}}/workforcePools/{{workforce_pool_id}}/providers
    self_link: locations/{{location}}/workforcePools/{{workforce_pool_id}}/providers/{{provider_id}}
    create_url: locations/{{location}}/workforcePools/{{workforce_pool_id}}/providers?workforcePoolProviderId={{provider_id}}
    update_verb: :PATCH
    update_mask: true
    min_version: beta
    description: |
      A configuration for an external identity provider.
      ~> **Note:** Ask your Google Cloud account team to request access to workforce identity
      federation for your billing/quota project. The account team notifies you when the project is
      granted access.
    references: !ruby/object:Api::Resource::ReferenceLinks
      guides:
        'Configure a provider within the workforce pool':
          'https://cloud.google.com/iam/docs/manage-workforce-identity-pools-providers#configure_a_provider_within_the_workforce_pool'
      api: 'https://cloud.google.com/iam/docs/reference/rest/v1/locations.workforcePools.providers'
    properties:
      - !ruby/object:Api::Type::String
        name: 'location'
        description: The location for the resource.
        required: true
        input: true
        url_param_only: true
      - !ruby/object:Api::Type::String
        name: 'workforcePoolId'
        description: |
          The ID to use for the pool, which becomes the final component of the resource name.
          The IDs must be a globally unique string of 6 to 63 lowercase letters, digits, or hyphens.
          It must start with a letter, and cannot have a trailing hyphen.
          The prefix `gcp-` is reserved for use by Google, and may not be specified.
        required: true
        input: true
        url_param_only: true
      - !ruby/object:Api::Type::String
        name: 'providerId'
        description: |
          The ID for the provider, which becomes the final component of the resource name.
          This value must be 4-32 characters, and may contain the characters [a-z0-9-].
          The prefix `gcp-` is reserved for use by Google, and may not be specified.
        required: true
        input: true
        url_param_only: true
      - !ruby/object:Api::Type::String
        name: 'name'
        description: |
          Output only. The resource name of the provider.
          Format: `locations/{location}/workforcePools/{workforcePoolId}/providers/{providerId}`
        output: true
      - !ruby/object:Api::Type::String
        name: 'displayName'
        description: A user-specified display name for the provider. Cannot exceed 32 characters.
      - !ruby/object:Api::Type::String
        name: 'description'
        description: A user-specified description of the provider. Cannot exceed 256 characters.
      - !ruby/object:Api::Type::Enum
        name: 'state'
        description: |
          The current state of the provider.
          * STATE_UNSPECIFIED: State unspecified.
          * ACTIVE: The provider is active and may be used to validate authentication credentials.
          * DELETED: The provider is soft-deleted. Soft-deleted providers are permanently
            deleted after approximately 30 days. You can restore a soft-deleted provider using
            [providers.undelete](https://cloud.google.com/iam/docs/reference/rest/v1/locations.workforcePools.providers/undelete#google.iam.admin.v1.WorkforcePools.UndeleteWorkforcePoolProvider).
        output: true
        values:
          - :STATE_UNSPECIFIED
          - :ACTIVE
          - :DELETED
      - !ruby/object:Api::Type::Boolean
        name: 'disabled'
        description: |
          Whether the provider is disabled. You cannot use a disabled provider to exchange tokens.
          However, existing tokens still grant access.
      - !ruby/object:Api::Type::KeyValuePairs
        name: 'attributeMapping'
        description: |
          Maps attributes from the authentication credentials issued by an external identity provider
          to Google Cloud attributes, such as `subject` and `segment`.
          
          Each key must be a string specifying the Google Cloud IAM attribute to map to.

          The following keys are supported:
            * `google.subject`: The principal IAM is authenticating. You can reference this value in IAM bindings.
              This is also the subject that appears in Cloud Logging logs. This is a required field and
              the mapped subject cannot exceed 127 bytes.
            * `google.groups`: Groups the authenticating user belongs to. You can grant groups access to
              resources using an IAM `principalSet` binding; access applies to all members of the group.
            * `google.display_name`: The name of the authenticated user. This is an optional field and
              the mapped display name cannot exceed 100 bytes. If not set, `google.subject` will be displayed instead.
              This attribute cannot be referenced in IAM bindings.
            * `google.profile_photo`: The URL that specifies the authenticated user's thumbnail photo.
              This is an optional field. When set, the image will be visible as the user's profile picture.
              If not set, a generic user icon will be displayed instead.
              This attribute cannot be referenced in IAM bindings.

          You can also provide custom attributes by specifying `attribute.{custom_attribute}`, where {custom_attribute}
          is the name of the custom attribute to be mapped. You can define a maximum of 50 custom attributes.
          The maximum length of a mapped attribute key is 100 characters, and the key may only contain the characters [a-z0-9_].

          You can reference these attributes in IAM policies to define fine-grained access for a workforce pool
          to Google Cloud resources. For example:
            * `google.subject`:
              `principal://iam.googleapis.com/locations/{location}/workforcePools/{pool}/subject/{value}`
            * `google.groups`:
              `principalSet://iam.googleapis.com/locations/{location}/workforcePools/{pool}/group/{value}`
            * `attribute.{custom_attribute}`:
              `principalSet://iam.googleapis.com/locations/{location}/workforcePools/{pool}/attribute.{custom_attribute}/{value}`

          Each value must be a [Common Expression Language](https://opensource.google/projects/cel)
          function that maps an identity provider credential to the normalized attribute specified
          by the corresponding map key.

          You can use the `assertion` keyword in the expression to access a JSON representation of
          the authentication credential issued by the provider.

          The maximum length of an attribute mapping expression is 2048 characters. When evaluated,
          the total size of all mapped attributes must not exceed 8KB.

          For OIDC providers, you must supply a custom mapping that includes the `google.subject` attribute.
          For example, the following maps the sub claim of the incoming credential to the `subject` attribute
          on a Google token:
          ```
          {"google.subject": "assertion.sub"}
          ```

          An object containing a list of `"key": value` pairs.
          Example: `{ "name": "wrench", "mass": "1.3kg", "count": "3" }`.
      - !ruby/object:Api::Type::String
        name: 'attributeCondition'
        description: |
          A [Common Expression Language](https://opensource.google/projects/cel) expression, in
          plain text, to restrict what otherwise valid authentication credentials issued by the
          provider should not be accepted.
          
          The expression must output a boolean representing whether to allow the federation.
          
          The following keywords may be referenced in the expressions:
            * `assertion`: JSON representing the authentication credential issued by the provider.
            * `google`: The Google attributes mapped from the assertion in the `attribute_mappings`.
              `google.profile_photo` and `google.display_name` are not supported.
            * `attribute`: The custom attributes mapped from the assertion in the `attribute_mappings`.
          
          The maximum length of the attribute condition expression is 4096 characters.
          If unspecified, all valid authentication credentials will be accepted.
          
          The following example shows how to only allow credentials with a mapped `google.groups` value of `admins`:
          ```
          "'admins' in google.groups"
          ```
      - !ruby/object:Api::Type::NestedObject
        name: 'saml'
        description: Represents a SAML identity provider.
        exactly_one_of:
          - saml
          - oidc
        properties:
          - !ruby/object:Api::Type::String
            name: idpMetadataXml
            description: |
              SAML Identity provider configuration metadata xml doc.
              The xml document should comply with [SAML 2.0 specification](https://docs.oasis-open.org/security/saml/v2.0/saml-metadata-2.0-os.pdf).
              The max size of the acceptable xml document will be bounded to 128k characters.
              
              The metadata xml document should satisfy the following constraints:
              1) Must contain an Identity Provider Entity ID.
              2) Must contain at least one non-expired signing key certificate.
              3) For each signing key: 
                a) Valid from should be no more than 7 days from now. 
                b) Valid to should be no more than 10 years in the future. 
              4) Up to 3 IdP signing keys are allowed in the metadata xml.
              
              When updating the provider's metadata xml, at least one non-expired signing key
              must overlap with the existing metadata. This requirement is skipped if there are
              no non-expired signing keys present in the existing metadata.
            required: true
      - !ruby/object:Api::Type::NestedObject
        name: 'oidc'
        description: Represents an OpenId Connect 1.0 identity provider.
        exactly_one_of:
          - saml
          - oidc
        properties:
          - !ruby/object:Api::Type::String
            name: issuerUri
            description: The OIDC issuer URI. Must be a valid URI using the 'https' scheme.
            required: true
          - !ruby/object:Api::Type::String
            name: clientId
            description: The client ID. Must match the audience claim of the JWT issued by the identity provider.
            required: true
