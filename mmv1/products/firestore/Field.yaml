# Copyright 2023 Google Inc.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

--- !ruby/object:Api::Resource
name: 'Field'
base_url: projects/{{project}}/databases/{{database}}/collectionGroups/{{collection}}/fields
create_url: projects/{{project}}/databases/{{database}}/collectionGroups/{{collection}}/fields/{{field}}
self_link: '{{name}}'
immutable: false
update_verb: :PATCH
update_mask: true
create_verb: :PATCH
error_retry_predicates:
  ["transport_tpg.FirestoreField409RetryUnderlyingDataChanged"]
description: |
  Represents a single field in the database.
  Fields are grouped by their "Collection Group", which represent all collections
  in the database with the same id.
references: !ruby/object:Api::Resource::ReferenceLinks
  guides:
    'Official Documentation': 'https://cloud.google.com/firestore/docs/query-data/indexing'
  api: 'https://cloud.google.com/firestore/docs/reference/rest/v1/projects.databases.collectionGroups.fields'
async: !ruby/object:Api::OpAsync
  operation: !ruby/object:Api::OpAsync::Operation
    path: 'name'
    base_url: '{{op_id}}'
    wait_ms: 1000
  result: !ruby/object:Api::OpAsync::Result
    path: 'response'
    resource_inside_response: true
  status: !ruby/object:Api::OpAsync::Status
    path: 'done'
    complete: true
    allowed:
      - true
      - false
  error: !ruby/object:Api::OpAsync::Error
    path: 'error'
    message: 'message'
autogen_async: true
skip_sweeper: true
import_format: ['{{name}}']
docs: !ruby/object:Provider::Terraform::Docs
  warning: |
    This resource creates a Firestore Single Field override on a project that
     already has a Firestore database. If you haven't already created it, you may
    create a `google_firestore_database` resource with `location_id` set to your
    chosen location.
examples:
  - !ruby/object:Provider::Terraform::Examples
    name: 'firestore_field_basic'
    primary_resource_id: 'basic'
    vars:
      database_id: 'database-id'
      delete_protection_state: "DELETE_PROTECTION_ENABLED"
    test_env_vars:
      project_id: :PROJECT_NAME
    test_vars_overrides:
      delete_protection_state: '"DELETE_PROTECTION_DISABLED"'
  - !ruby/object:Provider::Terraform::Examples
    name: 'firestore_field_timestamp'
    primary_resource_id: 'timestamp'
    vars:
      database_id: 'database-id'
      delete_protection_state: "DELETE_PROTECTION_ENABLED"
    test_env_vars:
      project_id: :PROJECT_NAME
    test_vars_overrides:
      delete_protection_state: '"DELETE_PROTECTION_DISABLED"'
  - !ruby/object:Provider::Terraform::Examples
    name: 'firestore_field_match_override'
    primary_resource_id: 'match_override'
    vars:
      database_id: 'database-id'
      delete_protection_state: "DELETE_PROTECTION_ENABLED"
    test_env_vars:
      project_id: :PROJECT_NAME
    test_vars_overrides:
      delete_protection_state: '"DELETE_PROTECTION_DISABLED"'
custom_code: !ruby/object:Provider::Terraform::CustomCode
  custom_import: templates/terraform/custom_import/index_self_link_as_name_set_project.go.erb
  encoder: templates/terraform/encoders/firestore_field.go.erb
  custom_delete: templates/terraform/custom_delete/firestore_field_delete.go.erb
  test_check_destroy: templates/terraform/custom_check_destroy/firestore_field.go.erb
properties:
  - !ruby/object:Api::Type::String
    name: 'database'
    default_value: '(default)'
    description: |
      The Firestore database id. Defaults to `"(default)"`.
    url_param_only: true
  - !ruby/object:Api::Type::String
    name: 'collection'
    description: |
      The id of the collection group to configure.
    required: true
    url_param_only: true
  - !ruby/object:Api::Type::String
    name: 'field'
    description: |
      The id of the field to configure.
    required: true
    url_param_only: true
  - !ruby/object:Api::Type::String
    name: name
    output: true
    description: |
      The name of this field. Format:
      `projects/{{project}}/databases/{{database}}/collectionGroups/{{collection}}/fields/{{field}}`
  - !ruby/object:Api::Type::NestedObject
    name: indexConfig
    description: |
      The single field index configuration for this field.
      Creating an index configuration for this field will override any inherited configuration with the
      indexes specified. Configuring the index configuration with an empty block disables all indexes on
      the field.
    send_empty_value: true
    custom_expand: templates/terraform/custom_expand/firestore_field_index_config.go.erb
    custom_flatten: templates/terraform/custom_flatten/firestore_field_index_config.go.erb
    properties:
      - !ruby/object:Api::Type::Array
        name: indexes
        description:
          The indexes to configure on the field. Order or array contains must be
          specified.
        is_set: true
        item_type: !ruby/object:Api::Type::NestedObject
          properties:
            - !ruby/object:Api::Type::Enum
              name: queryScope
              description: |
                The scope at which a query is run. Collection scoped queries require you specify
                the collection at query time. Collection group scope allows queries across all
                collections with the same id.
              default_value: :COLLECTION
              values:
                - :COLLECTION
                - :COLLECTION_GROUP
            - !ruby/object:Api::Type::Enum
              name: 'order'
              description: |
                Indicates that this field supports ordering by the specified order or comparing using =, <, <=, >, >=, !=.
                Only one of `order` and `arrayConfig` can be specified.
              values:
                - :ASCENDING
                - :DESCENDING
              exactly_one_of:
                - order
                - arrayConfig
            - !ruby/object:Api::Type::Enum
              name: 'arrayConfig'
              description: |
                Indicates that this field supports operations on arrayValues. Only one of `order` and `arrayConfig` can
                be specified.
              values:
                - :CONTAINS
              exactly_one_of:
                - order
                - arrayConfig
  - !ruby/object:Api::Type::NestedObject
    name: ttlConfig
    custom_expand: templates/terraform/custom_expand/empty_object_if_set.go.erb
    description: |
       The TTL configuration for this Field. If set to an empty block (i.e. `ttl_config {}`), a TTL policy is configured based on the field. If unset, a TTL policy is not configured (or will be disabled upon updating the resource).
    send_empty_value: true
    properties:
      - !ruby/object:Api::Type::Enum
        name: state
        description: |
          The state of TTL (time-to-live) configuration for documents that have this Field set.
        output: true
        values:
          - :CREATING
          - :ACTIVE
          - :NEEDS_REPAIR
