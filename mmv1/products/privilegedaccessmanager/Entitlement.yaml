# Copyright 2024 Google Inc.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# Warning: This is a temporary file, and should not be edited directly
---
name: 'Entitlement'
description: |
  An Entitlement defines the eligibility of a set of users to obtain a predefined access for some time possibly after going through an approval workflow.
docs:
id_format: '{{parent}}/locations/{{location}}/entitlements/{{entitlement_id}}'
base_url: '{{parent}}/locations/{{location}}/entitlements'
self_link: '{{parent}}/locations/{{location}}/entitlements/{{entitlement_id}}'
create_url: '{{parent}}/locations/{{location}}/entitlements?entitlementId={{entitlement_id}}'
update_verb: 'PATCH'
update_mask: true
delete_url: '{{parent}}/locations/{{location}}/entitlements/{{entitlement_id}}?force=true'
import_format:
  - '{{%parent}}/locations/{{location}}/entitlements/{{entitlement_id}}'
timeouts:
  insert_minutes: 20
  update_minutes: 20
  delete_minutes: 20
autogen_async: true
async:
  actions: ['create', 'delete', 'update']
  type: 'OpAsync'
  operation:
    base_url: '{{op_id}}'
    path: 'name'
    wait_ms: 1000
  result:
    path: 'response'
    resource_inside_response: true
  error:
    path: 'error'
    message: 'message'
custom_code:
  constants: 'templates/terraform/constants/go/privileged_access_manager_entitlement.go.tmpl'
  pre_update: 'templates/terraform/pre_update/go/privileged_access_manager_entitlement.go.tmpl'
examples:
  - name: 'privileged_access_manager_entitlement_basic'
    primary_resource_id: 'tfentitlement'
    vars:
      entitlement_id: 'example-entitlement'
    test_env_vars:
      project: 'PROJECT_NAME'
parameters:
  - name: 'location'
    type: String
    description: |
      The region of the Entitlement resource.
    url_param_only: true
    required: true
    immutable: true
  - name: 'entitlementId'
    type: String
    description: |
      The ID to use for this Entitlement. This will become the last part of the resource name.
      This value should be 4-63 characters, and valid characters are "[a-z]", "[0-9]", and "-". The first character should be from [a-z].
      This value should be unique among all other Entitlements under the specified `parent`.
    url_param_only: true
    required: true
    immutable: true
    validation:
      function: 'validateEntitlementId'
  - name: 'parent'
    type: String
    description: |
      Format: projects/{project-id|project-number} or organizations/{organization-number} or folders/{folder-number}
    url_param_only: true
    required: true
    immutable: true
properties:
  - name: 'name'
    type: String
    description: |
      Output Only. The entitlement's name follows a hierarchical structure, comprising the organization, folder, or project, alongside the region and a unique entitlement ID.
      Formats: organizations/{organization-number}/locations/{region}/entitlements/{entitlement-id}, folders/{folder-number}/locations/{region}/entitlements/{entitlement-id}, and projects/{project-id|project-number}/locations/{region}/entitlements/{entitlement-id}.
    output: true
  - name: 'createTime'
    type: String
    description: |
      Output only. Create time stamp. A timestamp in RFC3339 UTC "Zulu" format, with nanosecond resolution and up to nine fractional digits.
      Examples: "2014-10-02T15:01:23Z" and "2014-10-02T15:01:23.045123456Z"
    output: true
  - name: 'updateTime'
    type: String
    description: |
      Output only. Update time stamp. A timestamp in RFC3339 UTC "Zulu" format, with nanosecond resolution and up to nine fractional digits.
      Examples: "2014-10-02T15:01:23Z" and "2014-10-02T15:01:23.045123456Z".
    output: true
  - name: 'eligibleUsers'
    type: Array
    description: |
      Who can create Grants using Entitlement. This list should contain at most one entry
    required: true
    item_type:
      type: NestedObject
      properties:
        - name: 'principals'
          type: Array
          description: |
            Users who are being allowed for the operation. Each entry should be a valid v1 IAM Principal Identifier. Format for these is documented at "https://cloud.google.com/iam/docs/principal-identifiers#v1"
          is_set: true
          required: true
          item_type:
            type: String
          item_validation:
            function: 'validateDeletedPrincipals'
  - name: 'approvalWorkflow'
    type: NestedObject
    description: |
      The approvals needed before access will be granted to a requester.
      No approvals will be needed if this field is null. Different types of approval workflows that can be used to gate privileged access granting.
    immutable: true
    properties:
      - name: 'manualApprovals'
        type: NestedObject
        description: |
          A manual approval workflow where users who are designated as approvers need to call the ApproveGrant/DenyGrant APIs for an Grant.
          The workflow can consist of multiple serial steps where each step defines who can act as Approver in that step and how many of those users should approve before the workflow moves to the next step.
          This can be used to create approval workflows such as
          * Require an approval from any user in a group G.
          * Require an approval from any k number of users from a Group G.
          * Require an approval from any user in a group G and then from a user U. etc.
          A single user might be part of `approvers` ACL for multiple steps in this workflow but they can only approve once and that approval will only be considered to satisfy the approval step at which it was granted.
        required: true
        properties:
          - name: 'requireApproverJustification'
            type: Boolean
            description: |
              Optional. Do the approvers need to provide a justification for their actions?
          - name: 'steps'
            type: Array
            description: |
              List of approval steps in this workflow. These steps would be followed in the specified order sequentially.  1 step is supported for now.
            required: true
            item_type:
              type: NestedObject
              properties:
                - name: 'approvers'
                  type: Array
                  description: |
                    The potential set of approvers in this step. This list should contain at only one entry.
                  required: true
                  item_type:
                    type: NestedObject
                    properties:
                      - name: 'principals'
                        type: Array
                        description: |
                          Users who are being allowed for the operation. Each entry should be a valid v1 IAM Principal Identifier. Format for these is documented at: https://cloud.google.com/iam/docs/principal-identifiers#v1
                        is_set: true
                        required: true
                        item_type:
                          type: String
                        min_size: 1
                        item_validation:
                          function: 'validateDeletedPrincipals'
                  min_size: 1
                  max_size: 1
                - name: 'approvalsNeeded'
                  type: Integer
                  description: |
                    How many users from the above list need to approve.
                    If there are not enough distinct users in the list above then the workflow
                    will indefinitely block. Should always be greater than 0. Currently 1 is the only
                    supported value.
                - name: 'approverEmailRecipients'
                  type: Array
                  description: |
                    Optional. Additional email addresses to be notified when a grant is pending approval.
                  is_set: true
                  item_type:
                    type: String
  - name: 'privilegedAccess'
    type: NestedObject
    description: |
      Privileged access that this service can be used to gate.
    required: true
    properties:
      - name: 'gcpIamAccess'
        type: NestedObject
        description: |
          GcpIamAccess represents IAM based access control on a GCP resource. Refer to https://cloud.google.com/iam/docs to understand more about IAM.
        required: true
        properties:
          - name: 'resourceType'
            type: String
            description: |
              The type of this resource.
            required: true
          - name: 'resource'
            type: String
            description: |
              Name of the resource.
            required: true
          - name: 'roleBindings'
            type: Array
            description: |
              Role bindings to be created on successful grant.
            required: true
            item_type:
              type: NestedObject
              properties:
                - name: 'role'
                  type: String
                  description: |
                    IAM role to be granted. https://cloud.google.com/iam/docs/roles-overview.
                  required: true
                - name: 'conditionExpression'
                  type: String
                  description: |
                    The expression field of the IAM condition to be associated with the role. If specified, a user with an active grant for this entitlement would be able to access the resource only if this condition evaluates to true for their request.
                    https://cloud.google.com/iam/docs/conditions-overview#attributes.
  - name: 'maxRequestDuration'
    type: String
    description: |
      The maximum amount of time for which access would be granted for a request.
      A requester can choose to ask for access for less than this duration but never more.
      Format: calculate the time in seconds and concatenate it with 's' i.e. 2 hours = "7200s", 45 minutes = "2700s"
    required: true
  - name: 'state'
    type: String
    description: Output only. The current state of the Entitlement.
    output: true
  - name: 'etag'
    type: Fingerprint
    description: |
      For Resource freshness validation (https://google.aip.dev/154)
    output: true
  - name: 'requesterJustificationConfig'
    type: NestedObject
    description: |
      Defines the ways in which a requester should provide the justification while requesting for access.
    required: true
    send_empty_value: true
    allow_empty_object: true
    properties:
      - name: 'notMandatory'
        type: NestedObject
        description: |
          The justification is not mandatory but can be provided in any of the supported formats.
        send_empty_value: true
        allow_empty_object: true
        conflicts:
          - unstructured
        properties:
          []
      - name: 'unstructured'
        type: NestedObject
        description: |
          The requester has to provide a justification in the form of free flowing text.
        send_empty_value: true
        allow_empty_object: true
        conflicts:
          - not_mandatory
        properties:
          []
  - name: 'additionalNotificationTargets'
    type: NestedObject
    description: |
      AdditionalNotificationTargets includes email addresses to be notified.
    send_empty_value: true
    allow_empty_object: true
    properties:
      - name: 'adminEmailRecipients'
        type: Array
        description: |
          Optional. Additional email addresses to be notified when a principal(requester) is granted access.
        is_set: true
        allow_empty_object: true
        item_type:
          type: String
      - name: 'requesterEmailRecipients'
        type: Array
        description: |
          Optional. Additional email address to be notified about an eligible entitlement.
        is_set: true
        allow_empty_object: true
        item_type:
          type: String
