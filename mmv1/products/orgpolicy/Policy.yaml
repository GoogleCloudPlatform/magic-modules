# Copyright 2023 Google Inc.
# Licensed under the Apache License, Version 2.0 (the License);
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

--- !ruby/object:Api::Resource
name: Policy
base_url: '{{parent}}/policies'
create_url: '{{parent}}/policies'
self_link: '{{parent}}/policies/{{name}}'
import_format:
  ['{{%parent}}/policies/{{name}}']
update_verb: :PATCH
references: !ruby/object:Api::Resource::ReferenceLinks
  guides:
    'Official Documentation': 'https://cloud.google.com/resource-manager/docs/organization-policy/creating-managing-custom-constraints'
    'Supported Services': 'https://cloud.google.com/resource-manager/docs/organization-policy/custom-constraint-supported-services'
  api: 'https://cloud.google.com/resource-manager/docs/reference/orgpolicy/rest/v2/organizations.policies'
description: "Defines an organization policy which is used to specify constraints for configurations of Google Cloud resources."
error_retry_predicates: ['transport_tpg.IsOrgpolicyRetryableError']
examples:
  - !ruby/object:Provider::Terraform::Examples
    name: 'org_policy_policy_enforce'
    primary_resource_id: 'primary'
    skip_test: true
  - !ruby/object:Provider::Terraform::Examples
    name: 'org_policy_policy_folder'
    primary_resource_id: 'primary'
    skip_test: true
  - !ruby/object:Provider::Terraform::Examples
    name: 'org_policy_policy_organization'
    primary_resource_id: 'primary'
    skip_test: true
  - !ruby/object:Provider::Terraform::Examples
    name: 'org_policy_policy_project'
    primary_resource_id: 'primary'
    skip_test: true
  - !ruby/object:Provider::Terraform::Examples
    name: 'org_policy_policy_dry_run_spec'
    primary_resource_id: 'primary'
    skip_test: true
custom_code: !ruby/object:Provider::Terraform::CustomCode
  constants: templates/terraform/constants/org_policy_policy.go.erb
  encoder: templates/terraform/encoders/org_policy_policy.go.erb
  pre_read: templates/terraform/pre_read/org_policy_policy.go.erb
  pre_update: templates/terraform/pre_update/org_policy_policy.go.erb
parameters:
  - !ruby/object:Api::Type::String
    name: parent
    description: The parent of the resource.
    url_param_only: true
    required: true
    immutable: true
    diff_suppress_func: 'tpgresource.CompareSelfLinkOrResourceName'
properties:
  - !ruby/object:Api::Type::String
    name: name
    description: 'Immutable. The resource name of the Policy. Must be one of the following forms, where constraint_name is the name of the constraint which this Policy configures: * `projects/{project_number}/policies/{constraint_name}` * `folders/{folder_id}/policies/{constraint_name}` * `organizations/{organization_id}/policies/{constraint_name}` For example, "projects/123/policies/compute.disableSerialPortAccess". Note: `projects/{project_id}/policies/{constraint_name}` is also an acceptable name for API requests, but responses will return the name using the equivalent project number.'
    required: true
    immutable: true
    ignore_read: true
    diff_suppress_func: 'tpgresource.CompareResourceNames'
  - !ruby/object:Api::Type::NestedObject
    name: spec
    description: Basic information about the Organization Policy.
    properties:
      - !ruby/object:Api::Type::String
        name: etag
        description: An opaque tag indicating the current version of the `Policy`, used for concurrency control. This field is ignored if used in a `CreatePolicy` request. When the `Policy` is returned from either a `GetPolicy` or a `ListPolicies` request, this `etag` indicates the version of the current `Policy` to use when executing a read-modify-write loop. When the `Policy` is returned from a `GetEffectivePolicy` request, the `etag` will be unset.
        output: true
      - !ruby/object:Api::Type::String
        name: updateTime
        description: Output only. The time stamp this was previously updated. This represents the last time a call to `CreatePolicy` or `UpdatePolicy` was made for that `Policy`.
        output: true
      - !ruby/object:Api::Type::Array
        name: rules
        description: 'Up to 10 PolicyRules are allowed. In Policies for boolean constraints, the following requirements apply: - There must be one and only one PolicyRule where condition is unset. - BooleanPolicyRules with conditions must set `enforced` to the opposite of the PolicyRule without a condition. - During policy evaluation, PolicyRules with conditions that are true for a target resource take precedence.'
        item_type: !ruby/object:Api::Type::NestedObject
          name: rule
          description: 'Up to 10 PolicyRules are allowed. In Policies for boolean constraints, the following requirements apply: - There must be one and only one PolicyRule where condition is unset. - BooleanPolicyRules with conditions must set `enforced` to the opposite of the PolicyRule without a condition. - During policy evaluation, PolicyRules with conditions that are true for a target resource take precedence.'
          properties:
            - !ruby/object:Api::Type::NestedObject
              name: values
              description: List of values to be used for this PolicyRule. This field can be set only in Policies for list constraints.
              properties:
                - !ruby/object:Api::Type::Array
                  name: allowedValues
                  description: List of values allowed at this resource.
                  item_type: Api::Type::String
                - !ruby/object:Api::Type::Array
                  name: deniedValues
                  description: List of values denied at this resource.
                  item_type: Api::Type::String
            - !ruby/object:Api::Type::String
              name: allowAll
              description: Setting this to `"TRUE"` means that all values are allowed. This field can be set only in Policies for list constraints.
              custom_expand: 'templates/terraform/custom_expand/enum_bool.go.erb'
              custom_flatten: 'templates/terraform/custom_flatten/enum_bool.go.erb'
              send_empty_value: true
            - !ruby/object:Api::Type::String
              name: denyAll
              description: Setting this to `"TRUE"` means that all values are denied. This field can be set only in Policies for list constraints.
              custom_expand: 'templates/terraform/custom_expand/enum_bool.go.erb'
              custom_flatten: 'templates/terraform/custom_flatten/enum_bool.go.erb'
              send_empty_value: true
            - !ruby/object:Api::Type::String
              name: enforce
              description: If `"TRUE"`, then the `Policy` is enforced. If `"FALSE"`, then any configuration is acceptable. This field can be set only in Policies for boolean constraints.
              custom_expand: 'templates/terraform/custom_expand/enum_bool.go.erb'
              custom_flatten: 'templates/terraform/custom_flatten/enum_bool.go.erb'
              send_empty_value: true
            - !ruby/object:Api::Type::NestedObject
              name: condition
              description: 'A condition which determines whether this rule is used in the evaluation of the policy. When set, the `expression` field in the `Expr'' must include from 1 to 10 subexpressions, joined by the "||" or "&&" operators. Each subexpression must be of the form "resource.matchTag(''/tag_key_short_name, ''tag_value_short_name'')". or "resource.matchTagId(''tagKeys/key_id'', ''tagValues/value_id'')". where key_name and value_name are the resource names for Label Keys and Values. These names are available from the Tag Manager Service. An example expression is: "resource.matchTag(''123456789/environment, ''prod'')". or "resource.matchTagId(''tagKeys/123'', ''tagValues/456'')".'
              properties:
                - !ruby/object:Api::Type::String
                  name: expression
                  description: Textual representation of an expression in Common Expression Language syntax.
                  diff_suppress_func: resourceOrgpolicyPolicyRulesConditionExpressionDiffSuppress
                - !ruby/object:Api::Type::String
                  name: title
                  description: Optional. Title for the expression, i.e. a short string describing its purpose. This can be used e.g. in UIs which allow to enter the expression.
                - !ruby/object:Api::Type::String
                  name: description
                  description: Optional. Description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI.
                - !ruby/object:Api::Type::String
                  name: location
                  description: Optional. String indicating the location of the expression for error reporting, e.g. a file name and a position in the file.
      - !ruby/object:Api::Type::Boolean
        name: inheritFromParent
        description: Determines the inheritance behavior for this `Policy`. If `inherit_from_parent` is true, PolicyRules set higher up in the hierarchy (up to the closest root) are inherited and present in the effective policy. If it is false, then no rules are inherited, and this Policy becomes the new root for evaluation. This field can be set only for Policies which configure list constraints.
        send_empty_value: true
      - !ruby/object:Api::Type::Boolean
        name: reset
        description: Ignores policies set above this resource and restores the `constraint_default` enforcement behavior of the specific `Constraint` at this resource. This field can be set in policies for either list or boolean constraints. If set, `rules` must be empty and `inherit_from_parent` must be set to false.
        send_empty_value: true
  - !ruby/object:Api::Type::NestedObject
    name: dryRunSpec
    description: Dry-run policy. Audit-only policy, can be used to monitor how the policy would have impacted the existing and future resources if it's enforced.
    properties:
      - !ruby/object:Api::Type::String
        name: etag
        description: An opaque tag indicating the current version of the policy, used for concurrency control. This field is ignored if used in a `CreatePolicy` request. When the policy` is returned from either a `GetPolicy` or a `ListPolicies` request, this `etag` indicates the version of the current policy to use when executing a read-modify-write loop. When the policy is returned from a `GetEffectivePolicy` request, the `etag` will be unset.
        output: true
      - !ruby/object:Api::Type::String
        name: updateTime
        description: Output only. The time stamp this was previously updated. This represents the last time a call to `CreatePolicy` or `UpdatePolicy` was made for that policy.
        output: true
      - !ruby/object:Api::Type::Array
        name: rules
        description: 'In policies for boolean constraints, the following requirements apply: - There must be one and only one policy rule where condition is unset. - Boolean policy rules with conditions must set `enforced` to the opposite of the policy rule without a condition. - During policy evaluation, policy rules with conditions that are true for a target resource take precedence.'
        item_type: !ruby/object:Api::Type::NestedObject
          name: rule
          description: 'In policies for boolean constraints, the following requirements apply: - There must be one and only one policy rule where condition is unset. - Boolean policy rules with conditions must set `enforced` to the opposite of the policy rule without a condition. - During policy evaluation, policy rules with conditions that are true for a target resource take precedence.'
          properties:
            - !ruby/object:Api::Type::NestedObject
              name: values
              description: List of values to be used for this policy rule. This field can be set only in policies for list constraints.
              properties:
                - !ruby/object:Api::Type::Array
                  name: allowedValues
                  description: List of values allowed at this resource.
                  item_type: Api::Type::String
                - !ruby/object:Api::Type::Array
                  name: deniedValues
                  description: List of values denied at this resource.
                  item_type: Api::Type::String
            - !ruby/object:Api::Type::String
              name: allowAll
              description: Setting this to `"TRUE"` means that all values are allowed. This field can be set only in Policies for list constraints.
              custom_expand: 'templates/terraform/custom_expand/enum_bool.go.erb'
              custom_flatten: 'templates/terraform/custom_flatten/enum_bool.go.erb'
              send_empty_value: true
            - !ruby/object:Api::Type::String
              name: denyAll
              description: Setting this to `"TRUE"` means that all values are denied. This field can be set only in Policies for list constraints.
              custom_expand: 'templates/terraform/custom_expand/enum_bool.go.erb'
              custom_flatten: 'templates/terraform/custom_flatten/enum_bool.go.erb'
              send_empty_value: true
            - !ruby/object:Api::Type::String
              name: enforce
              description: If `"TRUE"`, then the `Policy` is enforced. If `"FALSE"`, then any configuration is acceptable. This field can be set only in Policies for boolean constraints.
              custom_expand: 'templates/terraform/custom_expand/enum_bool.go.erb'
              custom_flatten: 'templates/terraform/custom_flatten/enum_bool.go.erb'
              send_empty_value: true
            - !ruby/object:Api::Type::NestedObject
              name: condition
              description: 'A condition which determines whether this rule is used in the evaluation of the policy. When set, the `expression` field in the `Expr'' must include from 1 to 10 subexpressions, joined by the "||" or "&&" operators. Each subexpression must be of the form "resource.matchTag(''/tag_key_short_name, ''tag_value_short_name'')". or "resource.matchTagId(''tagKeys/key_id'', ''tagValues/value_id'')". where key_name and value_name are the resource names for Label Keys and Values. These names are available from the Tag Manager Service. An example expression is: "resource.matchTag(''123456789/environment, ''prod'')". or "resource.matchTagId(''tagKeys/123'', ''tagValues/456'')".'
              properties:
                - !ruby/object:Api::Type::String
                  name: expression
                  description: Textual representation of an expression in Common Expression Language syntax.
                  diff_suppress_func: resourceOrgpolicyPolicyRulesConditionExpressionDiffSuppress
                - !ruby/object:Api::Type::String
                  name: title
                  description: Optional. Title for the expression, i.e. a short string describing its purpose. This can be used e.g. in UIs which allow to enter the expression.
                - !ruby/object:Api::Type::String
                  name: description
                  description: Optional. Description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI.
                - !ruby/object:Api::Type::String
                  name: location
                  description: Optional. String indicating the location of the expression for error reporting, e.g. a file name and a position in the file.
      - !ruby/object:Api::Type::Boolean
        name: inheritFromParent
        description: Determines the inheritance behavior for this policy. If `inherit_from_parent` is true, policy rules set higher up in the hierarchy (up to the closest root) are inherited and present in the effective policy. If it is false, then no rules are inherited, and this policy becomes the new root for evaluation. This field can be set only for policies which configure list constraints.
        send_empty_value: true
      - !ruby/object:Api::Type::Boolean
        name: reset
        description: Ignores policies set above this resource and restores the `constraint_default` enforcement behavior of the specific constraint at this resource. This field can be set in policies for either list or boolean constraints. If set, `rules` must be empty and `inherit_from_parent` must be set to false.
        send_empty_value: true
  - !ruby/object:Api::Type::String
    name: etag
    description: Optional. An opaque tag indicating the current state of the policy, used for concurrency control. This 'etag' is computed by the server based on the value of other fields, and may be sent on update and delete requests to ensure the client has an up-to-date value before proceeding.
    output: true
