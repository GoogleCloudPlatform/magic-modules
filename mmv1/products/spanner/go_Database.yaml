# Copyright 2024 Google Inc.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# Warning: This is a temporary file, and should not be edited directly
---
name: 'Database'
description: |
  A Cloud Spanner Database which is hosted on a Spanner instance.
references:
  guides:
    'Official Documentation': 'https://cloud.google.com/spanner/'
  api: 'https://cloud.google.com/spanner/docs/reference/rest/v1/projects.instances.databases'
docs:
  warning: |
    On newer versions of the provider, you must explicitly set `deletion_protection=false`
    (and run `terraform apply` to write the field to state) in order to destroy an instance.
    It is recommended to not set this field (or set it to true) until you're ready to destroy.
    On older versions, it is strongly recommended to set `lifecycle { prevent_destroy = true }`
    on databases in order to prevent accidental data loss. See
    [Terraform docs](https://developer.hashicorp.com/terraform/language/meta-arguments/lifecycle#prevent_destroy)
    for more information on lifecycle parameters.
id_format: '{{instance}}/{{name}}'
base_url: 'projects/{{project}}/instances/{{instance}}/databases'
update_verb: 'PATCH'
update_mask: true
import_format:
  - 'projects/{{project}}/instances/{{instance}}/databases/{{name}}'
  - 'instances/{{instance}}/databases/{{name}}'
  - '{{project}}/{{instance}}/{{name}}'
  - '{{instance}}/{{name}}'
timeouts:
  insert_minutes: 20
  update_minutes: 20
  delete_minutes: 20
autogen_async: true
async:
  actions: ['create', 'update', 'delete']
  type: 'OpAsync'
  operation:
    base_url: '{{op_id}}'
    path: 'name'
    wait_ms: 1000
  result:
    path: 'response'
    resource_inside_response: true
  error:
    path: 'error'
    message: 'message'
custom_code:
  constants: 'templates/terraform/constants/go/spanner_database.go.tmpl'
  encoder: 'templates/terraform/encoders/go/spanner_database.go.tmpl'
  update_encoder: 'templates/terraform/update_encoder/go/spanner_database.go.tmpl'
  decoder: 'templates/terraform/decoders/go/spanner_database.go.tmpl'
  post_create: 'templates/terraform/post_create/go/spanner_database.go.tmpl'
  pre_update: 'templates/terraform/pre_update/go/spanner_database.go.tmpl'
  pre_delete: 'templates/terraform/pre_delete/go/resource_spanner_database.go.tmpl'
custom_diff:
  - 'resourceSpannerDBDdlCustomDiff'
skip_sweeper: true
examples:
  - name: 'spanner_database_basic'
    primary_resource_id: 'database'
    vars:
      database_name: 'my-database'
    ignore_read_extra:
      - 'deletion_protection'
    skip_vcr: true
virtual_fields:
  - name: 'deletion_protection'
    description: |
      Whether Terraform will be prevented from destroying the database. Defaults to true.
      When a`terraform destroy` or `terraform apply` would delete the database,
      the command will fail if this field is not set to false in Terraform state.
      When the field is set to true or unset in Terraform state, a `terraform apply`
      or `terraform destroy` that would delete the database will fail.
      When the field is set to false, deleting the database is allowed.
    type: Boolean
    default_value: true
parameters:
  - name: 'instance'
    type: ResourceRef
    description: 'The instance to create the database on.'
    required: true
    immutable: true
    custom_expand: 'templates/terraform/custom_expand/go/resourceref_with_validation.go.tmpl'
    resource: 'Instance'
    imports: 'name'
properties:
  - name: 'name'
    type: String
    description: |
      A unique identifier for the database, which cannot be changed after
      the instance is created. Values are of the form [a-z][-a-z0-9]*[a-z0-9].
    required: true
    immutable: true
    custom_flatten: 'templates/terraform/custom_flatten/go/name_from_self_link.tmpl'
    validation:
      regex: '^[a-z][a-z0-9_\-]*[a-z0-9]$'
  - name: 'versionRetentionPeriod'
    type: String
    description: |
      The retention period for the database. The retention period must be between 1 hour
      and 7 days, and can be specified in days, hours, minutes, or seconds. For example,
      the values 1d, 24h, 1440m, and 86400s are equivalent. Default value is 1h.
      If this property is used, you must avoid adding new DDL statements to `ddl` that
      update the database's version_retention_period.
    default_from_api: true
    update_url: 'projects/{{project}}/instances/{{instance}}/databases/{{name}}/ddl'
  - name: 'ddl'
    type: Array
    description: |
      An optional list of DDL statements to run inside the newly created
      database. Statements can create tables, indexes, etc. These statements
      execute atomically with the creation of the database: if there is an
      error in any statement, the database is not created.
    api_name: extraStatements
    ignore_read: true
    update_url: 'projects/{{project}}/instances/{{instance}}/databases/{{name}}/ddl'
    item_type:
      type: String
  - name: 'state'
    type: Enum
    description: An explanation of the status of the database.
    output: true
    enum_values:
      - 'READY'
      - 'CREATING'
  - name: 'encryptionConfig'
    type: NestedObject
    description: |
      Encryption configuration for the database
    immutable: true
    properties:
      - name: 'kmsKeyName'
        type: String
        description: |
          Fully qualified name of the KMS key to use to encrypt this database. This key must exist
          in the same location as the Spanner Database.
        required: true
        immutable: true
  - name: 'databaseDialect'
    type: Enum
    description: |
      The dialect of the Cloud Spanner Database.
      If it is not provided, "GOOGLE_STANDARD_SQL" will be used.
    immutable: true
    default_from_api: true
    enum_values:
      - 'GOOGLE_STANDARD_SQL'
      - 'POSTGRESQL'
  - name: 'enableDropProtection'
    type: Boolean
    description: |
      Whether drop protection is enabled for this database. Defaults to false.
      Drop protection is different from
      the "deletion_protection" attribute in the following ways:
      (1) "deletion_protection" only protects the database from deletions in Terraform.
      whereas setting “enableDropProtection” to true protects the database from deletions in all interfaces.
      (2) Setting "enableDropProtection" to true also prevents the deletion of the parent instance containing the database.
      "deletion_protection" attribute does not provide protection against the deletion of the parent instance.
    default_value: false
