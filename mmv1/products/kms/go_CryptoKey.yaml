# Copyright 2024 Google Inc.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# Warning: This is a temporary file, and should not be edited directly
---
name: 'CryptoKey'
description: |
  A `CryptoKey` represents a logical key that can be used for cryptographic operations.


  ~> **Note:** CryptoKeys cannot be deleted from Google Cloud Platform.
  Destroying a Terraform-managed CryptoKey will remove it from state
  and delete all CryptoKeyVersions, rendering the key unusable, but *will
  not delete the resource from the project.* When Terraform destroys these keys,
  any data previously encrypted with these keys will be irrecoverable.
  For this reason, it is strongly recommended that you add
  [lifecycle](https://developer.hashicorp.com/terraform/language/meta-arguments/lifecycle)
  hooks to the resource to prevent accidental destruction.
references:
  guides:
    'Creating a key': 'https://cloud.google.com/kms/docs/creating-keys#create_a_key'
  api: 'https://cloud.google.com/kms/docs/reference/rest/v1/projects.locations.keyRings.cryptoKeys'
docs:
id_format: '{{key_ring}}/cryptoKeys/{{name}}'
base_url: '{{key_ring}}/cryptoKeys'
self_link: '{{key_ring}}/cryptoKeys/{{name}}'
create_url: '{{key_ring}}/cryptoKeys?cryptoKeyId={{name}}&skipInitialVersionCreation={{skip_initial_version_creation}}'
update_verb: 'PATCH'
update_mask: true
import_format:
  - '{{key_ring}}/cryptoKeys/{{name}}'
timeouts:
  insert_minutes: 20
  update_minutes: 20
  delete_minutes: 20
custom_code:
  encoder: 'templates/terraform/encoders/go/kms_crypto_key.go.tmpl'
  update_encoder: 'templates/terraform/update_encoder/go/kms_crypto_key.go.tmpl'
  decoder: 'templates/terraform/decoders/go/kms.go.tmpl'
  custom_delete: 'templates/terraform/custom_delete/go/kms_crypto_key.tmpl'
  custom_import: 'templates/terraform/custom_import/go/kms_crypto_key.go.tmpl'
schema_version: 1
state_upgraders: true
supports_indirect_user_project_override: true
examples:
  - name: 'kms_crypto_key_basic'
    primary_resource_id: 'example-key'
    exclude_test: true
  - name: 'kms_crypto_key_asymmetric_sign'
    primary_resource_id: 'example-asymmetric-sign-key'
    exclude_test: true
parameters:
  - name: 'keyRing'
    type: String
    description: |
      The KeyRing that this key belongs to.
      Format: `'projects/{{project}}/locations/{{location}}/keyRings/{{keyRing}}'`.
    url_param_only: true
    required: true
    immutable: true
    ignore_read: true
    diff_suppress_func: 'kmsCryptoKeyRingsEquivalent'
  - name: 'skipInitialVersionCreation'
    type: Boolean
    description: |
      If set to true, the request will create a CryptoKey without any CryptoKeyVersions.
      You must use the `google_kms_crypto_key_version` resource to create a new CryptoKeyVersion
      or `google_kms_key_ring_import_job` resource to import the CryptoKeyVersion.
    url_param_only: true
    immutable: true
properties:
  - name: 'name'
    type: String
    description: |
      The resource name for the CryptoKey.
    url_param_only: true
    required: true
    immutable: true
    ignore_read: true
  - name: 'labels'
    type: KeyValueLabels
    description: |
      Labels with user-defined metadata to apply to this resource.
  - name: 'primary'
    type: NestedObject
    description: |
      A copy of the primary CryptoKeyVersion that will be used by cryptoKeys.encrypt when this CryptoKey is given in EncryptRequest.name.
      Keys with purpose ENCRYPT_DECRYPT may have a primary. For other keys, this field will be unset.
    output: true
    properties:
      - name: 'name'
        type: String
        description: |
          The resource name for this CryptoKeyVersion.
        output: true
      - name: 'state'
        type: String
        description: |
          The current state of the CryptoKeyVersion.
        output: true
  - name: 'purpose'
    type: String
    description: |
      The immutable purpose of this CryptoKey. See the
      [purpose reference](https://cloud.google.com/kms/docs/reference/rest/v1/projects.locations.keyRings.cryptoKeys#CryptoKeyPurpose)
      for possible inputs.
      Default value is "ENCRYPT_DECRYPT".
    immutable: true
    default_value: "ENCRYPT_DECRYPT"
  - name: 'rotationPeriod'
    type: String
    description: |
      Every time this period passes, generate a new CryptoKeyVersion and set it as the primary.
      The first rotation will take place after the specified period. The rotation period has
      the format of a decimal number with up to 9 fractional digits, followed by the
      letter `s` (seconds). It must be greater than a day (ie, 86400).
    update_mask_fields:
      - 'rotationPeriod'
      - 'nextRotationTime'
    validation:
      function: 'verify.OrEmpty(validateKmsCryptoKeyRotationPeriod)'
  - name: 'versionTemplate'
    type: NestedObject
    description: |
      A template describing settings for new crypto key versions.
    default_from_api: true
    update_mask_fields:
      - 'versionTemplate.algorithm'
    properties:
      - name: 'algorithm'
        type: String
        description: |
          The algorithm to use when creating a version based on this template.
          See the [algorithm reference](https://cloud.google.com/kms/docs/reference/rest/v1/CryptoKeyVersionAlgorithm) for possible inputs.
        required: true
      - name: 'protectionLevel'
        type: String
        description: |
          The protection level to use when creating a version based on this template. Possible values include "SOFTWARE", "HSM", "EXTERNAL", "EXTERNAL_VPC". Defaults to "SOFTWARE".
        immutable: true
        default_value: "SOFTWARE"
  - name: 'destroyScheduledDuration'
    type: String
    description: |
      The period of time that versions of this key spend in the DESTROY_SCHEDULED state before transitioning to DESTROYED.
      If not specified at creation time, the default duration is 30 days.
    immutable: true
    default_from_api: true
  - name: 'importOnly'
    type: Boolean
    description: |
      Whether this key may contain imported versions only.
    immutable: true
    default_from_api: true
  - name: 'cryptoKeyBackend'
    type: String
    description: |
      The resource name of the backend environment associated with all CryptoKeyVersions within this CryptoKey.
      The resource name is in the format "projects/*/locations/*/ekmConnections/*" and only applies to "EXTERNAL_VPC" keys.
    immutable: true
    default_from_api: true
  - name: 'keyAccessJustificationsPolicy'
    type: NestedObject
    description: |
      The policy used for Key Access Justifications Policy Enforcement. If this
      field is present and this key is enrolled in Key Access Justifications
      Policy Enforcement, the policy will be evaluated in encrypt, decrypt, and
      sign operations, and the operation will fail if rejected by the policy. The
      policy is defined by specifying zero or more allowed justification codes.
      https://cloud.google.com/assured-workloads/key-access-justifications/docs/justification-codes
      By default, this field is absent, and all justification codes are allowed.
      This field is currently in beta and is subject to change.
    min_version: 'beta'
    default_from_api: true
    update_mask_fields:
      - 'keyAccessJustificationsPolicy'
    properties:
      - name: 'allowedAccessReasons'
        type: Array
        description: |
          The list of allowed reasons for access to this CryptoKey. Zero allowed
          access reasons means all encrypt, decrypt, and sign operations for
          this CryptoKey will fail.
        item_type:
          type: String
