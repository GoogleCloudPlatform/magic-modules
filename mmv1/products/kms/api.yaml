# Copyright 2019 Google Inc.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

--- !ruby/object:Api::Product
name: KMS
display_name: Cloud Key Management Service
versions:
  - !ruby/object:Api::Product::Version
    name: ga
    base_url: https://cloudkms.googleapis.com/v1/
scopes:
  - https://www.googleapis.com/auth/cloudkms
apis_required:
  - !ruby/object:Api::Product::ApiReference
    name: Cloud Key Management Service (KMS) API
    url: https://console.cloud.google.com/apis/library/cloudkms.googleapis.com/
objects:
  - !ruby/object:Api::Resource
    name: 'KeyRing'
    base_url: 'projects/{{project}}/locations/{{location}}/keyRings'
    create_url: 'projects/{{project}}/locations/{{location}}/keyRings?keyRingId={{name}}'
    self_link: 'projects/{{project}}/locations/{{location}}/keyRings/{{name}}'
    input: true
    description: |
      A `KeyRing` is a toplevel logical grouping of `CryptoKeys`.
    parameters:
      - !ruby/object:Api::Type::String
        name: 'location'
        description: |
          The location for the KeyRing.
          A full list of valid locations can be found by running `gcloud kms locations list`.
        required: true
    properties:
      - !ruby/object:Api::Type::String
        name: 'name'
        description: |
          The resource name for the KeyRing.
        required: true
      - !ruby/object:Api::Type::Time
        name: 'createTime'
        description: |
          The time that this resource was created on the server.
          This is in RFC3339 text format.
        output: true
      - !ruby/object:Api::Type::String
        name: 'keyRingUrl'
        description: |
          The full resource name for the KeyRing
        exclude: true
    references: !ruby/object:Api::Resource::ReferenceLinks
      guides:
        'Creating a key ring':
          'https://cloud.google.com/kms/docs/creating-keys#create_a_key_ring'
      api: 'https://cloud.google.com/kms/docs/reference/rest/v1/projects.locations.keyRings'
  - !ruby/object:Api::Resource
    name: 'CryptoKey'
    base_url: '{{key_ring}}/cryptoKeys'
    create_url: '{{key_ring}}/cryptoKeys?cryptoKeyId={{name}}&skipInitialVersionCreation={{skip_initial_version_creation}}'
    self_link: '{{key_ring}}/cryptoKeys/{{name}}'
    update_verb: :PATCH
    update_mask: true
    description: |
      A `CryptoKey` represents a logical key that can be used for cryptographic operations.
    parameters:
      - !ruby/object:Api::Type::String
        name: 'keyRing'
        description: |
          The KeyRing that this key belongs to.
          Format: `'projects/{{project}}/locations/{{location}}/keyRings/{{keyRing}}'`.
        required: true
        input: true
        url_param_only: true
      - !ruby/object:Api::Type::Boolean
        name: 'skipInitialVersionCreation'
        description: |
          If set to true, the request will create a CryptoKey without any CryptoKeyVersions. 
          You must use the `google_kms_key_ring_import_job` resource to import the CryptoKeyVersion.
        input: true
        url_param_only: true
    properties:
      - !ruby/object:Api::Type::String
        name: 'name'
        description: |
          The resource name for the CryptoKey.
        required: true
        input: true
        url_param_only: true
      - !ruby/object:Api::Type::Time
        name: 'createTime'
        description: |
          The time that this resource was created on the server.
          This is in RFC3339 text format.
        output: true
      - !ruby/object:Api::Type::KeyValuePairs
        name: 'labels'
        description: |
          Labels with user-defined metadata to apply to this resource.
      - !ruby/object:Api::Type::Enum
        name: 'purpose'
        description: |
          The immutable purpose of this CryptoKey. See the
          [purpose reference](https://cloud.google.com/kms/docs/reference/rest/v1/projects.locations.keyRings.cryptoKeys#CryptoKeyPurpose)
          for possible inputs.
        values:
          - "ENCRYPT_DECRYPT"
          - "ASYMMETRIC_SIGN"
          - "ASYMMETRIC_DECRYPT"
        default_value: :ENCRYPT_DECRYPT
        input: true
      - !ruby/object:Api::Type::String
        name: 'rotationPeriod'
        description: |
          Every time this period passes, generate a new CryptoKeyVersion and set it as the primary.
          The first rotation will take place after the specified period. The rotation period has
          the format of a decimal number with up to 9 fractional digits, followed by the
          letter `s` (seconds). It must be greater than a day (ie, 86400).
      - !ruby/object:Api::Type::NestedObject
        name: 'versionTemplate'
        description: |
          A template describing settings for new crypto key versions.
        properties:
          - !ruby/object:Api::Type::String
            name: 'algorithm'
            description: |
               The algorithm to use when creating a version based on this template.
               See the [algorithm reference](https://cloud.google.com/kms/docs/reference/rest/v1/CryptoKeyVersionAlgorithm) for possible inputs.
            required: true
          - !ruby/object:Api::Type::Enum
            name: 'protectionLevel'
            description: |
              The protection level to use when creating a version based on this template.
            values:
              - "SOFTWARE"
              - "HSM"
            input: true
      - !ruby/object:Api::Type::Time
        name: 'nextRotationTime'
        description: |
          The time when KMS will create a new version of this Crypto Key.
        output: true
    references: !ruby/object:Api::Resource::ReferenceLinks
      guides:
        'Creating a key':
          'https://cloud.google.com/kms/docs/creating-keys#create_a_key'
      api: 'https://cloud.google.com/kms/docs/reference/rest/v1/projects.locations.keyRings.cryptoKeys'
  - !ruby/object:Api::Resource
    name: 'KeyRingImportJob'
    base_url: '{{key_ring}}/importJobs'
    create_url: '{{key_ring}}/importJobs?importJobId={{import_job_id}}'
    self_link: '{{name}}'
    input: true
    references: !ruby/object:Api::Resource::ReferenceLinks
      guides:
        'Importing a key':
          'https://cloud.google.com/kms/docs/importing-a-key'
      api: 'https://cloud.google.com/kms/docs/reference/rest/v1/projects.locations.keyRings.importJobs'
    description: |
      A `KeyRingImportJob` can be used to create `CryptoKeys` and `CryptoKeyVersions` using pre-existing
      key material, generated outside of Cloud KMS. A `KeyRingImportJob` expires 3 days after it is created.
      Once expired, Cloud KMS will no longer be able to import or unwrap any key material that
      was wrapped with the `KeyRingImportJob`'s public key.
    parameters:
      - !ruby/object:Api::Type::String
        name: 'keyRing'
        description: |
          The KeyRing that this import job belongs to.
          Format: `'projects/{{project}}/locations/{{location}}/keyRings/{{keyRing}}'`.
        required: true
        input: true
        url_param_only: true
      - !ruby/object:Api::Type::String
        name: 'importJobId'
        required: true
        description: |
          It must be unique within a KeyRing and match the regular expression [a-zA-Z0-9_-]{1,63}
        required: true
        input: true
        url_param_only: true
    properties:
      - !ruby/object:Api::Type::String
        name: 'name'
        description: |
          The resource name for this ImportJob in the format projects/*/locations/*/keyRings/*/importJobs/*.
        output: true
      - !ruby/object:Api::Type::Enum
        name: 'importMethod'
        input: true
        required: true
        description: |
          The wrapping method to be used for incoming key material.
        values:
          - :RSA_OAEP_3072_SHA1_AES_256
          - :RSA_OAEP_4096_SHA1_AES_256
      - !ruby/object:Api::Type::Enum
        name: 'protectionLevel'
        input: true
        required: true
        description: |
          The protection level of the ImportJob. This must match the protectionLevel of the
          versionTemplate on the CryptoKey you attempt to import into.
        values:
          - :SOFTWARE
          - :HSM
          - :EXTERNAL
      - !ruby/object:Api::Type::Time
        name: 'createTime'
        description: |
          The time that this resource was created on the server.
          This is in RFC3339 text format.
        output: true
      - !ruby/object:Api::Type::Time
        name: 'generateTime'
        description: |
          The time that this resource was generated.
          This is in RFC3339 text format.
        output: true
      - !ruby/object:Api::Type::Time
        name: 'expireTime'
        description: |
          The time at which this resource is scheduled for expiration and can no longer be used.
          This is in RFC3339 text format.
        output: true
      - !ruby/object:Api::Type::Time
        name: 'expireEventTime'
        description: |
          The time this resource expired. Only present if state is EXPIRED.
        output: true
      - !ruby/object:Api::Type::String
        name: 'state'
        description: |
          The current state of the ImportJob, indicating if it can be used.
        output: true
      - !ruby/object:Api::Type::NestedObject
        name: 'publicKey'
        description: |
          The public key with which to wrap key material prior to import. Only returned if state is `ACTIVE`.
        output: true
        properties:
          - !ruby/object:Api::Type::String
            name: 'pem'
            description: |
              The public key, encoded in PEM format. For more information, see the RFC 7468 sections
              for General Considerations and Textual Encoding of Subject Public Key Info.
            output: true
      - !ruby/object:Api::Type::NestedObject
        name: 'attestation'
        description: |
          Statement that was generated and signed by the key creator (for example, an HSM) at key creation time.
          Use this statement to verify attributes of the key as stored on the HSM, independently of Google.
          Only present if the chosen ImportMethod is one with a protection level of HSM.
        output: true
        properties:
          - !ruby/object:Api::Type::String
            name: 'format'
            description: |
              The format of the attestation data.
            output: true
          - !ruby/object:Api::Type::String
            name: 'content'
            description: |
              The attestation data provided by the HSM when the key operation was performed.
              A base64-encoded string.
            output: true
  - !ruby/object:Api::Resource
    name: 'SecretCiphertext'
    base_url: '{{crypto_key}}'
    create_url: '{{crypto_key}}:encrypt'
    self_link: '{{crypto_key}}'
    input: true
    description: |
      Encrypts secret data with Google Cloud KMS and provides access to the ciphertext.
    parameters:
      - !ruby/object:Api::Type::String
        name: 'cryptoKey'
        description: |
          The full name of the CryptoKey that will be used to encrypt the provided plaintext.
          Format: `'projects/{{project}}/locations/{{location}}/keyRings/{{keyRing}}/cryptoKeys/{{cryptoKey}}'`
        required: true
        url_param_only: true
    properties:
      - !ruby/object:Api::Type::String
        name: 'plaintext'
        description: |
          The plaintext to be encrypted.
        required: true
      - !ruby/object:Api::Type::String
        name: 'additionalAuthenticatedData'
        description: |
          The additional authenticated data used for integrity checks during encryption and decryption.
      - !ruby/object:Api::Type::String
        name: 'ciphertext'
        description: |
          Contains the result of encrypting the provided plaintext, encoded in base64.
        output: true
    references: !ruby/object:Api::Resource::ReferenceLinks
      guides:
        'Encrypting and decrypting data with a symmetric key':
          'https://cloud.google.com/kms/docs/encrypt-decrypt'
      api: 'https://cloud.google.com/kms/docs/reference/rest/v1/projects.locations.keyRings.cryptoKeys/encrypt'
