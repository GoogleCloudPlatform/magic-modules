# Copyright 2024 Google Inc.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# Warning: This is a temporary file, and should not be edited directly
---
name: 'CryptoKeyVersion'
description: |
  A `CryptoKeyVersion` represents an individual cryptographic key, and the associated key material.


  Destroying a cryptoKeyVersion will not delete the resource from the project.
references:
  guides:
    'Creating a key Version': 'https://cloud.google.com/kms/docs/reference/rest/v1/projects.locations.keyRings.cryptoKeys.cryptoKeyVersions/create'
  api: 'https://cloud.google.com/kms/docs/reference/rest/v1/projects.locations.keyRings.cryptoKeys.cryptoKeyVersions'
docs:
id_format: '{{name}}'
base_url: '{{crypto_key}}/cryptoKeyVersions'
self_link: '{{name}}'
create_url: '{{crypto_key}}/cryptoKeyVersions'
update_verb: 'PATCH'
update_mask: true
delete_url: '{{name}}:destroy'
delete_verb: 'POST'
import_format:
  - '{{name}}'
timeouts:
  insert_minutes: 20
  update_minutes: 20
  delete_minutes: 20
custom_code:
  pre_update: 'templates/terraform/pre_update/go/kms_crypto_key_version.go.tmpl'
  custom_delete: 'templates/terraform/custom_delete/go/kms_crypto_key_version.tmpl'
  custom_import: 'templates/terraform/custom_import/go/kms_crypto_key_version.go.tmpl'
examples:
  - name: 'kms_crypto_key_version_basic'
    primary_resource_id: 'example-key'
    exclude_test: true
parameters:
  - name: 'cryptoKey'
    type: String
    description: |
      The name of the cryptoKey associated with the CryptoKeyVersions.
      Format: `'projects/{{project}}/locations/{{location}}/keyRings/{{keyring}}/cryptoKeys/{{cryptoKey}}'`
    url_param_only: true
    required: true
    immutable: true
properties:
  - name: 'name'
    type: String
    description: |
      The resource name for this CryptoKeyVersion.
    output: true
  - name: 'state'
    type: Enum
    description: |
      The current state of the CryptoKeyVersion.
    default_from_api: true
    enum_values:
      - 'PENDING_GENERATION'
      - 'ENABLED'
      - 'DISABLED'
      - 'DESTROYED'
      - 'DESTROY_SCHEDULED'
      - 'PENDING_IMPORT'
      - 'IMPORT_FAILED'
  - name: 'protectionLevel'
    type: String
    description: |
      The ProtectionLevel describing how crypto operations are performed with this CryptoKeyVersion.
    output: true
  - name: 'generateTime'
    type: Time
    description: |
      The time this CryptoKeyVersion key material was generated
    output: true
  - name: 'algorithm'
    type: String
    description: |
      The CryptoKeyVersionAlgorithm that this CryptoKeyVersion supports.
    output: true
  - name: 'attestation'
    type: NestedObject
    description: |
      Statement that was generated and signed by the HSM at key creation time. Use this statement to verify attributes of the key as stored on the HSM, independently of Google.
      Only provided for key versions with protectionLevel HSM.
    output: true
    properties:
      - name: 'format'
        type: String
        description: |
          The format of the attestation data.
        output: true
      - name: 'content'
        type: String
        description: |
          The attestation data provided by the HSM when the key operation was performed.
        output: true
      - name: 'certChains'
        type: NestedObject
        description: |
          The certificate chains needed to validate the attestation
        properties:
          - name: 'caviumCerts'
            type: Array
            description: |
              Cavium certificate chain corresponding to the attestation.
            item_type:
              type: String
          - name: 'googleCardCerts'
            type: Array
            description: |
              Google card certificate chain corresponding to the attestation.
            item_type:
              type: String
          - name: 'googlePartitionCerts'
            type: Array
            description: |
              Google partition certificate chain corresponding to the attestation.
            item_type:
              type: String
      - name: 'externalProtectionLevelOptions'
        type: NestedObject
        description: |
          ExternalProtectionLevelOptions stores a group of additional fields for configuring a CryptoKeyVersion that are specific to the EXTERNAL protection level and EXTERNAL_VPC protection levels.
        deprecation_message: '`externalProtectionLevelOptions` is being un-nested from the `attestation` field. Please use the top level `externalProtectionLevelOptions` field instead.'
        properties:
          - name: 'externalKeyUri'
            type: String
            description: |
              The URI for an external resource that this CryptoKeyVersion represents.
          - name: 'ekmConnectionKeyPath'
            type: String
            description: |
              The path to the external key material on the EKM when using EkmConnection e.g., "v0/my/key". Set this field instead of externalKeyUri when using an EkmConnection.
  - name: 'externalProtectionLevelOptions'
    type: NestedObject
    description: |
      ExternalProtectionLevelOptions stores a group of additional fields for configuring a CryptoKeyVersion that are specific to the EXTERNAL protection level and EXTERNAL_VPC protection levels.
    properties:
      - name: 'externalKeyUri'
        type: String
        description: |
          The URI for an external resource that this CryptoKeyVersion represents.
      - name: 'ekmConnectionKeyPath'
        type: String
        description: |
          The path to the external key material on the EKM when using EkmConnection e.g., "v0/my/key". Set this field instead of externalKeyUri when using an EkmConnection.
