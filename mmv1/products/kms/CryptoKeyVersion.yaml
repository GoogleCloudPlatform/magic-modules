# Copyright 2023 Google Inc.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

--- !ruby/object:Api::Resource
name: 'CryptoKeyVersion'
base_url: '{{crypto_key}}/cryptoKeyVersions'
create_url: '{{crypto_key}}/cryptoKeyVersions'
self_link: '{{name}}'
update_verb: :PATCH
update_mask: true
delete_verb: :POST
delete_url: '{{name}}:destroy'
description: |
  A `CryptoKeyVersion` represents an individual cryptographic key, and the associated key material.


  Destroying a cryptoKeyVersion will not delete the resource from the project.
references: !ruby/object:Api::Resource::ReferenceLinks
  guides:
    'Creating a key Version': 'https://cloud.google.com/kms/docs/reference/rest/v1/projects.locations.keyRings.cryptoKeys.cryptoKeyVersions/create'
  api: 'https://cloud.google.com/kms/docs/reference/rest/v1/projects.locations.keyRings.cryptoKeys.cryptoKeyVersions'
id_format: '{{name}}'
import_format: ['{{name}}']
examples:
  - !ruby/object:Provider::Terraform::Examples
    name: 'kms_crypto_key_version_basic'
    primary_resource_id: 'example-key'
    skip_test: true
custom_code: !ruby/object:Provider::Terraform::CustomCode
  custom_delete: templates/terraform/custom_delete/kms_crypto_key_version.erb
  custom_import: templates/terraform/custom_import/kms_crypto_key_version.go.erb
  pre_update: templates/terraform/pre_update/kms_crypto_key_version.go.erb
parameters:
  - !ruby/object:Api::Type::String
    name: 'cryptoKey'
    required: true
    immutable: true
    url_param_only: true
    description: |
      The name of the cryptoKey associated with the CryptoKeyVersions.
      Format: `'projects/{{project}}/locations/{{location}}/keyRings/{{keyring}}/cryptoKeys/{{cryptoKey}}'`
properties:
  - !ruby/object:Api::Type::String
    name: 'name'
    description: |
      The resource name for this CryptoKeyVersion.
    output: true
  - !ruby/object:Api::Type::Enum
    name: 'state'
    description: |
      The current state of the CryptoKeyVersion.
    values:
      - 'PENDING_GENERATION'
      - 'ENABLED'
      - 'DISABLED'
      - 'DESTROYED'
      - 'DESTROY_SCHEDULED'
      - 'PENDING_IMPORT'
      - 'IMPORT_FAILED'
    default_from_api: true
  - !ruby/object:Api::Type::String
    name: 'protectionLevel'
    output: true
    description: |
      The ProtectionLevel describing how crypto operations are performed with this CryptoKeyVersion.
  - !ruby/object:Api::Type::Time
    name: 'generateTime'
    description: |
      The time this CryptoKeyVersion key material was generated
    output: true
  - !ruby/object:Api::Type::String
    name: 'algorithm'
    description: |
      The CryptoKeyVersionAlgorithm that this CryptoKeyVersion supports.
    output: true
  - !ruby/object:Api::Type::NestedObject
    name: 'attestation'
    description: |
      Statement that was generated and signed by the HSM at key creation time. Use this statement to verify attributes of the key as stored on the HSM, independently of Google.
      Only provided for key versions with protectionLevel HSM.
    output: true
    properties:
      - !ruby/object:Api::Type::String
        name: 'format'
        description: |
          The format of the attestation data.
        output: true
      - !ruby/object:Api::Type::String
        name: 'content'
        description: |
          The attestation data provided by the HSM when the key operation was performed.
        output: true
      - !ruby/object:Api::Type::NestedObject
        name: 'certChains'
        description: |
          The certificate chains needed to validate the attestation
        properties:
          - !ruby/object:Api::Type::Array
            item_type: Api::Type::String
            name: 'caviumCerts'
            description: |
              Cavium certificate chain corresponding to the attestation.
          - !ruby/object:Api::Type::Array
            item_type: Api::Type::String
            name: 'googleCardCerts'
            description: |
              Google card certificate chain corresponding to the attestation.
          - !ruby/object:Api::Type::Array
            item_type: Api::Type::String
            name: 'googlePartitionCerts'
            description: |
              Google partition certificate chain corresponding to the attestation.
      - !ruby/object:Api::Type::NestedObject
        name: 'externalProtectionLevelOptions'
        description: |
          ExternalProtectionLevelOptions stores a group of additional fields for configuring a CryptoKeyVersion that are specific to the EXTERNAL protection level and EXTERNAL_VPC protection levels.
        deprecation_message: >-
          `externalProtectionLevelOptions` is being un-nested from the `attestation` field.
          Please use the top level `externalProtectionLevelOptions` field instead.
        properties:
          - !ruby/object:Api::Type::String
            name: 'externalKeyUri'
            description: |
              The URI for an external resource that this CryptoKeyVersion represents.
          - !ruby/object:Api::Type::String
            name: 'ekmConnectionKeyPath'
            description: |
              The path to the external key material on the EKM when using EkmConnection e.g., "v0/my/key". Set this field instead of externalKeyUri when using an EkmConnection.
  - !ruby/object:Api::Type::NestedObject
    name: 'externalProtectionLevelOptions'
    description: |
      ExternalProtectionLevelOptions stores a group of additional fields for configuring a CryptoKeyVersion that are specific to the EXTERNAL protection level and EXTERNAL_VPC protection levels.
    properties:
      - !ruby/object:Api::Type::String
        name: 'externalKeyUri'
        description: |
          The URI for an external resource that this CryptoKeyVersion represents.
      - !ruby/object:Api::Type::String
        name: 'ekmConnectionKeyPath'
        description: |
          The path to the external key material on the EKM when using EkmConnection e.g., "v0/my/key". Set this field instead of externalKeyUri when using an EkmConnection.
