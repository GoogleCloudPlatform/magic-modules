# Copyright 2023 Google Inc.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

--- !ruby/object:Api::Resource
name: 'CryptoKey'
base_url: '{{key_ring}}/cryptoKeys'
create_url: '{{key_ring}}/cryptoKeys?cryptoKeyId={{name}}&skipInitialVersionCreation={{skip_initial_version_creation}}'
self_link: '{{key_ring}}/cryptoKeys/{{name}}'
update_verb: :PATCH
update_mask: true
description: |
  A `CryptoKey` represents a logical key that can be used for cryptographic operations.


  ~> **Note:** CryptoKeys cannot be deleted from Google Cloud Platform.
  Destroying a Terraform-managed CryptoKey will remove it from state
  and delete all CryptoKeyVersions, rendering the key unusable, but *will
  not delete the resource from the project.* When Terraform destroys these keys,
  any data previously encrypted with these keys will be irrecoverable.
  For this reason, it is strongly recommended that you add
  [lifecycle](https://developer.hashicorp.com/terraform/language/meta-arguments/lifecycle)
  hooks to the resource to prevent accidental destruction.
references: !ruby/object:Api::Resource::ReferenceLinks
  guides:
    'Creating a key': 'https://cloud.google.com/kms/docs/creating-keys#create_a_key'
  api: 'https://cloud.google.com/kms/docs/reference/rest/v1/projects.locations.keyRings.cryptoKeys'
id_format: '{{key_ring}}/cryptoKeys/{{name}}'
import_format: ['{{key_ring}}/cryptoKeys/{{name}}']
supports_indirect_user_project_override: true
schema_version: 1
state_upgraders: true
examples:
  - !ruby/object:Provider::Terraform::Examples
    name: 'kms_crypto_key_basic'
    primary_resource_id: 'example-key'
    skip_test: true
  - !ruby/object:Provider::Terraform::Examples
    name: 'kms_crypto_key_asymmetric_sign'
    primary_resource_id: 'example-asymmetric-sign-key'
    skip_test: true
custom_code: !ruby/object:Provider::Terraform::CustomCode
  custom_delete: templates/terraform/custom_delete/kms_crypto_key.erb
  custom_import: templates/terraform/custom_import/kms_crypto_key.go.erb
  decoder: templates/terraform/decoders/kms.go.erb
  encoder: templates/terraform/encoders/kms_crypto_key.go.erb
  update_encoder: templates/terraform/update_encoder/kms_crypto_key.go.erb
parameters:
  - !ruby/object:Api::Type::String
    name: 'keyRing'
    description: |
      The KeyRing that this key belongs to.
      Format: `'projects/{{project}}/locations/{{location}}/keyRings/{{keyRing}}'`.
    required: true
    immutable: true
    url_param_only: true
    diff_suppress_func: 'kmsCryptoKeyRingsEquivalent'
    ignore_read: true
  - !ruby/object:Api::Type::Boolean
    name: 'skipInitialVersionCreation'
    description: |
      If set to true, the request will create a CryptoKey without any CryptoKeyVersions.
      You must use the `google_kms_crypto_key_version` resource to create a new CryptoKeyVersion
      or `google_kms_key_ring_import_job` resource to import the CryptoKeyVersion.
    immutable: true
    url_param_only: true
properties:
  - !ruby/object:Api::Type::String
    name: 'name'
    description: |
      The resource name for the CryptoKey.
    required: true
    immutable: true
    url_param_only: true
    ignore_read: true
  - !ruby/object:Api::Type::KeyValueLabels
    name: 'labels'
    description: |
      Labels with user-defined metadata to apply to this resource.
  - !ruby/object:Api::Type::NestedObject
    name: 'primary'
    description: |
      A copy of the primary CryptoKeyVersion that will be used by cryptoKeys.encrypt when this CryptoKey is given in EncryptRequest.name.
      Keys with purpose ENCRYPT_DECRYPT may have a primary. For other keys, this field will be unset.
    output: true
    properties:
      - !ruby/object:Api::Type::String
        name: 'name'
        description: |
          The resource name for this CryptoKeyVersion.
        output: true
      - !ruby/object:Api::Type::String
        name: 'state'
        description: |
          The current state of the CryptoKeyVersion.
        output: true
  - !ruby/object:Api::Type::String
    name: 'purpose'
    description: |
      The immutable purpose of this CryptoKey. See the
      [purpose reference](https://cloud.google.com/kms/docs/reference/rest/v1/projects.locations.keyRings.cryptoKeys#CryptoKeyPurpose)
      for possible inputs.
      Default value is "ENCRYPT_DECRYPT".
    default_value: 'ENCRYPT_DECRYPT'
    immutable: true
  - !ruby/object:Api::Type::String
    name: 'rotationPeriod'
    description: |
      Every time this period passes, generate a new CryptoKeyVersion and set it as the primary.
      The first rotation will take place after the specified period. The rotation period has
      the format of a decimal number with up to 9 fractional digits, followed by the
      letter `s` (seconds). It must be greater than a day (ie, 86400).
    validation: !ruby/object:Provider::Terraform::Validation
      function: 'verify.OrEmpty(validateKmsCryptoKeyRotationPeriod)'
    update_mask_fields:
      - 'rotationPeriod'
      - 'nextRotationTime'
  - !ruby/object:Api::Type::NestedObject
    name: 'versionTemplate'
    description: |
      A template describing settings for new crypto key versions.
    default_from_api: true
    update_mask_fields:
      - 'versionTemplate.algorithm'
    properties:
      - !ruby/object:Api::Type::String
        name: 'algorithm'
        description: |
          The algorithm to use when creating a version based on this template.
          See the [algorithm reference](https://cloud.google.com/kms/docs/reference/rest/v1/CryptoKeyVersionAlgorithm) for possible inputs.
        required: true
      - !ruby/object:Api::Type::String
        name: 'protectionLevel'
        description: |
          The protection level to use when creating a version based on this template. Possible values include "SOFTWARE", "HSM", "EXTERNAL", "EXTERNAL_VPC". Defaults to "SOFTWARE".
        immutable: true
        default_value: 'SOFTWARE'
  - !ruby/object:Api::Type::String
    name: 'destroyScheduledDuration'
    immutable: true
    description: |
      The period of time that versions of this key spend in the DESTROY_SCHEDULED state before transitioning to DESTROYED.
      If not specified at creation time, the default duration is 24 hours.
    default_from_api: true
  - !ruby/object:Api::Type::Boolean
    name: 'importOnly'
    immutable: true
    description: |
      Whether this key may contain imported versions only.
    default_from_api: true
  - !ruby/object:Api::Type::String
    name: 'cryptoKeyBackend'
    immutable: true
    description: |
      The resource name of the backend environment associated with all CryptoKeyVersions within this CryptoKey.
      The resource name is in the format "projects/*/locations/*/ekmConnections/*" and only applies to "EXTERNAL_VPC" keys.
    default_from_api: true
