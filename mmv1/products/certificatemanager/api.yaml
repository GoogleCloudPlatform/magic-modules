# Copyright 2021 Google Inc.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

--- !ruby/object:Api::Product
name: CertificateManager
versions:
  - !ruby/object:Api::Product::Version
    name: beta
    base_url: https://certificatemanager.googleapis.com/v1/
  - !ruby/object:Api::Product::Version
    name: ga
    base_url: https://certificatemanager.googleapis.com/v1/
scopes:
  - https://www.googleapis.com/auth/cloud-identity
apis_required:
  - !ruby/object:Api::Product::ApiReference
    name: Network Services API
    url: https://console.cloud.google.com/apis/library/certificatemanager.googleapis.com
objects:
  - !ruby/object:Api::Resource
    name: 'DnsAuthorization'
    base_url: 'projects/{{project}}/locations/global/dnsAuthorizations'
    create_url: 'projects/{{project}}/locations/global/dnsAuthorizations?dnsAuthorizationId={{name}}'
    self_link: 'projects/{{project}}/locations/global/dnsAuthorizations/{{name}}'
    update_verb: :PATCH
    update_mask: true
    description: |
      DnsAuthorization represents a HTTP-reachable backend for an DnsAuthorization.
    async: !ruby/object:Api::OpAsync
      operation: !ruby/object:Api::OpAsync::Operation
        path: 'name'
        base_url: '{{op_id}}'
        wait_ms: 1000
      result: !ruby/object:Api::OpAsync::Result
        path: 'response'
      status: !ruby/object:Api::OpAsync::Status
        path: 'done'
        complete: true
        allowed:
          - true
          - false
      error: !ruby/object:Api::OpAsync::Error
        path: 'error'
        message: 'message'
    parameters:
      - !ruby/object:Api::Type::String
        name: 'name'
        required: true
        input: true
        url_param_only: true
        description: |
          Name of the resource; provided by the client when the resource is created.
          The name must be 1-64 characters long, and match the regular expression [a-zA-Z][a-zA-Z0-9_-]* which means the first character must be a letter,
          and all following characters must be a dash, underscore, letter or digit.
    properties:
      - !ruby/object:Api::Type::String
        name: 'description'
        description: |
          A human-readable description of the resource.
      - !ruby/object:Api::Type::KeyValuePairs
        name: 'labels'
        description: 'Set of label tags associated with the EdgeCache resource.'
      - !ruby/object:Api::Type::String
        name: 'domain'
        input: true
        required: true
        description: |
          A domain which is being authorized. A DnsAuthorization resource covers a
          single domain and its wildcard, e.g. authorization for "example.com" can
          be used to issue certificates for "example.com" and "*.example.com".
      - !ruby/object:Api::Type::NestedObject
        name: 'dnsResourceRecord'
        output: true
        description: |
          The structure describing the DNS Resource Record that needs to be added
          to DNS configuration for the authorization to be usable by
          certificate.
        properties:
          - !ruby/object:Api::Type::String
            name: 'name'
            output: true
            description: |
              Fully qualified name of the DNS Resource Record.
          - !ruby/object:Api::Type::String
            name: 'type'
            output: true
            description: |
              Type of the DNS Resource Record.
          - !ruby/object:Api::Type::String
            name: 'data'
            output: true
            description: |
              Data of the DNS Resource Record.
  - !ruby/object:Api::Resource
    name: 'Certificate'
    base_url: 'projects/{{project}}/locations/global/certificates'
    create_url: 'projects/{{project}}/locations/global/certificates?certificateId={{name}}'
    self_link: 'projects/{{project}}/locations/global/certificates/{{name}}'
    update_verb: :PATCH
    update_mask: true
    description: |
      Certificate represents a HTTP-reachable backend for an Certificate.
    async: !ruby/object:Api::OpAsync
      operation: !ruby/object:Api::OpAsync::Operation
        path: 'name'
        base_url: '{{op_id}}'
        wait_ms: 1000
      result: !ruby/object:Api::OpAsync::Result
        path: 'response'
      status: !ruby/object:Api::OpAsync::Status
        path: 'done'
        complete: true
        allowed:
          - true
          - false
      error: !ruby/object:Api::OpAsync::Error
        path: 'error'
        message: 'message'
    parameters:
      - !ruby/object:Api::Type::String
        name: 'name'
        required: true
        input: true
        url_param_only: true
        description: |
          A user-defined name of the certificate. Certificate names must be unique
          The name must be 1-64 characters long, and match the regular expression [a-zA-Z][a-zA-Z0-9_-]* which means the first character must be a letter,
          and all following characters must be a dash, underscore, letter or digit.
    properties:
      - !ruby/object:Api::Type::String
        name: 'description'
        description: |
          A human-readable description of the resource.
      - !ruby/object:Api::Type::KeyValuePairs
        name: 'labels'
        description: 'Set of label tags associated with the EdgeCache resource.'
      - !ruby/object:Api::Type::Enum
        name: scope
        input: true
        description: |
          The scope of the certificate.

          Certificates with default scope are served from core Google data centers.
          If unsure, choose this option.

          Certificates with scope EDGE_CACHE are special-purposed certificates,
          served from non-core Google data centers.
          Currently allowed only for managed certificates.
        values:
          - :DEFAULT
          - :EDGE_CACHE
        default_value: :DEFAULT
      - !ruby/object:Api::Type::NestedObject
        name: selfManaged
        input: true
        exactly_one_of:
          - self_managed
          - managed
        description: |
          Certificate data for a SelfManaged Certificate.
          SelfManaged Certificates are uploaded by the user. Updating such
          certificates before they expire remains the user's responsibility.
        properties:
          - !ruby/object:Api::Type::String
            name: certificatePem
            required: true
            description: |
              The certificate chain in PEM-encoded form.

              Leaf certificate comes first, followed by intermediate ones if any.
          - !ruby/object:Api::Type::String
            name: privateKeyPem
            required: true
            description: |
              The private key of the leaf certificate in PEM-encoded form.
      - !ruby/object:Api::Type::NestedObject
        name: managed
        input: true
        exactly_one_of:
          - self_managed
          - managed
        description: |
          Configuration and state of a Managed Certificate.
          Certificate Manager provisions and renews Managed Certificates
          automatically, for as long as it's authorized to do so.
        properties:
          - !ruby/object:Api::Type::String
            name: state
            output: true
            description: |
              State of the managed certificate resource.
          - !ruby/object:Api::Type::Array
            name: domains
            input: true
            description: |
              The domains for which a managed SSL certificate will be generated.
              Wildcard domains are only supported with DNS challenge resolution
            item_type: Api::Type::String
          - !ruby/object:Api::Type::Array
            name: dnsAuthorizations
            input: true
            description: |
              Authorizations that will be used for performing domain authorization
            item_type: Api::Type::String

