# Copyright 2024 Google Inc.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# Warning: This is a temporary file, and should not be edited directly
---
name: 'Attestor'
description: |
  An attestor that attests to container image artifacts.
references:
  guides:
    'Official Documentation': 'https://cloud.google.com/binary-authorization/'
  api: 'https://cloud.google.com/binary-authorization/docs/reference/rest/'
docs:
base_url: 'projects/{{project}}/attestors?attestorId={{name}}'
self_link: 'projects/{{project}}/attestors/{{name}}'
import_format:
  - 'projects/{{project}}/attestors/{{name}}'
timeouts:
  insert_minutes: 20
  update_minutes: 20
  delete_minutes: 20
iam_policy:
  method_name_separator: ':'
  parent_resource_attribute: 'attestor'
  example_config_body: 'templates/terraform/iam/go/iam_attributes.go.tmpl'
custom_code:
  constants: 'templates/terraform/constants/go/binaryauthorization_attestor.go.tmpl'
examples:
  - name: 'binary_authorization_attestor_basic'
    primary_resource_id: 'attestor'
    primary_resource_name: 'fmt.Sprintf("tf-test-test-attestor%s", context["random_suffix"])'
    vars:
      attestor_name: 'test-attestor'
      note_name: 'test-attestor-note'
  - name: 'binary_authorization_attestor_kms'
    primary_resource_id: 'attestor'
    vars:
      attestor_name: 'test-attestor'
      note_name: 'test-attestor-note'
      key_name: 'test-attestor-key'
      keyring_name: 'test-attestor-key-ring'
    exclude_test: true
parameters:
properties:
  - name: 'name'
    type: String
    description: |
      The resource name.
    required: true
    immutable: true
    custom_flatten: 'templates/terraform/custom_flatten/go/name_from_self_link.tmpl'
    custom_expand: 'templates/terraform/custom_expand/go/shortname_to_url.go.tmpl'
  - name: 'description'
    type: String
    description: |
      A descriptive comment. This field may be updated. The field may be
      displayed in chooser dialogs.
  - name: 'attestationAuthorityNote'
    type: NestedObject
    description: |
      A Container Analysis ATTESTATION_AUTHORITY Note, created by the user.
    api_name: userOwnedGrafeasNote
    required: true
    properties:
      - name: 'noteReference'
        type: String
        description: |
          The resource name of a ATTESTATION_AUTHORITY Note, created by the
          user. If the Note is in a different project from the Attestor, it
          should be specified in the format `projects/*/notes/*` (or the legacy
          `providers/*/notes/*`). This field may not be updated.
          An attestation by this attestor is stored as a Container Analysis
          ATTESTATION_AUTHORITY Occurrence that names a container image
          and that links to this Note.
        required: true
        immutable: true
        diff_suppress_func: 'tpgresource.CompareSelfLinkOrResourceName'
        custom_expand: 'templates/terraform/custom_expand/go/container_analysis_note.tmpl'
      - name: 'publicKeys'
        type: Array
        description: |
          Public keys that verify attestations signed by this attestor. This
          field may be updated.
          If this field is non-empty, one of the specified public keys must
          verify that an attestation was signed by this attestor for the
          image specified in the admission request.
          If this field is empty, this attestor always returns that no valid
          attestations exist.
        item_type:
          type: NestedObject
          properties:
            - name: 'comment'
              type: String
              description: |
                A descriptive comment. This field may be updated.
            - name: 'id'
              type: String
              description: |
                The ID of this public key. Signatures verified by BinAuthz
                must include the ID of the public key that can be used to
                verify them, and that ID must match the contents of this
                field exactly. Additional restrictions on this field can
                be imposed based on which public key type is encapsulated.
                See the documentation on publicKey cases below for details.
              default_from_api: true
            - name: 'asciiArmoredPgpPublicKey'
              type: String
              # TODO (mbang): Exactly one of asciiArmoredPgpPublicKey or pkixPublicKey must be set
              description: |
                ASCII-armored representation of a PGP public key, as the
                entire output by the command
                `gpg --export --armor foo@example.com` (either LF or CRLF
                line endings). When using this field, id should be left
                blank. The BinAuthz API handlers will calculate the ID
                and fill it in automatically. BinAuthz computes this ID
                as the OpenPGP RFC4880 V4 fingerprint, represented as
                upper-case hex. If id is provided by the caller, it will
                be overwritten by the API-calculated ID.
            - name: 'pkixPublicKey'
              type: NestedObject
              # TODO (mbang): Exactly one of asciiArmoredPgpPublicKey or pkixPublicKey must be set
              description: |
                A raw PKIX SubjectPublicKeyInfo format public key.

                NOTE: id may be explicitly provided by the caller when using this
                type of public key, but it MUST be a valid RFC3986 URI. If id is left
                blank, a default one will be computed based on the digest of the DER
                encoding of the public key.
              properties:
                - name: 'publicKeyPem'
                  type: String
                  description: |
                    A PEM-encoded public key, as described in
                    `https://tools.ietf.org/html/rfc7468#section-13`
                - name: 'signatureAlgorithm'
                  type: String
                  description: |
                    The signature algorithm used to verify a message against
                    a signature using this key. These signature algorithm must
                    match the structure and any object identifiers encoded in
                    publicKeyPem (i.e. this algorithm must match that of the
                    public key).
                  diff_suppress_func: 'CompareSignatureAlgorithm'
      - name: 'delegationServiceAccountEmail'
        type: String
        description: |
          This field will contain the service account email address that
          this Attestor will use as the principal when querying Container
          Analysis. Attestor administrators must grant this service account
          the IAM role needed to read attestations from the noteReference in
          Container Analysis (containeranalysis.notes.occurrences.viewer).
          This email address is fixed for the lifetime of the Attestor, but
          callers should not make any other assumptions about the service
          account email; future versions may use an email based on a
          different naming pattern.
        output: true
