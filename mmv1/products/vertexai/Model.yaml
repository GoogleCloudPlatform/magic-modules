# Copyright 2023 Google Inc.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

---
name: Model
base_url: projects/{{project}}/locations/{{region}}/models
create_url: 'projects/{{project}}/locations/{{region}}/modelsPRE_CREATE_REPLACE_ME'
delete_url: 'projects/{{project}}/locations/{{region}}/models/{{model_id}}'
self_link: 'projects/{{project}}/locations/{{region}}/models/{{model_id}}'

references:
  guides:
    'Official Documentation': 'https://cloud.google.com/vertex-ai/docs'
  api: 'https://cloud.google.com/vertex-ai/docs/reference/rest/v1/projects.locations.models'
description: |-
  A trained machine learning Model.
id_format: '{{name}}'
update_verb: 'PATCH'
exclude_import: true
async:
  actions: ['create', 'delete']
  type: 'OpAsync'
  operation:
    base_url: '{{op_id}}'
    path: 'name'
    wait_ms: 1000
  result:
    path: 'response'
    resource_inside_response: true
  error:
    path: 'error'
    message: 'message'
custom_diff:
  - 'vertexAiModelDiffSuppress'
custom_code:
  constants: templates/terraform/constants/vertex_ai_model.go.tmpl
  update_encoder: templates/terraform/update_encoder/vertex_ai_model.go.tmpl
  decoder: templates/terraform/decoders/vertex_ai_models.go.tmpl
  encoder: templates/terraform/encoders/vertex_ai_models.go.tmpl
  pre_create: templates/terraform/pre_create/vertex_ai_models.go.tmpl
  post_create: templates/terraform/post_create/vertex_ai_models.go.tmpl
examples:
  - name: 'vertex_ai_model_upload_basic'
    exclude_import_test: true
    primary_resource_id: 'model'
    vars:
      project_name: 'PROJECT_NAME'
      model_name: 'MODEL_NAME'
  - name: 'vertex_ai_model_source_basic_1'
    exclude_import_test: true
    primary_resource_id: 'model'
    vars:
    test_env_vars:
      project_name: 'PROJECT_NAME'
    exclude_test: true
  - name: 'vertex_ai_model_source_basic_2'
    exclude_import_test: true
    primary_resource_id: 'model'
    vars:
      model_id: 'test-model'
    test_env_vars:
      project_name: 'PROJECT_NAME'
    exclude_test: true
parameters:
  - type: String
    name: region
    description: The region of the Model. eg us-central1
    url_param_only: true
    immutable: true
    default_from_api: true
properties:
  - type: String
    name: 'name'
    description:
      The name of the Model. This value may be up to 60 characters, and
      valid characters are [a-z0-9_]. The first character cannot be a number.
    output: true
  - type: String
    name: 'description'
    description: Description of the Model.
    default_from_api: true
  - type: String
    name: 'versionId'
    description: The version ID of the Model.
    output: true
  - type: String
    name: 'versionCreateTime'
    output: true
    description: |
      The timestamp of when this version was created in RFC3339 UTC "Zulu" format, with nanosecond resolution and up to nine fractional digits.
  - type: String
    name: 'versionUpdateTime'
    output: true
    description: |
      The timestamp of when this version was created in RFC3339 UTC "Zulu" format, with nanosecond resolution and up to nine fractional digits.
  - type: String
    name: 'versionDescription'
    output: true
    description: |
      The description of this version
  - type: String
    name: 'metadataSchemaUri'
    ignore_read: true
    immutable: true
    description: |
      Points to a YAML file stored on Google Cloud Storage describing additional information about the Model, that is specific to it.
  - type: NestedObject
    name: 'predictSchemata'
    description: |
      The schemata that describe formats of the Model's predictions and explanations as given and returned via PredictionService.Predict and PredictionService.Explain.
    properties:
      - type: String
        name: instanceSchemaUri
        immutable: true
        description: |
          Points to a YAML file stored on Google Cloud Storage describing the format of a single instance, which are used in PredictRequest.instances, ExplainRequest.instances and BatchPredictionJob.input_config.
      - type: String
        name: parametersSchemaUri
        immutable: true
        description: |
          Points to a YAML file stored on Google Cloud Storage describing the parameters of prediction and explanation via PredictRequest.parameters, ExplainRequest.parameters and BatchPredictionJob.model_parameters.
      - type: String
        name: predictionSchemaUri
        immutable: true
        description: |
          Points to a YAML file stored on Google Cloud Storage describing the format of a single prediction produced by this Model, which are returned via PredictResponse.predictions, ExplainResponse.explanations, and BatchPredictionJob.output_config.
  - type: Array
    name: 'supportedExportFormats'
    output: true
    description: |
      The formats in which this Model may be exported. If empty, this Model is not available for export.
    item_type:
      type: NestedObject
      properties:
        - type: String
          name: id
          output: true
          description: |
            The ID of the export format.
        - type: Enum
          name: exportableContent
          immutable: true
          description: |
            The content of this Model that may be exported.
          enum_values:
            - :ARTIFACT
            - :IMAGE
  - type: String
    name: 'trainerPipeline'
    output: true
    description: |
      The resource name of the TrainingPipeline that uploaded this Model, if any.
  - type: String
    name: 'pipelineJob'
    description: |
      This field is populated if the model is produced by a pipeline job.
  - type: NestedObject
    name: 'containerSpec'
    default_from_api: true
    description: |
      The specification of the container that is to be used when deploying this Model.
    properties:
      - type: String
        name: 'imageUri'
        required: true
        immutable: true
        description: URI of the Docker image to be used as the custom container for serving predictions.
      - type: Array
        name: 'command'
        immutable: true
        description: Specifies the command that runs when the container starts. This overrides the container's ENTRYPOINT.
        item_type:
          type: String
      - type: Array
        name: 'args'
        immutable: true
        description: Specifies arguments for the command that runs when the container starts.
        item_type:
          type: String
      - type: Array
        name: 'env'
        immutable: true
        description: List of environment variables to set in the container.
        item_type:
          type: NestedObject
          properties:
            - type: String
              name: 'name'
              required: true
              description: name of the environment variable. Must be a valid C identifier.
            - type: String
              name: 'value'
              required: true
              description: Variables that reference a $(VAR_NAME) are expanded using the previous defined environment variables in the container and any service environment variables.
      - type: Array
        name: 'ports'
        immutable: true
        description: List of ports to expose from the container.
        item_type:
          type: NestedObject
          properties:
            - type: Integer
              name: 'containerPort'
              required: true
              description: The number of the port to expose on the pod's IP address. Must be a valid port number, between 1 and 65535 inclusive.
      - type: String
        name: 'predictRoute'
        immutable: true
        description: HTTP path on the container to send prediction requests to.
      - type: String
        name: 'healthRoute'
        immutable: true
        description: HTTP path on the container to send health checks to.
      - type: Array
        name: 'grpcPorts'
        immutable: true
        description: List of ports to expose from the container.
        item_type:
          type: NestedObject
          properties:
            - type: Integer
              name: 'containerPort'
              required: true
              description: The number of the port to expose on the pod's IP address. Must be a valid port number, between 1 and 65535 inclusive.
      - type: String
        name: 'deploymentTimeout'
        immutable: true
        description: Deployment timeout. Limit for deployment timeout is 2 hours.
      - type: String
        name: 'sharedMemorySizeMb'
        immutable: true
        description: The amount of the VM memory to reserve as the shared memory for the model in megabytes.
      - type: NestedObject
        name: 'startupProbe'
        immutable: true
        description: Specification for Kubernetes startup probe.
        properties:
          - type: Integer
            name: 'periodSeconds'
            immutable: true
            default_value: 10
            description: How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1. Must be less than timeoutSeconds.
          - type: Integer
            name: 'timeoutSeconds'
            immutable: true
            default_value: 1
            description: Number of seconds after which the probe times out. Defaults to 1 second. Minimum value is 1. Must be greater or equal to periodSeconds.
          - type: NestedObject
            name: 'exec'
            description: Number of seconds after which the probe times out. Defaults to 1 second. Minimum value is 1. Must be greater or equal to periodSeconds.
            properties:
              - type: Array
                name: 'command'
                description: Command is the command line to execute inside the container, the working directory for the command is root ('/') in the container's filesystem.
                item_type:
                  type: String
      - type: NestedObject
        name: 'healthProbe'
        immutable: true
        description: Specification for Kubernetes readiness probe.
        properties:
          - type: Integer
            name: 'periodSeconds'
            immutable: true
            default_value: 10
            description: How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1. Must be less than timeoutSeconds.
          - type: Integer
            name: 'timeoutSeconds'
            immutable: true
            default_value: 1
            description: Number of seconds after which the probe times out. Defaults to 1 second. Minimum value is 1. Must be greater or equal to periodSeconds.
          - type: NestedObject
            name: 'exec'
            description: Number of seconds after which the probe times out. Defaults to 1 second. Minimum value is 1. Must be greater or equal to periodSeconds.
            properties:
              - type: Array
                name: 'command'
                description: Command is the command line to execute inside the container, the working directory for the command is root ('/') in the container's filesystem.
                item_type:
                  type: String
  - type: String
    name: 'artifactUri'
    immutable: true
    default_from_api: true
    description: |
      The path to the directory containing the Model artifact and any of its supporting files.
  - type: String
    name: 'createTime'
    output: true
    description: |
      The timestamp of when the Model was created in RFC3339 UTC "Zulu" format, with nanosecond resolution and up to nine fractional digits.
  - type: String
    name: 'updateTime'
    output: true
    description: |
      The timestamp of when the MetadataStore was last updated in RFC3339 UTC "Zulu" format, with nanosecond resolution and up to nine fractional digits.
  - type: String
    name: 'modelName'
    default_from_api: true
    at_least_one_of:
      - modelName
      - sourceModel
    description:
      The display name of the Model. The name can be up to 128 characters long
      and can consist of any UTF-8 characters.
  - type: String
    name: 'etag'
    description: Used to perform consistent read-modify-write updates.
    output: true
    ignore_read: true
  - type: Array
    name: 'versionAliases'
    description:
      user provided version aliases so that a model version can be referenced via alias.
    ignore_read: true
    item_type:
      type: String
  - type: NestedObject
    name: 'encryptionSpec'
    immutable: true
    description: |
      Customer-managed encryption key spec for a MetadataStore. If set, this MetadataStore and all sub-resources of this MetadataStore will be secured by this key.
    properties:
      - type: String
        name: 'kmsKeyName'
        description: |
          Required. The Cloud KMS resource identifier of the customer managed encryption key used to protect a resource.
          Has the form: projects/my-project/locations/my-region/keyRings/my-kr/cryptoKeys/my-key. The key needs to be in the same region as where the resource is created.
        immutable: true
  - name: 'metadata'
    type: KeyValuePairs
    description: An additional information about the Model; the schema of the metadata can be found in metadataSchemaUri. Unset if the Model does not have any additional information.
  - type: String
    name: 'sourceModel'
    default_from_api: true
    at_least_one_of:
      - modelName
      - sourceModel
    description: |
      The resource name of the Model to copy. That Model must be in the same Project
  - type: String
    name: 'modelId'
    immutable: true
    ignore_read: true
    default_from_api: true
    # modelId is never returned from the API as a field, but we set its value from API-returned data when it's not
    # provided by the user as an input
    description: |
      Copy sourceModel into a new Model with this ID. The ID will become the final component of the model resource name.
