# Copyright 2024 Google Inc.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

--- !ruby/object:Api::Resource
name: 'EntryGroup'
base_url: 'projects/{{project}}/locations/{{location}}/entryGroups/{{entry_group_id}}'
self_link: 'projects/{{project}}/locations/{{location}}/entryGroups/{{entry_group_id}}'
create_url: 'projects/{{project}}/locations/{{location}}/entryGroups?entryGroupId={{entry_group_id}}'
update_verb: :PATCH
update_mask: true
description: |
  An Entry Group represents a logical grouping of one or more Entries.
import_format: ['projects/{{project}}/locations/{{location}}/entryGroups/{{entry_group_id}}']
async: !ruby/object:Api::OpAsync
  operation: !ruby/object:Api::OpAsync::Operation
    path: 'name'
    base_url: '{{op_id}}'
    wait_ms: 1000
    timeouts: !ruby/object:Api::Timeouts
      insert_minutes: 5
      update_minutes: 5
      delete_minutes: 5
  result: !ruby/object:Api::OpAsync::Result
    path: 'response'
  status: !ruby/object:Api::OpAsync::Status
    path: 'done'
    complete: true
    allowed:
      - true
      - false
  error: !ruby/object:Api::OpAsync::Error
    path: 'error'
    message: 'message'
autogen_async: true
iam_policy: !ruby/object:Api::Resource::IamPolicy
  skip_import_test: true
  method_name_separator: ':'
  fetch_iam_policy_verb: :GET
  parent_resource_attribute: 'entry_group_id'
  import_format:
    [
      'projects/{{project}}/locations/{{location}}/entryGroups/{{entry_group_id}}',
      '{{entry_group_id}}',
    ]
parameters:
  - !ruby/object:Api::Type::String
    name: 'location'
    url_param_only: true
    immutable: true
    description: |
      The location where entry group will be created in.
  - !ruby/object:Api::Type::String
    name: 'entryGroupId'
    url_param_only: true
    immutable: true
    description: |
      The entry group id of the entry group.
properties:
  - !ruby/object:Api::Type::String
    name: name
    description: |
      The relative resource name of the EntryGroup, of the form: projects/{project_number}/locations/{location_id}/entryGroups/{entry_group_id}
    output: true
  - !ruby/object:Api::Type::String
    name: 'uid'
    output: true
    description: |
      System generated globally unique ID for the EntryGroup. This ID will be different if the EntryGroup is deleted and re-created with the same name.
  - !ruby/object:Api::Type::Time
    name: 'createTime'
    output: true
    description: |
      The time when the EntryGroup was created.
  - !ruby/object:Api::Type::Time
    name: 'updateTime'
    output: true
    description: |
      The time when the EntryGroup was last updated.
  - !ruby/object:Api::Type::String
    name: 'description'
    description: |
      Description of the EntryGroup.
  - !ruby/object:Api::Type::String
    name: 'displayName'
    description: |
      User friendly display name.
  - !ruby/object:Api::Type::KeyValueLabels
    name: 'labels'
    description: |
      User-defined labels for the EntryGroup.
  - !ruby/object:Api::Type::Enum
    name: 'transferStatus'
    output: true
    description: |
      Denotes the transfer status of the Entry Group. It is unspecified
      for Entry Group created from Dataplex API.
    values:
      - :TRANSFER_STATUS_UNSPECIFIED
      - :TRANSFER_STATUS_MIGRATED
      - :TRANSFER_STATUS_TRANSFERRED
examples:
  - !ruby/object:Provider::Terraform::Examples
    name: 'dataplex_entry_group_basic'
    primary_resource_id: 'test_entry_group_basic'
    primary_resource_name: "fmt.Sprintf(\"tf-test-entry-group%s\",
      context[\"random_suffix\"\
      ])"
    test_env_vars:
      project_name: :PROJECT_NAME
    vars:
      entry_group_name: entry-group-basic
  - !ruby/object:Provider::Terraform::Examples
    name: 'dataplex_entry_group_full'
    primary_resource_id: 'test_entry_group_full'
    primary_resource_name: "fmt.Sprintf(\"tf-test-entry-group%s\",
      context[\"random_suffix\"\
      ])"
    test_env_vars:
      project_name: :PROJECT_NAME
    vars:
      entry_group_name: entry-group-full
