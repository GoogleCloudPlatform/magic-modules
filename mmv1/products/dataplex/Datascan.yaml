# Copyright 2023 Google Inc.
# Licensed under the Apache License, Version 2.0 (the License);
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

--- !ruby/object:Api::Resource
name: 'Datascan'
base_url: 'projects/{{project}}/locations/{{location}}/dataScans'
self_link: 'projects/{{project}}/locations/{{location}}/dataScans/{{data_scan_id}}'
create_url: 'projects/{{project}}/locations/{{location}}/dataScans?dataScanId={{data_scan_id}}'
update_verb: :PATCH
update_mask: true
import_format:
  [
    'projects/{{project}}/locations/{{location}}/dataScans/{{data_scan_id}}',
    '{{data_scan_id}}',
  ]
async: !ruby/object:Api::OpAsync
  operation: !ruby/object:Api::OpAsync::Operation
    path: 'name'
    base_url: '{{op_id}}'
    wait_ms: 1000
    timeouts: !ruby/object:Api::Timeouts
      insert_minutes: 5
      update_minutes: 5
      delete_minutes: 5
  result: !ruby/object:Api::OpAsync::Result
    path: 'response'
  status: !ruby/object:Api::OpAsync::Status
    path: 'done'
    complete: true
    allowed:
      - true
      - false
  error: !ruby/object:Api::OpAsync::Error
    path: 'error'
    message: 'message'
autogen_async: true
read_query_params: '?view=FULL'
description: |
  Represents a user-visible job which provides the insights for the related data source.
iam_policy: !ruby/object:Api::Resource::IamPolicy
  method_name_separator: ':'
  parent_resource_attribute: 'data_scan_id'
  fetch_iam_policy_verb: :GET
  import_format:
    [
      'projects/{{project}}/locations/{{location}}/dataScans/{{data_scan_id}}',
      '{{data_scan_id}}',
    ]
references: !ruby/object:Api::Resource::ReferenceLinks
  guides:
    'Official Documentation': 'https://cloud.google.com/dataplex/docs'
  api: 'https://cloud.google.com/dataplex/docs/reference/rest'
examples:
  - !ruby/object:Provider::Terraform::Examples
    name: 'dataplex_datascan_basic_profile'
    primary_resource_id: 'basic_profile'
    primary_resource_name:
      'fmt.Sprintf("tf-test-dataprofile-basic%s", context["random_suffix"])'
    test_env_vars:
      project_name: :PROJECT_NAME
    vars:
      datascan_name: dataprofile-basic
  - !ruby/object:Provider::Terraform::Examples
    name: 'dataplex_datascan_full_profile'
    primary_resource_id: 'full_profile'
    test_env_vars:
      project_name: :PROJECT_NAME
    vars:
      dataset_name: dataplex_dataset
      datascan_name: dataprofile-full
  - !ruby/object:Provider::Terraform::Examples
    name: 'dataplex_datascan_basic_quality'
    primary_resource_id: 'basic_quality'
    test_env_vars:
      project_name: :PROJECT_NAME
    vars:
      datascan_name: dataquality-basic
  - !ruby/object:Provider::Terraform::Examples
    name: 'dataplex_datascan_full_quality'
    primary_resource_id: 'full_quality'
    test_env_vars:
      project_name: :PROJECT_NAME
    vars:
      datascan_name: dataquality-full
parameters:
  - !ruby/object:Api::Type::String
    name: 'location'
    immutable: true
    required: true
    url_param_only: true
    description: |
      The location where the data scan should reside.
  - !ruby/object:Api::Type::String
    name: 'dataScanId'
    immutable: true
    required: true
    url_param_only: true
    description: |
      DataScan identifier. Must contain only lowercase letters, numbers and hyphens. Must start with a letter. Must end with a number or a letter.
properties:
  - !ruby/object:Api::Type::String
    name: 'name'
    output: true
    description: |
      The relative resource name of the scan, of the form: projects/{project}/locations/{locationId}/dataScans/{datascan_id}, where project refers to a project_id or project_number and locationId refers to a GCP region.
  - !ruby/object:Api::Type::String
    name: 'uid'
    output: true
    description: |
      System generated globally unique ID for the scan. This ID will be different if the scan is deleted and re-created with the same name.
  - !ruby/object:Api::Type::String
    name: 'description'
    description: |
      Description of the scan.
  - !ruby/object:Api::Type::String
    name: 'displayName'
    description: |
      User friendly display name.
  - !ruby/object:Api::Type::KeyValueLabels
    name: 'labels'
    description: |
      User-defined labels for the scan. A list of key->value pairs.
  - !ruby/object:Api::Type::Enum
    name: 'state'
    output: true
    description: |
      Current state of the DataScan.
    values:
      - :STATE_UNSPECIFIED
      - :ACTIVE
      - :CREATING
      - :DELETING
      - :ACTION_REQUIRED
  - !ruby/object:Api::Type::String
    name: 'createTime'
    output: true
    description: |
      The time when the scan was created.
  - !ruby/object:Api::Type::String
    name: 'updateTime'
    output: true
    description: |
      The time when the scan was last updated.
  - !ruby/object:Api::Type::NestedObject
    name: 'data'
    required: true
    immutable: true
    description: |
      The data source for DataScan.
    properties:
      - !ruby/object:Api::Type::String
        name: 'entity'
        immutable: true
        exactly_one_of:
          - data.0.entity
          - data.0.resource
        description: |
          The Dataplex entity that represents the data source(e.g. BigQuery table) for Datascan.
      - !ruby/object:Api::Type::String
        name: 'resource'
        immutable: true
        exactly_one_of:
          - data.0.entity
          - data.0.resource
        description: |
          The service-qualified full resource name of the cloud resource for a DataScan job to scan against. The field could be:
          (Cloud Storage bucket for DataDiscoveryScan)BigQuery table of type "TABLE" for DataProfileScan/DataQualityScan.
  - !ruby/object:Api::Type::NestedObject
    name: 'executionSpec'
    required: true
    description: |
      DataScan execution settings.
    properties:
      - !ruby/object:Api::Type::NestedObject
        name: 'trigger'
        required: true
        description: |
          Spec related to how often and when a scan should be triggered.
        properties:
          - !ruby/object:Api::Type::NestedObject
            name: 'onDemand'
            allow_empty_object: true
            send_empty_value: true
            exactly_one_of:
              - execution_spec.0.trigger.0.on_demand
              - execution_spec.0.trigger.0.schedule
            description: |
              The scan runs once via dataScans.run API.
            properties: []
          - !ruby/object:Api::Type::NestedObject
            name: 'schedule'
            description: |
              The scan is scheduled to run periodically.
            exactly_one_of:
              - execution_spec.0.trigger.0.on_demand
              - execution_spec.0.trigger.0.schedule
            properties:
              - !ruby/object:Api::Type::String
                name: 'cron'
                required: true
                description:
                  Cron schedule for running scans periodically. This field is
                  required for Schedule scans.
      - !ruby/object:Api::Type::String
        name: 'field'
        immutable: true
        description: |
          The unnested field (of type Date or Timestamp) that contains values which monotonically increase over time. If not specified, a data scan will run for all data in the table.
  - !ruby/object:Api::Type::NestedObject
    name: 'executionStatus'
    output: true
    description: |
      Status of the data scan execution.
    properties:
      - !ruby/object:Api::Type::String
        name: 'latestJobEndTime'
        output: true
        description: |
          The time when the latest DataScanJob started.
      - !ruby/object:Api::Type::String
        name: 'latestJobStartTime'
        output: true
        description: |
          The time when the latest DataScanJob ended.
  - !ruby/object:Api::Type::Enum
    name: 'type'
    output: true
    description: |
      The type of DataScan.
    values:
      - :DATA_SCAN_TYPE_UNSPECIFIED
      - :DATA_QUALITY
      - :DATA_PROFILE
  - !ruby/object:Api::Type::NestedObject
    name: 'dataQualitySpec'
    exactly_one_of:
      - data_quality_spec
      - data_profile_spec
    description: |
      DataQualityScan related setting.
    properties:
      - !ruby/object:Api::Type::Double
        name: 'samplingPercent'
        description: |
          The percentage of the records to be selected from the dataset for DataScan.
          Value can range between 0.0 and 100.0 with up to 3 significant decimal digits.
          Sampling is not applied if `sampling_percent` is not specified, 0 or 100.
      - !ruby/object:Api::Type::String
        name: 'rowFilter'
        description: |
          A filter applied to all rows in a single DataScan job. The filter needs to be a valid SQL expression for a WHERE clause in BigQuery standard SQL syntax. Example: col1 >= 0 AND col2 < 10
      - !ruby/object:Api::Type::NestedObject
        name: 'postScanActions'
        description: |
          Actions to take upon job completion.
        properties:
          - !ruby/object:Api::Type::NestedObject
            name: 'bigqueryExport'
            description: |
              If set, results will be exported to the provided BigQuery table.
            properties:
              - !ruby/object:Api::Type::String
                name: 'resultsTable'
                description: |
                  The BigQuery table to export DataQualityScan results to.
                  Format://bigquery.googleapis.com/projects/PROJECT_ID/datasets/DATASET_ID/tables/TABLE_ID
      - !ruby/object:Api::Type::Array
        name: 'rules'
        min_size: 1
        description: |
          The list of rules to evaluate against a data source. At least one rule is required.
        item_type: !ruby/object:Api::Type::NestedObject
          properties:
            - !ruby/object:Api::Type::String
              name: 'column'
              description: |
                The unnested column which this rule is evaluated against.
            - !ruby/object:Api::Type::Boolean
              name: 'ignoreNull'
              description: |
                Rows with null values will automatically fail a rule, unless ignoreNull is true. In that case, such null rows are trivially considered passing. Only applicable to ColumnMap rules.
            - !ruby/object:Api::Type::String
              name: 'dimension'
              required: true
              description: |
                The dimension a rule belongs to. Results are also aggregated at the dimension level. Supported dimensions are ["COMPLETENESS", "ACCURACY", "CONSISTENCY", "VALIDITY", "UNIQUENESS", "INTEGRITY"]
            - !ruby/object:Api::Type::Double
              name: 'threshold'
              description: |
                The minimum ratio of passing_rows / total_rows required to pass this rule, with a range of [0.0, 1.0]. 0 indicates default value (i.e. 1.0).
            - !ruby/object:Api::Type::String
              name: 'name'
              description: |
                A mutable name for the rule.
                The name must contain only letters (a-z, A-Z), numbers (0-9), or hyphens (-).
                The maximum length is 63 characters.
                Must start with a letter.
                Must end with a number or a letter.
            - !ruby/object:Api::Type::String
              name: 'description'
              description: |
                Description of the rule.
                The maximum length is 1,024 characters.
            - !ruby/object:Api::Type::NestedObject
              name: 'rangeExpectation'
              description: |
                ColumnMap rule which evaluates whether each column value lies between a specified range.
              properties:
                - !ruby/object:Api::Type::String
                  name: 'minValue'
                  description: |
                    The minimum column value allowed for a row to pass this validation. At least one of minValue and maxValue need to be provided.
                - !ruby/object:Api::Type::String
                  name: 'maxValue'
                  description: |
                    The maximum column value allowed for a row to pass this validation. At least one of minValue and maxValue need to be provided.
                - !ruby/object:Api::Type::Boolean
                  name: 'strictMinEnabled'
                  default_value: false
                  description: |
                    Whether each value needs to be strictly greater than ('>') the minimum, or if equality is allowed.
                    Only relevant if a minValue has been defined. Default = false.
                - !ruby/object:Api::Type::Boolean
                  name: 'strictMaxEnabled'
                  default_value: false
                  description: |
                    Whether each value needs to be strictly lesser than ('<') the maximum, or if equality is allowed.
                    Only relevant if a maxValue has been defined. Default = false.
            - !ruby/object:Api::Type::NestedObject
              name: 'nonNullExpectation'
              allow_empty_object: true
              send_empty_value: true
              description: |
                ColumnMap rule which evaluates whether each column value is null.
              properties: []
            - !ruby/object:Api::Type::NestedObject
              name: 'setExpectation'
              description: |
                ColumnMap rule which evaluates whether each column value is contained by a specified set.
              properties:
                - !ruby/object:Api::Type::Array
                  name: 'values'
                  required: true
                  description: |
                    Expected values for the column value.
                  item_type: Api::Type::String
            - !ruby/object:Api::Type::NestedObject
              name: 'regexExpectation'
              description: |
                ColumnMap rule which evaluates whether each column value matches a specified regex.
              properties:
                - !ruby/object:Api::Type::String
                  name: 'regex'
                  required: true
                  description: |
                    A regular expression the column value is expected to match.
            - !ruby/object:Api::Type::NestedObject
              name: 'uniquenessExpectation'
              allow_empty_object: true
              send_empty_value: true
              description: |
                Row-level rule which evaluates whether each column value is unique.
              properties: []
            - !ruby/object:Api::Type::NestedObject
              name: 'statisticRangeExpectation'
              description: |
                ColumnAggregate rule which evaluates whether the column aggregate statistic lies between a specified range.
              properties:
                - !ruby/object:Api::Type::Enum
                  name: 'statistic'
                  required: true
                  description: |
                    column statistics.
                  values:
                    - :STATISTIC_UNDEFINED
                    - :MEAN
                    - :MIN
                    - :MAX
                - !ruby/object:Api::Type::String
                  name: 'minValue'
                  description: |
                    The minimum column statistic value allowed for a row to pass this validation.
                    At least one of minValue and maxValue need to be provided.
                - !ruby/object:Api::Type::String
                  name: 'maxValue'
                  description: |
                    The maximum column statistic value allowed for a row to pass this validation.
                    At least one of minValue and maxValue need to be provided.
                - !ruby/object:Api::Type::Boolean
                  name: 'strictMinEnabled'
                  default_value: false
                  description: |
                    Whether column statistic needs to be strictly greater than ('>') the minimum, or if equality is allowed.
                    Only relevant if a minValue has been defined. Default = false.
                - !ruby/object:Api::Type::Boolean
                  name: 'strictMaxEnabled'
                  default_value: false
                  description: |
                    Whether column statistic needs to be strictly lesser than ('<') the maximum, or if equality is allowed.
                    Only relevant if a maxValue has been defined. Default = false.
            - !ruby/object:Api::Type::NestedObject
              name: 'rowConditionExpectation'
              description: |
                Table rule which evaluates whether each row passes the specified condition.
              properties:
                - !ruby/object:Api::Type::String
                  name: 'sqlExpression'
                  required: true
                  description: |
                    The SQL expression.
            - !ruby/object:Api::Type::NestedObject
              name: 'tableConditionExpectation'
              description: |
                Table rule which evaluates whether the provided expression is true.
              properties:
                - !ruby/object:Api::Type::String
                  name: 'sqlExpression'
                  required: true
                  description: |
                    The SQL expression.
  - !ruby/object:Api::Type::NestedObject
    name: 'dataProfileSpec'
    allow_empty_object: true
    send_empty_value: true
    exactly_one_of:
      - data_quality_spec
      - data_profile_spec
    description: |
      DataProfileScan related setting.
    properties:
      - !ruby/object:Api::Type::Double
        name: 'samplingPercent'
        description: |
          The percentage of the records to be selected from the dataset for DataScan.
          Value can range between 0.0 and 100.0 with up to 3 significant decimal digits.
          Sampling is not applied if `sampling_percent` is not specified, 0 or 100.
      - !ruby/object:Api::Type::String
        name: 'rowFilter'
        description: |
          A filter applied to all rows in a single DataScan job. The filter needs to be a valid SQL expression for a WHERE clause in BigQuery standard SQL syntax. Example: col1 >= 0 AND col2 < 10
      - !ruby/object:Api::Type::NestedObject
        name: 'postScanActions'
        description: |
          Actions to take upon job completion.
        properties:
          - !ruby/object:Api::Type::NestedObject
            name: 'bigqueryExport'
            description: |
              If set, results will be exported to the provided BigQuery table.
            properties:
              - !ruby/object:Api::Type::String
                name: 'resultsTable'
                description: |
                  The BigQuery table to export DataProfileScan results to.
                  Format://bigquery.googleapis.com/projects/PROJECT_ID/datasets/DATASET_ID/tables/TABLE_ID
      - !ruby/object:Api::Type::NestedObject
        name: 'includeFields'
        description: |
          The fields to include in data profile.
          If not specified, all fields at the time of profile scan job execution are included, except for ones listed in `exclude_fields`.
        properties:
          - !ruby/object:Api::Type::Array
            name: 'fieldNames'
            description: |
              Expected input is a list of fully qualified names of fields as in the schema.
              Only top-level field names for nested fields are supported.
              For instance, if 'x' is of nested field type, listing 'x' is supported but 'x.y.z' is not supported. Here 'y' and 'y.z' are nested fields of 'x'.
            item_type: Api::Type::String
      - !ruby/object:Api::Type::NestedObject
        name: 'excludeFields'
        description: |
          The fields to exclude from data profile.
          If specified, the fields will be excluded from data profile, regardless of `include_fields` value.
        properties:
          - !ruby/object:Api::Type::Array
            name: 'fieldNames'
            description: |
              Expected input is a list of fully qualified names of fields as in the schema.
              Only top-level field names for nested fields are supported.
              For instance, if 'x' is of nested field type, listing 'x' is supported but 'x.y.z' is not supported. Here 'y' and 'y.z' are nested fields of 'x'.
            item_type: Api::Type::String
