# Copyright 2024 Google Inc.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

--- !ruby/object:Api::Resource
name: 'AspectType'
base_url: 'projects/{{project}}/locations/{{location}}/aspectTypes/{{aspect_type_id}}'
self_link: 'projects/{{project}}/locations/{{location}}/aspectTypes/{{aspect_type_id}}'
create_url: 'projects/{{project}}/locations/{{location}}/aspectTypes?aspectTypeId={{aspect_type_id}}'
update_verb: :PATCH
update_mask: true
description: |
 An Aspect Type is a template for creating Aspects.
import_format: ['projects/{{project}}/locations/{{location}}/aspectTypes/{{aspect_type_id}}']
async: !ruby/object:Api::OpAsync
  operation: !ruby/object:Api::OpAsync::Operation
    path: 'name'
    base_url: '{{op_id}}'
    wait_ms: 1000
    timeouts: !ruby/object:Api::Timeouts
      insert_minutes: 5
      update_minutes: 5
      delete_minutes: 5
  result: !ruby/object:Api::OpAsync::Result
    path: 'response'
  status: !ruby/object:Api::OpAsync::Status
    path: 'done'
    complete: true
    allowed:
      - true
      - false
  error: !ruby/object:Api::OpAsync::Error
    path: 'error'
    message: 'message'
autogen_async: true
iam_policy: !ruby/object:Api::Resource::IamPolicy
  skip_import_test: true
  method_name_separator: ':'
  fetch_iam_policy_verb: :GET
  parent_resource_attribute: 'aspect_type_id'
  import_format:
    [
      'projects/{{project}}/locations/{{location}}/aspectTypes/{{aspect_type_id}}',
      '{{aspect_type_id}}',
    ]
parameters:
  - !ruby/object:Api::Type::String
    name: 'location'
    url_param_only: true
    immutable: true
    description: |
      The location where aspect type will be created in.
  - !ruby/object:Api::Type::String
    name: 'aspectTypeId'
    url_param_only: true
    immutable: true
    description: |
      The aspect type id of the aspect type.
properties:
  - !ruby/object:Api::Type::String
    name: name
    description: |
      The relative resource name of the AspectType, of the form: projects/{project_number}/locations/{location_id}/aspectTypes/{aspect_type_id}
    output: true
  - !ruby/object:Api::Type::String
    name: 'uid'
    output: true
    description: |
      System generated globally unique ID for the AspectType. This ID will be different if the AspectType is deleted and re-created with the same name.
  - !ruby/object:Api::Type::Time
    name: 'createTime'
    output: true
    description: |
      The time when the AspectType was created.
  - !ruby/object:Api::Type::Time
    name: 'updateTime'
    output: true
    description: |
      The time when the AspectType was last updated.
  - !ruby/object:Api::Type::String
    name: 'description'
    description: |
      Description of the AspectType.
  - !ruby/object:Api::Type::String
    name: 'displayName'
    description: |
      User friendly display name.
  - !ruby/object:Api::Type::KeyValueLabels
    name: 'labels'
    description: |
      User-defined labels for the AspectType.
  - !ruby/object:Api::Type::String
    name: 'metadataTemplate'
    description: |
      MetadataTemplate of the Aspect.
    custom_expand: 'templates/terraform/custom_expand/json_schema.erb'
    custom_flatten: 'templates/terraform/custom_flatten/json_schema.erb'
    state_func:
      'func(v interface{}) string { s, _ := structure.NormalizeJsonString(v);
      return s }'
    validation: !ruby/object:Provider::Terraform::Validation
      function: 'validation.StringIsJSON'
  - !ruby/object:Api::Type::Enum
    name: 'transferStatus'
    output: true
    description: |
      Denotes the transfer status of the Aspect Type. It is unspecified
      for Aspect Type created from Dataplex API.
    values:
      - :TRANSFER_STATUS_UNSPECIFIED
      - :TRANSFER_STATUS_MIGRATED
      - :TRANSFER_STATUS_TRANSFERRED
examples:
  - !ruby/object:Provider::Terraform::Examples
    name: 'dataplex_aspect_type_basic'
    primary_resource_id: 'test_aspect_type_basic'
    primary_resource_name: "fmt.Sprintf(\"tf-test-aspect-type%s\",
      context[\"random_suffix\"\
      ])"
    test_env_vars:
      project_name: :PROJECT_NAME
    vars:
      aspect_type_name: aspect-type-basic
  - !ruby/object:Provider::Terraform::Examples
    name: 'dataplex_aspect_type_full'
    primary_resource_id: 'test_aspect_type_full'
    primary_resource_name: "fmt.Sprintf(\"tf-test-aspect-type%s\",
      context[\"random_suffix\"\
      ])"
    test_env_vars:
      project_name: :PROJECT_NAME
    vars:
      aspect_type_name: aspect-type-full
