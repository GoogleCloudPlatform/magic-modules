# Copyright 2024 Google Inc.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# Warning: This is a temporary file, and should not be edited directly
---
name: 'AuthorizationPolicy'
description: |
  AuthorizationPolicy is a resource that specifies how a server should authorize incoming connections. This resource in itself does not change the configuration unless it's attached to a target https proxy or endpoint config selector resource.
min_version: 'beta'
references:
  guides:
  api: 'https://cloud.google.com/traffic-director/docs/reference/network-security/rest/v1beta1/projects.locations.authorizationPolicies'
docs:
base_url: 'projects/{{project}}/locations/{{location}}/authorizationPolicies'
create_url: 'projects/{{project}}/locations/{{location}}/authorizationPolicies?authorizationPolicyId={{name}}'
update_verb: 'PATCH'
update_mask: true
import_format:
  - 'projects/{{project}}/locations/{{location}}/authorizationPolicies/{{name}}'
timeouts:
  insert_minutes: 30
  update_minutes: 30
  delete_minutes: 30
autogen_async: true
async:
  actions: ['create', 'delete', 'update']
  type: 'OpAsync'
  operation:
    base_url: '{{op_id}}'
    path: 'name'
    wait_ms: 1000
    timeouts:
      insert_minutes: 30
      update_minutes: 30
      delete_minutes: 30
  result:
    path: 'response'
    resource_inside_response: false
  error:
    path: 'error'
    message: 'message'
custom_code:
examples:
  - name: 'network_security_authorization_policy_basic'
    primary_resource_id: 'default'
    min_version: 'beta'
    vars:
      resource_name: 'my-authorization-policy'
  - name: 'network_security_authorization_policy_destinations'
    primary_resource_id: 'default'
    min_version: 'beta'
    vars:
      resource_name: 'my-authorization-policy'
parameters:
  - name: 'name'
    type: String
    description: |
      Name of the AuthorizationPolicy resource.
    min_version: 'beta'
    url_param_only: true
    required: true
    immutable: true
  - name: 'location'
    type: String
    description: |
      The location of the authorization policy.
      The default value is `global`.
    min_version: 'beta'
    url_param_only: true
    default_value: "global"
properties:
  - name: 'createTime'
    type: Time
    description: |
      Time the AuthorizationPolicy was created in UTC.
    min_version: 'beta'
    output: true
  - name: 'updateTime'
    type: Time
    description: |
      Time the AuthorizationPolicy was updated in UTC.
    min_version: 'beta'
    output: true
  - name: 'labels'
    type: KeyValueLabels
    description:
      Set of label tags associated with the AuthorizationPolicy resource.
    min_version: 'beta'
  - name: 'description'
    type: String
    description: |
      A free-text description of the resource. Max length 1024 characters.
    min_version: 'beta'
  - name: 'action'
    type: Enum
    description: |
      The action to take when a rule match is found. Possible values are "ALLOW" or "DENY".
    min_version: 'beta'
    required: true
    enum_values:
      - 'ALLOW'
      - 'DENY'
  - name: 'rules'
    type: Array
    description: |
      List of rules to match. Note that at least one of the rules must match in order for the action specified in the 'action' field to be taken.
      A rule is a match if there is a matching source and destination. If left blank, the action specified in the action field will be applied on every request.
    min_version: 'beta'
    item_type:
      type: NestedObject
      properties:
        - name: 'sources'
          type: Array
          description: |
            List of attributes for the traffic source. All of the sources must match. A source is a match if both principals and ipBlocks match.
            If not set, the action specified in the 'action' field will be applied without any rule checks for the source.
          min_version: 'beta'
          item_type:
            type: NestedObject
            properties:
              - name: 'principals'
                type: Array
                description: |
                  List of peer identities to match for authorization. At least one principal should match. Each peer can be an exact match, or a prefix match (example, "namespace/*") or a suffix match (example, "*/service-account") or a presence match "*".
                  Authorization based on the principal name without certificate validation (configured by ServerTlsPolicy resource) is considered insecure.
                min_version: 'beta'
                item_type:
                  type: String
              - name: 'ipBlocks'
                type: Array
                description: |
                  List of CIDR ranges to match based on source IP address. At least one IP block should match. Single IP (e.g., "1.2.3.4") and CIDR (e.g., "1.2.3.0/24") are supported. Authorization based on source IP alone should be avoided.
                  The IP addresses of any load balancers or proxies should be considered untrusted.
                min_version: 'beta'
                item_type:
                  type: String
        - name: 'destinations'
          type: Array
          description: |
            List of attributes for the traffic destination. All of the destinations must match. A destination is a match if a request matches all the specified hosts, ports, methods and headers.
            If not set, the action specified in the 'action' field will be applied without any rule checks for the destination.
          min_version: 'beta'
          item_type:
            type: NestedObject
            properties:
              - name: 'hosts'
                type: Array
                description: |
                  List of host names to match. Matched against the ":authority" header in http requests. At least one host should match. Each host can be an exact match, or a prefix match (example "mydomain.*") or a suffix match (example "*.myorg.com") or a presence (any) match "*".
                min_version: 'beta'
                required: true
                item_type:
                  type: String
              - name: 'ports'
                type: Array
                description: |
                  List of destination ports to match. At least one port should match.
                min_version: 'beta'
                required: true
                item_type:
                  type: Integer
              - name: 'methods'
                type: Array
                description: |
                  A list of HTTP methods to match. At least one method should match. Should not be set for gRPC services.
                min_version: 'beta'
                required: true
                item_type:
                  type: String
              - name: 'httpHeaderMatch'
                type: NestedObject
                description: |
                  Match against key:value pair in http header. Provides a flexible match based on HTTP headers, for potentially advanced use cases. At least one header should match.
                  Avoid using header matches to make authorization decisions unless there is a strong guarantee that requests arrive through a trusted client or proxy.
                min_version: 'beta'
                properties:
                  - name: 'headerName'
                    type: String
                    description: |
                      The name of the HTTP header to match. For matching against the HTTP request's authority, use a headerMatch with the header name ":authority". For matching a request's method, use the headerName ":method".
                    min_version: 'beta'
                    required: true
                  - name: 'regexMatch'
                    type: String
                    description: |
                      The value of the header must match the regular expression specified in regexMatch. For regular expression grammar, please see: en.cppreference.com/w/cpp/regex/ecmascript For matching against a port specified in the HTTP request, use a headerMatch with headerName set to Host and a regular expression that satisfies the RFC2616 Host header's port specifier.
                    min_version: 'beta'
                    required: true
