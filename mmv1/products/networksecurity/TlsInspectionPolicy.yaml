# Copyright 2021 Google Inc.
# Licensed under the Apache License, Version 2.0 (the 'License');
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an 'AS IS' BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

--- !ruby/object:Api::Resource
name: 'TlsInspectionPolicy'
base_url: 'projects/{{project}}/locations/{{location}}/tlsInspectionPolicies'
create_url: 'projects/{{project}}/locations/{{location}}/tlsInspectionPolicies?tlsInspectionPolicyId={{name}}'
self_link: 'projects/{{project}}/locations/{{location}}/tlsInspectionPolicies/{{name}}'
update_verb: :PATCH
update_mask: true
description:
  'The TlsInspectionPolicy resource contains references to CA pools in
  Certificate Authority Service and associated metadata.'
references: !ruby/object:Api::Resource::ReferenceLinks
  api: 'https://cloud.google.com/secure-web-proxy/docs/reference/network-security/rest/v1/projects.locations.tlsInspectionPolicies'
  guides:
    'Use TlsInspectionPolicy': 'https://cloud.google.com/secure-web-proxy/docs/tls-inspection-overview'
async: !ruby/object:Api::OpAsync
  operation: !ruby/object:Api::OpAsync::Operation
    path: 'name'
    base_url: '{{op_id}}'
    wait_ms: 1000
    timeouts: !ruby/object:Api::Timeouts
      insert_minutes: 30
      update_minutes: 30
      delete_minutes: 30
  result: !ruby/object:Api::OpAsync::Result
    path: 'response'
  status: !ruby/object:Api::OpAsync::Status
    path: 'done'
    complete: true
    allowed:
      - true
      - false
  error: !ruby/object:Api::OpAsync::Error
    path: 'error'
    message: 'message'
autogen_async: true
import_format:
  ['projects/{{project}}/locations/{{location}}/tlsInspectionPolicies/{{name}}']
examples:
  - !ruby/object:Provider::Terraform::Examples
    name: 'network_security_tls_inspection_policy_basic'
    primary_resource_id: 'default'
    vars:
      resource_name: 'my-tls-inspection-policy'
      privateca_ca_pool_name: 'my-basic-ca-pool'
      privateca_certificate_authority_id: 'my-basic-certificate-authority'
  - !ruby/object:Provider::Terraform::Examples
    min_version: beta
    name: 'network_security_tls_inspection_policy_custom'
    primary_resource_id: 'default'
    vars:
      resource_name: 'my-tls-inspection-policy'
      privateca_ca_pool_name: 'my-basic-ca-pool'
      privateca_certificate_authority_id: 'my-basic-certificate-authority'
      trust_config_name: 'my-trust-config'
parameters:
  - !ruby/object:Api::Type::String
    name: 'name'
    required: true
    url_param_only: true
    description: |
      Short name of the TlsInspectionPolicy resource to be created.
  - !ruby/object:Api::Type::String
    name: 'location'
    description: |
      The location of the tls inspection policy.
    url_param_only: true
properties:
  - !ruby/object:Api::Type::Time
    name: 'createTime'
    description: |
      The timestamp when the resource was created.
    output: true
  - !ruby/object:Api::Type::Time
    name: 'updateTime'
    description: |
      The timestamp when the resource was updated.
    output: true
  - !ruby/object:Api::Type::String
    name: 'description'
    description: |
      Free-text description of the resource.
  - !ruby/object:Api::Type::String
    name: 'caPool'
    required: true
    description: |
      A CA pool resource used to issue interception certificates.
  - !ruby/object:Api::Type::String
    name: 'trustConfig'
    description: |
      A TrustConfig resource used when making a connection to the TLS server. This is a relative resource path following the form \"projects/{project}/locations/{location}/trustConfigs/{trust_config}\". This is necessary to intercept TLS connections to servers with certificates signed by a private CA or self-signed certificates. Trust config and the TLS inspection policy must be in the same region. Note that Secure Web Proxy does not yet honor this field.
    diff_suppress_func: 'tpgresource.ProjectNumberDiffSuppress'
  - !ruby/object:Api::Type::Enum
    name: 'minTlsVersion'
    description: |
      Minimum TLS version that the firewall should use when negotiating connections with both clients and servers. If this is not set, then the default value is to allow the broadest set of clients and servers (TLS 1.0 or higher). Setting this to more restrictive values may improve security, but may also prevent the firewall from connecting to some clients or servers. Note that Secure Web Proxy does not yet honor this field.
    values:
      - :TLS_VERSION_UNSPECIFIED
      - :TLS_1_0
      - :TLS_1_1
      - :TLS_1_2
      - :TLS_1_3
  - !ruby/object:Api::Type::Enum
    name: 'tlsFeatureProfile'
    description: |
      The selected Profile. If this is not set, then the default value is to allow the broadest set of clients and servers (\"PROFILE_COMPATIBLE\"). Setting this to more restrictive values may improve security, but may also prevent the TLS inspection proxy from connecting to some clients or servers. Note that Secure Web Proxy does not yet honor this field.
    values:
      - :PROFILE_UNSPECIFIED
      - :PROFILE_COMPATIBLE
      - :PROFILE_MODERN
      - :PROFILE_RESTRICTED
      - :PROFILE_CUSTOM
  - !ruby/object:Api::Type::Array
    name: 'customTlsFeatures'
    description: |
      List of custom TLS cipher suites selected. This field is valid only if the selected tls_feature_profile is CUSTOM. The compute.SslPoliciesService.ListAvailableFeatures method returns the set of features that can be specified in this list. Note that Secure Web Proxy does not yet honor this field.
    item_type: Api::Type::String
  - !ruby/object:Api::Type::Boolean
    name: 'excludePublicCaSet'
    description: |
      If FALSE (the default), use our default set of public CAs in addition to any CAs specified in trustConfig. These public CAs are currently based on the Mozilla Root Program and are subject to change over time. If TRUE, do not accept our default set of public CAs. Only CAs specified in trustConfig will be accepted.
