# Copyright 2023 Google Inc.
# Licensed under the Apache License, Version 2.0 (the 'License');
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an 'AS IS' BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

--- !ruby/object:Api::Resource
name: 'InternalRange'
base_url: 'projects/{{project}}/locations/global/internalRanges'
create_url: 'projects/{{project}}/locations/global/internalRanges?internalRangeId={{name}}'
self_link: 'projects/{{project}}/locations/global/internalRanges/{{name}}'
update_verb: :PATCH
update_mask: true
description:
  'The internal range resource for IPAM operations within a VPC network. Used to represent a private address range along with behavioral characterstics of that range (its usage and peering behavior). Networking resources can link to this range if they are created as belonging to it.'
references: !ruby/object:Api::Resource::ReferenceLinks
  api: 'https://cloud.google.com/network-connectivity/docs/reference/networkconnectivity/rest/v1/projects.locations.internalRanges'
  guides:
    'Use internal ranges': 'https://cloud.google.com/vpc/docs/create-use-internal-ranges'
async: !ruby/object:Api::OpAsync
  operation: !ruby/object:Api::OpAsync::Operation
    path: 'name'
    base_url: '{{op_id}}'
    wait_ms: 1000
    timeouts: !ruby/object:Api::Timeouts
      insert_minutes: 30
      update_minutes: 30
      delete_minutes: 30
  result: !ruby/object:Api::OpAsync::Result
    path: 'response'
  status: !ruby/object:Api::OpAsync::Status
    path: 'done'
    complete: true
    allowed:
      - true
      - false
  error: !ruby/object:Api::OpAsync::Error
    path: 'error'
    message: 'message'
autogen_async: true
import_format:
  [
    "projects/{{project}}/locations/global/internalRanges/{{name}}",
  ]
examples:
  - !ruby/object:Provider::Terraform::Examples
    name: 'network_connectivity_internal_ranges_basic'
    primary_resource_id: 'default'
    vars:
      internal_range_name: "basic"
      network_name: "internal-ranges"
  - !ruby/object:Provider::Terraform::Examples
    name: 'network_connectivity_internal_ranges_automatic_reservation'
    primary_resource_id: 'default'
    vars:
      internal_range_name: "automatic-reservation"
      network_name: "internal-ranges"
  - !ruby/object:Provider::Terraform::Examples
    name: 'network_connectivity_internal_ranges_external_ranges'
    primary_resource_id: 'default'
    vars:
      internal_range_name: "external-ranges"
      network_name: "internal-ranges"
  - !ruby/object:Provider::Terraform::Examples
    name: 'network_connectivity_internal_ranges_reserve_with_overlap'
    primary_resource_id: 'default'
    vars:
      internal_range_name: "overlap-range"
      network_name: "internal-ranges"
properties:
  - !ruby/object:Api::Type::String
    name: 'name'
    required: true
    immutable: true
    url_param_only: true
    description: |
      The name of the policy based route.
  - !ruby/object:Api::Type::KeyValueLabels
    name: 'labels'
    description: |
      User-defined labels.
  - !ruby/object:Api::Type::String
    name: 'description'
    description: |
      An optional description of this resource.
  - !ruby/object:Api::Type::String
    name: 'ipCidrRange'
    default_from_api: true
    description: |
      The IP range that this internal range defines.
  - !ruby/object:Api::Type::ResourceRef
    name: 'network'
    resource: 'Network'
    imports: 'selfLink'
    required: true
    description: |
      Fully-qualified URL of the network that this route applies to, for example: projects/my-project/global/networks/my-network.
  - !ruby/object:Api::Type::Enum
    name: 'usage'
    required: true
    description: |
      The type of usage set for this InternalRange.
    values:
      - :FOR_VPC
      - :EXTERNAL_TO_VPC
  - !ruby/object:Api::Type::Enum
    name: 'peering'
    required: true
    description: |
      The type of peering set for this internal range.
    values:
      - :FOR_SELF
      - :FOR_PEER
      - :NOT_SHARED
  - !ruby/object:Api::Type::Integer
    name: 'prefixLength'
    description: |
      An alternate to ipCidrRange. Can be set when trying to create a reservation that automatically finds a free range of the given size.
      If both ipCidrRange and prefixLength are set, there is an error if the range sizes do not match. Can also be used during updates to change the range size.
  - !ruby/object:Api::Type::Array
    name: 'targetCidrRange'
    item_type: Api::Type::String
    description: |
      Optional. Can be set to narrow down or pick a different address space while searching for a free range.
      If not set, defaults to the "10.0.0.0/8" address space. This can be used to search in other rfc-1918 address spaces like "172.16.0.0/12" and "192.168.0.0/16" or non-rfc-1918 address spaces used in the VPC.
  - !ruby/object:Api::Type::Array
    name: 'users'
    item_type: Api::Type::String
    output: true
    description: |
      Output only. The list of resources that refer to this internal range.
      Resources that use the internal range for their range allocation are referred to as users of the range.
      Other resources mark themselves as users while doing so by creating a reference to this internal range. Having a user, based on this reference, prevents deletion of the internal range referred to. Can be empty.
  - !ruby/object:Api::Type::Array
    name: 'overlaps'
    description: |
      Optional. Types of resources that are allowed to overlap with the current internal range.
    item_type: !ruby/object:Api::Type::Enum
      name: 'undefined'
      description: |
        Overlap settings.
      values:
        - :OVERLAP_ROUTE_RANGE
        - :OVERLAP_EXISTING_SUBNET_RANGE
