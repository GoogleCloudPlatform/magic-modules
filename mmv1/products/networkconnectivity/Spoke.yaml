# Copyright 2024 Google Inc.
# Licensed under the Apache License, Version 2.0 (the License);
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
--- !ruby/object:Api::Resource
name: Spoke
base_url: projects/{{project}}/locations/{{location}}/spokes
create_url: projects/{{project}}/locations/{{location}}/spokes?spokeId={{name}}
self_link: projects/{{project}}/locations/{{location}}/spokes/{{name}}
update_verb: :PATCH
update_mask: true
legacy_long_form_project: true
references: !ruby/object:Api::Resource::ReferenceLinks
  guides:
    'Official Documentation': 'https://cloud.google.com/network-connectivity/docs/network-connectivity-center/concepts/overview'
  api: 'https://cloud.google.com/network-connectivity/docs/reference/networkconnectivity/rest/v1beta/projects.locations.spokes'
async: !ruby/object:Api::OpAsync
  operation: !ruby/object:Api::OpAsync::Operation
    path: 'name'
    base_url: '{{op_id}}'
    wait_ms: 1000
  result: !ruby/object:Api::OpAsync::Result
    path: 'targetLink'
  status: !ruby/object:Api::OpAsync::Status
    path: 'status'
    complete: 'DONE'
    allowed:
      - 'PENDING'
      - 'RUNNING'
      - 'DONE'
  error: !ruby/object:Api::OpAsync::Error
    path: 'error/errors'
    message: 'message'
examples:
  - !ruby/object:Provider::Terraform::Examples
    name: 'network_connectivity_spoke_linked_vpc_network_basic'
    primary_resource_id: 'primary'
    vars:
      network_name: "net"
      hub_name: "hub1"
      spoke_name: "spoke1"
  - !ruby/object:Provider::Terraform::Examples
    name: 'network_connectivity_spoke_router_appliance_basic'
    primary_resource_id: 'primary'
    vars:
      network_name: "basic-network"
      subnetwork_name: "basic-subnetwork"
      instance_name: "basic-instance"
      hub_name: "basic-hub1"
      spoke_name: "basic-spoke"
  - !ruby/object:Provider::Terraform::Examples
    name: 'network_connectivity_spoke_vpn_tunnel_basic'
    primary_resource_id: 'tunnel1'
    vars:
      network_name: "basic-network"
      subnetwork_name: "basic-subnetwork"
      gateway_name: "vpn-gateway"
      external_gateway_name: "external-vpn-gateway"
      router_name: "external-vpn-gateway"
      vpn_tunnel_1_name: "tunnel1"
      vpn_tunnel_2_name: "tunnel2"
      router_interface_1_name: "router-interface1"
      router_peer_1_name: "router-peer1"
      router_interface_2_name: "router-interface2"
      router_peer_2_name: "router-peer2"
      hub_name: "basic-hub1"
      vpn_tunnel_1_spoke_name: "vpn-tunnel-1-spoke"
      vpn_tunnel_2_spoke_name: "vpn-tunnel-2-spoke"
  - !ruby/object:Provider::Terraform::Examples
    name: 'network_connectivity_spoke_interconnect_attachment_basic'
    primary_resource_id: 'primary'
    vars:
      hub_name: "basic-hub1"
      network_name: "basic-network"
      router_name: "external-vpn-gateway"
      interconnect_attachment_name: "partner-interconnect1"
      interconnect_attachment_spoke_name: "interconnect-attachment-spoke"
description: "The NetworkConnectivity Spoke resource"
parameters:
  - !ruby/object:Api::Type::String
    name: location
    description: The location for the resource
    url_param_only: true
    required: true
    immutable: true
properties:
  - !ruby/object:Api::Type::String
    name: name
    description: Immutable. The name of the spoke. Spoke names must be unique.
    diff_suppress_func: 'tpgresource.CompareSelfLinkOrResourceName'
    required: true
    immutable: true
  - !ruby/object:Api::Type::String
    name: createTime
    description: Output only. The time the spoke was created.
    output: true
  - !ruby/object:Api::Type::String
    name: updateTime
    description: Output only. The time the spoke was last updated.
    output: true
  - !ruby/object:Api::Type::KeyValueLabels
    name: labels
    description: Optional labels in key:value format. For more information about labels, see [Requirements for labels](https://cloud.google.com/resource-manager/docs/creating-managing-labels#requirements).
  - !ruby/object:Api::Type::String
    name: description
    description: An optional description of the spoke.
  - !ruby/object:Api::Type::ResourceRef
    name: hub
    resource: hub
    imports: name
    description: Immutable. The URI of the hub that this spoke is attached to.
    required: true
    immutable: true
  - !ruby/object:Api::Type::NestedObject
    name: linkedVpnTunnels
    description: The URIs of linked VPN tunnel resources
    immutable: true
    conflicts:
      - linked_interconnect_attachments
      - linked_router_appliance_instances
      - linked_vpc_network
    properties:
      - !ruby/object:Api::Type::Array
        name: uris
        description: The URIs of linked VPN tunnel resources.
        min_version: ga
        required: true
        immutable: true
        item_type: Api::Type::String
      - !ruby/object:Api::Type::Boolean
        name: siteToSiteDataTransfer
        description: A value that controls whether site-to-site data transfer is enabled for these resources. Note that data transfer is available only in supported locations.
        min_version: ga
        required: true
        immutable: true
      - !ruby/object:Api::Type::Array
        name: includeImportRanges
        description: |
          IP ranges allowed to be included during import from hub (does not control transit connectivity).
          The only allowed value for now is "ALL_IPV4_RANGES".
        item_type: Api::Type::String
  - !ruby/object:Api::Type::NestedObject
    name: linkedInterconnectAttachments
    description: A collection of VLAN attachment resources. These resources should be redundant attachments that all advertise the same prefixes to Google Cloud. Alternatively, in active/passive configurations, all attachments should be capable of advertising the same prefixes.
    immutable: true
    conflicts:
      - linked_vpn_tunnels
      - linked_router_appliance_instances
      - linked_vpc_network
    properties:
      - !ruby/object:Api::Type::Array
        name: uris
        description: The URIs of linked interconnect attachment resources
        min_version: ga
        required: true
        immutable: true
        item_type: Api::Type::String
      - !ruby/object:Api::Type::Boolean
        name: siteToSiteDataTransfer
        description: A value that controls whether site-to-site data transfer is enabled for these resources. Note that data transfer is available only in supported locations.
        min_version: ga
        required: true
        immutable: true
      - !ruby/object:Api::Type::Array
        name: includeImportRanges
        description: |
          IP ranges allowed to be included during import from hub (does not control transit connectivity).
          The only allowed value for now is "ALL_IPV4_RANGES".
        item_type: Api::Type::String
  - !ruby/object:Api::Type::NestedObject
    name: linkedRouterApplianceInstances
    description: The URIs of linked Router appliance resources
    immutable: true
    conflicts:
      - linked_interconnect_attachments
      - linked_vpn_tunnels
      - linked_vpc_network
    properties:
      - !ruby/object:Api::Type::Array
        name: instances
        description: The list of router appliance instances
        min_version: ga
        required: true
        immutable: true
        item_type: !ruby/object:Api::Type::NestedObject
          name: instance
          description: The list of router appliance instances
          properties:
            - !ruby/object:Api::Type::String
              name: virtualMachine
              description: The URI of the virtual machine resource
              min_version: ga
              diff_suppress_func: 'tpgresource.CompareSelfLinkOrResourceName'
              immutable: true
            - !ruby/object:Api::Type::String
              name: ipAddress
              description: The IP address on the VM to use for peering.
              min_version: ga
              immutable: true
      - !ruby/object:Api::Type::Boolean
        name: siteToSiteDataTransfer
        description: A value that controls whether site-to-site data transfer is enabled for these resources. Note that data transfer is available only in supported locations.
        min_version: ga
        required: true
        immutable: true
      - !ruby/object:Api::Type::Array
        name: includeImportRanges
        description: |
          IP ranges allowed to be included during import from hub (does not control transit connectivity).
          The only allowed value for now is "ALL_IPV4_RANGES".
        item_type: Api::Type::String
  - !ruby/object:Api::Type::NestedObject
    name: linkedVpcNetwork
    description: VPC network that is associated with the spoke.
    immutable: true
    conflicts:
      - linked_interconnect_attachments
      - linked_router_appliance_instances
      - linked_vpn_tunnels
    properties:
      - !ruby/object:Api::Type::String
        name: uri
        description: The URI of the VPC network resource.
        min_version: ga
        diff_suppress_func: 'tpgresource.CompareSelfLinkOrResourceName'
        required: true
        immutable: true
      - !ruby/object:Api::Type::Array
        name: excludeExportRanges
        description: IP ranges encompassing the subnets to be excluded from peering.
        min_version: ga
        immutable: true
        item_type: Api::Type::String
      - !ruby/object:Api::Type::Array
        name: includeExportRanges
        description: IP ranges allowed to be included from peering.
        min_version: ga
        immutable: true
        item_type: Api::Type::String
  - !ruby/object:Api::Type::String
    name: uniqueId
    description: Output only. The Google-generated UUID for the spoke. This value is unique across all spoke resources. If a spoke is deleted and another with the same name is created, the new spoke is assigned a different unique_id.
    output: true
  - !ruby/object:Api::Type::String
    name: state
    description: Output only. The current lifecycle state of this spoke.
    output: true
    exactly_one_of:
      - STATE_UNSPECIFIED
      - CREATING
      - ACTIVE
      - DELETING
    default_value: null
