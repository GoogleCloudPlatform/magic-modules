# Copyright 2024 Google Inc.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# Warning: This is a temporary file, and should not be edited directly
---
name: 'Cluster'
description: |
  Cluster contains information about a Google Distributed Cloud Edge Kubernetes cluster.
references:
  guides:
    'Create and manage clusters': 'https://cloud.google.com/distributed-cloud/edge/latest/docs/clusters'
  api: 'https://cloud.google.com/distributed-cloud/edge/latest/docs/reference/container/rest/v1/projects.locations.clusters'
docs:
base_url: 'projects/{{project}}/locations/{{location}}/clusters'
self_link: 'projects/{{project}}/locations/{{location}}/clusters/{{name}}'
create_url: 'projects/{{project}}/locations/{{location}}/clusters?cluster_id={{name}}'
update_url: 'projects/{{project}}/locations/{{location}}/clusters/{{name}}'
update_verb: 'PATCH'
update_mask: true
import_format:
  - 'projects/{{project}}/locations/{{location}}/clusters/{{name}}'
timeouts:
  insert_minutes: 480
  update_minutes: 480
  delete_minutes: 480
autogen_async: true
async:
  actions: ['create', 'delete', 'update']
  type: 'OpAsync'
  operation:
    base_url: '{{op_id}}'
    path: 'name'
    wait_ms: 1000
    timeouts:
      insert_minutes: 480
      update_minutes: 480
      delete_minutes: 480
  result:
    path: 'response'
    resource_inside_response: false
  error:
    path: 'error'
    message: 'message'
custom_code:
examples:
  - name: 'edgecontainer_cluster'
    primary_resource_id: 'default'
    vars:
      edgecontainer_cluster_name: 'basic-cluster'
  - name: 'edgecontainer_cluster_with_maintenance_window'
    primary_resource_id: 'default'
    vars:
      edgecontainer_cluster_name: 'cluster-with-maintenance'
  - name: 'edgecontainer_local_control_plane_cluster'
    primary_resource_id: 'default'
    vars:
      edgecontainer_cluster_name: 'local-control-plane-cluster'
    skip_test: true
parameters:
  - name: 'location'
    type: String
    description: |
      The location of the resource.
    url_param_only: true
    required: true
    immutable: true
  - name: 'name'
    type: String
    description: |
      The GDCE cluster name.
    url_param_only: true
    required: true
    immutable: true
properties:
  - name: 'createTime'
    type: Time
    description: |
      The time the cluster was created, in RFC3339 text format.
    output: true
  - name: 'updateTime'
    type: Time
    description: |
      The time the cluster was last updated, in RFC3339 text format.
    output: true
  - name: 'labels'
    type: KeyValueLabels
    description: "User-defined labels for the edgecloud cluster."
  - name: 'fleet'
    type: NestedObject
    description: |
      Fleet related configuration.
      Fleets are a Google Cloud concept for logically organizing clusters,
      letting you use and manage multi-cluster capabilities and apply
      consistent policies across your systems.
    required: true
    immutable: true
    properties:
      - name: 'project'
        type: String
        description: |
          The name of the Fleet host project where this cluster will be registered.
          Project names are formatted as
          `projects/<project-number>`.
        required: true
        immutable: true
      - name: 'membership'
        type: String
        description: |
          The name of the managed Hub Membership resource associated to this cluster.
          Membership names are formatted as
          `projects/<project-number>/locations/global/membership/<cluster-id>`.
        output: true
  - name: 'networking'
    type: NestedObject
    description: |
      Fleet related configuration.
      Fleets are a Google Cloud concept for logically organizing clusters,
      letting you use and manage multi-cluster capabilities and apply
      consistent policies across your systems.
    required: true
    properties:
      - name: 'clusterIpv4CidrBlocks'
        type: Array
        description: |
          All pods in the cluster are assigned an RFC1918 IPv4 address from these
          blocks. Only a single block is supported. This field cannot be changed
          after creation.
        required: true
        immutable: true
        item_type:
          type: String
      - name: 'servicesIpv4CidrBlocks'
        type: Array
        description: |
          All services in the cluster are assigned an RFC1918 IPv4 address from these
          blocks. Only a single block is supported. This field cannot be changed
          after creation.
        required: true
        immutable: true
        item_type:
          type: String
      - name: 'clusterIpv6CidrBlocks'
        type: Array
        description: |
          If specified, dual stack mode is enabled and all pods in the cluster are
          assigned an IPv6 address from these blocks alongside from an IPv4
          address. Only a single block is supported. This field cannot be changed
          after creation.
        immutable: true
        item_type:
          type: String
      - name: 'servicesIpv6CidrBlocks'
        type: Array
        description: |
          If specified, dual stack mode is enabled and all services in the cluster are
          assigned an IPv6 address from these blocks alongside from an IPv4
          address. Only a single block is supported. This field cannot be changed
          after creation.
        immutable: true
        item_type:
          type: String
      - name: 'networkType'
        type: String
        description: |
          IP addressing type of this cluster i.e. SINGLESTACK_V4 vs DUALSTACK_V4_V6.
        output: true
  - name: 'authorization'
    type: NestedObject
    description: |
      RBAC policy that will be applied and managed by GEC.
    required: true
    immutable: true
    properties:
      - name: 'adminUsers'
        type: NestedObject
        description: |
          User that will be granted the cluster-admin role on the cluster, providing
          full access to the cluster. Currently, this is a singular field, but will
          be expanded to allow multiple admins in the future.
        required: true
        properties:
          - name: 'username'
            type: String
            description: |
              An active Google username.
            required: true
  - name: 'defaultMaxPodsPerNode'
    type: Integer
    description: |
      The default maximum number of pods per node used if a maximum value is not
      specified explicitly for a node pool in this cluster. If unspecified, the
      Kubernetes default value will be used.
    default_from_api: true
  - name: 'endpoint'
    type: String
    description: |
      The IP address of the Kubernetes API server.
    output: true
  - name: 'port'
    type: Integer
    description: |
      The port number of the Kubernetes API server.
    output: true
  - name: 'clusterCaCertificate'
    type: String
    description: |
      The PEM-encoded public certificate of the cluster's CA.
    sensitive: true
    output: true
  - name: 'maintenancePolicy'
    type: NestedObject
    description: |
      Cluster-wide maintenance policy configuration.
    default_from_api: true
    properties:
      - name: 'window'
        type: NestedObject
        description: |
          Specifies the maintenance window in which maintenance may be performed.
        required: true
        properties:
          - name: 'recurringWindow'
            type: NestedObject
            description: |
              Represents an arbitrary window of time that recurs.
            required: true
            properties:
              - name: 'window'
                type: NestedObject
                description: |
                  Represents an arbitrary window of time.
                default_from_api: true
                properties:
                  - name: 'startTime'
                    type: Time
                    description: |
                      The time that the window first starts.
                    default_from_api: true
                  - name: 'endTime'
                    type: Time
                    description: |
                      The time that the window ends. The end time must take place after the
                      start time.
                    default_from_api: true
              - name: 'recurrence'
                type: String
                description: |
                  An RRULE (https://tools.ietf.org/html/rfc5545#section-3.8.5.3) for how
                  this window recurs. They go on for the span of time between the start and
                  end time.
                default_from_api: true
      - name: 'maintenanceExclusions'
        type: Array
        description: |
          Exclusions to automatic maintenance. Non-emergency maintenance should not occur
          in these windows. Each exclusion has a unique name and may be active or expired.
          The max number of maintenance exclusions allowed at a given time is 3.
        required: false
        item_type:
          type: NestedObject
          properties:
            - name: 'window'
              type: NestedObject
              description: |
                Represents an arbitrary window of time.
              default_from_api: true
              properties:
                - name: 'startTime'
                  type: Time
                  description: |
                    The time that the window first starts.
                  default_from_api: true
                - name: 'endTime'
                  type: Time
                  description: |
                    The time that the window ends. The end time must take place after the
                    start time.
                  default_from_api: true
            - name: 'id'
              type: String
              description: |
                A unique (per cluster) id for the window.
              default_from_api: true
  - name: 'controlPlaneVersion'
    type: String
    description: |
      The control plane release version.
    output: true
  - name: 'nodeVersion'
    type: String
    description: |
      The lowest release version among all worker nodes. This field can be empty
      if the cluster does not have any worker nodes.
    output: true
  - name: 'controlPlane'
    type: NestedObject
    description: |
      The configuration of the cluster control plane.
    properties:
      - name: 'remote'
        type: NestedObject
        description: |
          Remote control plane configuration.
        immutable: true
        default_from_api: true
        exactly_one_of:
          - 'control_plane.0.remote'
          - 'control_plane.0.local'
        properties:
          - name: 'nodeLocation'
            type: String
            description: |
              Name of the Google Distributed Cloud Edge zones where this node pool
              will be created. For example: `us-central1-edge-customer-a`.
            immutable: true
            default_from_api: true
      - name: 'local'
        type: NestedObject
        description: |
          Local control plane configuration.
        immutable: true
        default_from_api: true
        exactly_one_of:
          - 'control_plane.0.remote'
          - 'control_plane.0.local'
        properties:
          - name: 'nodeLocation'
            type: String
            description: |
              Name of the Google Distributed Cloud Edge zones where this node pool
              will be created. For example: `us-central1-edge-customer-a`.
            immutable: true
            default_from_api: true
          - name: 'nodeCount'
            type: Integer
            description: |
              The number of nodes to serve as replicas of the Control Plane.
              Only 1 and 3 are supported.
            default_from_api: true
          - name: 'machineFilter'
            type: String
            description: |
              Only machines matching this filter will be allowed to host control
              plane nodes. The filtering language accepts strings like "name=<name>",
              and is documented here: [AIP-160](https://google.aip.dev/160).
          - name: 'sharedDeploymentPolicy'
            type: Enum
            description: |
              Policy configuration about how user applications are deployed.
            default_from_api: true
            enum_values:
              - 'SHARED_DEPLOYMENT_POLICY_UNSPECIFIED'
              - 'ALLOWED'
              - 'DISALLOWED'
  - name: 'systemAddonsConfig'
    type: NestedObject
    description: |
      Config that customers are allowed to define for GDCE system add-ons.
    default_from_api: true
    properties:
      - name: 'ingress'
        type: NestedObject
        description: |
          Config for the Ingress add-on which allows customers to create an Ingress
          object to manage external access to the servers in a cluster. The add-on
          consists of istiod and istio-ingress.
        default_from_api: true
        properties:
          - name: 'disabled'
            type: Boolean
            description: |
              Whether Ingress is disabled.
            default_from_api: true
          - name: 'ipv4Vip'
            type: String
            description: |
              Ingress VIP.
            default_from_api: true
  - name: 'externalLoadBalancerIpv4AddressPools'
    type: Array
    description: |
      Address pools for cluster data plane external load balancing.
    default_from_api: true
    item_type:
      type: String
  - name: 'controlPlaneEncryption'
    type: NestedObject
    description: |
      Remote control plane disk encryption options. This field is only used when
      enabling CMEK support.
    default_from_api: true
    properties:
      - name: 'kmsKey'
        type: String
        description: |
          The Cloud KMS CryptoKey e.g.
          projects/{project}/locations/{location}/keyRings/{keyRing}/cryptoKeys/{cryptoKey}
          to use for protecting control plane disks. If not specified, a
          Google-managed key will be used instead.
        immutable: true
        default_from_api: true
      - name: 'kmsKeyActiveVersion'
        type: String
        description: |
          The Cloud KMS CryptoKeyVersion currently in use for protecting control
          plane disks. Only applicable if kms_key is set.
        output: true
      - name: 'kmsKeyState'
        type: String
        description: |
          Availability of the Cloud KMS CryptoKey. If not `KEY_AVAILABLE`, then
          nodes may go offline as they cannot access their local data. This can be
          caused by a lack of permissions to use the key, or if the key is disabled
          or deleted.
        output: true
      - name: 'kmsStatus'
        type: NestedObject
        description: |
          Error status returned by Cloud KMS when using this key. This field may be
          populated only if `kms_key_state` is not `KMS_KEY_STATE_KEY_AVAILABLE`.
          If populated, this field contains the error status reported by Cloud KMS.
        output: true
        properties:
          - name: 'code'
            type: Integer
            description: The status code, which should be an enum value of google.rpc.Code.
            output: true
          - name: 'message'
            type: String
            description:
              A developer-facing error message, which should be in English.
              Any user-facing error message should be localized and sent in
              the google.rpc.Status.details field, or localized by the client.
            output: true
  - name: 'status'
    type: String
    description: |
      Indicates the status of the cluster.
    output: true
  - name: 'maintenanceEvents'
    type: Array
    description: |
      All the maintenance events scheduled for the cluster, including the ones
      ongoing, planned for the future and done in the past (up to 90 days).
    output: true
    item_type:
      type: NestedObject
      properties:
        - name: 'uuid'
          type: String
          description: |
            UUID of the maintenance event.
          output: true
        - name: 'targetVersion'
          type: String
          description: |
            The target version of the cluster.
          output: true
        - name: 'operation'
          type: String
          description: |
            The operation for running the maintenance event. Specified in the format
            projects/*/locations/*/operations/*. If the maintenance event is split
            into multiple operations (e.g. due to maintenance windows), the latest
            one is recorded.
          output: true
        - name: 'type'
          type: String
          description: |
            Indicates the maintenance event type.
          output: true
        - name: 'schedule'
          type: String
          description: |
            The schedule of the maintenance event.
          output: true
        - name: 'state'
          type: String
          description: |
            Indicates the maintenance event state.
          output: true
        - name: 'createTime'
          type: Time
          description: |
            The time when the maintenance event request was created.
          output: true
        - name: 'startTime'
          type: Time
          description: |
            The time when the maintenance event started.
          output: true
        - name: 'endTime'
          type: Time
          description: |
            The time when the maintenance event ended, either successfully or not. If
            the maintenance event is split into multiple maintenance windows,
            end_time is only updated when the whole flow ends.
          output: true
        - name: 'updateTime'
          type: Time
          description: |
            The time when the maintenance event message was updated.
          output: true
  - name: 'targetVersion'
    type: String
    description: |
      The target cluster version. For example: "1.5.0".
    default_from_api: true
    update_url: 'projects/{{project}}/locations/{{location}}/clusters/{{name}}:upgrade'
    update_verb: 'POST'
  - name: 'releaseChannel'
    type: Enum
    description: |
      The release channel a cluster is subscribed to.
    default_from_api: true
    enum_values:
      - 'RELEASE_CHANNEL_UNSPECIFIED'
      - 'NONE'
      - 'REGULAR'
