# Copyright 2023 Google Inc.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

--- !ruby/object:Api::Resource
name: 'Cluster'
description: |
  Cluster contains information about a Google Distributed Cloud Edge Kubernetes cluster.
references: !ruby/object:Api::Resource::ReferenceLinks
  guides:
    'Create and manage clusters': 'https://cloud.google.com/distributed-cloud/edge/latest/docs/clusters'
  api: 'https://cloud.google.com/distributed-cloud/edge/latest/docs/reference/container/rest/v1/projects.locations.clusters'
base_url: 'projects/{{project}}/locations/{{location}}/clusters'
self_link: 'projects/{{project}}/locations/{{location}}/clusters/{{name}}'
create_url: 'projects/{{project}}/locations/{{location}}/clusters?cluster_id={{name}}'
update_url: 'projects/{{project}}/locations/{{location}}/clusters/{{name}}'
update_verb: :PATCH
update_mask: true
autogen_async: true
async: !ruby/object:Api::OpAsync
  operation: !ruby/object:Api::OpAsync::Operation
    path: 'name'
    base_url: '{{op_id}}'
    wait_ms: 1000
    timeouts: !ruby/object:Api::Timeouts
      insert_minutes: 480
      update_minutes: 480
      delete_minutes: 480
  result: !ruby/object:Api::OpAsync::Result
    path: 'response'
  status: !ruby/object:Api::OpAsync::Status
    path: 'done'
    complete: true
    allowed:
      - true
      - false
  error: !ruby/object:Api::OpAsync::Error
    path: 'error'
    message: 'message'

parameters:
  - !ruby/object:Api::Type::String
    name: 'location'
    required: true
    immutable: true
    url_param_only: true
    description: |
      The location of the resource.
  - !ruby/object:Api::Type::String
    name: 'name'
    required: true
    immutable: true
    url_param_only: true
    description: |
      The GDCE cluster name.
import_format: ["projects/{{project}}/locations/{{location}}/clusters/{{name}}"]
examples:
  - !ruby/object:Provider::Terraform::Examples
    name: "edgecontainer_cluster"
    primary_resource_id: "default"
    vars:
      edgecontainer_cluster_name: "basic-cluster"
  - !ruby/object:Provider::Terraform::Examples
    name: "edgecontainer_cluster_with_maintenance_window"
    primary_resource_id: "default"
    vars:
      edgecontainer_cluster_name: "cluster-with-maintenance"
  # Skip the local control plane cluster test as we only have limited machine resources.
  # Instead the local control plane cluster test will be tested in the node pool test.
  - !ruby/object:Provider::Terraform::Examples
    name: "edgecontainer_local_control_plane_cluster"
    primary_resource_id: "default"
    skip_test: true
    vars:
      edgecontainer_cluster_name: "local-control-plane-cluster"
properties:
  - !ruby/object:Api::Type::Time
    name: "createTime"
    description: |
      The time the cluster was created, in RFC3339 text format.
    output: true
  - !ruby/object:Api::Type::Time
    name: "updateTime"
    description: |
      The time the cluster was last updated, in RFC3339 text format.
    output: true
  - !ruby/object:Api::Type::KeyValueLabels
    name: "labels"
    description: "User-defined labels for the edgecloud cluster."
  - !ruby/object:Api::Type::NestedObject
    name: "fleet"
    required: true
    immutable: true
    description: |
      Fleet related configuration.
      Fleets are a Google Cloud concept for logically organizing clusters,
      letting you use and manage multi-cluster capabilities and apply
      consistent policies across your systems.
    properties:
      - !ruby/object:Api::Type::String
        name: "project"
        immutable: true
        description: |
          The name of the Fleet host project where this cluster will be registered.
          Project names are formatted as
          `projects/<project-number>`.
        required: true
      - !ruby/object:Api::Type::String
        name: "membership"
        output: true
        description: |
          The name of the managed Hub Membership resource associated to this cluster.
          Membership names are formatted as
          `projects/<project-number>/locations/global/membership/<cluster-id>`.
  - !ruby/object:Api::Type::NestedObject
    name: "networking"
    required: true
    description: |
      Fleet related configuration.
      Fleets are a Google Cloud concept for logically organizing clusters,
      letting you use and manage multi-cluster capabilities and apply
      consistent policies across your systems.
    properties:
      - !ruby/object:Api::Type::Array
        name: "clusterIpv4CidrBlocks"
        item_type: Api::Type::String
        immutable: true
        required: true
        description: |
          All pods in the cluster are assigned an RFC1918 IPv4 address from these
          blocks. Only a single block is supported. This field cannot be changed
          after creation.
      - !ruby/object:Api::Type::Array
        name: "servicesIpv4CidrBlocks"
        item_type: Api::Type::String
        immutable: true
        required: true
        description: |
          All services in the cluster are assigned an RFC1918 IPv4 address from these
          blocks. Only a single block is supported. This field cannot be changed
          after creation.
      - !ruby/object:Api::Type::Array
        name: "clusterIpv6CidrBlocks"
        item_type: Api::Type::String
        immutable: true
        description: |
          If specified, dual stack mode is enabled and all pods in the cluster are
          assigned an IPv6 address from these blocks alongside from an IPv4
          address. Only a single block is supported. This field cannot be changed
          after creation.
      - !ruby/object:Api::Type::Array
        name: "servicesIpv6CidrBlocks"
        item_type: Api::Type::String
        immutable: true
        description: |
          If specified, dual stack mode is enabled and all services in the cluster are
          assigned an IPv6 address from these blocks alongside from an IPv4
          address. Only a single block is supported. This field cannot be changed
          after creation.
      - !ruby/object:Api::Type::String
        name: "networkType"
        output: true
        description: |
          IP addressing type of this cluster i.e. SINGLESTACK_V4 vs DUALSTACK_V4_V6.
  - !ruby/object:Api::Type::NestedObject
    name: "authorization"
    required: true
    immutable: true
    description: |
      RBAC policy that will be applied and managed by GEC.
    properties:
      - !ruby/object:Api::Type::NestedObject
        name: "adminUsers"
        required: true
        description: |
          User that will be granted the cluster-admin role on the cluster, providing
          full access to the cluster. Currently, this is a singular field, but will
          be expanded to allow multiple admins in the future.
        properties:
          - !ruby/object:Api::Type::String
            name: "username"
            description: |
              An active Google username.
            required: true
  - !ruby/object:Api::Type::Integer
    name: "defaultMaxPodsPerNode"
    default_from_api: true
    description: |
      The default maximum number of pods per node used if a maximum value is not
      specified explicitly for a node pool in this cluster. If unspecified, the
      Kubernetes default value will be used.
  - !ruby/object:Api::Type::String
    name: "endpoint"
    description: |
      The IP address of the Kubernetes API server.
    output: true
  - !ruby/object:Api::Type::Integer
    name: "port"
    description: |
      The port number of the Kubernetes API server.
    output: true
  - !ruby/object:Api::Type::String
    name: "clusterCaCertificate"
    description: |
      The PEM-encoded public certificate of the cluster's CA.
    output: true
    sensitive: true
  - !ruby/object:Api::Type::NestedObject
    name: "maintenancePolicy"
    description: |
      Cluster-wide maintenance policy configuration.
    default_from_api: true
    properties:
      - !ruby/object:Api::Type::NestedObject
        name: "window"
        required: true
        description: |
          Specifies the maintenance window in which maintenance may be performed.
        properties:
          - !ruby/object:Api::Type::NestedObject
            name: "recurringWindow"
            required: true
            description: |
              Represents an arbitrary window of time that recurs.
            properties:
              - !ruby/object:Api::Type::NestedObject
                name: "window"
                default_from_api: true
                description: |
                  Represents an arbitrary window of time.
                properties:
                  - !ruby/object:Api::Type::Time
                    name: "startTime"
                    description: |
                      The time that the window first starts.
                    default_from_api: true
                  - !ruby/object:Api::Type::Time
                    name: "endTime"
                    description: |
                      The time that the window ends. The end time must take place after the
                      start time.
                    default_from_api: true
              - !ruby/object:Api::Type::String
                name: "recurrence"
                default_from_api: true
                description: |
                  An RRULE (https://tools.ietf.org/html/rfc5545#section-3.8.5.3) for how
                  this window recurs. They go on for the span of time between the start and
                  end time.
  - !ruby/object:Api::Type::String
    name: "controlPlaneVersion"
    description: |
      The control plane release version.
    output: true
  - !ruby/object:Api::Type::String
    name: "nodeVersion"
    description: |
      The lowest release version among all worker nodes. This field can be empty
      if the cluster does not have any worker nodes.
    output: true
  - !ruby/object:Api::Type::NestedObject
    name: "controlPlane"
    description: |
      The configuration of the cluster control plane.
    properties:
      - !ruby/object:Api::Type::NestedObject
        name: "remote"
        immutable: true
        exactly_one_of:
          - control_plane.0.remote
          - control_plane.0.local
        description: |
          Remote control plane configuration.
        default_from_api: true
        properties:
          - !ruby/object:Api::Type::String
            name: "nodeLocation"
            immutable: true
            default_from_api: true
            description: |
              Name of the Google Distributed Cloud Edge zones where this node pool
              will be created. For example: `us-central1-edge-customer-a`.
      - !ruby/object:Api::Type::NestedObject
        name: "local"
        immutable: true
        exactly_one_of:
          - control_plane.0.remote
          - control_plane.0.local
        description: |
          Local control plane configuration.
        default_from_api: true
        properties:
          - !ruby/object:Api::Type::String
            name: "nodeLocation"
            default_from_api: true
            immutable: true
            description: |
              Name of the Google Distributed Cloud Edge zones where this node pool
              will be created. For example: `us-central1-edge-customer-a`.
          - !ruby/object:Api::Type::Integer
            name: "nodeCount"
            description: |
              The number of nodes to serve as replicas of the Control Plane.
              Only 1 and 3 are supported.
            default_from_api: true
          - !ruby/object:Api::Type::String
            name: "machineFilter"
            description: |
              Only machines matching this filter will be allowed to host control
              plane nodes. The filtering language accepts strings like "name=<name>",
              and is documented here: [AIP-160](https://google.aip.dev/160).
          - !ruby/object:Api::Type::Enum
            name: "sharedDeploymentPolicy"
            default_from_api: true
            description: |
              Policy configuration about how user applications are deployed.
            values:
              - :SHARED_DEPLOYMENT_POLICY_UNSPECIFIED
              - :ALLOWED
              - :DISALLOWED
  - !ruby/object:Api::Type::NestedObject
    name: "systemAddonsConfig"
    default_from_api: true
    description: |
      Config that customers are allowed to define for GDCE system add-ons.
    properties:
      - !ruby/object:Api::Type::NestedObject
        name: "ingress"
        default_from_api: true
        description: |
          Config for the Ingress add-on which allows customers to create an Ingress
          object to manage external access to the servers in a cluster. The add-on
          consists of istiod and istio-ingress.
        properties:
          - !ruby/object:Api::Type::Boolean
            name: "disabled"
            default_from_api: true
            description: |
              Whether Ingress is disabled.
          - !ruby/object:Api::Type::String
            name: "ipv4Vip"
            default_from_api: true
            description: |
              Ingress VIP.
  - !ruby/object:Api::Type::Array
    item_type: Api::Type::String
    name: "externalLoadBalancerIpv4AddressPools"
    default_from_api: true
    description: |
      Address pools for cluster data plane external load balancing.
  - !ruby/object:Api::Type::NestedObject
    name: "controlPlaneEncryption"
    default_from_api: true
    description: |
      Remote control plane disk encryption options. This field is only used when
      enabling CMEK support.
    properties:
      - !ruby/object:Api::Type::String
        name: "kmsKey"
        immutable: true
        default_from_api: true
        description: |
          The Cloud KMS CryptoKey e.g.
          projects/{project}/locations/{location}/keyRings/{keyRing}/cryptoKeys/{cryptoKey}
          to use for protecting control plane disks. If not specified, a
          Google-managed key will be used instead.
      - !ruby/object:Api::Type::String
        name: "kmsKeyActiveVersion"
        output: true
        description: |
          The Cloud KMS CryptoKeyVersion currently in use for protecting control
          plane disks. Only applicable if kms_key is set.
      - !ruby/object:Api::Type::String
        name: "kmsKeyState"
        output: true
        description: |
          Availability of the Cloud KMS CryptoKey. If not `KEY_AVAILABLE`, then
          nodes may go offline as they cannot access their local data. This can be
          caused by a lack of permissions to use the key, or if the key is disabled
          or deleted.
      - !ruby/object:Api::Type::NestedObject
        name: "kmsStatus"
        output: true
        description: |
          Error status returned by Cloud KMS when using this key. This field may be
          populated only if `kms_key_state` is not `KMS_KEY_STATE_KEY_AVAILABLE`.
          If populated, this field contains the error status reported by Cloud KMS.
        properties:
          - !ruby/object:Api::Type::Integer
            name: 'code'
            output: true
            description: The status code, which should be an enum value of google.rpc.Code.
          - !ruby/object:Api::Type::String
            name: 'message'
            output: true
            description:
              A developer-facing error message, which should be in English.
              Any user-facing error message should be localized and sent in
              the google.rpc.Status.details field, or localized by the client.
  - !ruby/object:Api::Type::String
    name: "status"
    output: true
    description: |
      Indicates the status of the cluster.
  - !ruby/object:Api::Type::Array
    name: maintenanceEvents
    output: true
    description: |
      All the maintenance events scheduled for the cluster, including the ones
      ongoing, planned for the future and done in the past (up to 90 days).
    item_type: !ruby/object:Api::Type::NestedObject
      properties:
        - !ruby/object:Api::Type::String
          name: 'uuid'
          description: |
            UUID of the maintenance event.
          output: true
        - !ruby/object:Api::Type::String
          name: 'targetVersion'
          description: |
            The target version of the cluster.
          output: true
        - !ruby/object:Api::Type::String
          name: 'operation'
          description: |
            The operation for running the maintenance event. Specified in the format
            projects/*/locations/*/operations/*. If the maintenance event is split
            into multiple operations (e.g. due to maintenance windows), the latest
            one is recorded.
          output: true
        - !ruby/object:Api::Type::String
          name: "type"
          output: true
          description: |
            Indicates the maintenance event type.
        - !ruby/object:Api::Type::String
          name: schedule
          output: true
          description: |
            The schedule of the maintenance event.
        - !ruby/object:Api::Type::String
          name: "state"
          output: true
          description: |
            Indicates the maintenance event state.
        - !ruby/object:Api::Type::Time
          name: "createTime"
          output: true
          description: |
            The time when the maintenance event request was created.
        - !ruby/object:Api::Type::Time
          name: "startTime"
          output: true
          description: |
            The time when the maintenance event started.
        - !ruby/object:Api::Type::Time
          name: "endTime"
          output: true
          description: |
            The time when the maintenance event ended, either successfully or not. If
            the maintenance event is split into multiple maintenance windows,
            end_time is only updated when the whole flow ends.
        - !ruby/object:Api::Type::Time
          name: "updateTime"
          output: true
          description: |
            The time when the maintenance event message was updated.
  - !ruby/object:Api::Type::String
    name: targetVersion
    default_from_api: true
    description: |
      The target cluster version. For example: "1.5.0".
    update_url: 'projects/{{project}}/locations/{{location}}/clusters/{{name}}:upgrade'
    update_verb: :POST
  - !ruby/object:Api::Type::Enum
    name: "releaseChannel"
    default_from_api: true
    description: |
      The release channel a cluster is subscribed to.
    values:
      - :RELEASE_CHANNEL_UNSPECIFIED
      - :NONE
      - :REGULAR
