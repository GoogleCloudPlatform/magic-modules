# Copyright 2020 Google Inc.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

--- !ruby/object:Provider::Terraform::Config
overrides: !ruby/object:Overrides::ResourceOverrides
  EntryGroup: !ruby/object:Overrides::Terraform::ResourceOverride
    import_format: ["{{name}}"]
    examples:
      - !ruby/object:Provider::Terraform::Examples
        name: "data_catalog_entry_group_basic"
        primary_resource_id: "basic_entry_group"
        primary_resource_name: "fmt.Sprintf(\"tf_test_my_group%s\", context[\"random_suffix\"])"
        vars:
          entry_group_id: "my_group"
      - !ruby/object:Provider::Terraform::Examples
        name: "data_catalog_entry_group_full"
        primary_resource_id: "basic_entry_group"
        primary_resource_name: "fmt.Sprintf(\"tf_test_my_group%s\", context[\"random_suffix\"])"
        vars:
          entry_group_id: "my_group"
    properties:
      entryGroupId: !ruby/object:Overrides::Terraform::PropertyOverride
        validation: !ruby/object:Provider::Terraform::Validation
          regex: '^[A-z_][A-z0-9_]{0,63}$'
      region: !ruby/object:Overrides::Terraform::PropertyOverride
        ignore_read: true
        required: false
        default_from_api: true
    custom_code: !ruby/object:Provider::Terraform::CustomCode
      custom_import: templates/terraform/custom_import/data_catalog_entry_group.go.erb
  Entry: !ruby/object:Overrides::Terraform::ResourceOverride
    import_format: ["{{name}}"]
    supports_indirect_user_project_override: true
    examples:
      - !ruby/object:Provider::Terraform::Examples
        name: "data_catalog_entry_basic"
        primary_resource_id: "basic_entry"
        vars:
          entry_id: "my_entry"
          entry_group_id: "my_group"
      - !ruby/object:Provider::Terraform::Examples
        name: "data_catalog_entry_fileset"
        primary_resource_id: "basic_entry"
        vars:
          entry_id: "my_entry"
          entry_group_id: "my_group"
      - !ruby/object:Provider::Terraform::Examples
        name: "data_catalog_entry_full"
        primary_resource_id: "basic_entry"
        vars:
          entry_id: "my_entry"
          entry_group_id: "my_group"
    properties:
      linkedResource: !ruby/object:Overrides::Terraform::PropertyOverride
        default_from_api: true
      schema: !ruby/object:Overrides::Terraform::PropertyOverride
        custom_expand: 'templates/terraform/custom_expand/json_schema.erb'
        custom_flatten: 'templates/terraform/custom_flatten/json_schema.erb'
        state_func: 'func(v interface{}) string { s, _ := structure.NormalizeJsonString(v); return s }'
        validation: !ruby/object:Provider::Terraform::Validation
          function: 'validation.StringIsJSON'
      userSpecifiedSystem: !ruby/object:Overrides::Terraform::PropertyOverride
        validation: !ruby/object:Provider::Terraform::Validation
          regex: '^[A-z_][A-z0-9_]{0,63}$'
      userSpecifiedType: !ruby/object:Overrides::Terraform::PropertyOverride
        validation: !ruby/object:Provider::Terraform::Validation
          regex: '^[A-z_][A-z0-9_]{0,63}$'
    custom_code: !ruby/object:Provider::Terraform::CustomCode
      custom_import: templates/terraform/custom_import/data_catalog_entry.go.erb
  TagTemplate: !ruby/object:Overrides::Terraform::ResourceOverride
    import_format: ["{{name}}"]
    skip_sweeper: true  # no list endpoint plus variables in delete URL
    examples:
      - !ruby/object:Provider::Terraform::Examples
        name: "data_catalog_tag_template_basic"
        primary_resource_id: "basic_tag_template"
        primary_resource_name: "fmt.Sprintf(\"tf_test_my_template%s\", context[\"random_suffix\"])"
        vars:
          tag_template_id: "my_template"
          force_delete: "false"
        test_vars_overrides:
          force_delete: "true"
        oics_vars_overrides:
          force_delete: "true"
    properties:
      tagTemplateId: !ruby/object:Overrides::Terraform::PropertyOverride
        validation: !ruby/object:Provider::Terraform::Validation
          regex: '^[a-z_][a-z0-9_]{0,63}$'
      fields: !ruby/object:Overrides::Terraform::PropertyOverride
        description: |
          Set of tag template field IDs and the settings for the field. This set is an exhaustive list of the allowed fields. This set must contain at least one field and at most 500 fields.
      fields.type.enumType: !ruby/object:Overrides::Terraform::PropertyOverride
        description: |
          {{description}} Exactly one of `primitive_type` or `enum_type` must be set
      fields.type.enumType.allowedValues: !ruby/object:Overrides::Terraform::PropertyOverride
        is_set: true
      fields.type.primitiveType: !ruby/object:Overrides::Terraform::PropertyOverride
        description: |
          {{description}} Exactly one of `primitive_type` or `enum_type` must be set
      region: !ruby/object:Overrides::Terraform::PropertyOverride
        ignore_read: true
        required: false
        default_from_api: true
    custom_code: !ruby/object:Provider::Terraform::CustomCode
      custom_import: templates/terraform/custom_import/data_catalog_tag_template.go.erb
  Tag: !ruby/object:Overrides::Terraform::ResourceOverride
    import_format: ["{{name}}"]
    id_format: "{{name}}"
    examples:
      - !ruby/object:Provider::Terraform::Examples
        name: "data_catalog_entry_tag_basic"
        primary_resource_id: "basic_tag"
        vars:
          entry_group_id: "my_entry_group"
          entry_id: "my_entry"
          tag_template_id: "my_template"
          force_delete: "false"
        test_vars_overrides:
          force_delete: "true"
        oics_vars_overrides:
          force_delete: "true"
      - !ruby/object:Provider::Terraform::Examples
        name: "data_catalog_entry_group_tag"
        primary_resource_id: "entry_group_tag"
        vars:
          entry_group_id: "my_entry_group"
          first_entry: "first_entry"
          second_entry: "second_entry"
          tag_template_id: "my_template"
          force_delete: "false"
        test_vars_overrides:
          force_delete: "true"
        oics_vars_overrides:
          force_delete: "true"
      - !ruby/object:Provider::Terraform::Examples
        name: "data_catalog_entry_tag_full"
        # Multiple fine-grained resources
        skip_vcr: true
        primary_resource_id: "basic_tag"
        vars:
          entry_group_id: "my_entry_group"
          entry_id: "my_entry"
          tag_template_id: "my_template"
          force_delete: "false"
        test_vars_overrides:
          force_delete: "true"
        oics_vars_overrides:
          force_delete: "true"
      - !ruby/object:Provider::Terraform::Examples
        name: "data_catalog_entry_tag_false"
        primary_resource_id: "basic_tag"
        vars:
          entry_group_id: "my_entry_group"
          entry_id: "my_entry"
          tag_template_id: "my_template"
          force_delete: "false"
        test_vars_overrides:
          force_delete: "true"
        oics_vars_overrides:
          force_delete: "true"
        skip_docs: true  # omitting doc as it is almost identical to the case of data_catalog_entry_tag_basic
    properties:
      # Changing the name here so when mm generates methods like `flattenDataCatalogTagTemplateDisplayName`
      # this doesn't conflict with tag template's display name methods
      templateDisplayName: !ruby/object:Overrides::Terraform::PropertyOverride
        name: template_displayname
      fields.enumValue: !ruby/object:Overrides::Terraform::PropertyOverride
        flatten_object: true
        # because `fields` is a set, the current generated expand code can't properly retrieve
        # enum_value by d.Get("enum_value") without knowing the set id, however, the value
        # `v` is the correct value and passed to expand, so this custom expand will use
        # that as the correct `enum_value.display_name` value
        custom_expand: templates/terraform/custom_expand/data_catalog_tag.go.erb
        custom_flatten: templates/terraform/custom_flatten/data_catalog_tag.go.erb
      fields.enumValue.displayName: !ruby/object:Overrides::Terraform::PropertyOverride
        name: enum_value
        required: false
    custom_code: !ruby/object:Provider::Terraform::CustomCode
      custom_import: templates/terraform/custom_import/data_catalog_tag.go.erb
      encoder: templates/terraform/encoders/data_catalog_tag.go.erb
  Taxonomy: !ruby/object:Overrides::Terraform::ResourceOverride
    import_format: ["{{name}}"]
    examples:
      - !ruby/object:Provider::Terraform::Examples
        name: "data_catalog_taxonomy_basic"
        primary_resource_id: "basic_taxonomy"
        primary_resource_name: "fmt.Sprintf(\"tf_test_my_taxonomy%s\", context[\"random_suffix\"])"
        vars:
          display_name: "my_display_name"
    properties:
      region: !ruby/object:Overrides::Terraform::PropertyOverride
        required: false
        default_from_api: true
    custom_code: !ruby/object:Provider::Terraform::CustomCode
      custom_import: templates/terraform/custom_import/data_catalog_taxonomy.go.erb
  PolicyTag: !ruby/object:Overrides::Terraform::ResourceOverride
    import_format: ["{{name}}"]
    examples:
      - !ruby/object:Provider::Terraform::Examples
        name: "data_catalog_taxonomies_policy_tag_basic"
        primary_resource_id: "basic_policy_tag"
        primary_resource_name: "fmt.Sprintf(\"tf_test_my_policy_tag%s\", context[\"random_suffix\"])"
        vars:
          taxonomy_display_name: "taxonomy_display_name"
      - !ruby/object:Provider::Terraform::Examples
        name: "data_catalog_taxonomies_policy_tag_child_policies"
        primary_resource_id: "child_policy"
        primary_resource_name: "fmt.Sprintf(\"tf_test_my_child_tag%s\", context[\"random_suffix\"])"
        vars:
          taxonomy_display_name: "taxonomy_display_name"
    custom_code: !ruby/object:Provider::Terraform::CustomCode
      custom_import: templates/terraform/custom_import/extract_taxonomy.go.erb
  # This is for copying files over
files: !ruby/object:Provider::Config::Files
  # These files have templating (ERB) code that will be run.
  # This is usually to add licensing info, autogeneration notices, etc.
  compile:
<%= lines(indent(compile('provider/terraform/product~compile.yaml'), 4)) -%>
