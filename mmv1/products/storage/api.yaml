# Copyright 2017 Google Inc.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

--- !ruby/object:Api::Product
name: Storage
display_name: Cloud Storage
versions:
  - !ruby/object:Api::Product::Version
    name: ga
    base_url: https://storage.googleapis.com/storage/v1/
scopes:
  - https://www.googleapis.com/auth/devstorage.full_control
apis_required:
  - !ruby/object:Api::Product::ApiReference
    name: Google Cloud Storage
    url: https://console.cloud.google.com/apis/library/storage-component.googleapis.com/
objects:
  - !ruby/object:Api::Resource
    name: 'Bucket'
    kind: 'storage#bucket'
    base_url: b?project={{project}}
    self_link: b/{{name}}?projection=full
    collection_url_key: items
    description: |
      The Buckets resource represents a bucket in Google Cloud Storage. There is
      a single global namespace shared by all buckets. For more information, see
      Bucket Name Requirements.

      Buckets contain objects which can be accessed by their own methods. In
      addition to the acl property, buckets contain bucketAccessControls, for
      use in fine-grained manipulation of an existing bucket's access controls.

      A bucket is always owned by the project team owners group.
    iam_policy: !ruby/object:Api::Resource::IamPolicy
      allowed_iam_role: 'roles/storage.objectViewer'
      admin_iam_role: 'roles/storage.admin'
      parent_resource_attribute: 'bucket'
      base_url: 'b/{{name}}'
      import_format: ['b/{{name}}', '{{name}}']
      iam_conditions_request_type: :QUERY_PARAM
      fetch_iam_policy_method: 'iam'
      set_iam_policy_method: 'iam'
      set_iam_policy_verb: :PUT
      wrapped_policy_obj: false
      custom_diff_suppress: 'templates/terraform/iam/storage_bucket_diff_suppress.go.erb'
    properties:
      - !ruby/object:Api::Type::Array
        name: 'acl'
        item_type: Api::Type::String
        description: 'Access controls on the bucket.'
        item_type: !ruby/object:Api::Type::NestedObject
          properties:
            - !ruby/object:Api::Type::ResourceRef
              name: 'bucket'
              resource: 'Bucket'
              imports: 'name'
              description: 'The name of the bucket.'
              required: true
            - !ruby/object:Api::Type::String
              name: 'domain'
              description: 'The domain associated with the entity.'
              output: true
            - !ruby/object:Api::Type::String
              name: 'email'
              description: 'The email address associated with the entity.'
              output: true
            - !ruby/object:Api::Type::String
              name: 'entity'
              description: |
                The entity holding the permission, in one of the following forms:
                  user-userId
                  user-email
                  group-groupId
                  group-email
                  domain-domain
                  project-team-projectId
                  allUsers
                  allAuthenticatedUsers
                Examples:
                  The user liz@example.com would be user-liz@example.com.
                  The group example@googlegroups.com would be
                  group-example@googlegroups.com.
                  To refer to all members of the Google Apps for Business domain
                  example.com, the entity would be domain-example.com.
              required: true
            - !ruby/object:Api::Type::String
              name: 'entityId'
              description: 'The ID for the entity'
            # | 'etag' is not applicable for state convergence.
            - !ruby/object:Api::Type::String
              name: 'id'
              description: 'The ID of the access-control entry.'
              output: true
            - !ruby/object:Api::Type::NestedObject
              name: 'projectTeam'
              description: 'The project team associated with the entity'
              properties:
                - !ruby/object:Api::Type::String
                  name: 'projectNumber'
                  description: 'The project team associated with the entity'
                - !ruby/object:Api::Type::Enum
                  name: 'team'
                  description: 'The team.'
                  values:
                    - :editors
                    - :owners
                    - :viewers
            - !ruby/object:Api::Type::Enum
              name: 'role'
              description: 'The access permission for the entity.'
              values:
                - :OWNER
                - :READER
                - :WRITER
      - !ruby/object:Api::Type::Array
        name: 'cors'
        description: |
          The bucket's Cross-Origin Resource Sharing (CORS) configuration.
        item_type: !ruby/object:Api::Type::NestedObject
          properties:
            - !ruby/object:Api::Type::Integer
              name: 'maxAgeSeconds'
              description: |
                The value, in seconds, to return in the Access-Control-Max-Age
                header used in preflight responses.
            - !ruby/object:Api::Type::Array
              name: 'method'
              description: |
                The list of HTTP methods on which to include CORS response
                headers, (GET, OPTIONS, POST, etc) Note: "*" is permitted in the
                list of methods, and means "any method".
              item_type: Api::Type::String
            - !ruby/object:Api::Type::Array
              name: 'origin'
              description: |
                The list of Origins eligible to receive CORS response headers.
                Note: "*" is permitted in the list of origins, and means "any
                Origin".
              item_type: Api::Type::String
            - !ruby/object:Api::Type::Array
              name: 'responseHeader'
              description: |
                The list of HTTP headers other than the simple response headers
                to give permission for the user-agent to share across domains.
              item_type: Api::Type::String
      - !ruby/object:Api::Type::Boolean
        name: 'defaultEventBasedHold'
        description: |
          Whether or not to automatically apply an eventBasedHold to new objects
          added to the bucket.
      - !ruby/object:Api::Type::Array
        name: 'defaultObjectAcl'
        description: |
          Default access controls to apply to new objects when no ACL is
          provided.
        input: true
        item_type: !ruby/object:Api::Type::NestedObject
          properties:
            - !ruby/object:Api::Type::ResourceRef
              name: 'bucket'
              resource: 'Bucket'
              imports: 'name'
              description: 'The name of the bucket.'
              required: true
            - !ruby/object:Api::Type::String
              name: 'domain'
              description: 'The domain associated with the entity.'
              output: true
            - !ruby/object:Api::Type::String
              name: 'email'
              description: 'The email address associated with the entity.'
              output: true
            - !ruby/object:Api::Type::String
              name: 'entity'
              required: true
              description: |
                The entity holding the permission, in one of the following forms:
                  * user-{{userId}}
                  * user-{{email}} (such as "user-liz@example.com")
                  * group-{{groupId}}
                  * group-{{email}} (such as "group-example@googlegroups.com")
                  * domain-{{domain}} (such as "domain-example.com")
                  * project-team-{{projectId}}
                  * allUsers
                  * allAuthenticatedUsers
            - !ruby/object:Api::Type::String
              name: 'entityId'
              output: true
              description: 'The ID for the entity'
            # | 'etag' is not applicable for state convergence.
            - !ruby/object:Api::Type::Integer
              name: 'generation'
              description: 'The content generation of the object, if applied to an object.'
              output: true
            - !ruby/object:Api::Type::String
              name: 'id'
              description: 'The ID of the access-control entry.'
              output: true
            - !ruby/object:Api::Type::String
              name: 'object'
              description: 'The name of the object, if applied to an object.'
              required: false
            - !ruby/object:Api::Type::NestedObject
              name: 'projectTeam'
              description: 'The project team associated with the entity'
              output: true
              properties:
                - !ruby/object:Api::Type::String
                  name: 'projectNumber'
                  description: 'The project team associated with the entity'
                - !ruby/object:Api::Type::Enum
                  name: 'team'
                  description: 'The team.'
                  values:
                    - :editors
                    - :owners
                    - :viewers
            - !ruby/object:Api::Type::Enum
              name: 'role'
              description: 'The access permission for the entity.'
              required: true
              values:
                - :OWNER
                - :READER
      # | 'etag' is not applicable for state convergence.
      - !ruby/object:Api::Type::String
        name: 'id'
        description: |
          The ID of the bucket. For buckets, the id and name properities are the
          same.
        output: true
      - !ruby/object:Api::Type::NestedObject
        name: 'lifecycle'
        description: |
          The bucket's lifecycle configuration.

          See https://developers.google.com/storage/docs/lifecycle for more
          information.
        properties:
          - !ruby/object:Api::Type::Array
            name: 'rule'
            description: |
              A lifecycle management rule, which is made of an action to take
              and the condition(s) under which the action will be taken.
            item_type: !ruby/object:Api::Type::NestedObject
              properties:
                - !ruby/object:Api::Type::NestedObject
                  name: 'action'
                  description: 'The action to take.'
                  properties:
                    - !ruby/object:Api::Type::String
                      name: 'storageClass'
                      description: |
                        Target storage class. Required iff the type of the
                        action is SetStorageClass.
                    - !ruby/object:Api::Type::Enum
                      name: 'type'
                      description: |
                        Type of the action. Currently, only Delete and
                        SetStorageClass are supported.
                      values:
                        - 'Delete'
                        - 'SetStorageClass'
                - !ruby/object:Api::Type::NestedObject
                  name: 'condition'
                  description: |
                    The condition(s) under which the action will be taken.
                  properties:
                    - !ruby/object:Api::Type::Integer
                      name: 'ageDays'
                      api_name: 'age'
                      description: |
                        Age of an object (in days). This condition is satisfied
                        when an object reaches the specified age.
                    - !ruby/object:Api::Type::Time
                      name: 'createdBefore'
                      description: |
                        A date in RFC 3339 format with only the date part (for
                        instance, "2013-01-15"). This condition is satisfied
                        when an object is created before midnight of the
                        specified date in UTC.
                    - !ruby/object:Api::Type::Time
                      name: 'customTimeBefore'
                      description: |
                        A date in the RFC 3339 format YYYY-MM-DD. This condition
                        is satisfied when the customTime metadata for the object
                        is set to an earlier date than the date used in
                        this lifecycle condition.
                    - !ruby/object:Api::Type::Integer
                      name: 'daysSinceCustomTime'
                      description: |
                        Days since the date set in the customTime metadata for the
                        object. This condition is satisfied when the current date
                        and time is at least the specified number of days after
                        the customTime.
                    - !ruby/object:Api::Type::Integer
                      name: 'daysSinceNoncurrentTime'
                      description: |
                        Relevant only for versioned objects. This condition is
                        satisfied when an object has been noncurrent for more than
                        the specified number of days.
                    - !ruby/object:Api::Type::Boolean
                      name: 'isLive'
                      description: |
                        Relevant only for versioned objects.  If the value is
                        true, this condition matches live objects; if the value
                        is false, it matches archived objects.
                    - !ruby/object:Api::Type::Array
                      name: 'matchesStorageClass'
                      description: |
                        Objects having any of the storage classes specified by
                        this condition will be matched. Values include
                        MULTI_REGIONAL, REGIONAL, NEARLINE, COLDLINE, ARCHIVE,
                        STANDARD, and DURABLE_REDUCED_AVAILABILITY.
                      item_type: Api::Type::String
                    - !ruby/object:Api::Type::Time
                      name: 'noncurrentTimeBefore'
                      description: |
                        Relevant only for versioned objects. A date in the
                        RFC 3339 format YYYY-MM-DD. This condition is satisfied
                        for objects that became noncurrent on a date prior to the
                        one specified in this condition.
                    - !ruby/object:Api::Type::Integer
                      name: 'numNewerVersions'
                      description: |
                        Relevant only for versioned objects. If the value is N,
                        this condition is satisfied when there are at least N
                        versions (including the live version) newer than this
                        version of the object.
      - !ruby/object:Api::Type::String
        name: 'location'
        description: |
          The location of the bucket. Object data for objects in the bucket
          resides in physical storage within this region. Defaults to US. See
          the developer's guide for the authoritative list.
      - !ruby/object:Api::Type::NestedObject
        name: 'logging'
        description: |
          The bucket's logging configuration, which defines the destination
          bucket and optional name prefix for the current bucket's logs.
        properties:
          - !ruby/object:Api::Type::String
            name: 'logBucket'
            description: |
              The destination bucket where the current bucket's logs should be
              placed.
          - !ruby/object:Api::Type::String
            name: 'logObjectPrefix'
            description: 'A prefix for log object names.'
      - !ruby/object:Api::Type::Integer
        name: 'metageneration'
        description: 'The metadata generation of this bucket.'
      - !ruby/object:Api::Type::String
        name: 'name'
        description: 'The name of the bucket'
      - !ruby/object:Api::Type::NestedObject
        name: 'owner'
        description: |
          The owner of the bucket. This is always the project team's owner
          group.
        properties:
          - !ruby/object:Api::Type::String
            name: 'entity'
            description: 'The entity, in the form project-owner-projectId.'
          - !ruby/object:Api::Type::String
            name: 'entityId'
            description: 'The ID for the entity.'
            output: true
      - !ruby/object:Api::Type::String
        name: 'projectNumber'
        description: 'The project number of the project the bucket belongs to.'
        output: true
      - !ruby/object:Api::Type::Enum
        name: 'storageClass'
        description: |
          The bucket's default storage class, used whenever no storageClass is
          specified for a newly-created object. This defines how objects in the
          bucket are stored and determines the SLA and the cost of storage.
          Values include MULTI_REGIONAL, REGIONAL, STANDARD, NEARLINE,
          COLDLINE, ARCHIVE, and DURABLE_REDUCED_AVAILABILITY. If this value is
          not specified when the bucket is created, it will default to 
          STANDARD. For more information, see storage classes.
        values:
          - :MULTI_REGIONAL
          - :REGIONAL
          - :STANDARD
          - :NEARLINE
          - :COLDLINE
          - :ARCHIVE
          - :DURABLE_REDUCED_AVAILABILITY
      - !ruby/object:Api::Type::Time
        name: 'timeCreated'
        description: 'The creation time of the bucket in RFC 3339 format.'
        output: true
      - !ruby/object:Api::Type::Time
        name: 'updated'
        description: 'The modification time of the bucket in RFC 3339 format.'
        output: true
      - !ruby/object:Api::Type::NestedObject
        name: 'versioning'
        description: "The bucket's versioning configuration."
        properties:
          - !ruby/object:Api::Type::Boolean
            name: 'enabled'
            description: |
              While set to true, versioning is fully enabled for this bucket.
      - !ruby/object:Api::Type::NestedObject
        name: 'website'
        description: |
          The bucket's website configuration, controlling how the service
          behaves when accessing bucket contents as a web site. See the Static
          Website Examples for more information.
        properties:
          - !ruby/object:Api::Type::String
            name: 'mainPageSuffix'
            description: |
              If the requested object path is missing, the service will ensure
              the path has a trailing '/', append this suffix, and attempt to
              retrieve the resulting object. This allows the creation of
              index.html objects to represent directory pages.
          - !ruby/object:Api::Type::String
            name: 'notFoundPage'
            description: |
              If the requested object path is missing, and any mainPageSuffix
              object is missing, if applicable, the service will return the
              named object from this bucket as the content for a 404 Not Found
              result.
      - !ruby/object:Api::Type::KeyValuePairs
        name: 'labels'
        description: |
          Labels applied to this bucket.  A list of key->value pairs.
      - !ruby/object:Api::Type::NestedObject
        name: 'encryption'
        description: |
          Encryption configuration for the bucket
        properties:
          - !ruby/object:Api::Type::String
            name: 'defaultKmsKeyName'
            description: |
              A Cloud KMS key that will be used to encrypt objects inserted into this bucket,
              if no encryption method is specified.
      - !ruby/object:Api::Type::NestedObject
        name: 'retentionPolicy'
        description: |
          Retention policy for the bucket
        properties:
          - !ruby/object:Api::Type::Time
            name: 'effectiveTime'
            description: |
              The time from which the retention policy was effective
          - !ruby/object:Api::Type::Boolean
            name: 'isLocked'
            description: |
              If the retention policy is locked. If true, the retention policy cannot be removed and the period cannot
              be reduced.
          - !ruby/object:Api::Type::Integer
            name: 'retentionPeriod'
            description: |
              The period of time, in seconds, that objects in the bucket must be retained and cannot be deleted,
              overwritten, or made noncurrent.
    parameters:
      - !ruby/object:Api::Type::String
        name: 'project'
        description: 'A valid API project identifier.'
        input: true
      - !ruby/object:Api::Type::Enum
        name: 'predefinedDefaultObjectAcl'
        description: |
          Apply a predefined set of default object access controls to this
          bucket.

          Acceptable values are:
            - "authenticatedRead": Object owner gets OWNER access, and
              allAuthenticatedUsers get READER access.
            - "bucketOwnerFullControl": Object owner gets OWNER access, and
              project team owners get OWNER access.
            - "bucketOwnerRead": Object owner gets OWNER access, and project
              team owners get READER access.
            - "private": Object owner gets OWNER access.
            - "projectPrivate": Object owner gets OWNER access, and project team
              members get access according to their roles.
            - "publicRead": Object owner gets OWNER access, and allUsers get
              READER access.
        values:
          - :authenticatedRead
          - :bucketOwnerFullControl
          - :bucketOwnerRead
          - :private
          - :projectPrivate
          - :publicRead
        input: true
  - !ruby/object:Api::Resource
    name: 'BucketAccessControl'
    kind: 'storage#bucketAccessControl'
    base_url: b/{{bucket}}/acl
    self_link: b/{{bucket}}/acl/{{entity}}
    collection_url_key: items
    references: !ruby/object:Api::Resource::ReferenceLinks
      guides:
        'Official Documentation': 'https://cloud.google.com/storage/docs/access-control/lists'
      api: 'https://cloud.google.com/storage/docs/json_api/v1/bucketAccessControls'
    description: |
      The BucketAccessControls resource represents the Access Control Lists
      (ACLs) for buckets within Google Cloud Storage. ACLs let you specify who
      has access to your data and to what extent.

      There are three roles that can be assigned to an entity:

      READERs can get the bucket, though no acl property will be returned, and
      list the bucket's objects.  WRITERs are READERs, and they can insert
      objects into the bucket and delete the bucket's objects.  OWNERs are
      WRITERs, and they can get the acl property of a bucket, update a bucket,
      and call all BucketAccessControls methods on the bucket.  For more
      information, see Access Control, with the caveat that this API uses
      READER, WRITER, and OWNER instead of READ, WRITE, and FULL_CONTROL.
    identity:
      - entity
    properties:
      - !ruby/object:Api::Type::ResourceRef
        name: 'bucket'
        resource: 'Bucket'
        imports: 'name'
        description: 'The name of the bucket.'
        required: true
        input: true
      - !ruby/object:Api::Type::String
        name: 'domain'
        description: 'The domain associated with the entity.'
        output: true
      - !ruby/object:Api::Type::String
        name: 'email'
        description: 'The email address associated with the entity.'
        output: true
      - !ruby/object:Api::Type::String
        name: 'entity'
        description: |
          The entity holding the permission, in one of the following forms:
            user-userId
            user-email
            group-groupId
            group-email
            domain-domain
            project-team-projectId
            allUsers
            allAuthenticatedUsers
          Examples:
            The user liz@example.com would be user-liz@example.com.
            The group example@googlegroups.com would be
            group-example@googlegroups.com.
            To refer to all members of the Google Apps for Business domain
            example.com, the entity would be domain-example.com.
        required: true
        input: true
      - !ruby/object:Api::Type::String
        name: 'entityId'
        description: 'The ID for the entity'
        output: true
      # | 'etag' is not applicable for state convergence.
      - !ruby/object:Api::Type::String
        name: 'id'
        description: 'The ID of the access-control entry.'
        output: true
      - !ruby/object:Api::Type::NestedObject
        name: 'projectTeam'
        description: 'The project team associated with the entity'
        output: true
        properties:
          - !ruby/object:Api::Type::String
            name: 'projectNumber'
            description: 'The project team associated with the entity'
          - !ruby/object:Api::Type::Enum
            name: 'team'
            description: 'The team.'
            values:
              - :editors
              - :owners
              - :viewers
      - !ruby/object:Api::Type::Enum
        name: 'role'
        description: 'The access permission for the entity.'
        values:
          - :OWNER
          - :READER
          - :WRITER
  - !ruby/object:Api::Resource
    name: 'ObjectAccessControl'
    kind: 'storage#objectAccessControl'
    base_url: b/{{bucket}}/o/{{%object}}/acl
    self_link: b/{{bucket}}/o/{{%object}}/acl/{{entity}}
    references: !ruby/object:Api::Resource::ReferenceLinks
      guides:
        'Official Documentation': 'https://cloud.google.com/storage/docs/access-control/create-manage-lists'
      api: 'https://cloud.google.com/storage/docs/json_api/v1/objectAccessControls'
    description: |
      The ObjectAccessControls resources represent the Access Control Lists
      (ACLs) for objects within Google Cloud Storage. ACLs let you specify
      who has access to your data and to what extent.

      There are two roles that can be assigned to an entity:

      READERs can get an object, though the acl property will not be revealed.
      OWNERs are READERs, and they can get the acl property, update an object,
      and call all objectAccessControls methods on the object. The owner of an
      object is always an OWNER.
      For more information, see Access Control, with the caveat that this API
      uses READER and OWNER instead of READ and FULL_CONTROL.
    properties:
      - !ruby/object:Api::Type::ResourceRef
        name: 'bucket'
        resource: 'Bucket'
        imports: 'name'
        description: 'The name of the bucket.'
        required: true
      - !ruby/object:Api::Type::String
        name: 'domain'
        description: 'The domain associated with the entity.'
        output: true
      - !ruby/object:Api::Type::String
        name: 'email'
        description: 'The email address associated with the entity.'
        output: true
      - !ruby/object:Api::Type::String
        name: 'entity'
        required: true
        description: |
          The entity holding the permission, in one of the following forms:
            * user-{{userId}}
            * user-{{email}} (such as "user-liz@example.com")
            * group-{{groupId}}
            * group-{{email}} (such as "group-example@googlegroups.com")
            * domain-{{domain}} (such as "domain-example.com")
            * project-team-{{projectId}}
            * allUsers
            * allAuthenticatedUsers
      - !ruby/object:Api::Type::String
        name: 'entityId'
        output: true
        description: 'The ID for the entity'
      # | 'etag' is not applicable for state convergence.
      - !ruby/object:Api::Type::Integer
        name: 'generation'
        description: 'The content generation of the object, if applied to an object.'
        output: true
      - !ruby/object:Api::Type::String
        name: 'id'
        description: 'The ID of the access-control entry.'
        output: true
      - !ruby/object:Api::Type::String
        name: 'object'
        description: 'The name of the object, if applied to an object.'
        required: true
      - !ruby/object:Api::Type::NestedObject
        name: 'projectTeam'
        description: 'The project team associated with the entity'
        output: true
        properties:
          - !ruby/object:Api::Type::String
            name: 'projectNumber'
            description: 'The project team associated with the entity'
          - !ruby/object:Api::Type::Enum
            name: 'team'
            description: 'The team.'
            values:
              - :editors
              - :owners
              - :viewers
      - !ruby/object:Api::Type::Enum
        name: 'role'
        description: 'The access permission for the entity.'
        required: true
        values:
          - :OWNER
          - :READER
  - !ruby/object:Api::Resource
    name: 'DefaultObjectACL'
    kind: 'storage#objectAccessControl'
    base_url: b/{{bucket}}/defaultObjectAcl
    self_link: b/{{bucket}}/defaultObjectAcl/{{entity}}
    references: !ruby/object:Api::Resource::ReferenceLinks
      guides:
        'Official Documentation': 'https://cloud.google.com/storage/docs/access-control/create-manage-lists'
      api: 'https://cloud.google.com/storage/docs/json_api/v1/defaultObjectAccessControls'
    description: |
      The DefaultObjectAccessControls resources represent the Access Control
      Lists (ACLs) applied to a new object within a Google Cloud Storage bucket
      when no ACL was provided for that object. ACLs let you specify who has
      access to your bucket contents and to what extent.

      There are two roles that can be assigned to an entity:

      READERs can get an object, though the acl property will not be revealed.
      OWNERs are READERs, and they can get the acl property, update an object,
      and call all objectAccessControls methods on the object. The owner of an
      object is always an OWNER.
      For more information, see Access Control, with the caveat that this API
      uses READER and OWNER instead of READ and FULL_CONTROL.
    properties:
      - !ruby/object:Api::Type::ResourceRef
        name: 'bucket'
        resource: 'Bucket'
        imports: 'name'
        description: 'The name of the bucket.'
        required: true
      - !ruby/object:Api::Type::String
        name: 'domain'
        description: 'The domain associated with the entity.'
        output: true
      - !ruby/object:Api::Type::String
        name: 'email'
        description: 'The email address associated with the entity.'
        output: true
      - !ruby/object:Api::Type::String
        name: 'entity'
        required: true
        description: |
          The entity holding the permission, in one of the following forms:
            * user-{{userId}}
            * user-{{email}} (such as "user-liz@example.com")
            * group-{{groupId}}
            * group-{{email}} (such as "group-example@googlegroups.com")
            * domain-{{domain}} (such as "domain-example.com")
            * project-team-{{projectId}}
            * allUsers
            * allAuthenticatedUsers
      - !ruby/object:Api::Type::String
        name: 'entityId'
        output: true
        description: 'The ID for the entity'
      # | 'etag' is not applicable for state convergence.
      - !ruby/object:Api::Type::Integer
        name: 'generation'
        description: 'The content generation of the object, if applied to an object.'
        output: true
      - !ruby/object:Api::Type::String
        name: 'id'
        description: 'The ID of the access-control entry.'
        output: true
      - !ruby/object:Api::Type::String
        name: 'object'
        description: 'The name of the object, if applied to an object.'
        required: false
      - !ruby/object:Api::Type::NestedObject
        name: 'projectTeam'
        description: 'The project team associated with the entity'
        output: true
        properties:
          - !ruby/object:Api::Type::String
            name: 'projectNumber'
            description: 'The project team associated with the entity'
          - !ruby/object:Api::Type::Enum
            name: 'team'
            description: 'The team.'
            values:
              - :editors
              - :owners
              - :viewers
      - !ruby/object:Api::Type::Enum
        name: 'role'
        description: 'The access permission for the entity.'
        required: true
        values:
          - :OWNER
          - :READER
  - !ruby/object:Api::Resource
    name: 'Object'
    base_url: b/{{bucket}}/o
    self_link: b/{{bucket}}/o/{{object}}
    collection_url_key: items
    description: |
      Information about an object stored in a GCS bucket
    properties:
      - !ruby/object:Api::Type::String
        name: 'bucket'
        description: 'The name of the bucket.'
        required: true
      - !ruby/object:Api::Type::String
        name: 'object'
        description: 'The name of the object.'
        required: true
      - !ruby/object:Api::Type::String
        name: 'contentType'
        description: |
          The Content-Type of the object data.

          See https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types/Complete_list_of_MIME_types
          for more information on possible Content-Types
      - !ruby/object:Api::Type::String
        name: 'crc32c'
        description: 'CRC32c checksum.'
      - !ruby/object:Api::Type::String
        name: 'etag'
        description: 'The object entity tag.'
      - !ruby/object:Api::Type::Integer
        name: 'generation'
        description: 'The content generation of this object. Used for object versioning.'
      - !ruby/object:Api::Type::String
        name: 'id'
        description: 'The ID of the object, including the bucket name, object name, and generation number.'
      - !ruby/object:Api::Type::String
        name: 'md5Hash'
        description: 'MD5 hash of the data; encoded using base64.'
      - !ruby/object:Api::Type::String
        name: 'mediaLink'
        description: 'Media download link.'
      - !ruby/object:Api::Type::Integer
        name: 'metageneration'
        description: |
          The version of the metadata for this object at this generation. Used for preconditions and for
          detecting changes in metadata. A metageneration number is only meaningful in the context of a
          particular generation of a particular object.
      - !ruby/object:Api::Type::String
        name: 'name'
        description: 'The name of the object.'
      - !ruby/object:Api::Type::Integer
        name: 'size'
        description: 'Content-Length of the data in bytes.'
      - !ruby/object:Api::Type::String
        name: 'storageClass'
        description: 'Storage class of the object.'
      - !ruby/object:Api::Type::Time
        name: 'timeCreated'
        description: 'The time this object was created.'
      - !ruby/object:Api::Type::Time
        name: 'timeDeleted'
        description: |
          The time this object was deleted. Returned if and only if this version of the object is no longer
          a live version, but remains in the bucket as a noncurrent version.
      - !ruby/object:Api::Type::Time
        name: timeStorageClassUpdated
        description: The time at which the object's storage class was last changed.
      - !ruby/object:Api::Type::Time
        name: timeUpdated
        api_name: updated
        description: The modification time of the object metadata.
  - !ruby/object:Api::Resource
    name: 'HmacKey'
    kind: 'storage#hmacKey'
    base_url: projects/{{project}}/hmacKeys
    create_url: projects/{{project}}/hmacKeys?serviceAccountEmail={{serviceAccountEmail}}
    self_link: projects/{{project}}/hmacKeys/{{accessId}}
    # technically updatable, but implemented as custom update for new fingerprint support
    input: true
    references: !ruby/object:Api::Resource::ReferenceLinks
      guides:
        'Official Documentation': 'https://cloud.google.com/storage/docs/authentication/managing-hmackeys'
      api: 'https://cloud.google.com/storage/docs/json_api/v1/projects/hmacKeys'
    description: |
      The hmacKeys resource represents an HMAC key within Cloud Storage. The resource
      consists of a secret and HMAC key metadata. HMAC keys can be used as credentials
      for service accounts.
    properties:
      - !ruby/object:Api::Type::String
        name: 'serviceAccountEmail'
        description: |
          The email address of the key's associated service account.
        required: true
      - !ruby/object:Api::Type::Enum
        name: 'state'
        description: |
          The state of the key. Can be set to one of ACTIVE, INACTIVE.
        default_value: :ACTIVE
        values:
          - :ACTIVE
          - :INACTIVE
          # - :DELETED (not directly settable)
        update_verb: :PUT
        update_url: projects/{{project}}/hmacKeys/{{accessId}}
        update_id: 'state'
        fingerprint_name: 'etag'
      - !ruby/object:Api::Type::String
        name: 'secret'
        output: true
        description: |
          HMAC secret key material.
      - !ruby/object:Api::Type::String
        name: 'accessId'
        output: true
        description: |
          The access ID of the HMAC Key.
      - !ruby/object:Api::Type::String
        name: 'id'
        output: true
        description: |
          The ID of the HMAC key, including the Project ID and the Access ID.
      - !ruby/object:Api::Type::Time
        name: 'timeCreated'
        output: true
        description: |
          'The creation time of the HMAC key in RFC 3339 format. '
      - !ruby/object:Api::Type::Time
        name: 'updated'
        output: true
        description: |
          'The last modification time of the HMAC key metadata in RFC 3339 format.'
