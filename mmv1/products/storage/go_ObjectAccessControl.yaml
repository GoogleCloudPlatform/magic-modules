# Copyright 2024 Google Inc.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# Warning: This is a temporary file, and should not be edited directly
---
name: 'ObjectAccessControl'
kind: 'storage#objectAccessControl'
description: |
  The ObjectAccessControls resources represent the Access Control Lists
  (ACLs) for objects within Google Cloud Storage. ACLs let you specify
  who has access to your data and to what extent.

  There are two roles that can be assigned to an entity:

  READERs can get an object, though the acl property will not be revealed.
  OWNERs are READERs, and they can get the acl property, update an object,
  and call all objectAccessControls methods on the object. The owner of an
  object is always an OWNER.
  For more information, see Access Control, with the caveat that this API
  uses READER and OWNER instead of READ and FULL_CONTROL.
references:
  guides:
    'Official Documentation': 'https://cloud.google.com/storage/docs/access-control/create-manage-lists'
  api: 'https://cloud.google.com/storage/docs/json_api/v1/objectAccessControls'
docs:
id_format: '{{bucket}}/{{object}}/{{entity}}'
base_url: 'b/{{bucket}}/o/{{%object}}/acl'
self_link: 'b/{{bucket}}/o/{{%object}}/acl/{{entity}}'
mutex: 'storage/buckets/{{bucket}}/objects/{{object}}'
import_format:
  - '{{bucket}}/{{%object}}/{{entity}}'
timeouts:
  insert_minutes: 20
  update_minutes: 20
  delete_minutes: 20
custom_code:
skip_sweeper: true
examples:
  - name: 'storage_object_access_control_public_object'
    primary_resource_id: 'public_rule'
    vars:
      bucket_name: 'static-content-bucket'
      object_name: 'public-object'
parameters:
properties:
  - name: 'bucket'
    type: ResourceRef
    description: 'The name of the bucket.'
    required: true
    resource: 'Bucket'
    imports: 'name'
  - name: 'domain'
    type: String
    description: 'The domain associated with the entity.'
    output: true
  - name: 'email'
    type: String
    description: 'The email address associated with the entity.'
    output: true
  - name: 'entity'
    type: String
    description: |
      The entity holding the permission, in one of the following forms:
        * user-{{userId}}
        * user-{{email}} (such as "user-liz@example.com")
        * group-{{groupId}}
        * group-{{email}} (such as "group-example@googlegroups.com")
        * domain-{{domain}} (such as "domain-example.com")
        * project-team-{{projectId}}
        * allUsers
        * allAuthenticatedUsers
    required: true
  - name: 'entityId'
    type: String
    description: 'The ID for the entity'
  # | 'etag' is not applicable for state convergence.
    output: true
  - name: 'generation'
    type: Integer
    description:
      'The content generation of the object, if applied to an object.'
    output: true
  - name: 'object'
    type: String
    description: 'The name of the object to apply the access control to.'
    required: true
  - name: 'projectTeam'
    type: NestedObject
    description: 'The project team associated with the entity'
    output: true
    properties:
      - name: 'projectNumber'
        type: String
        description: 'The project team associated with the entity'
      - name: 'team'
        type: Enum
        description: 'The team.'
        enum_values:
          - 'editors'
          - 'owners'
          - 'viewers'
  - name: 'role'
    type: Enum
    description: 'The access permission for the entity.'
    required: true
    enum_values:
      - 'OWNER'
      - 'READER'
