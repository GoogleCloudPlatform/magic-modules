# Copyright 2023 Google Inc.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

--- !ruby/object:Api::Resource
name: 'EntityType'
base_url: 'projects/{{project}}/agent/entityTypes/'
self_link: '{{name}}'
update_verb: :PATCH
description: |
  Represents an entity type. Entity types serve as a tool for extracting parameter values from natural language queries.
references: !ruby/object:Api::Resource::ReferenceLinks
  guides:
    'Official Documentation': 'https://cloud.google.com/dialogflow/docs/'
  api: 'https://cloud.google.com/dialogflow/docs/reference/rest/v2/projects.agent.entityTypes'
examples:
  - !ruby/object:Provider::Terraform::Examples
    name: 'dialogflow_entity_type_basic'
    primary_resource_id: 'basic_entity_type'
    skip_test: true
    vars:
      intent_name: 'basic-entity-type'
# Skip sweeper gen since this is a child resource.
skip_sweeper: true
id_format: '{{name}}'
import_format: ['{{name}}']
custom_code: !ruby/object:Provider::Terraform::CustomCode
  resource_definition: templates/terraform/resource_definition/default_provider_values.erb
  custom_import: templates/terraform/custom_import/self_link_as_name_set_project.go.erb
  post_create: 'templates/terraform/post_create/set_computed_name.erb'
properties:
  - !ruby/object:Api::Type::String
    name: 'name'
    output: true
    description: |
      The unique identifier of the entity type.
      Format: projects/<Project ID>/agent/entityTypes/<Entity type ID>.
  - !ruby/object:Api::Type::String
    name: 'displayName'
    required: true
    description: |
      The name of this entity type to be displayed on the console.
  - !ruby/object:Api::Type::Enum
    name: 'kind'
    required: true
    description: |
      Indicates the kind of entity type.
      * KIND_MAP: Map entity types allow mapping of a group of synonyms to a reference value.
      * KIND_LIST: List entity types contain a set of entries that do not map to reference values. However, list entity
      types can contain references to other entity types (with or without aliases).
      * KIND_REGEXP: Regexp entity types allow to specify regular expressions in entries values.
    values:
      - :KIND_MAP
      - :KIND_LIST
      - :KIND_REGEXP
  - !ruby/object:Api::Type::Boolean
    name: 'enableFuzzyExtraction'
    description: |
      Enables fuzzy entity extraction during classification.
  - !ruby/object:Api::Type::Array
    name: 'entities'
    description: |
      The collection of entity entries associated with the entity type.
    item_type: !ruby/object:Api::Type::NestedObject
      properties:
        - !ruby/object:Api::Type::String
          name: 'value'
          required: true
          description: |
            The primary value associated with this entity entry. For example, if the entity type is vegetable, the value
            could be scallions.
            For KIND_MAP entity types:
            * A reference value to be used in place of synonyms.
            For KIND_LIST entity types:
            * A string that can contain references to other entity types (with or without aliases).
        - !ruby/object:Api::Type::Array
          name: 'synonyms'
          required: true
          item_type: Api::Type::String
          description: |
            A collection of value synonyms. For example, if the entity type is vegetable, and value is scallions, a synonym
            could be green onions.
            For KIND_LIST entity types:
            * This collection must contain exactly one synonym equal to value.
