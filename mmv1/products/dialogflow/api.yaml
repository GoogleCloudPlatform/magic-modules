# Copyright 2020 Google Inc.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

--- !ruby/object:Api::Product
name: Dialogflow
display_name: Dialogflow
versions:
  - !ruby/object:Api::Product::Version
    name: ga
    base_url: https://dialogflow.googleapis.com/v2/
scopes:
  - https://www.googleapis.com/auth/cloud-platform
apis_required:
  - !ruby/object:Api::Product::ApiReference
    name: Dialogflow API
    url: https://console.cloud.google.com/apis/library/dialogflow.googleapis.com
objects:
  - !ruby/object:Api::Resource
    name: 'Agent'
    base_url: "projects/{{project}}/agent"
    self_link: "projects/{{project}}/agent"
    update_verb: :POST
    description: |
      A Dialogflow agent is a virtual agent that handles conversations with your end-users. It is a natural language
      understanding module that understands the nuances of human language. Dialogflow translates end-user text or audio
      during a conversation to structured data that your apps and services can understand. You design and build a Dialogflow
      agent to handle the types of conversations required for your system.
    references: !ruby/object:Api::Resource::ReferenceLinks
      guides:
        'Official Documentation':
          'https://cloud.google.com/dialogflow/docs/'
      api: 'https://cloud.google.com/dialogflow/docs/reference/rest/v2/projects/agent'
    properties:
      - !ruby/object:Api::Type::String
        name: 'displayName'
        required: true
        description: |
          The name of this agent.
      - !ruby/object:Api::Type::String
        name: 'defaultLanguageCode'
        description: |
         The default language of the agent as a language tag. [See Language Support](https://cloud.google.com/dialogflow/docs/reference/language) 
         for a list of the currently supported language codes. This field cannot be updated after creation.
        input: true
        required: true
      - !ruby/object:Api::Type::Array
        name: 'supportedLanguageCodes'
        item_type: Api::Type::String
        description: |
         The list of all languages supported by this agent (except for the defaultLanguageCode).
      - !ruby/object:Api::Type::String
        name: 'timeZone'
        description: |
         The time zone of this agent from the [time zone database](https://www.iana.org/time-zones), e.g., America/New_York,
         Europe/Paris.
        required: true
      - !ruby/object:Api::Type::String
        name: 'description'
        description: |
         The description of this agent. The maximum length is 500 characters. If exceeded, the request is rejected.
      - !ruby/object:Api::Type::String
        name: 'avatarUri'
        description: |
         The URI of the agent's avatar, which are used throughout the Dialogflow console. When an image URL is entered
         into this field, the Dialogflow will save the image in the backend. The address of the backend image returned
         from the API will be shown in the [avatarUriBackend] field.
      - !ruby/object:Api::Type::String
        name: 'avatarUriBackend'
        description: |
         The URI of the agent's avatar as returned from the API. Output only. To provide an image URL for the agent avatar,
         the [avatarUri] field can be used.
        output: true
      - !ruby/object:Api::Type::Boolean
        name: 'enableLogging'
        description: |
         Determines whether this agent should log conversation queries.
      - !ruby/object:Api::Type::Enum
        name: 'matchMode'
        description: |
          Determines how intents are detected from user queries.
          * MATCH_MODE_HYBRID: Best for agents with a small number of examples in intents and/or wide use of templates
          syntax and composite entities.
          * MATCH_MODE_ML_ONLY: Can be used for agents with a large number of examples in intents, especially the ones
          using @sys.any or very large developer entities.
        values:
          - :MATCH_MODE_HYBRID
          - :MATCH_MODE_ML_ONLY
      - !ruby/object:Api::Type::Double
        name: 'classificationThreshold'
        description: |
         To filter out false positive results and still get variety in matched natural language inputs for your agent,
         you can tune the machine learning classification threshold. If the returned score value is less than the threshold
         value, then a fallback intent will be triggered or, if there are no fallback intents defined, no intent will be 
         triggered. The score values range from 0.0 (completely uncertain) to 1.0 (completely certain). If set to 0.0, the 
         default of 0.3 is used.
      - !ruby/object:Api::Type::Enum
        name: 'apiVersion'
        description: |
          API version displayed in Dialogflow console. If not specified, V2 API is assumed. Clients are free to query
          different service endpoints for different API versions. However, bots connectors and webhook calls will follow 
          the specified API version.
          * API_VERSION_V1: Legacy V1 API.
          * API_VERSION_V2: V2 API.
          * API_VERSION_V2_BETA_1: V2beta1 API.
        values:
          - :API_VERSION_V1
          - :API_VERSION_V2
          - :API_VERSION_V2_BETA_1
      - !ruby/object:Api::Type::Enum
        name: 'tier'
        description: |
          The agent tier. If not specified, TIER_STANDARD is assumed.
          * TIER_STANDARD: Standard tier.
          * TIER_ENTERPRISE: Enterprise tier (Essentials).
          * TIER_ENTERPRISE_PLUS: Enterprise tier (Plus).
          NOTE: Due to consistency issues, the provider will not read this field from the API. Drift is possible between 
          the Terraform state and Dialogflow if the agent tier is changed outside of Terraform.
        values:
          - :TIER_STANDARD
          - :TIER_ENTERPRISE
          - :TIER_ENTERPRISE_PLUS
  - !ruby/object:Api::Resource
    name: 'Intent'
    base_url: "projects/{{project}}/agent/intents/"
    self_link: "{{name}}"
    update_verb: :PATCH
    description: |
      Represents a Dialogflow intent. Intents convert a number of user expressions or patterns into an action. An action
      is an extraction of a user command or sentence semantics.
    references: !ruby/object:Api::Resource::ReferenceLinks
      guides:
        'Official Documentation':
          'https://cloud.google.com/dialogflow/docs/'
      api: 'https://cloud.google.com/dialogflow/docs/reference/rest/v2/projects.agent.intents'
    properties:
      - !ruby/object:Api::Type::String
        name: 'name'
        output: true
        description: |
          The unique identifier of this intent. 
          Format: projects/<Project ID>/agent/intents/<Intent ID>.
      - !ruby/object:Api::Type::String
        name: 'displayName'
        required: true
        description: |
          The name of this intent to be displayed on the console.
      - !ruby/object:Api::Type::Enum
        name: 'webhookState'
        description: |
          Indicates whether webhooks are enabled for the intent.
          * WEBHOOK_STATE_ENABLED: Webhook is enabled in the agent and in the intent.
          * WEBHOOK_STATE_ENABLED_FOR_SLOT_FILLING: Webhook is enabled in the agent and in the intent. Also, each slot
          filling prompt is forwarded to the webhook.
        values:
          - :WEBHOOK_STATE_ENABLED
          - :WEBHOOK_STATE_ENABLED_FOR_SLOT_FILLING
      - !ruby/object:Api::Type::Integer
        name: 'priority'
        description: |
          The priority of this intent. Higher numbers represent higher priorities.
            - If the supplied value is unspecified or 0, the service translates the value to 500,000, which corresponds
            to the Normal priority in the console.
            - If the supplied value is negative, the intent is ignored in runtime detect intent requests.
      - !ruby/object:Api::Type::Boolean
        name: 'isFallback'
        description: |
         Indicates whether this is a fallback intent.
      - !ruby/object:Api::Type::Boolean
        name: 'mlDisabled'
        description: |
         Indicates whether Machine Learning is disabled for the intent.
         Note: If mlDisabled setting is set to true, then this intent is not taken into account during inference in ML
         ONLY match mode. Also, auto-markup in the UI is turned off.
      - !ruby/object:Api::Type::Array
        name: 'inputContextNames'
        item_type: Api::Type::String
        description: |
         The list of context names required for this intent to be triggered.
         Format: projects/<Project ID>/agent/sessions/-/contexts/<Context ID>.
      - !ruby/object:Api::Type::Array
        name: 'events'
        item_type: Api::Type::String
        description: |
         The collection of event names that trigger the intent. If the collection of input contexts is not empty, all of
         the contexts must be present in the active user session for an event to trigger this intent. See the 
         [events reference](https://cloud.google.com/dialogflow/docs/events-overview) for more details.
      - !ruby/object:Api::Type::String
        name: 'action'
        description: |
          The name of the action associated with the intent.
          Note: The action name must not contain whitespaces.
      - !ruby/object:Api::Type::Boolean
        name: 'resetContexts'
        description: |
         Indicates whether to delete all contexts in the current session when this intent is matched.
      - !ruby/object:Api::Type::Array
        name: 'defaultResponsePlatforms'
        description: |
         The list of platforms for which the first responses will be copied from the messages in PLATFORM_UNSPECIFIED
         (i.e. default platform).
        item_type: !ruby/object:Api::Type::Enum
          name: 'platform'
          description: |
            Represents different platforms that a rich message can be intended for.
          values:
            - :FACEBOOK
            - :SLACK
            - :TELEGRAM
            - :KIK
            - :SKYPE
            - :LINE
            - :VIBER
            - :ACTIONS_ON_GOOGLE
            - :GOOGLE_HANGOUTS
      - !ruby/object:Api::Type::String
        name: 'rootFollowupIntentName'
        description: |
          The unique identifier of the root intent in the chain of followup intents. It identifies the correct followup
          intents chain for this intent.
          Format: projects/<Project ID>/agent/intents/<Intent ID>.
        output: true
      - !ruby/object:Api::Type::String
        name: 'parentFollowupIntentName'
        description: |
         The unique identifier of the parent intent in the chain of followup intents.
         Format: projects/<Project ID>/agent/intents/<Intent ID>.
        input: true
      - !ruby/object:Api::Type::Array
        name: 'followupIntentInfo'
        output: true
        description: |
         Information about all followup intents that have this intent as a direct or indirect parent. We populate this field
         only in the output.
        item_type: !ruby/object:Api::Type::NestedObject
          properties:
          - !ruby/object:Api::Type::String
            name: 'followupIntentName'
            description: |
              The unique identifier of the followup intent.
              Format: projects/<Project ID>/agent/intents/<Intent ID>.
          - !ruby/object:Api::Type::String
            name: 'parentFollowupIntentName'
            description: |
              The unique identifier of the followup intent's parent.
              Format: projects/<Project ID>/agent/intents/<Intent ID>.
  - !ruby/object:Api::Resource
    name: 'EntityType'
    base_url: "projects/{{project}}/agent/entityTypes/"
    self_link: "{{name}}"
    update_verb: :PATCH
    description: |
      Represents an entity type. Entity types serve as a tool for extracting parameter values from natural language queries.
    references: !ruby/object:Api::Resource::ReferenceLinks
      guides:
        'Official Documentation':
          'https://cloud.google.com/dialogflow/docs/'
      api: 'https://cloud.google.com/dialogflow/docs/reference/rest/v2/projects.agent.entityTypes'
    properties:
      - !ruby/object:Api::Type::String
        name: 'name'
        output: true
        description: |
          The unique identifier of the entity type. 
          Format: projects/<Project ID>/agent/entityTypes/<Entity type ID>.
      - !ruby/object:Api::Type::String
        name: 'displayName'
        required: true
        description: |
          The name of this entity type to be displayed on the console.
      - !ruby/object:Api::Type::Enum
        name: 'kind'
        required: true
        description: |
          Indicates the kind of entity type.
          * KIND_MAP: Map entity types allow mapping of a group of synonyms to a reference value.
          * KIND_LIST: List entity types contain a set of entries that do not map to reference values. However, list entity
          types can contain references to other entity types (with or without aliases).
          * KIND_REGEXP: Regexp entity types allow to specify regular expressions in entries values.
        values:
          - :KIND_MAP
          - :KIND_LIST
          - :KIND_REGEXP
      - !ruby/object:Api::Type::Boolean
        name: 'enableFuzzyExtraction'
        description: |
         Enables fuzzy entity extraction during classification.
      - !ruby/object:Api::Type::Array
        name: 'entities'
        description: |
         The collection of entity entries associated with the entity type.
        item_type: !ruby/object:Api::Type::NestedObject
          properties:
          - !ruby/object:Api::Type::String
            name: 'value'
            required: true
            description: |
              The primary value associated with this entity entry. For example, if the entity type is vegetable, the value
              could be scallions.
              For KIND_MAP entity types:
              * A reference value to be used in place of synonyms.
              For KIND_LIST entity types:
              * A string that can contain references to other entity types (with or without aliases).
          - !ruby/object:Api::Type::Array
            name: 'synonyms'
            required: true
            item_type: Api::Type::String
            description: |
              A collection of value synonyms. For example, if the entity type is vegetable, and value is scallions, a synonym
              could be green onions.
              For KIND_LIST entity types:
              * This collection must contain exactly one synonym equal to value.
  - !ruby/object:Api::Resource
    name: 'Fulfillment'
    base_url: "projects/{{project}}/agent/fulfillment/"
    self_link: "{{name}}"
    update_verb: :PATCH
    delete_verb: :PATCH
    create_verb: :PATCH
    create_url: projects/{{project}}/agent/fulfillment/?updateMask=name,displayName,enabled,genericWebService,features
    update_url: projects/{{project}}/agent/fulfillment/
    delete_url: projects/{{project}}/agent/fulfillment/?updateMask=name,displayName,enabled,genericWebService,features
    update_mask: true
    description: |
      By default, your agent responds to a matched intent with a static response. If you're using one of the integration options, you can provide a more dynamic response by using fulfillment. When you enable fulfillment for an intent, Dialogflow responds to that intent by calling a service that you define. For example, if an end-user wants to schedule a haircut on Friday, your service can check your database and respond to the end-user with availability information for Friday.
    references: !ruby/object:Api::Resource::ReferenceLinks
      guides:
        'Official Documentation':
          'https://cloud.google.com/dialogflow/es/docs/fulfillment-overview'
      api: 'https://cloud.google.com/dialogflow/es/docs/reference/rest/v2/projects.agent/getFulfillment'
    properties:
      - !ruby/object:Api::Type::String
        name: 'name'
        output: true
        description: |
          The unique identifier of the fulfillment. 
          Format: projects/<Project ID>/agent/fulfillment - projects/<Project ID>/locations/<Location ID>/agent/fulfillment
      - !ruby/object:Api::Type::String
        name: 'displayName'
        required: true
        description: |
          The human-readable name of the fulfillment, unique within the agent.
      - !ruby/object:Api::Type::Boolean
        name: 'enabled'
        description: |
          Whether fulfillment is enabled.
      - !ruby/object:Api::Type::Array
        name: 'features'
        description: |
         The field defines whether the fulfillment is enabled for certain features.
        item_type: !ruby/object:Api::Type::NestedObject
          properties:
          - !ruby/object:Api::Type::Enum
            name: 'type'
            required: true
            description: |
              The type of the feature that enabled for fulfillment.
              * SMALLTALK: Fulfillment is enabled for SmallTalk.
            values:
              - :SMALLTALK
      - !ruby/object:Api::Type::NestedObject
        name: 'genericWebService'
        description: |
          Represents configuration for a generic web service. Dialogflow supports two mechanisms for authentications: - Basic authentication with username and password. - Authentication with additional authentication headers.
        properties:
          - !ruby/object:Api::Type::String
            name: 'uri'
            required: true
            description: |
              The fulfillment URI for receiving POST requests. It must use https protocol.
          - !ruby/object:Api::Type::String
            name: 'username'
            description: |
              The user name for HTTP Basic authentication.
          - !ruby/object:Api::Type::String
            name: 'password'
            description: |
              The password for HTTP Basic authentication.
          - !ruby/object:Api::Type::KeyValuePairs
            name: 'requestHeaders'
            description: |
              The HTTP request headers to send together with fulfillment requests.