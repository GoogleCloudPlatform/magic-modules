# Copyright 2020 Google Inc.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

--- !ruby/object:Api::Product
name: Apigee
display_name: Apigee
versions:
  - !ruby/object:Api::Product::Version
    name: ga
    base_url: https://apigee.googleapis.com/v1/
  # Apigee has no beta API, but running the full Terraform
  # acceptance tests depends on a beta-only resource and a bug in MM
  # will generate beta tests against the GA provider in this case, so
  # we fake a beta API with the same endpoint as the GA API.
  - !ruby/object:Api::Product::Version
    name: beta
    base_url: https://apigee.googleapis.com/v1/
scopes:
  - https://www.googleapis.com/auth/cloud-platform
apis_required:
  - !ruby/object:Api::Product::ApiReference
    name: Apigee API
    url: https://console.cloud.google.com/apis/library/apigee.googleapis.com/
objects:
  - !ruby/object:Api::Resource
    name: 'Organization'
    base_url: 'organizations'
    create_url: 'organizations?parent=projects/{{project_id}}'
    delete_url: 'organizations/{{name}}?retention={{retention}}'
    self_link: 'organizations/{{name}}'
    async: !ruby/object:Api::OpAsync
      actions: ['create', 'update']
      operation: !ruby/object:Api::OpAsync::Operation
        path: 'name'
        base_url: '{{op_id}}'
        wait_ms: 1000
      result: !ruby/object:Api::OpAsync::Result
        path: 'response'
        resource_inside_response: true
      status: !ruby/object:Api::OpAsync::Status
        path: 'done'
        complete: True
        allowed:
          - True
          - False
      error: !ruby/object:Api::OpAsync::Error
        path: 'error'
        message: 'message'
    description: |
      An `Organization` is the top-level container in Apigee.
    parameters:
      - !ruby/object:Api::Type::String
        name: 'projectId'
        description: |
          The project ID associated with the Apigee organization.
        required: true
        input: true
        url_param_only: true
      - !ruby/object:Api::Type::Enum
        name: 'retention'
        description: |
          Optional. This setting is applicable only for organizations that are soft-deleted (i.e., BillingType
          is not EVALUATION). It controls how long Organization data will be retained after the initial delete
          operation completes. During this period, the Organization may be restored to its last known state.
          After this period, the Organization will no longer be able to be restored.
        values:
          - "DELETION_RETENTION_UNSPECIFIED"
          - "MINIMUM"
        default_value: :DELETION_RETENTION_UNSPECIFIED
        required: false
        url_param_only: true
    properties:
      - !ruby/object:Api::Type::String
        name: 'name'
        description: |
          Output only. Name of the Apigee organization.
        output: true
      - !ruby/object:Api::Type::String
        name: 'displayName'
        description: |
          The display name of the Apigee organization.
      - !ruby/object:Api::Type::String
        name: 'description'
        description: |
          Description of the Apigee organization.
      - !ruby/object:Api::Type::String
        name: 'analyticsRegion'
        description: |
          Primary GCP region for analytics data storage. For valid values, see [Create an Apigee organization](https://cloud.google.com/apigee/docs/api-platform/get-started/create-org).
        input: true
      - !ruby/object:Api::Type::String
        name: 'authorizedNetwork'
        description: |
          Compute Engine network used for Service Networking to be peered with Apigee runtime instances.
          See [Getting started with the Service Networking API](https://cloud.google.com/service-infrastructure/docs/service-networking/getting-started).
          Valid only when `RuntimeType` is set to CLOUD. The value can be updated only when there are no runtime instances. For example: "default".
      - !ruby/object:Api::Type::Enum
        name: 'runtimeType'
        description: |
          Runtime type of the Apigee organization based on the Apigee subscription purchased.
        values:
          - "CLOUD"
          - "HYBRID"
        default_value: :CLOUD
        input: true
      - !ruby/object:Api::Type::String
        name: 'subscriptionType'
        description: |
          Output only. Subscription type of the Apigee organization.
          Valid values include trial (free, limited, and for evaluation purposes only) or paid (full subscription has been purchased).
        output: true
      - !ruby/object:Api::Type::String
        name: 'billingType'
        description: |
          Billing type of the Apigee organization. See [Apigee pricing](https://cloud.google.com/apigee/pricing).
        input: true
      - !ruby/object:Api::Type::String
        name: 'caCertificate'
        description: |
          Output only. Base64-encoded public certificate for the root CA of the Apigee organization.
          Valid only when `RuntimeType` is CLOUD. A base64-encoded string.
        output: true
      - !ruby/object:Api::Type::String
        name: 'runtimeDatabaseEncryptionKeyName'
        description: |
          Cloud KMS key name used for encrypting the data that is stored and replicated across runtime instances.
          Update is not allowed after the organization is created.
          If not specified, a Google-Managed encryption key will be used.
          Valid only when `RuntimeType` is CLOUD. For example: `projects/foo/locations/us/keyRings/bar/cryptoKeys/baz`.
        input: true
      - !ruby/object:Api::Type::NestedObject
        name: 'properties'
        description: Properties defined in the Apigee organization profile.
        properties:
          - !ruby/object:Api::Type::Array
            name: 'property'
            description: List of all properties in the object.
            item_type: !ruby/object:Api::Type::NestedObject
              properties:
                - !ruby/object:Api::Type::String
                  name: 'name'
                  description: Name of the property.
                - !ruby/object:Api::Type::String
                  name: 'value'
                  description: Value of the property.
    references: !ruby/object:Api::Resource::ReferenceLinks
      guides:
        'Creating an API organization':
          'https://cloud.google.com/apigee/docs/api-platform/get-started/create-org'
      api: 'https://cloud.google.com/apigee/docs/reference/apis/apigee/rest/v1/organizations'
  - !ruby/object:Api::Resource
    name: 'Instance'
    base_url: 'instances'
    create_url: '{{org_id}}/instances'
    self_link: '{{org_id}}/instances/{{name}}'
    async: !ruby/object:Api::OpAsync
      operation: !ruby/object:Api::OpAsync::Operation
        path: 'name'
        base_url: '{{op_id}}'
        wait_ms: 1000
      result: !ruby/object:Api::OpAsync::Result
        path: 'response'
        resource_inside_response: true
      status: !ruby/object:Api::OpAsync::Status
        path: 'done'
        complete: True
        allowed:
          - True
          - False
      error: !ruby/object:Api::OpAsync::Error
        path: 'error'
        message: 'message'
    input: true
    description: |
      An `Instance` is the runtime dataplane in Apigee.
    parameters:
      - !ruby/object:Api::Type::String
        name: 'orgId'
        description: |
          The Apigee Organization associated with the Apigee instance,
          in the format `organizations/{{org_name}}`.
        required: true
        input: true
        url_param_only: true
    properties:
      - !ruby/object:Api::Type::String
        name: 'name'
        description: |
          Resource ID of the instance.
        required: true
      - !ruby/object:Api::Type::String
        name: 'location'
        description: |
          Required. Compute Engine location where the instance resides.
        required: true
      - !ruby/object:Api::Type::String
        name: 'peeringCidrRange'
        description: |
          The size of the CIDR block range that will be reserved by the instance. For valid values,
          see [CidrRange](https://cloud.google.com/apigee/docs/reference/apis/apigee/rest/v1/organizations.instances#CidrRange) on the documentation.
      - !ruby/object:Api::Type::String
        name: 'ipRange'
        description: |
          IP range represents the customer-provided CIDR block of length 22 that will be used for
          the Apigee instance creation. This optional range, if provided, should be freely
          available as part of larger named range the customer has allocated to the Service
          Networking peering. If this is not provided, Apigee will automatically request for any
          available /22 CIDR block from Service Networking. The customer should use this CIDR block
          for configuring their firewall needs to allow traffic from Apigee.
          Input format: "a.b.c.d/22"
      - !ruby/object:Api::Type::String
        name: 'description'
        description: |
          Description of the instance.
      - !ruby/object:Api::Type::String
        name: 'displayName'
        description: |
          Display name of the instance.
      - !ruby/object:Api::Type::String
        name: 'diskEncryptionKeyName'
        description: |
          Customer Managed Encryption Key (CMEK) used for disk and volume encryption. Required for Apigee paid subscriptions only.
          Use the following format: `projects/([^/]+)/locations/([^/]+)/keyRings/([^/]+)/cryptoKeys/([^/]+)`
        input: true
      - !ruby/object:Api::Type::String
        name: 'host'
        description: |
          Output only. Hostname or IP address of the exposed Apigee endpoint used by clients to connect to the service.
        output: true
      - !ruby/object:Api::Type::String
        name: 'port'
        description: |
          Output only. Port number of the exposed Apigee endpoint.
        output: true
      - !ruby/object:Api::Type::Array
        name: 'consumerAcceptList'
        description: |
          Optional. Customer accept list represents the list of projects (id/number) on customer
          side that can privately connect to the service attachment. It is an optional field
          which the customers can provide during the instance creation. By default, the customer
          project associated with the Apigee organization will be included to the list.
        required: false
        item_type: Api::Type::String
      - !ruby/object:Api::Type::String
        name: 'serviceAttachment'
        description: |
          Output only. Resource name of the service attachment created for the instance in
          the format: projects/*/regions/*/serviceAttachments/* Apigee customers can privately
          forward traffic to this service attachment using the PSC endpoints.
        output: true
    references: !ruby/object:Api::Resource::ReferenceLinks
      guides:
        'Creating a runtime instance':
          'https://cloud.google.com/apigee/docs/api-platform/get-started/create-instance'
      api: 'https://cloud.google.com/apigee/docs/reference/apis/apigee/rest/v1/organizations.instances/create'
  - !ruby/object:Api::Resource
    name: 'Environment'
    base_url: 'environments'
    create_url: '{{org_id}}/environments'
    self_link: '{{org_id}}/environments/{{name}}'
    update_url: '{{org_id}}/environments/{{name}}'
    update_verb: :PATCH
    update_mask: true
    async: !ruby/object:Api::OpAsync
      operation: !ruby/object:Api::OpAsync::Operation
        path: 'name'
        base_url: '{{op_id}}'
        wait_ms: 1000
      result: !ruby/object:Api::OpAsync::Result
        path: 'response'
        resource_inside_response: true
      status: !ruby/object:Api::OpAsync::Status
        path: 'done'
        complete: True
        allowed:
          - True
          - False
      error: !ruby/object:Api::OpAsync::Error
        path: 'error'
        message: 'message'
    description: |
      An `Environment` in Apigee.
    iam_policy: !ruby/object:Api::Resource::IamPolicy
      exclude: false
      method_name_separator: ':'
      parent_resource_attribute: 'env_id'
      import_format: ["{{%org_id}}/environments/{{name}}", "{{name}}"]
      base_url: "{{org_id}}/environments/{{name}}"
      self_link: "{{org_id}}/environments/{{name}}"
    parameters:
      - !ruby/object:Api::Type::String
        name: 'orgId'
        description: |
          The Apigee Organization associated with the Apigee environment,
          in the format `organizations/{{org_name}}`.
        required: true
        input: true
        url_param_only: true
    properties:
      - !ruby/object:Api::Type::String
        name: 'name'
        description: |
          The resource ID of the environment.
        required: true
        input: true
      - !ruby/object:Api::Type::String
        name: 'displayName'
        description: |
          Display name of the environment.
        required: false
        input: true
      - !ruby/object:Api::Type::String
        name: 'description'
        description: |
          Description of the environment.
        required: false
        input: true
      - !ruby/object:Api::Type::Enum
        name: 'deploymentType'
        description: |
          Optional. Deployment type supported by the environment. The deployment type can be
          set when creating the environment and cannot be changed. When you enable archive
          deployment, you will be prevented from performing a subset of actions within the
          environment, including:
          Managing the deployment of API proxy or shared flow revisions;
          Creating, updating, or deleting resource files;
          Creating, updating, or deleting target servers.
        values:
          - "DEPLOYMENT_TYPE_UNSPECIFIED"
          - "PROXY"
          - "ARCHIVE"
        input: true
      - !ruby/object:Api::Type::Enum
        name: 'apiProxyType'
        description: |
          Optional. API Proxy type supported by the environment. The type can be set when creating
          the Environment and cannot be changed.
        values:
          - "API_PROXY_TYPE_UNSPECIFIED"
          - "PROGRAMMABLE"
          - "CONFIGURABLE"
        input: true
      - !ruby/object:Api::Type::NestedObject
        name: 'nodeConfig'
        description: |
          NodeConfig for setting the min/max number of nodes associated with the environment.
        properties:
          - !ruby/object:Api::Type::String
            name: 'minNodeCount'
            description: |
              The minimum total number of gateway nodes that the is reserved for all instances that
              has the specified environment. If not specified, the default is determined by the
              recommended minimum number of nodes for that gateway.
          - !ruby/object:Api::Type::String
            name: 'maxNodeCount'
            description: |
              The maximum total number of gateway nodes that the is reserved for all instances that
              has the specified environment. If not specified, the default is determined by the
              recommended maximum number of nodes for that gateway.
          - !ruby/object:Api::Type::String
            name: 'currentAggregateNodeCount'
            description: |
              The current total number of gateway nodes that each environment currently has across
              all instances.
            output: true
    references: !ruby/object:Api::Resource::ReferenceLinks
      guides:
        'Creating an environment':
          'https://cloud.google.com/apigee/docs/api-platform/get-started/create-environment'
      api: 'https://cloud.google.com/apigee/docs/reference/apis/apigee/rest/v1/organizations.environments/create'
  - !ruby/object:Api::Resource
    name: 'Envgroup'
    base_url: 'envgroups'
    create_url: '{{org_id}}/envgroups'
    self_link: '{{org_id}}/envgroups/{{name}}'
    update_verb: :PATCH
    update_mask: true
    async: !ruby/object:Api::OpAsync
      operation: !ruby/object:Api::OpAsync::Operation
        path: 'name'
        base_url: '{{op_id}}'
        wait_ms: 1000
      result: !ruby/object:Api::OpAsync::Result
        path: 'response'
        resource_inside_response: true
      status: !ruby/object:Api::OpAsync::Status
        path: 'done'
        complete: True
        allowed:
          - True
          - False
      error: !ruby/object:Api::OpAsync::Error
        path: 'error'
        message: 'message'
    description: |
      An `Environment group` in Apigee.
    parameters:
      - !ruby/object:Api::Type::String
        name: 'orgId'
        description: |
          The Apigee Organization associated with the Apigee environment group,
          in the format `organizations/{{org_name}}`.
        required: true
        input: true
        url_param_only: true
    properties:
      - !ruby/object:Api::Type::String
        name: 'name'
        description: |
          The resource ID of the environment group.
        required: true
        input: true
      - !ruby/object:Api::Type::Array
        name: 'hostnames'
        description: |
          Hostnames of the environment group.
        required: false
        item_type: Api::Type::String
    references: !ruby/object:Api::Resource::ReferenceLinks
      guides:
        'Creating an environment':
          'https://cloud.google.com/apigee/docs/api-platform/get-started/create-environment'
      api: 'https://cloud.google.com/apigee/docs/reference/apis/apigee/rest/v1/organizations.envgroups/create'
  - !ruby/object:Api::Resource
    name: 'InstanceAttachment'
    base_url: '{{instance_id}}/attachments'
    create_url: '{{instance_id}}/attachments'
    delete_url: '{{instance_id}}/attachments/{{name}}'
    self_link: '{{instance_id}}/attachments/{{name}}'
    async: !ruby/object:Api::OpAsync
      operation: !ruby/object:Api::OpAsync::Operation
        path: 'name'
        base_url: '{{op_id}}'
        wait_ms: 1000
      result: !ruby/object:Api::OpAsync::Result
        path: 'response'
        resource_inside_response: true
      status: !ruby/object:Api::OpAsync::Status
        path: 'done'
        complete: True
        allowed:
          - True
          - False
      error: !ruby/object:Api::OpAsync::Error
        path: 'error'
        message: 'message'
    input: true
    description: |
      An `Instance attachment` in Apigee.
    parameters:
     - !ruby/object:Api::Type::String
        name: 'instanceId'
        description: |
          The Apigee instance associated with the Apigee environment,
          in the format `organisations/{{org_name}}/instances/{{instance_name}}`.
        required: true
        url_param_only: true
    properties:
      - !ruby/object:Api::Type::String
        name: 'environment'
        description: |
          The resource ID of the environment.
        required: true
      - !ruby/object:Api::Type::String
        name: 'name'
        description: |
          The name of the newly created  attachment (output parameter).
        output: true
    references: !ruby/object:Api::Resource::ReferenceLinks
      guides:
        'Creating an environment':
          'https://cloud.google.com/apigee/docs/api-platform/get-started/create-environment'
      api: 'https://cloud.google.com/apigee/docs/reference/apis/apigee/rest/v1/organizations.instances.attachments/create'
  - !ruby/object:Api::Resource
    name: 'EnvgroupAttachment'
    base_url: '{{envgroup_id}}/attachments'
    create_url: '{{envgroup_id}}/attachments'
    delete_url: '{{envgroup_id}}/attachments/{{name}}'
    self_link: '{{envgroup_id}}/attachments/{{name}}'
    async: !ruby/object:Api::OpAsync
      operation: !ruby/object:Api::OpAsync::Operation
        path: 'name'
        base_url: '{{op_id}}'
        wait_ms: 1000
      result: !ruby/object:Api::OpAsync::Result
        path: 'response'
        resource_inside_response: true
      status: !ruby/object:Api::OpAsync::Status
        path: 'done'
        complete: True
        allowed:
          - True
          - False
      error: !ruby/object:Api::OpAsync::Error
        path: 'error'
        message: 'message'
    input: true
    description: |
      An `Environment Group attachment` in Apigee.
    parameters:
     - !ruby/object:Api::Type::String
        name: 'envgroupId'
        description: |
          The Apigee environment group associated with the Apigee environment,
          in the format `organizations/{{org_name}}/envgroups/{{envgroup_name}}`.
        required: true
        url_param_only: true
    properties:
     - !ruby/object:Api::Type::String
        name: 'environment'
        description: |
          The resource ID of the environment.
        required: true
     - !ruby/object:Api::Type::String
        name: 'name'
        description: |
          The name of the newly created  attachment (output parameter).
        output: true
    references: !ruby/object:Api::Resource::ReferenceLinks
      guides:
        'Creating an environment':
          'https://cloud.google.com/apigee/docs/api-platform/get-started/create-environment'
      api: 'https://cloud.google.com/apigee/docs/reference/apis/apigee/rest/v1/organizations.envgroups.attachments/create'
  - !ruby/object:Api::Resource
    name: 'EndpointAttachment'
    base_url: 'endpointAttachments'
    create_url: '{{org_id}}/endpointAttachments?endpointAttachmentId={{endpoint_attachment_id}}'
    self_link: '{{org_id}}/endpointAttachments/{{endpoint_attachment_id}}'
    async: !ruby/object:Api::OpAsync
      operation: !ruby/object:Api::OpAsync::Operation
        path: 'name'
        base_url: '{{op_id}}'
        wait_ms: 1000
      result: !ruby/object:Api::OpAsync::Result
        path: 'response'
        resource_inside_response: true
      status: !ruby/object:Api::OpAsync::Status
        path: 'done'
        complete: True
        allowed:
          - True
          - False
      error: !ruby/object:Api::OpAsync::Error
        path: 'error'
        message: 'message'
    input: true
    description: |
      Apigee Endpoint Attachment.
    parameters:
      - !ruby/object:Api::Type::String
        name: 'orgId'
        description: |
          The Apigee Organization associated with the Apigee instance,
          in the format `organizations/{{org_name}}`.
        required: true
        input: true
        url_param_only: true
      - !ruby/object:Api::Type::String
        name: 'endpointAttachmentId'
        description: |
          ID of the endpoint attachment.
        required: true
        input: true
        url_param_only: true
    properties:
      - !ruby/object:Api::Type::String
        name: 'name'
        description: |
          Name of the Endpoint Attachment in the following format:
          organizations/{organization}/endpointAttachments/{endpointAttachment}.
        output: true
      - !ruby/object:Api::Type::String
        name: 'location'
        description: |
          Location of the endpoint attachment.
        required: true
      - !ruby/object:Api::Type::String
        name: 'host'
        description: |
          Host that can be used in either HTTP Target Endpoint directly, or as the host in Target Server.
        output: true
      - !ruby/object:Api::Type::String
        name: 'serviceAttachment'
        description: |
          Format: projects/*/regions/*/serviceAttachments/*
        required: true
      - !ruby/object:Api::Type::String
        name: 'connectionState'
        description: |
          State of the endpoint attachment connection to the service attachment.
        output: true
    references: !ruby/object:Api::Resource::ReferenceLinks
      guides:
        'Creating an environment':
          'https://cloud.google.com/apigee/docs/api-platform/get-started/create-environment'
      api: 'https://cloud.google.com/apigee/docs/reference/apis/apigee/rest/v1/organizations.endpointAttachments/create'
  - !ruby/object:Api::Resource
    name: 'NatAddress'
    base_url: '{{instance_id}}/natAddresses'
    create_url: '{{instance_id}}/natAddresses'
    delete_url: '{{instance_id}}/natAddresses/{{name}}'
    self_link: '{{instance_id}}/natAddresses/{{name}}'
    async: !ruby/object:Api::OpAsync
      operation: !ruby/object:Api::OpAsync::Operation
        path: 'name'
        base_url: '{{op_id}}'
        wait_ms: 1000
      result: !ruby/object:Api::OpAsync::Result
        path: 'response'
        resource_inside_response: true
      status: !ruby/object:Api::OpAsync::Status
        path: 'done'
        complete: True
        allowed:
          - True
          - False
      error: !ruby/object:Api::OpAsync::Error
        path: 'error'
        message: 'message'
    input: true
    description: |
      Apigee NAT (network address translation) address. A NAT address is a static external IP address used for Internet egress traffic. This is not avaible for Apigee hybrid.
      Apigee NAT addresses are not automatically activated because they might require explicit allow entries on the target systems first. See https://cloud.google.com/apigee/docs/reference/apis/apigee/rest/v1/organizations.instances.natAddresses/activate
    parameters:
     - !ruby/object:Api::Type::String
        name: 'instanceId'
        description: |
          The Apigee instance associated with the Apigee environment,
          in the format `organizations/{{org_name}}/instances/{{instance_name}}`.
        required: true
        url_param_only: true
    properties:
      - !ruby/object:Api::Type::String
        name: 'name'
        description: |
          Resource ID of the NAT address.
        required: true
      - !ruby/object:Api::Type::String
        name: 'ipAddress'
        description: |
          The allocated NAT IP address.
        output: true
      - !ruby/object:Api::Type::String
        name: 'state'
        description: |
          State of the NAT IP address.
        output: true
    references: !ruby/object:Api::Resource::ReferenceLinks
      guides:
        'Provisioning NAT IPs':
          'https://cloud.google.com/apigee/docs/api-platform/security/nat-provisioning'
      api: 'https://cloud.google.com/apigee/docs/reference/apis/apigee/rest/v1/organizations.instances.natAddresses'
  - !ruby/object:Api::Resource
    name: 'SyncAuthorization'
    self_link: 'organizations/{{name}}:getSyncAuthorization'
    base_url: ''
    create_url: 'organizations/{{name}}:setSyncAuthorization'
    update_url: 'organizations/{{name}}:setSyncAuthorization'
    read_verb: :POST
    update_verb: :POST
    description: |
      Authorize the Synchronizer to download environment data from the control plane.
    parameters:
      - !ruby/object:Api::Type::String
        name: 'name'
        required: true
        description: |
          Name of the Apigee organization.
        url_param_only: true
        input: true
    properties:
      - !ruby/object:Api::Type::Array
        name: 'identities'
        required: true
        send_empty_value: true
        description: |
          Array of service accounts to grant access to control plane resources, each specified using the following format: `serviceAccount:service-account-name`.

          The `service-account-name` is formatted like an email address. For example: my-synchronizer-manager-serviceAccount@my_project_id.iam.gserviceaccount.com

          You might specify multiple service accounts, for example, if you have multiple environments and wish to assign a unique service account to each one.

          The service accounts must have **Apigee Synchronizer Manager** role. See also [Create service accounts](https://cloud.google.com/apigee/docs/hybrid/v1.8/sa-about#create-the-service-accounts).
        item_type: Api::Type::String
      - !ruby/object:Api::Type::Fingerprint
        name: 'etag'
        description: |
          Entity tag (ETag) used for optimistic concurrency control as a way to help prevent simultaneous updates from overwriting each other.
          Used internally during updates.
    references: !ruby/object:Api::Resource::ReferenceLinks
      guides:
        'Enable Synchronizer access':
          'https://cloud.google.com/apigee/docs/hybrid/v1.8/synchronizer-access#enable-synchronizer-access'
      api: 'https://cloud.google.com/apigee/docs/reference/apis/apigee/rest/v1/organizations#getsyncauthorization'