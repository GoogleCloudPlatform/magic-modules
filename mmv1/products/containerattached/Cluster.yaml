# Copyright 2023 Google Inc.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

--- !ruby/object:Api::Resource
name: 'Cluster'
base_url: projects/{{project}}/locations/{{location}}/attachedClusters
create_url: projects/{{project}}/locations/{{location}}/attachedClusters?attached_cluster_id={{name}}
delete_url: projects/{{project}}/locations/{{location}}/attachedClusters/{{name}}
update_url: projects/{{project}}/locations/{{location}}/attachedClusters/{{name}}
self_link: projects/{{project}}/locations/{{location}}/attachedClusters/{{name}}
update_verb: :PATCH
update_mask: true
delete_verb: :DELETE
description: |
  An Anthos cluster running on customer owned infrastructure.
references: !ruby/object:Api::Resource::ReferenceLinks
  guides:
    'API reference': 'https://cloud.google.com/anthos/clusters/docs/multi-cloud/reference/rest/v1/projects.locations.attachedClusters'
    'Multicloud overview': 'https://cloud.google.com/anthos/clusters/docs/multi-cloud'
  api: 'https://cloud.google.com/anthos/clusters/docs/multi-cloud/reference/rest'
async: !ruby/object:Api::OpAsync
  operation: !ruby/object:Api::OpAsync::Operation
    path: 'name'
    full_url: 'https://{{location}}-gkemulticloud.googleapis.com/v1/{{op_id}}'
    wait_ms: 1000
  result: !ruby/object:Api::OpAsync::Result
    path: 'response'
    resource_inside_response: true
  status: !ruby/object:Api::OpAsync::Status
    path: 'done'
    complete: 'true'
    allowed:
      - 'true'
      - 'false'
  error: !ruby/object:Api::OpAsync::Error
    path: 'error/errors'
    message: 'message'
autogen_async: false
id_format: 'projects/{{project}}/locations/{{location}}/attachedClusters/{{name}}'
import_format:
  ['projects/{{project}}/locations/{{location}}/attachedClusters/{{name}}']
examples:
  - !ruby/object:Provider::Terraform::Examples
    name: 'container_attached_cluster_basic'
    primary_resource_name: 'fmt.Sprintf("basic%s", context["random_suffix"])'
    primary_resource_id: 'primary'
    vars:
      name: 'basic'
  - !ruby/object:Provider::Terraform::Examples
    name: 'container_attached_cluster_full'
    primary_resource_name: 'fmt.Sprintf("basic%s", context["random_suffix"])'
    primary_resource_id: 'primary'
    vars:
      name: 'basic'
  - !ruby/object:Provider::Terraform::Examples
    name: 'container_attached_cluster_ignore_errors'
    primary_resource_name: 'fmt.Sprintf("basic%s", context["random_suffix"])'
    primary_resource_id: 'primary'
    vars:
      name: 'basic'
    ignore_read_extra:
      - 'deletion_policy'
custom_code: !ruby/object:Provider::Terraform::CustomCode
  constants: templates/terraform/constants/containerattached_cluster_diff.go
  pre_update: templates/terraform/pre_update/containerattached_update.go.erb
  pre_delete: templates/terraform/pre_delete/container_attached_deletion_policy.go.erb
virtual_fields:
  - !ruby/object:Api::Type::Enum
    name: 'deletion_policy'
    description: 'Policy to determine what flags to send on delete.'
    values:
      - :DELETE
      - :DELETE_IGNORE_ERRORS
    default_value: :DELETE
properties:
  - !ruby/object:Api::Type::String
    name: location
    description: |
      The location for the resource
    immutable: true
    required: true
    url_param_only: true
  - !ruby/object:Api::Type::String
    name: name
    description: |
      The name of this resource.
    required: true
    immutable: true
    custom_flatten: templates/terraform/custom_flatten/name_from_self_link.erb
  - !ruby/object:Api::Type::String
    name: description
    description: |
      A human readable description of this attached cluster. Cannot be longer
      than 255 UTF-8 encoded bytes.
  - !ruby/object:Api::Type::NestedObject
    name: oidcConfig
    description: |
      OIDC discovery information of the target cluster.

      Kubernetes Service Account (KSA) tokens are JWT tokens signed by the cluster
      API server. This fields indicates how GCP services
      validate KSA tokens in order to allow system workloads (such as GKE Connect
      and telemetry agents) to authenticate back to GCP.

      Both clusters with public and private issuer URLs are supported.
      Clusters with public issuers only need to specify the `issuer_url` field
      while clusters with private issuers need to provide both
      `issuer_url` and `jwks`.
    required: true
    properties:
      - !ruby/object:Api::Type::String
        name: issuerUrl
        description: |
          A JSON Web Token (JWT) issuer URI. `issuer` must start with `https://`
        required: true
        immutable: true
      - !ruby/object:Api::Type::String
        name: jwks
        description: |
          OIDC verification keys in JWKS format (RFC 7517).
        immutable: true
  - !ruby/object:Api::Type::String
    name: platformVersion
    description: |
      The platform version for the cluster (e.g. `1.23.0-gke.1`).
    required: true
  - !ruby/object:Api::Type::String
    name: distribution
    description: |
      The Kubernetes distribution of the underlying attached cluster. Supported values:
      "eks", "aks".
    required: true
    immutable: true
  - !ruby/object:Api::Type::String
    name: clusterRegion
    description: |
      Output only. The region where this cluster runs.

      For EKS clusters, this is an AWS region. For AKS clusters,
      this is an Azure region.
    output: true
  - !ruby/object:Api::Type::NestedObject
    name: fleet
    description: |
      Fleet configuration.
    required: true
    properties:
      - !ruby/object:Api::Type::String
        name: membership
        description: |
          The name of the managed Hub Membership resource associated to this
          cluster. Membership names are formatted as
          projects/<project-number>/locations/global/membership/<cluster-id>.
        output: true
      - !ruby/object:Api::Type::String
        name: project
        description: |
          The number of the Fleet host project where this cluster will be registered.
        required: true
        immutable: true
        validation: !ruby/object:Provider::Terraform::Validation
          regex: '^projects/[0-9]+$'
  - !ruby/object:Api::Type::String
    name: state
    description: |
      The current state of the cluster. Possible values:
      STATE_UNSPECIFIED, PROVISIONING, RUNNING, RECONCILING, STOPPING, ERROR,
      DEGRADED
    output: true
  - !ruby/object:Api::Type::String
    name: uid
    description: |
      A globally unique identifier for the cluster.
    output: true
  - !ruby/object:Api::Type::Boolean
    name: reconciling
    description: |
      If set, there are currently changes in flight to the cluster.
    output: true
  - !ruby/object:Api::Type::String
    name: createTime
    description: |
      Output only. The time at which this cluster was created.
    output: true
  - !ruby/object:Api::Type::String
    name: updateTime
    description: |
      The time at which this cluster was last updated.
    output: true
  - !ruby/object:Api::Type::String
    name: kubernetesVersion
    description: |
      The Kubernetes version of the cluster.
    output: true
  - !ruby/object:Api::Type::KeyValuePairs
    name: annotations
    description: |
      Optional. Annotations on the cluster. This field has the same
      restrictions as Kubernetes annotations. The total size of all keys and
      values combined is limited to 256k. Key can have 2 segments: prefix (optional)
      and name (required), separated by a slash (/). Prefix must be a DNS subdomain.
      Name must be 63 characters or less, begin and end with alphanumerics,
      with dashes (-), underscores (_), dots (.), and alphanumerics between.
  - !ruby/object:Api::Type::NestedObject
    name: workloadIdentityConfig
    description: |
      Workload Identity settings.
    output: true
    properties:
      - !ruby/object:Api::Type::String
        name: identityProvider
        description: |
          The ID of the OIDC Identity Provider (IdP) associated to
          the Workload Identity Pool.
      - !ruby/object:Api::Type::String
        name: issuerUri
        description: |
          The OIDC issuer URL for this cluster.
      - !ruby/object:Api::Type::String
        name: workloadPool
        description: |
          The Workload Identity Pool associated to the cluster.
  - !ruby/object:Api::Type::NestedObject
    name: loggingConfig
    description: |
      Logging configuration.
    # If the user doesn't specify a loggingConfig, the server will supply a default value. Instead of
    # letting that happen and allowing the config and state to get mismatched, just manually send an
    # empty object if the user doesn't set anything and require the user to explicitly set the field if a
    # value is desired.
    # If the loggingConfig passed to the server is empty, an empty object is returned, so the diff in that
    # case needs to be ignored.
    send_empty_value: true
    allow_empty_object: true
    custom_expand: 'templates/terraform/custom_expand/containerattached_cluster_empty_logging.go.erb'
    diff_suppress_func: 'suppressAttachedClustersLoggingConfigDiff'
    properties:
      - !ruby/object:Api::Type::NestedObject
        name: componentConfig
        description: |
          The configuration of the logging components
        send_empty_value: true
        allow_empty_object: true
        properties:
          - !ruby/object:Api::Type::Array
            name: enableComponents
            description: |
              The components to be enabled.
            send_empty_value: true
            allow_empty_object: true
            item_type: !ruby/object:Api::Type::Enum
              name: 'component'
              description: |
                The components of the logging configuration.
              values:
                - :SYSTEM_COMPONENTS
                - :WORKLOADS
  - !ruby/object:Api::Type::Array
    name: errors
    description: |
      A set of errors found in the cluster.
    output: true
    item_type: !ruby/object:Api::Type::NestedObject
      name: attachedClusterError
      description: |
        Describes errors found on attached clusters.
      properties:
        - !ruby/object:Api::Type::String
          name: message
          description: |
            Human-friendly description of the error.
  - !ruby/object:Api::Type::NestedObject
    name: authorization
    description: |
      Configuration related to the cluster RBAC settings.
    custom_expand: 'templates/terraform/custom_expand/containerattached_cluster_authorization_user.go.erb'
    custom_flatten: 'templates/terraform/custom_flatten/containerattached_cluster_authorization_user.go.erb'
    properties:
      - !ruby/object:Api::Type::Array
        name: adminUsers
        description: |
          Users that can perform operations as a cluster admin. A managed
          ClusterRoleBinding will be created to grant the `cluster-admin` ClusterRole
          to the users. Up to ten admin users can be provided.

          For more info on RBAC, see
          https://kubernetes.io/docs/reference/access-authn-authz/rbac/#user-facing-roles
        item_type: Api::Type::String
  - !ruby/object:Api::Type::NestedObject
    name: monitoringConfig
    description: |
      Monitoring configuration.
    allow_empty_object: true
    default_from_api: true
    properties:
      - !ruby/object:Api::Type::NestedObject
        name: managedPrometheusConfig
        description: |
          Enable Google Cloud Managed Service for Prometheus in the cluster.
        allow_empty_object: true
        properties:
          - !ruby/object:Api::Type::Boolean
            name: enabled
            description: |
              Enable Managed Collection.
  - !ruby/object:Api::Type::NestedObject
    name: binaryAuthorization
    description: |
      Binary Authorization configuration.
    allow_empty_object: true
    default_from_api: true
    properties:
      - !ruby/object:Api::Type::Enum
        name: evaluationMode
        description: |
          Configure Binary Authorization evaluation mode.
        values:
          - :DISABLED
          - :PROJECT_SINGLETON_POLICY_ENFORCE
