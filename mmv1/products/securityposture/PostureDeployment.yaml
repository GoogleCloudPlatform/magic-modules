# Copyright 2024 Google Inc.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

<<<<<<< HEAD
--- !ruby/object:Api::Resource
=======
---
>>>>>>> 2fdda66097e2c96688e59f7c58c1f717c7785856
name: 'PostureDeployment'
description: |
  Represents a deployment of a security posture on a resource. A posture contains user curated policy sets. A posture can
  be deployed on a project or on a folder or on an organization. To deploy a posture we need to populate the posture's name
  and its revision_id in the posture deployment configuration. Every update to a deployed posture generates a new revision_id.
  Thus, the updated revision_id should be used in the respective posture deployment's configuration to deploy that posture
  on a resource.
<<<<<<< HEAD
references: !ruby/object:Api::Resource::ReferenceLinks
  guides:
    'Create and deploy a posture': 'https://cloud.google.com/security-command-center/docs/how-to-use-security-posture'
import_format: ['{{%parent}}/locations/{{location}}/postureDeployments/{{posture_deployment_id}}']
base_url: '{{parent}}/locations/{{location}}/postureDeployments'
self_link: '{{parent}}/locations/{{location}}/postureDeployments/{{posture_deployment_id}}'
create_url: '{{parent}}/locations/{{location}}/postureDeployments?postureDeploymentId={{posture_deployment_id}}'
update_verb: :PATCH
update_mask: true
autogen_async: true
async: !ruby/object:Api::OpAsync
  operation: !ruby/object:Api::OpAsync::Operation
    base_url: '{{op_id}}'

parameters:
  - !ruby/object:Api::Type::String
    name: parent
    description: |
      The parent of the resource, an organization. Format should be `organizations/{organization_id}`.
    immutable: true
    url_param_only: true
    required: true
  - !ruby/object:Api::Type::String
    name: location
    description: |
      The location of the resource, eg. global`.
    immutable: true
    url_param_only: true
    required: true
  - !ruby/object:Api::Type::String
    name: postureDeploymentId
    description: |
      ID of the posture deployment.
    immutable: true
    required: true
    url_param_only: true
properties:
  - !ruby/object:Api::Type::String
    name: 'name'
    description: |
      Name of the posture deployment instance.
    output: true
  - !ruby/object:Api::Type::String
    name: 'targetResource'
    required: true
    immutable: true
=======
references:
  guides:
    'Create and deploy a posture': 'https://cloud.google.com/security-command-center/docs/how-to-use-security-posture'
docs:
base_url: '{{parent}}/locations/{{location}}/postureDeployments'
self_link: '{{parent}}/locations/{{location}}/postureDeployments/{{posture_deployment_id}}'
create_url: '{{parent}}/locations/{{location}}/postureDeployments?postureDeploymentId={{posture_deployment_id}}'
update_verb: 'PATCH'
update_mask: true
import_format:
  - '{{%parent}}/locations/{{location}}/postureDeployments/{{posture_deployment_id}}'
timeouts:
  insert_minutes: 20
  update_minutes: 20
  delete_minutes: 20
autogen_async: true
async:
  actions: ['create', 'delete', 'update']
  type: 'OpAsync'
  operation:
    base_url: '{{op_id}}'
  result:
    resource_inside_response: false
custom_code:
parameters:
  - name: 'parent'
    type: String
    description: |
      The parent of the resource, an organization. Format should be `organizations/{organization_id}`.
    url_param_only: true
    required: true
    immutable: true
  - name: 'location'
    type: String
    description: |
      The location of the resource, eg. global`.
    url_param_only: true
    required: true
    immutable: true
  - name: 'postureDeploymentId'
    type: String
    description: |
      ID of the posture deployment.
    url_param_only: true
    required: true
    immutable: true
properties:
  - name: 'name'
    type: String
    description: |
      Name of the posture deployment instance.
    output: true
  - name: 'targetResource'
    type: String
>>>>>>> 2fdda66097e2c96688e59f7c58c1f717c7785856
    description: |
      The resource on which the posture should be deployed. This can be in one of the following formats:
      projects/{project_number},
      folders/{folder_number},
      organizations/{organization_id}
<<<<<<< HEAD
  - !ruby/object:Api::Type::Enum
    name: 'state'
=======
    required: true
    immutable: true
  - name: 'state'
    type: Enum
>>>>>>> 2fdda66097e2c96688e59f7c58c1f717c7785856
    description: |
      State of the posture deployment. A posture deployment can be in the following terminal states:
      ACTIVE, CREATE_FAILED, UPDATE_FAILED, DELETE_FAILED.
    output: true
<<<<<<< HEAD
    values:
      - :STATE_UNSPECIFIED
      - :CREATING
      - :DELETING
      - :UPDATING
      - :ACTIVE
      - :CREATE_FAILED
      - :UPDATE_FAILED
      - :DELETE_FAILED
  - !ruby/object:Api::Type::String
    name: 'postureId'
    required: true
    description: |
      Relative name of the posture which needs to be deployed. It should be in the format:
        organizations/{organization_id}/locations/{location}/postures/{posture_id}
  - !ruby/object:Api::Type::String
    name: 'postureRevisionId'
    required: true
    description: |
      Revision_id the posture which needs to be deployed.
  - !ruby/object:Api::Type::Time
    name: 'createTime'
    description: |
      Time the posture deployment was created in UTC.
    output: true
  - !ruby/object:Api::Type::Time
    name: 'updateTime'
    description: |
      Time the posture deployment was updated in UTC.
    output: true
  - !ruby/object:Api::Type::String
    name: 'description'
    description: |
      Description of the posture deployment.
  - !ruby/object:Api::Type::String
    name: 'etag'
    description: 'For Resource freshness validation (https://google.aip.dev/154)'
    output: true
  - !ruby/object:Api::Type::Boolean
    name: reconciling
    description: |
      If set, there are currently changes in flight to the posture deployment.
    output: true
  - !ruby/object:Api::Type::String
    name: 'desiredPostureId'
=======
    enum_values:
      - 'STATE_UNSPECIFIED'
      - 'CREATING'
      - 'DELETING'
      - 'UPDATING'
      - 'ACTIVE'
      - 'CREATE_FAILED'
      - 'UPDATE_FAILED'
      - 'DELETE_FAILED'
  - name: 'postureId'
    type: String
    description: |
      Relative name of the posture which needs to be deployed. It should be in the format:
        organizations/{organization_id}/locations/{location}/postures/{posture_id}
    required: true
  - name: 'postureRevisionId'
    type: String
    description: |
      Revision_id the posture which needs to be deployed.
    required: true
  - name: 'createTime'
    type: Time
    description: |
      Time the posture deployment was created in UTC.
    output: true
  - name: 'updateTime'
    type: Time
    description: |
      Time the posture deployment was updated in UTC.
    output: true
  - name: 'description'
    type: String
    description: |
      Description of the posture deployment.
  - name: 'etag'
    type: String
    description: 'For Resource freshness validation (https://google.aip.dev/154)'
    output: true
  - name: 'reconciling'
    type: Boolean
    description: |
      If set, there are currently changes in flight to the posture deployment.
    output: true
  - name: 'desiredPostureId'
    type: String
>>>>>>> 2fdda66097e2c96688e59f7c58c1f717c7785856
    description: |
      This is an output only optional field which will be filled in case when
      PostureDeployment state is UPDATE_FAILED or CREATE_FAILED or DELETE_FAILED.
      It denotes the desired posture to be deployed.
    output: true
<<<<<<< HEAD
  - !ruby/object:Api::Type::String
    name: 'desiredPostureRevisionId'
    output: true
=======
  - name: 'desiredPostureRevisionId'
    type: String
>>>>>>> 2fdda66097e2c96688e59f7c58c1f717c7785856
    description: |
      This is an output only optional field which will be filled in case when
      PostureDeployment state is UPDATE_FAILED or CREATE_FAILED or DELETE_FAILED.
      It denotes the desired posture revision_id to be deployed.
<<<<<<< HEAD
  - !ruby/object:Api::Type::String
    name: 'failureMessage'
    output: true
=======
    output: true
  - name: 'failureMessage'
    type: String
>>>>>>> 2fdda66097e2c96688e59f7c58c1f717c7785856
    description: |
      This is a output only optional field which will be filled in case where
      PostureDeployment enters a failure state like UPDATE_FAILED or
      CREATE_FAILED or DELETE_FAILED. It will have the failure message for posture deployment's
      CREATE/UPDATE/DELETE methods.
<<<<<<< HEAD
=======
    output: true
>>>>>>> 2fdda66097e2c96688e59f7c58c1f717c7785856
