<<<<<<< HEAD
# Copyright 2023 Google Inc.
=======
# Copyright 2024 Google Inc.
>>>>>>> 2fdda66097e2c96688e59f7c58c1f717c7785856
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

<<<<<<< HEAD
--- !ruby/object:Api::Resource
=======
---
>>>>>>> 2fdda66097e2c96688e59f7c58c1f717c7785856
name: 'Runtime'
description: |
  A Cloud AI Platform Notebook runtime.


  ~> **Note:** Due to limitations of the Notebooks Runtime API, many fields
  in this resource do not properly detect drift. These fields will also not
  appear in state once imported.
<<<<<<< HEAD
base_url: projects/{{project}}/locations/{{location}}/runtimes
create_url: projects/{{project}}/locations/{{location}}/runtimes?runtimeId={{name}}
self_link: projects/{{project}}/locations/{{location}}/runtimes/{{name}}
create_verb: :POST
update_verb: :PATCH
update_mask: true
# When set, if any parameter change, they will get recreated.
# Use wisely because any `update_url:` in the hierarchy below this will get ignored.
# immutable: true
references: !ruby/object:Api::Resource::ReferenceLinks
  guides:
    'Official Documentation': 'https://cloud.google.com/ai-platform-notebooks'
  api: 'https://cloud.google.com/ai-platform/notebooks/docs/reference/rest'
iam_policy: !ruby/object:Api::Resource::IamPolicy
  method_name_separator: ':'
  fetch_iam_policy_verb: :GET
  parent_resource_attribute: 'runtime_name'
  import_format:
    [
      'projects/{{project}}/locations/{{location}}/runtimes/{{runtime_name}}',
      '{{runtime_name}}',
    ]
  # Sets the base url for base_url:GetIamPolicy and base_url:SetIamPolicy in function `qualifyRuntimeUrl`
  base_url: projects/{{project}}/locations/{{location}}/runtimes/{{runtime_name}}
autogen_async: true
examples:
  - !ruby/object:Provider::Terraform::Examples
    name: 'notebook_runtime_basic'
    primary_resource_name: "fmt.Sprintf(\"tf-test-notebooks-runtime%s\",
      context[\"\
      random_suffix\"])"
    primary_resource_id: 'runtime'
    region_override: 'us-central1'
    vars:
      runtime_name: 'notebooks-runtime'
  - !ruby/object:Provider::Terraform::Examples
    name: 'notebook_runtime_basic_gpu'
    primary_resource_id: 'runtime_gpu'
    primary_resource_name: "fmt.Sprintf(\"tf-test-notebooks-runtime-gpu%s\",
      context[\"\
      random_suffix\"])"
    region_override: 'us-central1'
    vars:
      runtime_name: 'notebooks-runtime-gpu'
  - !ruby/object:Provider::Terraform::Examples
    name: 'notebook_runtime_basic_container'
    primary_resource_id: 'runtime_container'
    primary_resource_name:
      "fmt.Sprintf(\"tf-test-notebooks-runtime-container%s\"\
      , context[\"random_suffix\"])"
    region_override: 'us-central1'
    vars:
      runtime_name: 'notebooks-runtime-container'
  - !ruby/object:Provider::Terraform::Examples
    name: 'notebook_runtime_kernels'
    primary_resource_id: 'runtime_container'
    primary_resource_name:
      "fmt.Sprintf(\"tf-test-notebooks-runtime-container%s\"\
      , context[\"random_suffix\"])"
    region_override: 'us-central1'
    vars:
      runtime_name: 'notebooks-runtime-kernel'
  - !ruby/object:Provider::Terraform::Examples
    name: 'notebook_runtime_script'
    primary_resource_id: 'runtime_container'
    primary_resource_name:
      "fmt.Sprintf(\"tf-test-notebooks-runtime-container%s\"\
      , context[\"random_suffix\"])"
    region_override: 'us-central1'
    vars:
      runtime_name: 'notebooks-runtime-script'
custom_code: !ruby/object:Provider::Terraform::CustomCode
  constants: templates/terraform/constants/notebooks_runtime.go.erb
  pre_update: templates/terraform/pre_update/notebooks_runtime.go.erb
parameters:
  - !ruby/object:Api::Type::ResourceRef
    name: 'location'
    description: 'A reference to the zone where the machine resides.'
    resource: 'Location'
    imports: 'selfLink'
    required: true
    immutable: true
    url_param_only: true
properties:
  - !ruby/object:Api::Type::String
    name: 'name'
    description: |
      The name specified for the Notebook runtime.
    required: true
    immutable: true
    url_param_only: true
  - !ruby/object:Api::Type::NestedObject
    name: 'virtualMachine'
    exactly_one_of:
      - virtual_machine
    description: |
      Use a Compute Engine VM image to start the managed notebook instance.
    properties:
      - !ruby/object:Api::Type::String
        name: 'instanceName'
        description: |
          The user-friendly name of the Managed Compute Engine instance.
        output: true
      - !ruby/object:Api::Type::String
        name: 'instanceId'
        description: |
          The unique identifier of the Managed Compute Engine instance.
        output: true
      - !ruby/object:Api::Type::NestedObject
        name: 'virtualMachineConfig'
        description: |
          Virtual Machine configuration settings.
        properties:
          - !ruby/object:Api::Type::String
            name: 'zone'
            description: |
              The zone where the virtual machine is located.
            output: true
          - !ruby/object:Api::Type::String
            name: 'machineType'
            description: |
              The Compute Engine machine type used for runtimes.
            required: true
          - !ruby/object:Api::Type::NestedObject
            name: 'dataDisk'
=======
# When set, if any parameter change, they will get recreated.
# Use wisely because any `update_url:` in the hierarchy below this will get ignored.
# immutable: true
references:
  guides:
    'Official Documentation': 'https://cloud.google.com/ai-platform-notebooks'
  api: 'https://cloud.google.com/ai-platform/notebooks/docs/reference/rest'
docs:
base_url: 'projects/{{project}}/locations/{{location}}/runtimes'
self_link: 'projects/{{project}}/locations/{{location}}/runtimes/{{name}}'
create_url: 'projects/{{project}}/locations/{{location}}/runtimes?runtimeId={{name}}'
update_verb: 'PATCH'
update_mask: true
timeouts:
  insert_minutes: 20
  update_minutes: 20
  delete_minutes: 20
autogen_async: true
async:
  actions: ['create', 'delete', 'update']
  type: 'OpAsync'
  operation:
    base_url: '{{op_id}}'
    path: 'name'
    wait_ms: 1000
  result:
    path: 'response'
    resource_inside_response: true
  error:
    path: 'error'
    message: 'message'
iam_policy:
  method_name_separator: ':'
  parent_resource_attribute: 'runtime_name'
  # Sets the base url for base_url:GetIamPolicy and base_url:SetIamPolicy in function `qualifyRuntimeUrl`
  base_url: 'projects/{{project}}/locations/{{location}}/runtimes/{{runtime_name}}'
  example_config_body: 'templates/terraform/iam/iam_attributes.go.tmpl'
  import_format:
    - 'projects/{{project}}/locations/{{location}}/runtimes/{{runtime_name}}'
    - '{{runtime_name}}'
custom_code:
  constants: 'templates/terraform/constants/notebooks_runtime.go.tmpl'
  pre_update: 'templates/terraform/pre_update/notebooks_runtime.go.tmpl'
examples:
  - name: 'notebook_runtime_basic'
    primary_resource_id: 'runtime'
    primary_resource_name: 'fmt.Sprintf("tf-test-notebooks-runtime%s", context["random_suffix"])'
    region_override: 'us-central1'
    vars:
      runtime_name: 'notebooks-runtime'
  - name: 'notebook_runtime_basic_gpu'
    primary_resource_id: 'runtime_gpu'
    primary_resource_name: 'fmt.Sprintf("tf-test-notebooks-runtime-gpu%s", context["random_suffix"])'
    region_override: 'us-central1'
    vars:
      runtime_name: 'notebooks-runtime-gpu'
  - name: 'notebook_runtime_basic_container'
    primary_resource_id: 'runtime_container'
    primary_resource_name: 'fmt.Sprintf("tf-test-notebooks-runtime-container%s", context["random_suffix"])'
    region_override: 'us-central1'
    vars:
      runtime_name: 'notebooks-runtime-container'
  - name: 'notebook_runtime_kernels'
    primary_resource_id: 'runtime_container'
    primary_resource_name: 'fmt.Sprintf("tf-test-notebooks-runtime-container%s", context["random_suffix"])'
    region_override: 'us-central1'
    vars:
      runtime_name: 'notebooks-runtime-kernel'
  - name: 'notebook_runtime_script'
    primary_resource_id: 'runtime_container'
    primary_resource_name: 'fmt.Sprintf("tf-test-notebooks-runtime-container%s", context["random_suffix"])'
    region_override: 'us-central1'
    vars:
      runtime_name: 'notebooks-runtime-script'
parameters:
  - name: 'location'
    type: ResourceRef
    description: 'A reference to the zone where the machine resides.'
    url_param_only: true
    required: true
    immutable: true
    resource: 'Location'
    imports: 'selfLink'
properties:
  - name: 'name'
    type: String
    description: |
      The name specified for the Notebook runtime.
    url_param_only: true
    required: true
    immutable: true
  - name: 'virtualMachine'
    type: NestedObject
    description: |
      Use a Compute Engine VM image to start the managed notebook instance.
    exactly_one_of:
      - 'virtual_machine'
    properties:
      - name: 'instanceName'
        type: String
        description: |
          The user-friendly name of the Managed Compute Engine instance.
        output: true
      - name: 'instanceId'
        type: String
        description: |
          The unique identifier of the Managed Compute Engine instance.
        output: true
      - name: 'virtualMachineConfig'
        type: NestedObject
        description: |
          Virtual Machine configuration settings.
        properties:
          - name: 'zone'
            type: String
            description: |
              The zone where the virtual machine is located.
            output: true
          - name: 'machineType'
            type: String
            description: |
              The Compute Engine machine type used for runtimes.
            required: true
          - name: 'dataDisk'
            type: NestedObject
>>>>>>> 2fdda66097e2c96688e59f7c58c1f717c7785856
            description: |
              Data disk option configuration settings.
            required: true
            properties:
<<<<<<< HEAD
              - !ruby/object:Api::Type::Boolean
                name: 'autoDelete'
=======
              - name: 'autoDelete'
                type: Boolean
>>>>>>> 2fdda66097e2c96688e59f7c58c1f717c7785856
                description: |
                  Optional. Specifies whether the disk will be auto-deleted
                  when the instance is deleted (but not when the disk is
                  detached from the instance).
                output: true
<<<<<<< HEAD
              - !ruby/object:Api::Type::Boolean
                name: 'boot'
=======
              - name: 'boot'
                type: Boolean
>>>>>>> 2fdda66097e2c96688e59f7c58c1f717c7785856
                description: |
                  Optional. Indicates that this is a boot disk. The virtual
                  machine will use the first partition of the disk for its
                  root filesystem.
                output: true
<<<<<<< HEAD
              - !ruby/object:Api::Type::String
                name: 'deviceName'
=======
              - name: 'deviceName'
                type: String
>>>>>>> 2fdda66097e2c96688e59f7c58c1f717c7785856
                description: |
                  Optional. Specifies a unique device name of your choice
                  that is reflected into the /dev/disk/by-id/google-* tree
                  of a Linux operating system running within the instance.
                  This name can be used to reference the device for mounting,
                  resizing, and so on, from within the instance.
                  If not specified, the server chooses a default device name
                  to apply to this disk, in the form persistent-disk-x, where
                  x is a number assigned by Google Compute Engine. This field
                  is only applicable for persistent disks.
                output: true
<<<<<<< HEAD
              - !ruby/object:Api::Type::Array
                name: 'guestOsFeatures'
=======
              - name: 'guestOsFeatures'
                type: Array
>>>>>>> 2fdda66097e2c96688e59f7c58c1f717c7785856
                description: |
                  Indicates a list of features to enable on the guest operating
                  system. Applicable only for bootable images. To see a list of
                  available features, read `https://cloud.google.com/compute/docs/
                  images/create-delete-deprecate-private-images#guest-os-features`
                  options. ``
                output: true
<<<<<<< HEAD
                item_type: Api::Type::String
              - !ruby/object:Api::Type::Integer
                name: 'index'
=======
                item_type:
                  type: String
              - name: 'index'
                type: Integer
>>>>>>> 2fdda66097e2c96688e59f7c58c1f717c7785856
                description: |
                  Output only. A zero-based index to this disk, where 0 is
                  reserved for the boot disk. If you have many disks attached
                  to an instance, each disk would have a unique index number.
                output: true
<<<<<<< HEAD
              - !ruby/object:Api::Type::NestedObject
                name: 'initializeParams'
=======
              - name: 'initializeParams'
                type: NestedObject
>>>>>>> 2fdda66097e2c96688e59f7c58c1f717c7785856
                description: |
                  Input only. Specifies the parameters for a new disk that will
                  be created alongside the new instance. Use initialization
                  parameters to create boot disks or local SSDs attached to the
                  new instance. This property is mutually exclusive with the
                  source property; you can only define one or the other, but not
                  both.
<<<<<<< HEAD
                properties:
                  - !ruby/object:Api::Type::String
                    name: 'description'
                    description: |
                      Provide this property when creating the disk.
                  - !ruby/object:Api::Type::String
                    name: 'diskName'
=======
                immutable: true
                properties:
                  - name: 'description'
                    type: String
                    description: |
                      Provide this property when creating the disk.
                  - name: 'diskName'
                    type: String
>>>>>>> 2fdda66097e2c96688e59f7c58c1f717c7785856
                    description: |
                      Specifies the disk name. If not specified, the default is
                      to use the name of the instance. If the disk with the
                      instance name exists already in the given zone/region, a
                      new name will be automatically generated.
<<<<<<< HEAD
                  - !ruby/object:Api::Type::Integer
                    name: 'diskSizeGb'
=======
                  - name: 'diskSizeGb'
                    type: Integer
>>>>>>> 2fdda66097e2c96688e59f7c58c1f717c7785856
                    description: |
                      Specifies the size of the disk in base-2 GB. If not
                      specified, the disk will be the same size as the image
                      (usually 10GB). If specified, the size must be equal to
                      or larger than 10GB. Default 100 GB.
<<<<<<< HEAD
                  - !ruby/object:Api::Type::String
                    name: 'diskType'
=======
                  - name: 'diskType'
                    type: String
>>>>>>> 2fdda66097e2c96688e59f7c58c1f717c7785856
                    description: |
                      The type of the boot disk attached to this runtime,
                      defaults to standard persistent disk. For valid values,
                      see `https://cloud.google.com/vertex-ai/docs/workbench/
                      reference/rest/v1/projects.locations.runtimes#disktype`
<<<<<<< HEAD
                  - !ruby/object:Api::Type::KeyValuePairs
                    name: 'labels'
=======
                  - name: 'labels'
                    type: KeyValuePairs
>>>>>>> 2fdda66097e2c96688e59f7c58c1f717c7785856
                    description: |
                      Labels to apply to this disk. These can be later modified
                      by the disks.setLabels method. This field is only
                      applicable for persistent disks.
                    default_from_api: true
<<<<<<< HEAD
                immutable: true
              - !ruby/object:Api::Type::String
                name: 'interface'
=======
              - name: 'interface'
                type: String
>>>>>>> 2fdda66097e2c96688e59f7c58c1f717c7785856
                description: |
                  "Specifies the disk interface to use for attaching this disk,
                  which is either SCSI or NVME. The default is SCSI. Persistent
                  disks must always use SCSI and the request will fail if you attempt
                  to attach a persistent disk in any other format than SCSI. Local SSDs
                  can use either NVME or SCSI. For performance characteristics of SCSI
                  over NVMe, see Local SSD performance. Valid values: * NVME * SCSI".
<<<<<<< HEAD
              - !ruby/object:Api::Type::String
                name: 'kind'
=======
              - name: 'kind'
                type: String
>>>>>>> 2fdda66097e2c96688e59f7c58c1f717c7785856
                description: |
                  Type of the resource. Always compute#attachedDisk for attached
                  disks.
                output: true
<<<<<<< HEAD
              - !ruby/object:Api::Type::Array
                name: 'licenses'
                description: |
                  Output only. Any valid publicly visible licenses.
                item_type: Api::Type::String
                output: true
              - !ruby/object:Api::Type::String
                name: 'mode'
=======
              - name: 'licenses'
                type: Array
                description: |
                  Output only. Any valid publicly visible licenses.
                output: true
                item_type:
                  type: String
              - name: 'mode'
                type: String
>>>>>>> 2fdda66097e2c96688e59f7c58c1f717c7785856
                description: |
                  The mode in which to attach this disk, either READ_WRITE
                  or READ_ONLY. If not specified, the default is to attach
                  the disk in READ_WRITE mode.
<<<<<<< HEAD
              - !ruby/object:Api::Type::String
                name: 'source'
                description: |
                  Specifies a valid partial or full URL to an existing
                  Persistent Disk resource.
              - !ruby/object:Api::Type::String
                name: 'type'
                description: |
                  Specifies the type of the disk, either SCRATCH or PERSISTENT.
                  If not specified, the default is PERSISTENT.
          - !ruby/object:Api::Type::Array
            name: 'containerImages'
=======
              - name: 'source'
                type: String
                description: |
                  Specifies a valid partial or full URL to an existing
                  Persistent Disk resource.
              - name: 'type'
                type: String
                description: |
                  Specifies the type of the disk, either SCRATCH or PERSISTENT.
                  If not specified, the default is PERSISTENT.
          - name: 'containerImages'
            type: Array
>>>>>>> 2fdda66097e2c96688e59f7c58c1f717c7785856
            description: |
              Use a list of container images to start the notebook instance.
            immutable: true
            default_from_api: true
<<<<<<< HEAD
            item_type: !ruby/object:Api::Type::NestedObject
              properties:
                - !ruby/object:Api::Type::String
                  name: 'repository'
=======
            item_type:
              type: NestedObject
              properties:
                - name: 'repository'
                  type: String
>>>>>>> 2fdda66097e2c96688e59f7c58c1f717c7785856
                  description: |
                    The path to the container image repository.
                    For example: gcr.io/{project_id}/{imageName}
                  required: true
<<<<<<< HEAD
                - !ruby/object:Api::Type::String
                  name: 'tag'
                  description: |
                    The tag of the container image. If not specified, this defaults to the latest tag.
          - !ruby/object:Api::Type::NestedObject
            name: 'encryptionConfig'
=======
                - name: 'tag'
                  type: String
                  description: |
                    The tag of the container image. If not specified, this defaults to the latest tag.
          - name: 'encryptionConfig'
            type: NestedObject
>>>>>>> 2fdda66097e2c96688e59f7c58c1f717c7785856
            description: |
              Encryption settings for virtual machine data disk.
            immutable: true
            properties:
<<<<<<< HEAD
              - !ruby/object:Api::Type::String
                name: 'kmsKey'
=======
              - name: 'kmsKey'
                type: String
>>>>>>> 2fdda66097e2c96688e59f7c58c1f717c7785856
                description: |
                  The Cloud KMS resource identifier of the customer-managed
                  encryption key used to protect a resource, such as a disks.
                  It has the following format:
                  `projects/{PROJECT_ID}/locations/{REGION}/keyRings/
                  {KEY_RING_NAME}/cryptoKeys/{KEY_NAME}`
<<<<<<< HEAD
          - !ruby/object:Api::Type::NestedObject
            name: 'shieldedInstanceConfig'
=======
          - name: 'shieldedInstanceConfig'
            type: NestedObject
>>>>>>> 2fdda66097e2c96688e59f7c58c1f717c7785856
            description: |
              Shielded VM Instance configuration settings.
            immutable: true
            properties:
<<<<<<< HEAD
              - !ruby/object:Api::Type::Boolean
                name: 'enableSecureBoot'
=======
              - name: 'enableSecureBoot'
                type: Boolean
>>>>>>> 2fdda66097e2c96688e59f7c58c1f717c7785856
                description: |
                  Defines whether the instance has Secure Boot enabled.Secure
                  Boot helps ensure that the system only runs authentic software
                  by verifying the digital signature of all boot components, and
                  halting the boot process if signature verification fails.
                  Disabled by default.
<<<<<<< HEAD
              - !ruby/object:Api::Type::Boolean
                name: 'enableVtpm'
                description: |
                  Defines whether the instance has the vTPM enabled. Enabled by
                  default.
              - !ruby/object:Api::Type::Boolean
                name: 'enableIntegrityMonitoring'
=======
              - name: 'enableVtpm'
                type: Boolean
                description: |
                  Defines whether the instance has the vTPM enabled. Enabled by
                  default.
              - name: 'enableIntegrityMonitoring'
                type: Boolean
>>>>>>> 2fdda66097e2c96688e59f7c58c1f717c7785856
                description: |
                  Defines whether the instance has integrity monitoring enabled.
                  Enables monitoring and attestation of the boot integrity of
                  the instance. The attestation is performed against the
                  integrity policy baseline. This baseline is initially derived
                  from the implicitly trusted boot image when the instance is
                  created. Enabled by default.
<<<<<<< HEAD
          - !ruby/object:Api::Type::NestedObject
            name: 'acceleratorConfig'
            description: |
              The Compute Engine accelerator configuration for this runtime.
            properties:
              - !ruby/object:Api::Type::String
                name: 'type'
=======
          - name: 'acceleratorConfig'
            type: NestedObject
            description: |
              The Compute Engine accelerator configuration for this runtime.
            properties:
              - name: 'type'
                type: String
>>>>>>> 2fdda66097e2c96688e59f7c58c1f717c7785856
                description: |
                  Accelerator model. For valid values, see
                  `https://cloud.google.com/vertex-ai/docs/workbench/reference/
                  rest/v1/projects.locations.runtimes#AcceleratorType`
<<<<<<< HEAD
              - !ruby/object:Api::Type::Integer
                name: 'coreCount'
                description: |
                  Count of cores of this accelerator.
          - !ruby/object:Api::Type::String
            name: 'network'
=======
              - name: 'coreCount'
                type: Integer
                description: |
                  Count of cores of this accelerator.
          - name: 'network'
            type: String
>>>>>>> 2fdda66097e2c96688e59f7c58c1f717c7785856
            description: |
              The Compute Engine network to be used for machine communications.
              Cannot be specified with subnetwork. If neither `network` nor
              `subnet` is specified, the "default" network of the project is
              used, if it exists. A full URL or partial URI. Examples:
                * `https://www.googleapis.com/compute/v1/projects/[project_id]/
                regions/global/default`
                * `projects/[project_id]/regions/global/default`
              Runtimes are managed resources inside Google Infrastructure.
              Runtimes support the following network configurations:
                * Google Managed Network (Network & subnet are empty)
                * Consumer Project VPC (network & subnet are required). Requires
                configuring Private Service Access.
                * Shared VPC (network & subnet are required). Requires
                configuring Private Service Access.
            immutable: true
<<<<<<< HEAD
          - !ruby/object:Api::Type::String
            name: 'subnet'
=======
          - name: 'subnet'
            type: String
>>>>>>> 2fdda66097e2c96688e59f7c58c1f717c7785856
            description: |
              The Compute Engine subnetwork to be used for machine
              communications. Cannot be specified with network. A full URL or
              partial URI are valid. Examples:
                * `https://www.googleapis.com/compute/v1/projects/[project_id]/
                regions/us-east1/subnetworks/sub0`
                * `projects/[project_id]/regions/us-east1/subnetworks/sub0`
            immutable: true
<<<<<<< HEAD
          - !ruby/object:Api::Type::Boolean
            name: 'internalIpOnly'
=======
          - name: 'internalIpOnly'
            type: Boolean
>>>>>>> 2fdda66097e2c96688e59f7c58c1f717c7785856
            description: |
              If true, runtime will only have internal IP addresses. By default,
              runtimes are not restricted to internal IP addresses, and will
              have ephemeral external IP addresses assigned to each vm. This
              `internal_ip_only` restriction can only be enabled for subnetwork
              enabled networks, and all dependencies must be configured to be
              accessible without external IP addresses.
            immutable: true
            send_empty_value: true
<<<<<<< HEAD
          - !ruby/object:Api::Type::Array
            name: 'tags'
=======
          - name: 'tags'
            type: Array
>>>>>>> 2fdda66097e2c96688e59f7c58c1f717c7785856
            description: |
              The Compute Engine tags to add to runtime (see [Tagging instances]
              (https://cloud.google.com/compute/docs/
              label-or-tag-resources#tags)).
            default_from_api: true
<<<<<<< HEAD
            item_type: Api::Type::String
          - !ruby/object:Api::Type::KeyValuePairs
            name: 'guestAttributes'
=======
            item_type:
              type: String
          - name: 'guestAttributes'
            type: KeyValuePairs
>>>>>>> 2fdda66097e2c96688e59f7c58c1f717c7785856
            description: |
              The Compute Engine guest attributes. (see [Project and instance
              guest attributes](https://cloud.google.com/compute/docs/
              storing-retrieving-metadata#guest_attributes)).
            output: true
<<<<<<< HEAD
          - !ruby/object:Api::Type::KeyValuePairs
            name: 'metadata'
=======
          - name: 'metadata'
            type: KeyValuePairs
>>>>>>> 2fdda66097e2c96688e59f7c58c1f717c7785856
            description: |
              The Compute Engine metadata entries to add to virtual machine.
              (see [Project and instance metadata](https://cloud.google.com
              /compute/docs/storing-retrieving-metadata#project_and_instance
              _metadata)).
            default_from_api: true
<<<<<<< HEAD
          - !ruby/object:Api::Type::KeyValuePairs
            name: 'labels'
=======
          - name: 'labels'
            type: KeyValuePairs
>>>>>>> 2fdda66097e2c96688e59f7c58c1f717c7785856
            description: |
              The labels to associate with this runtime. Label **keys** must
              contain 1 to 63 characters, and must conform to [RFC 1035]
              (https://www.ietf.org/rfc/rfc1035.txt). Label **values** may be
              empty, but, if present, must contain 1 to 63 characters, and must
              conform to [RFC 1035](https://www.ietf.org/rfc/rfc1035.txt). No
              more than 32 labels can be associated with a cluster.
            default_from_api: true
<<<<<<< HEAD
            diff_suppress_func: NotebooksRuntimeLabelDiffSuppress
          - !ruby/object:Api::Type::Enum
            name: 'nicType'
=======
            diff_suppress_func: 'NotebooksRuntimeLabelDiffSuppress'
          - name: 'nicType'
            type: Enum
>>>>>>> 2fdda66097e2c96688e59f7c58c1f717c7785856
            description: |
              The type of vNIC to be used on this interface. This may be gVNIC
              or VirtioNet.
            immutable: true
<<<<<<< HEAD
            values:
              - UNSPECIFIED_NIC_TYPE
              - VIRTIO_NET
              - GVNIC
          - !ruby/object:Api::Type::String
            name: 'reservedIpRange'
=======
            enum_values:
              - 'UNSPECIFIED_NIC_TYPE'
              - 'VIRTIO_NET'
              - 'GVNIC'
          - name: 'reservedIpRange'
            type: String
>>>>>>> 2fdda66097e2c96688e59f7c58c1f717c7785856
            description: |
              Reserved IP Range name is used for VPC Peering. The
              subnetwork allocation will use the range *name* if it's assigned.
            immutable: true
<<<<<<< HEAD
  - !ruby/object:Api::Type::Enum
    name: 'state'
    values:
      - STATE_UNSPECIFIED
      - STARTING
      - PROVISIONING
      - ACTIVE
      - STOPPING
      - STOPPED
      - DELETING
      - UPGRADING
      - INITIALIZING
    description: |
      The state of this runtime.
    output: true
  - !ruby/object:Api::Type::String
    name: 'healthState'
=======
  - name: 'state'
    type: Enum
    description: |
      The state of this runtime.
    output: true
    enum_values:
      - 'STATE_UNSPECIFIED'
      - 'STARTING'
      - 'PROVISIONING'
      - 'ACTIVE'
      - 'STOPPING'
      - 'STOPPED'
      - 'DELETING'
      - 'UPGRADING'
      - 'INITIALIZING'
  - name: 'healthState'
    type: String
>>>>>>> 2fdda66097e2c96688e59f7c58c1f717c7785856
    description: |
      The health state of this runtime. For a list of possible output
      values, see `https://cloud.google.com/vertex-ai/docs/workbench/
      reference/rest/v1/projects.locations.runtimes#healthstate`.
    output: true
<<<<<<< HEAD
  - !ruby/object:Api::Type::NestedObject
    name: 'accessConfig'
    description: |
      The config settings for accessing runtime.
    properties:
      - !ruby/object:Api::Type::String
        name: 'accessType'
=======
  - name: 'accessConfig'
    type: NestedObject
    description: |
      The config settings for accessing runtime.
    properties:
      - name: 'accessType'
        type: String
>>>>>>> 2fdda66097e2c96688e59f7c58c1f717c7785856
        description: |
          The type of access mode this instance. For valid values, see
          `https://cloud.google.com/vertex-ai/docs/workbench/reference/
          rest/v1/projects.locations.runtimes#RuntimeAccessType`.
<<<<<<< HEAD
      - !ruby/object:Api::Type::String
        name: 'runtimeOwner'
        description: |
          The owner of this runtime after creation. Format: `alias@example.com`.
          Currently supports one owner only.
      - !ruby/object:Api::Type::String
        name: 'proxyUri'
        description: |
          The proxy endpoint that is used to access the runtime.
        output: true
  - !ruby/object:Api::Type::NestedObject
    name: 'softwareConfig'
=======
      - name: 'runtimeOwner'
        type: String
        description: |
          The owner of this runtime after creation. Format: `alias@example.com`.
          Currently supports one owner only.
      - name: 'proxyUri'
        type: String
        description: |
          The proxy endpoint that is used to access the runtime.
        output: true
  - name: 'softwareConfig'
    type: NestedObject
>>>>>>> 2fdda66097e2c96688e59f7c58c1f717c7785856
    description: |
      The config settings for software inside the runtime.
    default_from_api: true
    update_mask_fields:
      - 'softwareConfig.idleShutdown'
      - 'softwareConfig.idleShutdownTimeout'
      - 'softwareConfig.customGpuDriverPath'
      - 'softwareConfig.postStartupScript'
    properties:
<<<<<<< HEAD
      - !ruby/object:Api::Type::String
        name: 'notebookUpgradeSchedule'
        description: |
          Cron expression in UTC timezone for schedule instance auto upgrade.
          Please follow the [cron format](https://en.wikipedia.org/wiki/Cron).
      - !ruby/object:Api::Type::Boolean
        name: 'enableHealthMonitoring'
        description: |
          Verifies core internal services are running. Default: True.
        default_value: true
      - !ruby/object:Api::Type::Boolean
        name: 'idleShutdown'
=======
      - name: 'notebookUpgradeSchedule'
        type: String
        description: |
          Cron expression in UTC timezone for schedule instance auto upgrade.
          Please follow the [cron format](https://en.wikipedia.org/wiki/Cron).
      - name: 'enableHealthMonitoring'
        type: Boolean
        description: |
          Verifies core internal services are running. Default: True.
        default_value: true
      - name: 'idleShutdown'
        type: Boolean
>>>>>>> 2fdda66097e2c96688e59f7c58c1f717c7785856
        description: |
          Runtime will automatically shutdown after idle_shutdown_time.
          Default: True
        default_value: true
<<<<<<< HEAD
      - !ruby/object:Api::Type::Integer
        name: 'idleShutdownTimeout'
        description: |
          Time in minutes to wait before shuting down runtime.
          Default: 180 minutes
      - !ruby/object:Api::Type::Boolean
        name: 'installGpuDriver'
        description: |
          Install Nvidia Driver automatically.
      - !ruby/object:Api::Type::Boolean
        name: 'upgradeable'
        output: true
        description: |
          Bool indicating whether an newer image is available in an image family.
      - !ruby/object:Api::Type::String
        name: 'customGpuDriverPath'
        description: |
          Specify a custom Cloud Storage path where the GPU driver is stored.
          If not specified, we'll automatically choose from official GPU drivers.
      - !ruby/object:Api::Type::String
        name: 'postStartupScript'
=======
      - name: 'idleShutdownTimeout'
        type: Integer
        description: |
          Time in minutes to wait before shuting down runtime.
          Default: 180 minutes
      - name: 'installGpuDriver'
        type: Boolean
        description: |
          Install Nvidia Driver automatically.
      - name: 'upgradeable'
        type: Boolean
        description: |
          Bool indicating whether an newer image is available in an image family.
        output: true
      - name: 'customGpuDriverPath'
        type: String
        description: |
          Specify a custom Cloud Storage path where the GPU driver is stored.
          If not specified, we'll automatically choose from official GPU drivers.
      - name: 'postStartupScript'
        type: String
>>>>>>> 2fdda66097e2c96688e59f7c58c1f717c7785856
        description: |
          Path to a Bash script that automatically runs after a notebook instance
          fully boots up. The path must be a URL or
          Cloud Storage path (gs://path-to-file/file-name).
<<<<<<< HEAD
      - !ruby/object:Api::Type::Enum
        name: 'postStartupScriptBehavior'
        values:
          - POST_STARTUP_SCRIPT_BEHAVIOR_UNSPECIFIED
          - RUN_EVERY_START
          - DOWNLOAD_AND_RUN_EVERY_START
        description: |
          Behavior for the post startup script.
      - !ruby/object:Api::Type::Array
        name: 'kernels'
        description: |
          Use a list of container images to use as Kernels in the notebook instance.
        item_type: !ruby/object:Api::Type::NestedObject
          properties:
            - !ruby/object:Api::Type::String
              name: 'repository'
=======
      - name: 'postStartupScriptBehavior'
        type: Enum
        description: |
          Behavior for the post startup script.
        enum_values:
          - 'POST_STARTUP_SCRIPT_BEHAVIOR_UNSPECIFIED'
          - 'RUN_EVERY_START'
          - 'DOWNLOAD_AND_RUN_EVERY_START'
      - name: 'kernels'
        type: Array
        description: |
          Use a list of container images to use as Kernels in the notebook instance.
        item_type:
          type: NestedObject
          properties:
            - name: 'repository'
              type: String
>>>>>>> 2fdda66097e2c96688e59f7c58c1f717c7785856
              description: |
                The path to the container image repository.
                For example: gcr.io/{project_id}/{imageName}
              required: true
<<<<<<< HEAD
            - !ruby/object:Api::Type::String
              name: 'tag'
              description: |
                The tag of the container image. If not specified, this defaults to the latest tag.
  - !ruby/object:Api::Type::NestedObject
    name: 'metrics'
    description: |
      Contains Runtime daemon metrics such as Service status and JupyterLab
      status
    properties:
      - !ruby/object:Api::Type::KeyValuePairs
        name: 'systemMetrics'
=======
            - name: 'tag'
              type: String
              description: |
                The tag of the container image. If not specified, this defaults to the latest tag.
  - name: 'metrics'
    type: NestedObject
    description: |
      Contains Runtime daemon metrics such as Service status and JupyterLab
      status
    output: true
    properties:
      - name: 'systemMetrics'
        type: KeyValuePairs
>>>>>>> 2fdda66097e2c96688e59f7c58c1f717c7785856
        description: |
          Contains runtime daemon metrics, such as OS and kernels and
          sessions stats.
        output: true
<<<<<<< HEAD
    output: true
  - !ruby/object:Api::Type::KeyValueLabels
    name: 'labels'
=======
  - name: 'labels'
    type: KeyValueLabels
>>>>>>> 2fdda66097e2c96688e59f7c58c1f717c7785856
    description: |
      The labels to associate with this runtime. Label **keys** must
      contain 1 to 63 characters, and must conform to [RFC 1035]
      (https://www.ietf.org/rfc/rfc1035.txt). Label **values** may be
      empty, but, if present, must contain 1 to 63 characters, and must
      conform to [RFC 1035](https://www.ietf.org/rfc/rfc1035.txt). No
      more than 32 labels can be associated with a cluster.
