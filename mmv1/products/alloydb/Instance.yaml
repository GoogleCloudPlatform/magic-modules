# Copyright 2023 Google Inc.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

--- !ruby/object:Api::Resource
name: 'Instance'
self_link: '{{cluster}}/instances/{{instance_id}}'
base_url: '{{cluster}}/instances?instanceId={{instance_id}}'
update_verb: :PATCH
update_mask: true
description: 'A managed alloydb cluster instance.'
references: !ruby/object:Api::Resource::ReferenceLinks
  guides:
    'AlloyDB': 'https://cloud.google.com/alloydb/docs/'
  api: 'https://cloud.google.com/alloydb/docs/reference/rest/v1/projects.locations.clusters.instances/create'
async: !ruby/object:Api::OpAsync
  operation: !ruby/object:Api::OpAsync::Operation
    path: 'name'
    base_url: '{{op_id}}'
    wait_ms: 1000
    timeouts: !ruby/object:Api::Timeouts
      insert_minutes: 40
      update_minutes: 40
      delete_minutes: 40
  result: !ruby/object:Api::OpAsync::Result
    path: 'response'
  status: !ruby/object:Api::OpAsync::Status
    path: 'done'
    complete: true
    allowed:
      - true
      - false
  error: !ruby/object:Api::OpAsync::Error
    path: 'error'
    message: 'message'
  include_project: true
import_format: ['projects/{{project}}/locations/{{location}}/clusters/{{cluster}}/instances/{{instance_id}}']
# Skipping the sweeper because instances will be deleted during cluster sweeps
skip_sweeper: true
autogen_async: true
custom_code: !ruby/object:Provider::Terraform::CustomCode
  custom_import: templates/terraform/custom_import/alloydb_instance.go.erb
examples:
  - !ruby/object:Provider::Terraform::Examples
    name: 'alloydb_instance_basic'
    primary_resource_id: 'default'
    vars:
      alloydb_cluster_name: 'alloydb-cluster'
      alloydb_instance_name: 'alloydb-instance'
      network_name: 'alloydb-network'
    test_vars_overrides:
      network_name: 'acctest.BootstrapSharedTestNetwork(t, "alloydb-instance-basic")'
    ignore_read_extra:
      - 'reconciling'
      - 'update_time'
parameters:
  - !ruby/object:Api::Type::ResourceRef
    name: 'cluster'
    description: |
      Identifies the alloydb cluster. Must be in the format
      'projects/{project}/locations/{location}/clusters/{cluster_id}'
    required: true
    immutable: true
    resource: 'Cluster'
    imports: 'name'
    url_param_only: true
  - !ruby/object:Api::Type::String
    name: 'instanceId'
    required: true
    immutable: true
    url_param_only: true
    description: |
      The ID of the alloydb instance.
properties:
  - !ruby/object:Api::Type::String
    name: 'name'
    output: true
    description: |
      The name of the instance resource.
  - !ruby/object:Api::Type::Time
    name: 'createTime'
    description: |
      Time the Instance was created in UTC.
    output: true
  - !ruby/object:Api::Type::Time
    name: 'updateTime'
    description: |
      Time the Instance was updated in UTC.
    output: true
  - !ruby/object:Api::Type::String
    name: 'uid'
    output: true
    description: |
      The system-generated UID of the resource.
  - !ruby/object:Api::Type::KeyValuePairs
    name: 'labels'
    description: 'User-defined labels for the alloydb instance.'
  - !ruby/object:Api::Type::KeyValuePairs
    name: 'annotations'
    description:
      'Annotations to allow client tools to store small amount of arbitrary
      data. This is distinct from labels.'
  - !ruby/object:Api::Type::String
    name: 'state'
    output: true
    description: |
      The current state of the alloydb instance.
  - !ruby/object:Api::Type::String
    name: 'displayName'
    description: |
      User-settable and human-readable display name for the Instance.
    ignore_read: true
  - !ruby/object:Api::Type::String
    name: 'gceZone'
    description: |
      The Compute Engine zone that the instance should serve from, per https://cloud.google.com/compute/docs/regions-zones This can ONLY be specified for ZONAL instances. If present for a REGIONAL instance, an error will be thrown. If this is absent for a ZONAL instance, instance is created in a random zone with available capacity.
  - !ruby/object:Api::Type::Boolean
    name: 'reconciling'
    output: true
    description: |
      Set to true if the current state of Instance does not match the user's intended state, and the service is actively updating the resource to reconcile them. This can happen due to user-triggered updates or system actions like failover or maintenance.
  - !ruby/object:Api::Type::KeyValuePairs
    name: 'databaseFlags'
    description:
      'Database flags. Set at instance level. * They are copied from primary
      instance on read instance creation. * Read instances can set new or
      override existing flags that are relevant for reads, e.g. for enabling
      columnar cache on a read instance. Flags set on read instance may or may
      not be present on primary.'
  - !ruby/object:Api::Type::Enum
    name: 'availabilityType'
    description: |
      'Availability type of an Instance. Defaults to REGIONAL for both primary and read instances.
      Note that primary and read instances can have different availability types.
      Only READ_POOL instance supports ZONAL type. Users can't specify the zone for READ_POOL instance.
      Zone is automatically chosen from the list of zones in the region specified.
      Read pool of size 1 can only have zonal availability. Read pools with node count of 2 or more
      can have regional availability (nodes are present in 2 or more zones in a region).'
    values:
      - :AVAILABILITY_TYPE_UNSPECIFIED
      - :ZONAL
      - :REGIONAL
    default_from_api: true
  - !ruby/object:Api::Type::Enum
    name: 'instanceType'
    required: true
    immutable: true
    description: |
      The type of the instance. If the instance type is READ_POOL, provide the associated PRIMARY instance in the `depends_on` meta-data attribute.
    values:
      - :PRIMARY
      - :READ_POOL
  - !ruby/object:Api::Type::String
    name: 'ipAddress'
    output: true
    description: |
      The IP address for the Instance. This is the connection endpoint for an end-user application.
  - !ruby/object:Api::Type::NestedObject
    name: 'queryInsightsConfig'
    default_from_api: true
    description: 'Configuration for query insights.'
    properties:
      - !ruby/object:Api::Type::Integer
        name: 'queryStringLength'
        description: 'Query string length. The default value is 1024. Any integer between 256 and 4500 is considered valid.'
      - !ruby/object:Api::Type::Boolean
        name: 'recordApplicationTags'
        description: 'Record application tags for an instance. This flag is turned "on" by default.'
      - !ruby/object:Api::Type::Boolean
        name: 'recordClientAddress'
        description: 'Record client address for an instance. Client address is PII information. This flag is turned "on" by default.'
      - !ruby/object:Api::Type::Integer
        name: 'queryPlansPerMinute'
        description: 'Number of query execution plans captured by Insights per minute for all queries combined. The default value is 5. Any integer between 0 and 20 is considered valid.'
  - !ruby/object:Api::Type::NestedObject
    name: 'readPoolConfig'
    description: 'Read pool specific config. If the instance type is READ_POOL, this configuration must be provided.'
    properties:
      - !ruby/object:Api::Type::Integer
        name: 'nodeCount'
        description:
          'Read capacity, i.e. number of nodes in a read pool instance.'
  - !ruby/object:Api::Type::NestedObject
    name: 'machineConfig'
    description:
      'Configurations for the machines that host the underlying database engine.'
    default_from_api: true
    properties:
      - !ruby/object:Api::Type::Integer
        name: 'cpuCount'
        description: "The number of CPU's in the VM instance."

        default_from_api: true
