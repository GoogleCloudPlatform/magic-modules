# Copyright 2023 Google Inc.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

--- !ruby/object:Api::Resource
name: 'Membership'
base_url: 'projects/{{project}}/locations/{{location}}/memberships'
create_url: 'projects/{{project}}/locations/{{location}}/memberships?membershipId={{membership_id}}'
update_url: 'projects/{{project}}/locations/{{location}}/memberships/{{membership_id}}'
self_link: 'projects/{{project}}/locations/{{location}}/memberships/{{membership_id}}'
update_verb: :PATCH
update_mask: true
description: |
  Membership contains information about a member cluster.
references: !ruby/object:Api::Resource::ReferenceLinks
  guides:
    'Registering a Cluster': 'https://cloud.google.com/anthos/multicluster-management/connect/registering-a-cluster#register_cluster'
  api: 'https://cloud.google.com/anthos/multicluster-management/reference/rest/v1/projects.locations.memberships'
async: !ruby/object:Api::OpAsync
  operation: !ruby/object:Api::OpAsync::Operation
    kind: 'gkehub#operation'
    path: 'name'
    base_url: '{{op_id}}'
    wait_ms: 1000
  result: !ruby/object:Api::OpAsync::Result
    path: 'response'
    resource_inside_response: true
  status: !ruby/object:Api::OpAsync::Status
    path: 'done'
    complete: 'true'
    allowed:
      - 'true'
      - 'false'
  error: !ruby/object:Api::OpAsync::Error
    path: 'error/errors'
    message: 'message'
iam_policy: !ruby/object:Api::Resource::IamPolicy
  parent_resource_attribute: membership_id
  method_name_separator: ':'
  import_format:
    [
      'projects/{{project}}/locations/{{location}}/memberships/{{membership_id}}',
      '{{membership_id}}',
    ]
autogen_async: true
schema_version: 1
state_upgraders: true
examples:
  - !ruby/object:Provider::Terraform::Examples
    name: 'gkehub_membership_regional'
    primary_resource_name: 'fmt.Sprintf("basic%s", context["random_suffix"])'
    primary_resource_id: 'membership'
    vars:
      name: 'basic'
      cluster_name: 'basic-cluster'
      network_name: 'default'
      subnetwork_name: 'default'
    test_vars_overrides:
      network_name: 'acctest.BootstrapSharedTestNetwork(t, "gke-cluster")'
      subnetwork_name: 'acctest.BootstrapSubnet(t, "gke-cluster", acctest.BootstrapSharedTestNetwork(t, "gke-cluster"))'
    test_env_vars:
      project: :PROJECT_NAME
      location: :REGION
  - !ruby/object:Provider::Terraform::Examples
    name: 'gkehub_membership_basic'
    primary_resource_name: 'fmt.Sprintf("basic%s", context["random_suffix"])'
    primary_resource_id: 'membership'
    vars:
      name: 'basic'
      cluster_name: 'basic-cluster'
      deletion_protection: 'true'
      network_name: 'default'
      subnetwork_name: 'default'
    test_vars_overrides:
      deletion_protection: 'false'
      network_name: 'acctest.BootstrapSharedTestNetwork(t, "gke-cluster")'
      subnetwork_name: 'acctest.BootstrapSubnet(t, "gke-cluster", acctest.BootstrapSharedTestNetwork(t, "gke-cluster"))'
    oics_vars_overrides:
      deletion_protection: 'false'
  - !ruby/object:Provider::Terraform::Examples
    name: 'gkehub_membership_issuer'
    primary_resource_id: 'membership'
    vars:
      name: 'basic'
      cluster_name: 'basic-cluster'
      deletion_protection: 'true'
      network_name: 'default'
      subnetwork_name: 'default'
    test_vars_overrides:
      deletion_protection: 'false'
      network_name: 'acctest.BootstrapSharedTestNetwork(t, "gke-cluster")'
      subnetwork_name: 'acctest.BootstrapSubnet(t, "gke-cluster", acctest.BootstrapSharedTestNetwork(t, "gke-cluster"))'
    oics_vars_overrides:
      deletion_protection: 'false'
    test_env_vars:
      project: :PROJECT_NAME
# Skip sweeper gen since this is a child resource.
skip_sweeper: true
id_format: 'projects/{{project}}/locations/{{location}}/memberships/{{membership_id}}'
import_format:
  ['projects/{{project}}/locations/{{location}}/memberships/{{membership_id}}']
custom_code: !ruby/object:Provider::Terraform::CustomCode
  constants: templates/terraform/constants/gke_hub_membership_diff.go
parameters:
  - !ruby/object:Api::Type::String
    name: 'location'
    immutable: true
    default_value: global
    url_param_only: true
    description: |
      Location of the membership.
      The default value is `global`.
properties:
  - !ruby/object:Api::Type::String
    name: 'membershipId'
    description: |
      The client-provided identifier of the membership.
    required: true
    immutable: true
    url_param_only: true
  - !ruby/object:Api::Type::String
    name: 'name'
    output: true
    description: |
      The unique identifier of the membership.
  - !ruby/object:Api::Type::String
    name: 'description'
    deprecation_message: >-
      `description` is deprecated and will be removed in a future major release.
    min_version: beta
    description: |
      The name of this entity type to be displayed on the console. This field is unavailable in v1 of the API.
  - !ruby/object:Api::Type::KeyValueLabels
    name: 'labels'
    description: |
      Labels to apply to this membership.
  - !ruby/object:Api::Type::NestedObject
    name: 'endpoint'
    immutable: true
    description: |
      If this Membership is a Kubernetes API server hosted on GKE, this is a self link to its GCP resource.
    properties:
      - !ruby/object:Api::Type::NestedObject
        name: 'gkeCluster'
        immutable: true
        description: |
          If this Membership is a Kubernetes API server hosted on GKE, this is a self link to its GCP resource.
        properties:
          - !ruby/object:Api::Type::String
            name: 'resourceLink'
            description: |
              Self-link of the GCP resource for the GKE cluster.
              For example: `//container.googleapis.com/projects/my-project/zones/us-west1-a/clusters/my-cluster`.
              It can be at the most 1000 characters in length. If the cluster is provisioned with Terraform,
              this can be `"//container.googleapis.com/${google_container_cluster.my-cluster.id}"` or
              `google_container_cluster.my-cluster.id`.
            immutable: true
            required: true
            diff_suppress_func: suppressGkeHubEndpointSelfLinkDiff
            custom_expand: 'templates/terraform/custom_expand/gke_hub_membership.erb'
  - !ruby/object:Api::Type::NestedObject
    name: 'authority'
    description: |
      Authority encodes how Google will recognize identities from this Membership.
      See the workload identity documentation for more details:
      https://cloud.google.com/kubernetes-engine/docs/how-to/workload-identity
    properties:
      - !ruby/object:Api::Type::String
        name: 'issuer'
        immutable: true
        required: true
        description: |
          A JSON Web Token (JWT) issuer URI. `issuer` must start with `https://` and // be a valid
          with length <2000 characters. For example: `https://container.googleapis.com/v1/projects/my-project/locations/us-west1/clusters/my-cluster` (must be `locations` rather than `zones`). If the cluster is provisioned with Terraform, this is `"https://container.googleapis.com/v1/${google_container_cluster.my-cluster.id}"`.
