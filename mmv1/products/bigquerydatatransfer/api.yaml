# Copyright 2019 Google Inc.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

--- !ruby/object:Api::Product
name: BigqueryDataTransfer
display_name: BigQuery Data Transfer
versions:
  - !ruby/object:Api::Product::Version
    name: ga
    base_url: https://bigquerydatatransfer.googleapis.com/v1/
scopes:
  - https://www.googleapis.com/auth/bigquery
apis_required:
  - !ruby/object:Api::Product::ApiReference
    name: BigQueryDataTransfer API
    url: https://console.cloud.google.com/apis/api/bigquerydatatransfer.googleapis.com/
objects:
  - !ruby/object:Api::Resource
    name: 'Config'
    base_url: projects/{{project}}/locations/{{location}}/transferConfigs?serviceAccountName={{service_account_name}}
    self_link: "{{name}}"
    # see comment at service_account_name, PATCHing service_account_name also required update_mask entry
    # update_url: "{{name}}?serviceAccountName={{service_account_name}}"
    update_verb: :PATCH
    update_mask: true
    description: |
      Represents a data transfer configuration. A transfer configuration
      contains all metadata needed to perform a data transfer.
    references: !ruby/object:Api::Resource::ReferenceLinks
      guides:
        "Official Documentation": "https://cloud.google.com/bigquery/docs/reference/datatransfer/rest/"
      api: "https://cloud.google.com/bigquery/docs/reference/datatransfer/rest/v1/projects.locations.transferConfigs/create"
    parameters:
      - !ruby/object:Api::Type::String
        name: 'location'
        url_param_only: true
        input: true
        default_value: US
        description: |
          The geographic location where the transfer config should reside.
          Examples: US, EU, asia-northeast1. The default value is US.
      - !ruby/object:Api::Type::String
        name: 'serviceAccountName'
        url_param_only: true
        # The API would support PATCHing the service account, but setting the
        # update_mask accordingly for a url_param_only is currently not
        # supported in magic-modules
        input: true
        default_value: ''
        description: |
          Optional service account name. If this field is set, transfer config will
          be created with this service account credentials. It requires that
          requesting user calling this API has permissions to act as this service account.
    properties:
      - !ruby/object:Api::Type::String
        name: 'displayName'
        input: true
        required: true
        description: |
          The user specified display name for the transfer config.
      - !ruby/object:Api::Type::String
        name: 'name'
        output: true
        description: |
          The resource name of the transfer config. Transfer config names have the
          form projects/{projectId}/locations/{location}/transferConfigs/{configId}.
          Where configId is usually a uuid, but this is not required.
          The name is ignored when creating a transfer config.
      - !ruby/object:Api::Type::String
        name: 'destinationDatasetId'
        description: |
          The BigQuery target dataset id.
      - !ruby/object:Api::Type::String
        name: 'dataSourceId'
        input: true
        required: true
        description: |
          The data source id. Cannot be changed once the transfer config is created.
      - !ruby/object:Api::Type::String
        name: 'schedule'
        description: |
          Data transfer schedule. If the data source does not support a custom
          schedule, this should be empty. If it is empty, the default value for
          the data source will be used. The specified times are in UTC. Examples
          of valid format: 1st,3rd monday of month 15:30, every wed,fri of jan,
          jun 13:15, and first sunday of quarter 00:00. See more explanation
          about the format here:
          https://cloud.google.com/appengine/docs/flexible/python/scheduling-jobs-with-cron-yaml#the_schedule_format
          NOTE: the granularity should be at least 8 hours, or less frequent.
      - !ruby/object:Api::Type::NestedObject
        name: 'scheduleOptions'
        description: |
          Options customizing the data transfer schedule.
        properties:
          - !ruby/object:Api::Type::Boolean
            name: 'disableAutoScheduling'
            description: |
              If true, automatic scheduling of data transfer runs for this
              configuration will be disabled. The runs can be started on ad-hoc
              basis using transferConfigs.startManualRuns API. When automatic
              scheduling is disabled, the TransferConfig.schedule field will
              be ignored.
            at_least_one_of:
              - schedule_options.0.disable_auto_scheduling
              - schedule_options.0.start_time
              - schedule_options.0.end_time
          - !ruby/object:Api::Type::Time
            name: 'startTime'
            description: |
              Specifies time to start scheduling transfer runs. The first run will be
              scheduled at or after the start time according to a recurrence pattern
              defined in the schedule string. The start time can be changed at any
              moment. The time when a data transfer can be triggered manually is not
              limited by this option.
            at_least_one_of:
              - schedule_options.0.disable_auto_scheduling
              - schedule_options.0.start_time
              - schedule_options.0.end_time
          - !ruby/object:Api::Type::Time
            name: 'endTime'
            description: |
              Defines time to stop scheduling transfer runs. A transfer run cannot be
              scheduled at or after the end time. The end time can be changed at any
              moment. The time when a data transfer can be triggered manually is not
              limited by this option.
            at_least_one_of:
              - schedule_options.0.disable_auto_scheduling
              - schedule_options.0.start_time
              - schedule_options.0.end_time
      - !ruby/object:Api::Type::NestedObject
        name: 'emailPreferences'
        description: |
          Email notifications will be sent according to these preferences to the
          email address of the user who owns this transfer config.
        properties:
          - !ruby/object:Api::Type::Boolean
            name: 'enableFailureEmail'
            required: true
            description: |
              If true, email notifications will be sent on transfer run failures.
      - !ruby/object:Api::Type::String
          name: 'notificationPubsubTopic'
          description: |
            Pub/Sub topic where notifications will be sent after transfer runs
            associated with this transfer config finish.
      - !ruby/object:Api::Type::Integer
        name: 'dataRefreshWindowDays'
        description: |
          The number of days to look back to automatically refresh the data.
          For example, if dataRefreshWindowDays = 10, then every day BigQuery
          reingests data for [today-10, today-1], rather than ingesting data for
          just [today-1]. Only valid if the data source supports the feature.
          Set the value to 0 to use the default value.
      - !ruby/object:Api::Type::Boolean
        name: 'disabled'
        description: |
          When set to true, no runs are scheduled for a given transfer.
      - !ruby/object:Api::Type::KeyValuePairs
        name: 'params'
        required: true
        description: |
          These parameters are specific to each data source.
      - !ruby/object:Api::Type::NestedObject
        name: sensitiveParams
        # This is a helper object for Terraform only
        exclude: true
        url_param_only: true
        description: |
          Terraform only field
        properties:
          - !ruby/object:Api::Type::String
            name: secretAccessKey
            required: true
            description: |
              The Secret Access Key of the AWS account transferring data from.
