# Copyright 2023 Google Inc.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

---
!ruby/object:Api::Resource # API resource name
name: "kmsconfig"
description: |
  NetApp Volumes always encrypts your data at rest using volume-specific keys.

  A CMEK policy (customer-managed encryption key) warps such volume-specific keys in a key stored in Cloud Key Management Service (KMS).
references: !ruby/object:Api::Resource::ReferenceLinks
  guides:
    # Link to quickstart in the API's Guides section. For example:
    # 'Create and connect to a database': 'https://cloud.google.com/alloydb/docs/quickstart/create-and-connect'
    "Documentation": "https://cloud.google.com/netapp/volumes/docs/configure-and-use/cmek/cmek-overview"
  # Link to the REST API reference for the resource. For example,
  api: "https://cloud.google.com/netapp/volumes/docs/reference/rest/v1/projects.locations.kmsConfigs"
base_url: projects/{{project}}/locations/{{location}}/kmsConfigs
self_link: projects/{{project}}/locations/{{location}}/kmsConfigs/{{name}}
create_url: projects/{{project}}/locations/{{location}}/kmsConfigs?kmsConfigId={{name}}
update_url: projects/{{project}}/locations/{{location}}/kmsConfigs/{{name}}
update_verb: :PATCH
update_mask: true
autogen_async: true

async: !ruby/object:Api::OpAsync
  # Overrides which API calls return operations. Default: ['create',
  # 'update', 'delete']
  # actions: ['create', 'update', 'delete']
  operation: !ruby/object:Api::OpAsync::Operation
    base_url: "{{op_id}}"
custom_code: !ruby/object:Provider::Terraform::CustomCode
  post_create: templates/terraform/post_create/KMS_Verify.go.erb

id_format: "projects/{{project}}/locations/{{location}}/kmsConfigs/{{name}}"
import_format:
  ["projects/{{project}}/locations/{{location}}/kmsConfigs/{{name}}"]
parameters:
  - !ruby/object:Api::Type::String
    name: "location"
    required: true
    immutable: true
    url_param_only: true
    description: |
      Name of the policy location. CMEK policies apply to the whole region.
  - !ruby/object:Api::Type::String # OK: This needs to be 'name' IMHO
    name: "name"
    description: |
      Name of the CMEK policy.
    required: true
    immutable: true
    url_param_only: true
examples:
  - !ruby/object:Provider::Terraform::Examples
    name: "kmsConfig_create"
    primary_resource_id: "kmsConfig"
    vars:
      kms_name: "kms-test"
      key_ring_value: "key-ring"
      crypto_name: "crypto-name"
properties:
  - !ruby/object:Api::Type::String
    name: "description"
    description: |
      Description for the CMEK policy.
  - !ruby/object:Api::Type::KeyValueLabels
    name: "labels"
    description: |
      Labels as key value pairs. Example: `{ "owner": "Bob", "department": "finance", "purpose": "testing" }`.
  - !ruby/object:Api::Type::String
    name: "cryptoKeyName"
    description: |
      Resource name of the KMS key to use. Only regional keys are supported. Format: `projects/{{project}}/locations/{{location}}/keyRings/{{key_ring}}/cryptoKeys/{{key}}`.
    required: true
  - !ruby/object:Api::Type::String
    name: "instructions"
    description: |
      Access to the key needs to be granted. The instructions contain gcloud commands to run to grant access.

      To make the policy work, a CMEK policy check is required, which verifies key access.
    output: true

  - !ruby/object:Api::Type::String
    name: "serviceAccount"
    description: |
      The Service account which needs to have access to the  provided KMS key.
    output: true
