# Copyright 2023 Google Inc.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

--- !ruby/object:Api::Resource
name: 'storagePool'
description: |
 Storage pools act as containers for volumes. All volumes in a storage pool share the following information:
 * Location
 * Service level
 * Virtual Private Cloud (VPC) network
 * Active Directory policy
 * LDAP use for NFS volumes, if applicable
 * Customer-managed encryption key (CMEK) policy

 The capacity of the pool can be split up and assigned to volumes within the pool. Storage pools are a billable
 component of NetApp Volumes. Billing is based on the location, service level, and capacity allocated to a pool
 independent of consumption at the volume level.
references: !ruby/object:Api::Resource::ReferenceLinks
  guides:
    'QUICKSTART_TITLE': 'https://cloud.google.com/netapp/volumes/docs/get-started/quickstarts/create-storage-pool'
  api: 'https://cloud.google.com/netapp/volumes/docs/reference/rest/v1/projects.locations.storagePools'
base_url: projects/{{project}}/locations/{{location}}/storagePools
self_link: projects/{{project}}/locations/{{location}}/storagePools/{{name}}
create_url: projects/{{project}}/locations/{{location}}/storagePools?storagePoolId={{name}}
update_url: projects/{{project}}/locations/{{location}}/storagePools/{{name}}
update_verb: :PATCH
update_mask: true
delete_url: projects/{{project}}/locations/{{location}}/storagePools/{{name}}
autogen_async: true
async: !ruby/object:Api::OpAsync
  operation: !ruby/object:Api::OpAsync::Operation
    base_url: '{{op_id}}'
id_format: 'projects/{{project}}/locations/{{location}}/storagePools/{{name}}'
import_format: ['projects/{{project}}/locations/{{location}}/storagePools/{{name}}']
parameters:
  - !ruby/object:Api::Type::String
    name: 'location'
    required: true
    immutable: true
    url_param_only: true
    description: |
      Name of the location. Usually a region name, expect for some STANDARD service level pools which require a zone name.
  - !ruby/object:Api::Type::String
    name: 'name'
    description:
      The resource name of the storage pool. Needs to be unique per location.
    required: true
    immutable: true
    url_param_only: true
examples:
  - !ruby/object:Provider::Terraform::Examples
    name: 'Storage_pool_create'
    primary_resource_id: 'test_pool'
    vars:
      pool_name: 'test-pool'
      network_name: 'test-network'
      global_name: 'test-address'
properties:
  - !ruby/object:Api::Type::Enum
    name: 'serviceLevel'
    description: |
      Service level of the storage pool.
    values:
      - :PREMIUM
      - :EXTREME
      - :STANDARD
      - :FLEX
    required: true
    immutable: true
  - !ruby/object:Api::Type::String
    name: 'capacityGib'
    description: |
      Capacity of the storage pool (in GiB).
    required: true
  - !ruby/object:Api::Type::String
    name: 'volumeCapacityGib'
    description: |
      Size allocated to volumes in the storage pool (in GiB).
    output: true
  - !ruby/object:Api::Type::Integer
    name: 'volumeCount'
    description: |
      Number of volume in the storage pool.
    output: true
  - !ruby/object:Api::Type::String
    name: 'description'
    description: |
      An optional description of this resource.
  - !ruby/object:Api::Type::KeyValueLabels
    name: labels
    description: |
      Labels as key value pairs. Example: `{ "owner": "Bob", "department": "finance", "purpose": "testing" }`.
  - !ruby/object:Api::Type::String
    name: 'network'
    description: |
      VPC network name with format: `projects/{{project}}/global/networks/{{network}}`
    required: true
    immutable: true
    diff_suppress_func: tpgresource.ProjectNumberDiffSuppress
  - !ruby/object:Api::Type::String
    name: 'activeDirectory'
    description: |
      Specifies the Active Directory policy to be used. Format: `projects/{{project}}/locations/{{location}}/activeDirectories/{{name}}`.
      The policy needs to be in the same location as the storage pool.
  - !ruby/object:Api::Type::String
    name: 'kmsConfig'
    description: |
      Specifies the CMEK policy to be used for volume encryption. Format: `projects/{{project}}/locations/{{location}}/kmsConfigs/{{name}}`.
      The policy needs to be in the same location as the storage pool.
    immutable: true
  - !ruby/object:Api::Type::Boolean
    name: 'ldapEnabled'
    description: |
      When enabled, the volumes uses Active Directory as LDAP name service for UID/GID lookups. Required to enable extended group support for NFSv3,
      using security identifiers for NFSv4.1 or principal names for kerberized NFSv4.1.
    immutable: true
  - !ruby/object:Api::Type::Enum
    name: 'encryptionType'
    description: |
      Reports if volumes in the pool are encrypted using a Google-managed encryption key or CMEK.
    values:
      - :ENCRYPTION_TYPE_UNSPECIFIED
      - :SERVICE_MANAGED
      - :CLOUD_KMS
    output: true
