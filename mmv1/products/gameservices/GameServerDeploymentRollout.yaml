# Copyright 2023 Google Inc.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

--- !ruby/object:Api::Resource
name: GameServerDeploymentRollout
references: !ruby/object:Api::Resource::ReferenceLinks
  guides:
    'Official Documentation': 'https://cloud.google.com/game-servers/docs'
  api: 'https://cloud.google.com/game-servers/docs/reference/rest/v1beta/GameServerDeploymentRollout'
create_url: projects/{{project}}/locations/global/gameServerDeployments/{{deployment_id}}/rollout
base_url: projects/{{project}}/locations/global/gameServerDeployments/{{deployment_id}}/rollout
update_url: projects/{{project}}/locations/global/gameServerDeployments/{{deployment_id}}/rollout
# Deleting a rollout is synonymous with removing the default game server config
delete_url: projects/{{project}}/locations/global/gameServerDeployments/{{deployment_id}}/rollout?updateMask=defaultGameServerConfig
update_verb: :PATCH
delete_verb: :PATCH
update_mask: true
self_link: projects/{{project}}/locations/global/gameServerDeployments/{{deployment_id}}/rollout
async: !ruby/object:Api::OpAsync
  operation: !ruby/object:Api::OpAsync::Operation
    path: 'name'
    base_url: '{{op_id}}'
    wait_ms: 1000
  result: !ruby/object:Api::OpAsync::Result
    path: 'response'
    resource_inside_response: true
  status: !ruby/object:Api::OpAsync::Status
    path: 'done'
    complete: true
    allowed:
      - true
      - false
  error: !ruby/object:Api::OpAsync::Error
    path: 'error/errors'
    message: 'message'
description: |-
  This represents the rollout state. This is part of the game server
  deployment.
import_format:
  [
    'projects/{{project}}/locations/global/gameServerDeployments/{{deployment_id}}/rollout',
  ]
examples:
  - !ruby/object:Provider::Terraform::Examples
    name: 'game_service_deployment_rollout_basic'
    primary_resource_id: 'default'
    skip_test: true
    vars:
      deployment_id: 'tf-test-deployment'
      config_id: 'tf-test-config'
custom_code: !ruby/object:Provider::Terraform::CustomCode
  custom_create: 'templates/terraform/custom_create/gameservice_rollout_create.go'
properties:
  - !ruby/object:Api::Type::String
    name: name
    output: true
    description: |-
      The resource id of the game server deployment

      eg: `projects/my-project/locations/global/gameServerDeployments/my-deployment/rollout`.
  - !ruby/object:Api::Type::ResourceRef
    name: deploymentId
    resource: GameServerDeployment
    url_param_only: true
    required: true
    imports: name
    description: |
      The deployment to rollout the new config to. Only 1 rollout must be associated with each deployment.
  - !ruby/object:Api::Type::String
    name: defaultGameServerConfig
    required: true
    description: |-
      This field points to the game server config that is
      applied by default to all realms and clusters. For example,

      `projects/my-project/locations/global/gameServerDeployments/my-game/configs/my-config`.
  - !ruby/object:Api::Type::Array
    name: gameServerConfigOverrides
    description: |-
      The game_server_config_overrides contains the per game server config
      overrides. The overrides are processed in the order they are listed. As
      soon as a match is found for a cluster, the rest of the list is not
      processed.
    item_type: !ruby/object:Api::Type::NestedObject
      properties:
        - !ruby/object:Api::Type::NestedObject
          name: realmsSelector
          description: Selection by realms.
          properties:
            - !ruby/object:Api::Type::Array
              name: realms
              description: List of realms to match against.
              item_type: Api::Type::String
        - !ruby/object:Api::Type::String
          name: configVersion
          description: Version of the configuration.
