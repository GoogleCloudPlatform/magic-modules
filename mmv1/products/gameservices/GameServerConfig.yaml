# Copyright 2023 Google Inc.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

--- !ruby/object:Api::Resource
name: GameServerConfig
references: !ruby/object:Api::Resource::ReferenceLinks
  guides:
    'Official Documentation': 'https://cloud.google.com/game-servers/docs'
  api: 'https://cloud.google.com/game-servers/docs/reference/rest/v1beta/projects.locations.gameServerDeployments.configs'
create_url: projects/{{project}}/locations/{{location}}/gameServerDeployments/{{deployment_id}}/configs?configId={{config_id}}
base_url: projects/{{project}}/locations/{{location}}/gameServerDeployments/{{deployment_id}}/configs
self_link: projects/{{project}}/locations/{{location}}/gameServerDeployments/{{deployment_id}}/configs/{{config_id}}
immutable: true
async: !ruby/object:Api::OpAsync
  operation: !ruby/object:Api::OpAsync::Operation
    path: 'name'
    base_url: '{{op_id}}'
    wait_ms: 1000
  result: !ruby/object:Api::OpAsync::Result
    path: 'response'
    resource_inside_response: true
  status: !ruby/object:Api::OpAsync::Status
    path: 'done'
    complete: true
    allowed:
      - true
      - false
  error: !ruby/object:Api::OpAsync::Error
    path: 'error/errors'
    message: 'message'
description: A game server config resource. Configs are global and immutable.
autogen_async: true
import_format:
  [
    'projects/{{project}}/locations/{{location}}/gameServerDeployments/{{deployment_id}}/configs/{{config_id}}',
  ]
examples:
  - !ruby/object:Provider::Terraform::Examples
    name: 'game_service_config_basic'
    primary_resource_id: 'default'
    skip_test: true
    vars:
      deployment_id: 'tf-test-deployment'
      config_id: 'tf-test-config'
properties:
  - !ruby/object:Api::Type::String
    name: name
    output: true
    description: |-
      The resource name of the game server config, in the form:

      `projects/{project_id}/locations/{location}/gameServerDeployments/{deployment_id}/configs/{config_id}`.
  - !ruby/object:Api::Type::String
    name: configId
    immutable: true
    required: true
    url_param_only: true
    description: |
      A unique id for the deployment config.
  - !ruby/object:Api::Type::String
    name: location
    # The only acceptable location currently is 'global'
    # TODO - either hard code or set as computed
    url_param_only: true
    default_value: global
    description: Location of the Deployment.
  - !ruby/object:Api::Type::ResourceRef
    name: deploymentId
    resource: 'GameServerDeployment'
    imports: 'deploymentId'
    immutable: true
    required: true
    url_param_only: true
    description: |
      A unique id for the deployment.
  - !ruby/object:Api::Type::String
    name: description
    description: The description of the game server config.
  - !ruby/object:Api::Type::KeyValuePairs
    name: labels
    description: |-
      The labels associated with this game server config. Each label is a
      key-value pair.
  - !ruby/object:Api::Type::Array
    name: fleetConfigs
    required: true
    description: |-
      The fleet config contains list of fleet specs. In the Single Cloud, there
      will be only one.
    item_type: !ruby/object:Api::Type::NestedObject
      properties:
        - !ruby/object:Api::Type::String
          required: true
          name: fleetSpec
          description: |
            The fleet spec, which is sent to Agones to configure fleet.
            The spec can be passed as inline json but it is recommended to use a file reference
            instead. File references can contain the json or yaml format of the fleet spec. Eg:

            * fleet_spec = jsonencode(yamldecode(file("fleet_configs.yaml")))
            * fleet_spec = file("fleet_configs.json")

            The format of the spec can be found :
            `https://agones.dev/site/docs/reference/fleet/`.
        - !ruby/object:Api::Type::String
          name: name
          required: true
          description: The name of the FleetConfig.
          default_from_api: true
  - !ruby/object:Api::Type::Array
    name: scalingConfigs
    description: Optional. This contains the autoscaling settings.
    item_type: !ruby/object:Api::Type::NestedObject
      properties:
        - !ruby/object:Api::Type::String
          name: name
          required: true
          description: The name of the ScalingConfig
        - !ruby/object:Api::Type::String
          required: true
          name: fleetAutoscalerSpec
          description: |-
            Fleet autoscaler spec, which is sent to Agones.
            Example spec can be found :
            https://agones.dev/site/docs/reference/fleetautoscaler/
        - !ruby/object:Api::Type::Array
          name: selectors
          description: |-
            Labels used to identify the clusters to which this scaling config
            applies. A cluster is subject to this scaling config if its labels match
            any of the selector entries.
          item_type: !ruby/object:Api::Type::NestedObject
            properties:
              - !ruby/object:Api::Type::KeyValuePairs
                name: labels
                description: Set of labels to group by.
        - !ruby/object:Api::Type::Array
          name: schedules
          description: The schedules to which this scaling config applies.
          item_type: !ruby/object:Api::Type::NestedObject
            properties:
              - !ruby/object:Api::Type::String
                name: startTime
                description: |-
                  The start time of the event.

                  A timestamp in RFC3339 UTC "Zulu" format, accurate to nanoseconds. Example: "2014-10-02T15:01:23.045123456Z".
              - !ruby/object:Api::Type::String
                name: endTime
                description: |-
                  The end time of the event.

                  A timestamp in RFC3339 UTC "Zulu" format, accurate to nanoseconds. Example: "2014-10-02T15:01:23.045123456Z".
              - !ruby/object:Api::Type::String
                name: cronJobDuration
                description: |-
                  The duration for the cron job event. The duration of the event is effective
                  after the cron job's start time.

                  A duration in seconds with up to nine fractional digits, terminated by 's'. Example: "3.5s".
              - !ruby/object:Api::Type::String
                name: cronSpec
                description: |-
                  The cron definition of the scheduled event. See
                  https://en.wikipedia.org/wiki/Cron. Cron spec specifies the local time as
                  defined by the realm.
