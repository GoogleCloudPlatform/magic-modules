# Copyright 2023 Google Inc.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

--- !ruby/object:Api::Resource
name: 'Version'
base_url: '{{parent}}/versions'
update_verb: :PATCH
update_mask: true
description: |
  You can create multiple versions of your agent flows and deploy them to separate serving environments.
  When you edit a flow, you are editing a draft flow. At any point, you can save a draft flow as a flow version. A flow version is an immutable snapshot of your flow data and associated agent data like intents, entities, webhooks, pages, route groups, etc.
references: !ruby/object:Api::Resource::ReferenceLinks
  guides:
    'Official Documentation': 'https://cloud.google.com/dialogflow/cx/docs'
  api: 'https://cloud.google.com/dialogflow/cx/docs/reference/rest/v3/projects.locations.agents.flows.versions'
async: !ruby/object:Api::OpAsync
  actions: ['create']
  operation: !ruby/object:Api::OpAsync::Operation
    path: 'name'
    full_url: 'https://{{location}}-dialogflow.googleapis.com/v3/{{op_id}}'
    wait_ms: 1000
    timeouts: !ruby/object:Api::Timeouts
      insert_minutes: 60
  result: !ruby/object:Api::OpAsync::Result
    path: 'response'
    resource_inside_response: true
  status: !ruby/object:Api::OpAsync::Status
    path: 'done'
    complete: true
    allowed:
      - true
      - false
  error: !ruby/object:Api::OpAsync::Error
    path: 'error'
    message: 'message'
timeouts: !ruby/object:Api::Timeouts
  insert_minutes: 40
  update_minutes: 40
custom_code: !ruby/object:Provider::Terraform::CustomCode
  custom_import: templates/terraform/custom_import/dialogflowcx_version.go.erb
  pre_create: templates/terraform/pre_create/dialogflow_set_location.go.erb
  pre_update: templates/terraform/pre_create/dialogflow_set_location.go.erb
  pre_delete: templates/terraform/pre_create/dialogflow_set_location.go.erb
  pre_read: templates/terraform/pre_create/dialogflow_set_location.go.erb
custom_diff:
  - 'tpgresource.DefaultProviderProject'
examples:
  - !ruby/object:Provider::Terraform::Examples
    name: 'dialogflowcx_version_full'
    primary_resource_id: 'version_1'
    vars:
      agent_name: 'dialogflowcx-agent'
  - !ruby/object:Provider::Terraform::Examples
    skip_docs: true
    name: 'dialogflowcx_version_regional'
    primary_resource_id: 'version_1'
    vars:
      agent_name: 'issue-12880'
skip_sweeper: true
id_format: '{{parent}}/versions/{{name}}'
import_format: ['{{parent}}/versions/{{name}}']
parameters:
  - !ruby/object:Api::Type::String
    name: parent
    url_param_only: true
    immutable: true
    description: |
      The Flow to create an Version for.
      Format: projects/<Project ID>/locations/<Location ID>/agents/<Agent ID>/flows/<Flow ID>.
properties:
  - !ruby/object:Api::Type::String
    name: 'name'
    output: true
    description: |
      Format: projects//locations//agents//flows//versions/. Version ID is a self-increasing number generated by Dialogflow upon version creation.
    custom_flatten: templates/terraform/custom_flatten/name_from_self_link.erb
  - !ruby/object:Api::Type::String
    name: 'displayName'
    required: true
    description: |
      The human-readable name of the version. Limit of 64 characters.
    validation: !ruby/object:Provider::Terraform::Validation
      function: 'validation.StringLenBetween(0, 64)'
  - !ruby/object:Api::Type::String
    name: 'description'
    description: |
      The description of the version. The maximum length is 500 characters. If exceeded, the request is rejected.
    validation: !ruby/object:Provider::Terraform::Validation
      function: 'validation.StringLenBetween(0, 500)'
  - !ruby/object:Api::Type::NestedObject
    name: 'nluSettings'
    output: true
    description: |
      The NLU settings of the flow at version creation.
    properties:
      - !ruby/object:Api::Type::Enum
        name: 'modelType'
        description: |
          Indicates the type of NLU model.
          * MODEL_TYPE_STANDARD: Use standard NLU model.
          * MODEL_TYPE_ADVANCED: Use advanced NLU model.
        values:
          - :MODEL_TYPE_STANDARD
          - :MODEL_TYPE_ADVANCED
      - !ruby/object:Api::Type::Double
        name: 'classificationThreshold'
        description: |
          To filter out false positive results and still get variety in matched natural language inputs for your agent, you can tune the machine learning classification threshold. If the returned score value is less than the threshold value, then a no-match event will be triggered.
          The score values range from 0.0 (completely uncertain) to 1.0 (completely certain). If set to 0.0, the default of 0.3 is used.
      - !ruby/object:Api::Type::Enum
        name: 'modelTrainingMode'
        description: |
          Indicates NLU model training mode.
          * MODEL_TRAINING_MODE_AUTOMATIC: NLU model training is automatically triggered when a flow gets modified. User can also manually trigger model training in this mode.
          * MODEL_TRAINING_MODE_MANUAL: User needs to manually trigger NLU model training. Best for large flows whose models take long time to train.
        values:
          - :MODEL_TRAINING_MODE_AUTOMATIC
          - :MODEL_TRAINING_MODE_MANUAL
  - !ruby/object:Api::Type::Time
    name: 'createTime'
    output: true
    description:
      'A timestamp in RFC3339 UTC "Zulu" format, with nanosecond resolution and
      up to nine fractional digits. Examples: "2014-10-02T15:01:23Z" and
      "2014-10-02T15:01:23.045123456Z".'
  - !ruby/object:Api::Type::Enum
    name: 'state'
    output: true
    description: |
      The state of this version.
      * RUNNING: Version is not ready to serve (e.g. training is running).
      * SUCCEEDED: Training has succeeded and this version is ready to serve.
      * FAILED: Version training failed.
    values:
      - :RUNNING
      - :SUCCEEDED
      - :FAILED
