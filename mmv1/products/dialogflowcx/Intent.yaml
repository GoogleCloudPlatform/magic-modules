# Copyright 2023 Google Inc.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

--- !ruby/object:Api::Resource
name: 'Intent'
base_url: '{{parent}}/intents'
update_verb: :PATCH
update_mask: true
description: |
  An intent represents a user's intent to interact with a conversational agent.
references: !ruby/object:Api::Resource::ReferenceLinks
  guides:
    'Official Documentation': 'https://cloud.google.com/dialogflow/cx/docs'
  api: 'https://cloud.google.com/dialogflow/cx/docs/reference/rest/v3/projects.locations.agents.intents'
timeouts: !ruby/object:Api::Timeouts
  insert_minutes: 40
  update_minutes: 40
custom_code: !ruby/object:Provider::Terraform::CustomCode
  custom_import: templates/terraform/custom_import/dialogflowcx_intent.go.erb
  pre_create: templates/terraform/pre_create/dialogflow_set_location.go.erb
  pre_update: templates/terraform/pre_create/dialogflow_set_location.go.erb
  pre_delete: templates/terraform/pre_create/dialogflow_set_location.go.erb
  pre_read: templates/terraform/pre_create/dialogflow_set_location.go.erb
examples:
  - !ruby/object:Provider::Terraform::Examples
    name: 'dialogflowcx_intent_full'
    primary_resource_id: 'basic_intent'
    vars:
      agent_name: 'dialogflowcx-agent'
skip_sweeper: true
id_format: '{{parent}}/intents/{{name}}'
import_format: ['{{parent}}/intents/{{name}}']
parameters:
  - !ruby/object:Api::Type::String
    name: parent
    url_param_only: true
    immutable: true
    description: |
      The agent to create an intent for.
      Format: projects/<Project ID>/locations/<Location ID>/agents/<Agent ID>.
  - !ruby/object:Api::Type::String
    name: 'languageCode'
    description: |
      The language of the following fields in intent:
      Intent.training_phrases.parts.text
      If not specified, the agent's default language is used. Many languages are supported. Note: languages must be enabled in the agent before they can be used.
    immutable: true
properties:
  - !ruby/object:Api::Type::String
    name: 'name'
    output: true
    description: |
      The unique identifier of the intent.
      Format: projects/<Project ID>/locations/<Location ID>/agents/<Agent ID>/intents/<Intent ID>.
    custom_flatten: templates/terraform/custom_flatten/name_from_self_link.erb
  - !ruby/object:Api::Type::String
    name: 'displayName'
    required: true
    description: |
      The human-readable name of the intent, unique within the agent.
    validation: !ruby/object:Provider::Terraform::Validation
      function: 'validation.StringLenBetween(0, 64)'
  - !ruby/object:Api::Type::Array
    name: 'trainingPhrases'
    description: |
      The collection of training phrases the agent is trained on to identify the intent.
    item_type: !ruby/object:Api::Type::NestedObject
      properties:
        - !ruby/object:Api::Type::String
          name: 'id'
          output: true
          description: |
            The unique identifier of the training phrase.
        - !ruby/object:Api::Type::Array
          name: 'parts'
          required: true
          description: |
            The ordered list of training phrase parts. The parts are concatenated in order to form the training phrase.
            Note: The API does not automatically annotate training phrases like the Dialogflow Console does.
            Note: Do not forget to include whitespace at part boundaries, so the training phrase is well formatted when the parts are concatenated.
            If the training phrase does not need to be annotated with parameters, you just need a single part with only the Part.text field set.
            If you want to annotate the training phrase, you must create multiple parts, where the fields of each part are populated in one of two ways:
            Part.text is set to a part of the phrase that has no parameters.
            Part.text is set to a part of the phrase that you want to annotate, and the parameterId field is set.
          item_type: !ruby/object:Api::Type::NestedObject
            properties:
              - !ruby/object:Api::Type::String
                name: 'text'
                required: true
                description: |
                  The text for this part.
              - !ruby/object:Api::Type::String
                name: 'parameterId'
                description: |
                  The parameter used to annotate this part of the training phrase. This field is required for annotated parts of the training phrase.
        - !ruby/object:Api::Type::Integer
          name: 'repeatCount'
          description: |
            Indicates how many times this example was added to the intent.
  - !ruby/object:Api::Type::Array
    name: 'parameters'
    description: |
      The collection of parameters associated with the intent.
    item_type: !ruby/object:Api::Type::NestedObject
      properties:
        - !ruby/object:Api::Type::String
          name: 'id'
          required: true
          description: |
            The unique identifier of the parameter. This field is used by training phrases to annotate their parts.
        - !ruby/object:Api::Type::String
          name: 'entityType'
          required: true
          description: |
            The entity type of the parameter.
            Format: projects/-/locations/-/agents/-/entityTypes/<System Entity Type ID> for system entity types (for example, projects/-/locations/-/agents/-/entityTypes/sys.date), or projects/<Project ID>/locations/<Location ID>/agents/<Agent ID>/entityTypes/<Entity Type ID> for developer entity types.
        - !ruby/object:Api::Type::Boolean
          name: 'isList'
          description: |
            Indicates whether the parameter represents a list of values.
        - !ruby/object:Api::Type::Boolean
          name: 'redact'
          description: |
            Indicates whether the parameter content should be redacted in log. If redaction is enabled, the parameter content will be replaced by parameter name during logging.
            Note: the parameter content is subject to redaction if either parameter level redaction or entity type level redaction is enabled.
  - !ruby/object:Api::Type::Integer
    name: 'priority'
    description: |
      The priority of this intent. Higher numbers represent higher priorities.
      If the supplied value is unspecified or 0, the service translates the value to 500,000, which corresponds to the Normal priority in the console.
      If the supplied value is negative, the intent is ignored in runtime detect intent requests.
  - !ruby/object:Api::Type::Boolean
    name: 'isFallback'
    description: |
      Indicates whether this is a fallback intent. Currently only default fallback intent is allowed in the agent, which is added upon agent creation.
      Adding training phrases to fallback intent is useful in the case of requests that are mistakenly matched, since training phrases assigned to fallback intents act as negative examples that triggers no-match event.
  - !ruby/object:Api::Type::KeyValueLabels
    name: 'labels'
    description: |
      The key/value metadata to label an intent. Labels can contain lowercase letters, digits and the symbols '-' and '_'. International characters are allowed, including letters from unicase alphabets. Keys must start with a letter. Keys and values can be no longer than 63 characters and no more than 128 bytes.
      Prefix "sys-" is reserved for Dialogflow defined labels. Currently allowed Dialogflow defined labels include: * sys-head * sys-contextual The above labels do not require value. "sys-head" means the intent is a head intent. "sys.contextual" means the intent is a contextual intent.
      An object containing a list of "key": value pairs. Example: { "name": "wrench", "mass": "1.3kg", "count": "3" }.
  - !ruby/object:Api::Type::String
    name: 'description'
    description: |
      Human readable description for better understanding an intent like its scope, content, result etc. Maximum character limit: 140 characters.
    validation: !ruby/object:Provider::Terraform::Validation
      function: 'validation.StringLenBetween(0, 140)'
