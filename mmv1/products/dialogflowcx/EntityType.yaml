# Copyright 2023 Google Inc.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

--- !ruby/object:Api::Resource
name: 'EntityType'
base_url: '{{parent}}/entityTypes'
update_verb: :PATCH
update_mask: true
description: |
  Entities are extracted from user input and represent parameters that are meaningful to your application.
  For example, a date range, a proper name such as a geographic location or landmark, and so on. Entities represent actionable data for your application.
references: !ruby/object:Api::Resource::ReferenceLinks
  guides:
    'Official Documentation': 'https://cloud.google.com/dialogflow/cx/docs'
  api: 'https://cloud.google.com/dialogflow/cx/docs/reference/rest/v3/projects.locations.agents.entityTypes'
timeouts: !ruby/object:Api::Timeouts
  insert_minutes: 40
  update_minutes: 40
custom_code: !ruby/object:Provider::Terraform::CustomCode
  resource_definition: 'templates/terraform/resource_definition/default_provider_values.erb'
  custom_import: templates/terraform/custom_import/dialogflowcx_entity_type.go.erb
  pre_create: templates/terraform/pre_create/dialogflow_set_location.go.erb
  pre_update: templates/terraform/pre_create/dialogflow_set_location.go.erb
  pre_delete: templates/terraform/pre_create/dialogflow_set_location.go.erb
  pre_read: templates/terraform/pre_create/dialogflow_set_location.go.erb
examples:
  - !ruby/object:Provider::Terraform::Examples
    name: 'dialogflowcx_entity_type_full'
    primary_resource_id: 'basic_entity_type'
    vars:
      agent_name: 'dialogflowcx-agent'
skip_sweeper: true
id_format: '{{parent}}/entityTypes/{{name}}'
import_format: ['{{parent}}/entityTypes/{{name}}']
parameters:
  - !ruby/object:Api::Type::String
    name: parent
    url_param_only: true
    immutable: true
    description: |
      The agent to create a entity type for.
      Format: projects/<Project ID>/locations/<Location ID>/agents/<Agent ID>.
  - !ruby/object:Api::Type::String
    name: 'languageCode'
    description: |
      The language of the following fields in entityType:
      EntityType.entities.value
      EntityType.entities.synonyms
      EntityType.excluded_phrases.value
      If not specified, the agent's default language is used. Many languages are supported. Note: languages must be enabled in the agent before they can be used.
    immutable: true
    url_param_only: true
properties:
  - !ruby/object:Api::Type::String
    name: 'name'
    output: true
    description: |
      The unique identifier of the entity type.
      Format: projects/<Project ID>/locations/<Location ID>/agents/<Agent ID>/entityTypes/<Entity Type ID>.
    custom_flatten: templates/terraform/custom_flatten/name_from_self_link.erb
  - !ruby/object:Api::Type::String
    name: 'displayName'
    required: true
    description: |
      The human-readable name of the entity type, unique within the agent.
    validation: !ruby/object:Provider::Terraform::Validation
      function: 'validation.StringLenBetween(0, 64)'
  - !ruby/object:Api::Type::Enum
    name: 'kind'
    required: true
    description: |
      Indicates whether the entity type can be automatically expanded.
      * KIND_MAP: Map entity types allow mapping of a group of synonyms to a canonical value.
      * KIND_LIST: List entity types contain a set of entries that do not map to canonical values. However, list entity types can contain references to other entity types (with or without aliases).
      * KIND_REGEXP: Regexp entity types allow to specify regular expressions in entries values.
    values:
      - :KIND_MAP
      - :KIND_LIST
      - :KIND_REGEXP
  - !ruby/object:Api::Type::Enum
    name: 'autoExpansionMode'
    description: |
      Represents kinds of entities.
      * AUTO_EXPANSION_MODE_UNSPECIFIED: Auto expansion disabled for the entity.
      * AUTO_EXPANSION_MODE_DEFAULT: Allows an agent to recognize values that have not been explicitly listed in the entity.
    values:
      - :AUTO_EXPANSION_MODE_DEFAULT
      - :AUTO_EXPANSION_MODE_UNSPECIFIED
  - !ruby/object:Api::Type::Array
    name: 'entities'
    required: true
    description: |
      The collection of entity entries associated with the entity type.
    item_type: !ruby/object:Api::Type::NestedObject
      properties:
        - !ruby/object:Api::Type::String
          name: 'value'
          description: |
            The primary value associated with this entity entry. For example, if the entity type is vegetable, the value could be scallions.
            For KIND_MAP entity types: A canonical value to be used in place of synonyms.
            For KIND_LIST entity types: A string that can contain references to other entity types (with or without aliases).
        - !ruby/object:Api::Type::Array
          name: 'synonyms'
          item_type: Api::Type::String
          description: |
            A collection of value synonyms. For example, if the entity type is vegetable, and value is scallions, a synonym could be green onions.
            For KIND_LIST entity types: This collection must contain exactly one synonym equal to value.
  - !ruby/object:Api::Type::Array
    name: 'excludedPhrases'
    description: |
      Collection of exceptional words and phrases that shouldn't be matched. For example, if you have a size entity type with entry giant(an adjective), you might consider adding giants(a noun) as an exclusion.
      If the kind of entity type is KIND_MAP, then the phrases specified by entities and excluded phrases should be mutually exclusive.
    item_type: !ruby/object:Api::Type::NestedObject
      properties:
        - !ruby/object:Api::Type::String
          name: 'value'
          description: |
            The word or phrase to be excluded.
  - !ruby/object:Api::Type::Boolean
    name: 'enableFuzzyExtraction'
    description: |
      Enables fuzzy entity extraction during classification.
  - !ruby/object:Api::Type::Boolean
    name: 'redact'
    description: |
      Indicates whether parameters of the entity type should be redacted in log. If redaction is enabled, page parameters and intent parameters referring to the entity type will be replaced by parameter name when logging.
