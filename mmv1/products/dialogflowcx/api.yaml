# Copyright 2020 Google Inc.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

--- !ruby/object:Api::Product
name: DialogflowCX
display_name: Dialogflow CX
versions:
  - !ruby/object:Api::Product::Version
    name: ga
    base_url: https://{{location}}-dialogflow.googleapis.com/v3/
scopes:
  - https://www.googleapis.com/auth/cloud-platform
apis_required:
  - !ruby/object:Api::Product::ApiReference
    name: Dialogflow API
    url: https://console.cloud.google.com/apis/library/dialogflow.googleapis.com
objects:
  - !ruby/object:Api::Resource
    name: 'Agent'
    base_url: "projects/{{project}}/locations/{{location}}/agents"
    update_verb: :PATCH
    update_mask: true
    description: |
      Agents are best described as Natural Language Understanding (NLU) modules that transform user requests into actionable data. You can include agents in your app, product, or service to determine user intent and respond to the user in a natural way.
    references: !ruby/object:Api::Resource::ReferenceLinks
      guides:
        'Official Documentation':
          'https://cloud.google.com/dialogflow/cx/docs'
      api: 'https://cloud.google.com/dialogflow/cx/docs/reference/rest/v3/projects.locations.agents'
    properties:
      - !ruby/object:Api::Type::String
        name: 'name'
        output: true
        description: |
          The unique identifier of the agent.
      - !ruby/object:Api::Type::String
        name: 'location'
        description: |
          The name of the location this agent is located in.

          ~> **Note:** The first time you are deploying an Agent in your project you must configure location settings.
           This is a one time step but at the moment you can only [configure location settings](https://cloud.google.com/dialogflow/cx/docs/concept/region#location-settings) via the Dialogflow CX console.
           Another options is to use global location so you don't need to manually configure location settings.
        required: true
        input: true
        url_param_only: true
      - !ruby/object:Api::Type::String
        name: 'displayName'
        required: true
        description: |
          The human-readable name of the agent, unique within the location.
      - !ruby/object:Api::Type::String
        name: 'defaultLanguageCode'
        description: |
         The default language of the agent as a language tag. [See Language Support](https://cloud.google.com/dialogflow/cx/docs/reference/language) 
         for a list of the currently supported language codes. This field cannot be updated after creation.
        input: true
        required: true
      - !ruby/object:Api::Type::Array
        name: 'supportedLanguageCodes'
        item_type: Api::Type::String
        description: |
         The list of all languages supported by this agent (except for the default_language_code).
      - !ruby/object:Api::Type::String
        name: 'timeZone'
        description: |
         The time zone of this agent from the [time zone database](https://www.iana.org/time-zones), e.g., America/New_York,
         Europe/Paris.
        required: true
      - !ruby/object:Api::Type::String
        name: 'description'
        description: |
         The description of this agent. The maximum length is 500 characters. If exceeded, the request is rejected.
      - !ruby/object:Api::Type::String
        name: 'avatarUri'
        description: |
         The URI of the agent's avatar. Avatars are used throughout the Dialogflow console and in the self-hosted Web Demo integration.
      - !ruby/object:Api::Type::NestedObject
        name: 'speechToTextSettings'
        description: |
          Settings related to speech recognition.
        properties:
          - !ruby/object:Api::Type::Boolean
            name: 'enableSpeechAdaptation'
            description: |
              Whether to use speech adaptation for speech recognition.
      - !ruby/object:Api::Type::String
        name: 'startFlow'
        output: true
        description: |
         Name of the start flow in this agent. A start flow will be automatically created when the agent is created, and can only be deleted by deleting the agent. Format: projects/<Project ID>/locations/<Location ID>/agents/<Agent ID>/flows/<Flow ID>.
      - !ruby/object:Api::Type::String
        name: 'securitySettings'
        description: |
         Name of the SecuritySettings reference for the agent. Format: projects/<Project ID>/locations/<Location ID>/securitySettings/<Security Settings ID>.
      - !ruby/object:Api::Type::Boolean
        name: 'enableStackdriverLogging'
        description: |
         Determines whether this agent should log conversation queries.
      - !ruby/object:Api::Type::Boolean
        name: 'enableSpellCorrection'
        description: |
         Indicates if automatic spell correction is enabled in detect intent requests.
  - !ruby/object:Api::Resource
    name: 'Version'
    base_url: "{{parent}}/versions/"
    self_link: "{{name}}"
    update_verb: :PATCH
    update_mask: true
    description: |
      You can create multiple versions of your agent flows and deploy them to separate serving environments.
      When you edit a flow, you are editing a draft flow. At any point, you can save a draft flow as a flow version. A flow version is an immutable snapshot of your flow data and associated agent data like intents, entities, webhooks, pages, route groups, etc.
    references: !ruby/object:Api::Resource::ReferenceLinks
      guides:
        'Official Documentation':
          'https://cloud.google.com/dialogflow/cx/docs'
      api: 'https://cloud.google.com/dialogflow/cx/docs/reference/rest/v3/projects.locations.agents.flows.versions'
    async: !ruby/object:Api::OpAsync
      operation: !ruby/object:Api::OpAsync::Operation
        path: 'name'
        full_url: 'https://dialogflow.googleapis.com/v3/{{op_id}}'
        wait_ms: 1000
        timeouts: !ruby/object:Api::Timeouts
          insert_minutes: 60
          update_minutes: 60
          delete_minutes: 60
      result: !ruby/object:Api::OpAsync::Result
        path: 'response'
        resource_inside_response: true
      status: !ruby/object:Api::OpAsync::Status
        path: 'done'
        complete: true
        allowed:
          - true
          - false
      error: !ruby/object:Api::OpAsync::Error
        path: 'error'
        message: 'message'
    parameters:
      - !ruby/object:Api::Type::String
        name: parent
        url_param_only: true
        input: true
        description: |
          The Flow to create an Version for. 
          Format: projects/<Project ID>/locations/<Location ID>/agents/<Agent ID>/flows/<Flow ID>.
      - !ruby/object:Api::Type::String
        name: 'location'
        description: |
          The name of the location this version is located in.
        required: true
        input: true
        url_param_only: true
    properties:
      - !ruby/object:Api::Type::String
        name: 'name'
        output: true
        description: |
          Format: projects//locations//agents//flows//versions/. Version ID is a self-increasing number generated by Dialogflow upon version creation.
      - !ruby/object:Api::Type::String
        name: 'displayName'
        required: true
        description: |
          The human-readable name of the version. Limit of 64 characters.
      - !ruby/object:Api::Type::String
        name: 'description'
        description: |
         The description of the version. The maximum length is 500 characters. If exceeded, the request is rejected.
      - !ruby/object:Api::Type::NestedObject
        name: 'nluSettings'
        output: true
        description: |
          The NLU settings of the flow at version creation.
        properties:
          - !ruby/object:Api::Type::Enum
            name: 'modelType'
            description: |
              Indicates the type of NLU model.
              * MODEL_TYPE_STANDARD: Use standard NLU model.
              * MODEL_TYPE_ADVANCED: Use advanced NLU model.
            values:
              - :MODEL_TYPE_STANDARD
              - :MODEL_TYPE_ADVANCED
          - !ruby/object:Api::Type::Double
            name: 'classificationThreshold'
            description: |
              To filter out false positive results and still get variety in matched natural language inputs for your agent, you can tune the machine learning classification threshold. If the returned score value is less than the threshold value, then a no-match event will be triggered. 
              The score values range from 0.0 (completely uncertain) to 1.0 (completely certain). If set to 0.0, the default of 0.3 is used.
          - !ruby/object:Api::Type::Enum
            name: 'modelTrainingMode'
            description: |
              Indicates NLU model training mode.
              * MODEL_TRAINING_MODE_AUTOMATIC: NLU model training is automatically triggered when a flow gets modified. User can also manually trigger model training in this mode.
              * MODEL_TRAINING_MODE_MANUAL: User needs to manually trigger NLU model training. Best for large flows whose models take long time to train.
            values:
              - :MODEL_TRAINING_MODE_AUTOMATIC
              - :MODEL_TRAINING_MODE_MANUAL
      - !ruby/object:Api::Type::Time
        name: 'createTime'
        output: true
        description: 'A timestamp in RFC3339 UTC "Zulu" format, with nanosecond resolution and up to nine fractional digits. Examples: "2014-10-02T15:01:23Z" and "2014-10-02T15:01:23.045123456Z".'
      - !ruby/object:Api::Type::Enum
        name: 'state'
        output: true
        description: |
          The state of this version.
          * RUNNING: Version is not ready to serve (e.g. training is running).
          * SUCCEEDED: Training has succeeded and this version is ready to serve.
          * FAILED: Version training failed.
        values:
          - :RUNNING
          - :SUCCEEDED
          - :FAILED
    