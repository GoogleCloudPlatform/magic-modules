# Copyright 2020 Google Inc.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

--- !ruby/object:Api::Product
name: DialogflowCX
display_name: Dialogflow CX
versions:
  - !ruby/object:Api::Product::Version
    name: ga
    base_url: https://dialogflow.googleapis.com/v3/
scopes:
  - https://www.googleapis.com/auth/cloud-platform
apis_required:
  - !ruby/object:Api::Product::ApiReference
    name: Dialogflow API
    url: https://console.cloud.google.com/apis/library/dialogflow.googleapis.com
objects:
  - !ruby/object:Api::Resource
    name: 'Agent'
    base_url: "projects/{{project}}/locations/{{location}}/agents"
    update_verb: :PATCH
    update_mask: true
    description: |
      Agents are best described as Natural Language Understanding (NLU) modules that transform user requests into actionable data. You can include agents in your app, product, or service to determine user intent and respond to the user in a natural way.
    references: !ruby/object:Api::Resource::ReferenceLinks
      guides:
        'Official Documentation':
          'https://cloud.google.com/dialogflow/cx/docs'
      api: 'https://cloud.google.com/dialogflow/cx/docs/reference/rest/v3/projects.locations.agents'
    properties:
      - !ruby/object:Api::Type::String
        name: 'name'
        output: true
        description: |
          The unique identifier of the agent.
      - !ruby/object:Api::Type::String
        name: 'location'
        description: |
          The name of the location this agent is located in.

          ~> **Note:** The first time you are deploying an Agent in your project you must configure location settings.
           This is a one time step but at the moment you can only [configure location settings](https://cloud.google.com/dialogflow/cx/docs/concept/region#location-settings) via the Dialogflow CX console.
           Another options is to use global location so you don't need to manually configure location settings.
        required: true
        input: true
        url_param_only: true
      - !ruby/object:Api::Type::String
        name: 'displayName'
        required: true
        description: |
          The human-readable name of the agent, unique within the location.
      - !ruby/object:Api::Type::String
        name: 'defaultLanguageCode'
        description: |
         The default language of the agent as a language tag. [See Language Support](https://cloud.google.com/dialogflow/cx/docs/reference/language) 
         for a list of the currently supported language codes. This field cannot be updated after creation.
        input: true
        required: true
      - !ruby/object:Api::Type::Array
        name: 'supportedLanguageCodes'
        item_type: Api::Type::String
        description: |
         The list of all languages supported by this agent (except for the default_language_code).
      - !ruby/object:Api::Type::String
        name: 'timeZone'
        description: |
         The time zone of this agent from the [time zone database](https://www.iana.org/time-zones), e.g., America/New_York,
         Europe/Paris.
        required: true
      - !ruby/object:Api::Type::String
        name: 'description'
        description: |
         The description of this agent. The maximum length is 500 characters. If exceeded, the request is rejected.
      - !ruby/object:Api::Type::String
        name: 'avatarUri'
        description: |
         The URI of the agent's avatar. Avatars are used throughout the Dialogflow console and in the self-hosted Web Demo integration.
      - !ruby/object:Api::Type::NestedObject
        name: 'speechToTextSettings'
        description: |
          Settings related to speech recognition.
        properties:
          - !ruby/object:Api::Type::Boolean
            name: 'enableSpeechAdaptation'
            description: |
              Whether to use speech adaptation for speech recognition.
      - !ruby/object:Api::Type::String
        name: 'startFlow'
        output: true
        description: |
         Name of the start flow in this agent. A start flow will be automatically created when the agent is created, and can only be deleted by deleting the agent. Format: projects/<Project ID>/locations/<Location ID>/agents/<Agent ID>/flows/<Flow ID>.
      - !ruby/object:Api::Type::String
        name: 'securitySettings'
        description: |
         Name of the SecuritySettings reference for the agent. Format: projects/<Project ID>/locations/<Location ID>/securitySettings/<Security Settings ID>.
      - !ruby/object:Api::Type::Boolean
        name: 'enableStackdriverLogging'
        description: |
         Determines whether this agent should log conversation queries.
      - !ruby/object:Api::Type::Boolean
        name: 'enableSpellCorrection'
        description: |
         Indicates if automatic spell correction is enabled in detect intent requests.
  - !ruby/object:Api::Resource
    name: 'Intent'
    base_url: "{{parent}}/intents"
    update_verb: :PATCH
    update_mask: true
    description: |
      An intent represents a user's intent to interact with a conversational agent.
    references: !ruby/object:Api::Resource::ReferenceLinks
      guides:
        'Official Documentation':
          'https://cloud.google.com/dialogflow/cx/docs'
      api: 'https://cloud.google.com/dialogflow/cx/docs/reference/rest/v3/projects.locations.agents.intents'
    parameters:
      - !ruby/object:Api::Type::String
        name: parent
        url_param_only: true
        input: true
        description: |
          The agent to create an intent for.
          Format: projects/<Project ID>/locations/<Location ID>/agents/<Agent ID>.
      - !ruby/object:Api::Type::String
        name: 'languageCode'
        description: |
          The language of the following fields in intent:
          Intent.training_phrases.parts.text
          If not specified, the agent's default language is used. Many languages are supported. Note: languages must be enabled in the agent before they can be used.
        input: true
    properties:
      - !ruby/object:Api::Type::String
        name: 'name'
        output: true
        description: |
          The unique identifier of the intent.  
          Format: projects/<Project ID>/locations/<Location ID>/agents/<Agent ID>/intents/<Intent ID>.
      - !ruby/object:Api::Type::String
        name: 'displayName'
        required: true
        description: |
          The human-readable name of the intent, unique within the agent.
      - !ruby/object:Api::Type::Array
        name: 'trainingPhrases'
        description: |
          The collection of training phrases the agent is trained on to identify the intent.
        item_type: !ruby/object:Api::Type::NestedObject
          properties:
            - !ruby/object:Api::Type::String
              name: 'id'
              output: true
              description: |
                The unique identifier of the training phrase.
            - !ruby/object:Api::Type::Array
             name: 'parts'
             required: true
             description: |
               The ordered list of training phrase parts. The parts are concatenated in order to form the training phrase.
               Note: The API does not automatically annotate training phrases like the Dialogflow Console does.
               Note: Do not forget to include whitespace at part boundaries, so the training phrase is well formatted when the parts are concatenated.
               If the training phrase does not need to be annotated with parameters, you just need a single part with only the Part.text field set.
               If you want to annotate the training phrase, you must create multiple parts, where the fields of each part are populated in one of two ways:
               Part.text is set to a part of the phrase that has no parameters.
               Part.text is set to a part of the phrase that you want to annotate, and the parameterId field is set.
             item_type: !ruby/object:Api::Type::NestedObject
               properties:
                 - !ruby/object:Api::Type::String
                   name: 'text'
                   required: true
                   description: |
                     The text for this part.
                 - !ruby/object:Api::Type::String
                   name: 'parameterId'
                   description: |
                     The parameter used to annotate this part of the training phrase. This field is required for annotated parts of the training phrase.
            - !ruby/object:Api::Type::Integer
             name: 'repeatCount'
             description: |
               Indicates how many times this example was added to the intent.
      - !ruby/object:Api::Type::Array
        name: 'parameters'
        description: |
          The collection of parameters associated with the intent.
        item_type: !ruby/object:Api::Type::NestedObject
          properties:
            - !ruby/object:Api::Type::String
              name: 'id'
              required: true
              description: |
                The unique identifier of the parameter. This field is used by training phrases to annotate their parts.
            - !ruby/object:Api::Type::String
              name: 'entityType'
              required: true
              description: |
                The entity type of the parameter. 
                Format: projects/-/locations/-/agents/-/entityTypes/<System Entity Type ID> for system entity types (for example, projects/-/locations/-/agents/-/entityTypes/sys.date), or projects/<Project ID>/locations/<Location ID>/agents/<Agent ID>/entityTypes/<Entity Type ID> for developer entity types.
            - !ruby/object:Api::Type::Boolean
              name: 'isList'
              description: |
                Indicates whether the parameter represents a list of values.
            - !ruby/object:Api::Type::Boolean
              name: 'redact'
              description: |
                Indicates whether the parameter content should be redacted in log. If redaction is enabled, the parameter content will be replaced by parameter name during logging. 
                Note: the parameter content is subject to redaction if either parameter level redaction or entity type level redaction is enabled.
      - !ruby/object:Api::Type::Integer
        name: 'priority'
        description: |
          The priority of this intent. Higher numbers represent higher priorities.
          If the supplied value is unspecified or 0, the service translates the value to 500,000, which corresponds to the Normal priority in the console.
          If the supplied value is negative, the intent is ignored in runtime detect intent requests.
      - !ruby/object:Api::Type::Boolean
        name: 'isFallback'
        description: |
          Indicates whether this is a fallback intent. Currently only default fallback intent is allowed in the agent, which is added upon agent creation. 
          Adding training phrases to fallback intent is useful in the case of requests that are mistakenly matched, since training phrases assigned to fallback intents act as negative examples that triggers no-match event.
      - !ruby/object:Api::Type::KeyValuePairs
        name: 'labels'
        description: |
          The key/value metadata to label an intent. Labels can contain lowercase letters, digits and the symbols '-' and '_'. International characters are allowed, including letters from unicase alphabets. Keys must start with a letter. Keys and values can be no longer than 63 characters and no more than 128 bytes.
          Prefix "sys-" is reserved for Dialogflow defined labels. Currently allowed Dialogflow defined labels include: * sys-head * sys-contextual The above labels do not require value. "sys-head" means the intent is a head intent. "sys.contextual" means the intent is a contextual intent.
          An object containing a list of "key": value pairs. Example: { "name": "wrench", "mass": "1.3kg", "count": "3" }.
      - !ruby/object:Api::Type::String
        name: 'description'
        description: |
          Human readable description for better understanding an intent like its scope, content, result etc. Maximum character limit: 140 characters.
  - !ruby/object:Api::Resource
    name: 'Flow'
    base_url: "{{parent}}/flows"
    update_verb: :PATCH
    update_mask: true
    description: |
      Flows represents the conversation flows when you build your chatbot agent.
    references: !ruby/object:Api::Resource::ReferenceLinks
      guides:
        'Official Documentation':
          'https://cloud.google.com/dialogflow/cx/docs'
      api: 'https://cloud.google.com/dialogflow/cx/docs/reference/rest/v3/projects.locations.agents.flows'
    parameters:
      - !ruby/object:Api::Type::String
        name: parent
        url_param_only: true
        input: true
        description: |
          The agent to create a flow for. 
          Format: projects/<Project ID>/locations/<Location ID>/agents/<Agent ID>.
      - !ruby/object:Api::Type::String
        name: 'languageCode'
        description: |
          The language of the following fields in flow:
          Flow.event_handlers.trigger_fulfillment.messages
          Flow.event_handlers.trigger_fulfillment.conditional_cases
          Flow.transition_routes.trigger_fulfillment.messages
          Flow.transition_routes.trigger_fulfillment.conditional_cases
          If not specified, the agent's default language is used. Many languages are supported. Note: languages must be enabled in the agent before they can be used.
        input: true
    properties:
      - !ruby/object:Api::Type::String
        name: 'name'
        output: true
        description: |
          The unique identifier of the flow. 
          Format: projects/<Project ID>/locations/<Location ID>/agents/<Agent ID>/flows/<Flow ID>.
      - !ruby/object:Api::Type::String
        name: 'displayName'
        required: true
        description: |
          The human-readable name of the flow.
      - !ruby/object:Api::Type::String
        name: 'description'
        description: |
          The description of the flow. The maximum length is 500 characters. If exceeded, the request is rejected.
      - !ruby/object:Api::Type::Array
        name: 'transitionRoutes'
        description: |
          A flow's transition routes serve two purposes:
          They are responsible for matching the user's first utterances in the flow.
          They are inherited by every page's [transition routes][Page.transition_routes] and can support use cases such as the user saying "help" or "can I talk to a human?", which can be handled in a common way regardless of the current page. Transition routes defined in the page have higher priority than those defined in the flow.
            
          TransitionRoutes are evalauted in the following order:
            TransitionRoutes with intent specified.
            TransitionRoutes with only condition specified.
            TransitionRoutes with intent specified are inherited by pages in the flow.
        item_type: !ruby/object:Api::Type::NestedObject
          properties:
            - !ruby/object:Api::Type::String
              name: 'name'
              output: true
              description: |
                The unique identifier of this transition route.
            - !ruby/object:Api::Type::String
              name: 'intent'
              description: |
                The unique identifier of an Intent. 
                Format: projects/<Project ID>/locations/<Location ID>/agents/<Agent ID>/intents/<Intent ID>. Indicates that the transition can only happen when the given intent is matched. At least one of intent or condition must be specified. When both intent and condition are specified, the transition can only happen when both are fulfilled.
            - !ruby/object:Api::Type::String
              name: 'condition'
              description: |
                The condition to evaluate against form parameters or session parameters.
                At least one of intent or condition must be specified. When both intent and condition are specified, the transition can only happen when both are fulfilled.
            - !ruby/object:Api::Type::NestedObject
              name: 'triggerFulfillment'
              description: |
                The fulfillment to call when the condition is satisfied. At least one of triggerFulfillment and target must be specified. When both are defined, triggerFulfillment is executed first.
              properties:
                - !ruby/object:Api::Type::Array
                  name: 'messages'
                  description: |
                    The list of rich message responses to present to the user.
                  item_type: !ruby/object:Api::Type::NestedObject
                    properties:
                      - !ruby/object:Api::Type::NestedObject
                        name: 'text'
                        description: |
                          The text response message.
                        properties:
                          - !ruby/object:Api::Type::Array
                            name: 'text'
                            description: |
                              A collection of text responses.
                            item_type: Api::Type::String
                          - !ruby/object:Api::Type::Boolean
                            name: 'allowPlaybackInterruption'
                            output: true
                            description: |
                              Whether the playback of this message can be interrupted by the end user's speech and the client can then starts the next Dialogflow request.
                - !ruby/object:Api::Type::String
                  name: 'webhook'
                  description: |
                    The webhook to call. Format: projects/<Project ID>/locations/<Location ID>/agents/<Agent ID>/webhooks/<Webhook ID>.
                - !ruby/object:Api::Type::Boolean
                  name: 'returnPartialResponses'
                  description: |
                    Whether Dialogflow should return currently queued fulfillment response messages in streaming APIs. If a webhook is specified, it happens before Dialogflow invokes webhook. Warning: 1) This flag only affects streaming API. Responses are still queued and returned once in non-streaming API. 2) The flag can be enabled in any fulfillment but only the first 3 partial responses will be returned. You may only want to apply it to fulfillments that have slow webhooks.
                - !ruby/object:Api::Type::String
                  name: 'tag'
                  description: |
                    The tag used by the webhook to identify which fulfillment is being called. This field is required if webhook is specified.
            - !ruby/object:Api::Type::String
              name: 'targetPage'
              description: |
                The target page to transition to. 
                Format: projects/<Project ID>/locations/<Location ID>/agents/<Agent ID>/flows/<Flow ID>/pages/<Page ID>.
            - !ruby/object:Api::Type::String
              name: 'targetFlow'
              description: |
                The target flow to transition to. 
                Format: projects/<Project ID>/locations/<Location ID>/agents/<Agent ID>/flows/<Flow ID>.
      - !ruby/object:Api::Type::Array
        name: 'eventHandlers'
        description: |
          A flow's event handlers serve two purposes:
          They are responsible for handling events (e.g. no match, webhook errors) in the flow.
          They are inherited by every page's [event handlers][Page.event_handlers], which can be used to handle common events regardless of the current page. Event handlers defined in the page have higher priority than those defined in the flow.
          Unlike transitionRoutes, these handlers are evaluated on a first-match basis. The first one that matches the event get executed, with the rest being ignored.
        item_type: !ruby/object:Api::Type::NestedObject
          properties:
            - !ruby/object:Api::Type::String
              name: 'name'
              output: true
              description: |
                The unique identifier of this event handler.
            - !ruby/object:Api::Type::String
              name: 'event'
              description: |
                The name of the event to handle.
            - !ruby/object:Api::Type::NestedObject
              name: 'triggerFulfillment'
              description: |
                The fulfillment to call when the event occurs. Handling webhook errors with a fulfillment enabled with webhook could cause infinite loop. It is invalid to specify such fulfillment for a handler handling webhooks.
              properties:
                - !ruby/object:Api::Type::Array
                  name: 'messages'
                  description: |
                    The list of rich message responses to present to the user.
                  item_type: !ruby/object:Api::Type::NestedObject
                    properties:
                      - !ruby/object:Api::Type::NestedObject
                        name: 'text'
                        description: |
                          The text response message.
                        properties:
                          - !ruby/object:Api::Type::Array
                            name: 'text'
                            description: |
                              A collection of text responses.
                            item_type: Api::Type::String
                          - !ruby/object:Api::Type::Boolean
                            name: 'allowPlaybackInterruption'
                            output: true
                            description: |
                              Whether the playback of this message can be interrupted by the end user's speech and the client can then starts the next Dialogflow request.
                - !ruby/object:Api::Type::String
                  name: 'webhook'
                  description: |
                    The webhook to call. Format: projects/<Project ID>/locations/<Location ID>/agents/<Agent ID>/webhooks/<Webhook ID>.
                - !ruby/object:Api::Type::Boolean
                  name: 'returnPartialResponses'
                  description: |
                    Whether Dialogflow should return currently queued fulfillment response messages in streaming APIs. If a webhook is specified, it happens before Dialogflow invokes webhook. Warning: 1) This flag only affects streaming API. Responses are still queued and returned once in non-streaming API. 2) The flag can be enabled in any fulfillment but only the first 3 partial responses will be returned. You may only want to apply it to fulfillments that have slow webhooks.
                - !ruby/object:Api::Type::String
                  name: 'tag'
                  description: |
                    The tag used by the webhook to identify which fulfillment is being called. This field is required if webhook is specified.
            - !ruby/object:Api::Type::String
              name: 'targetPage'
              description: |
                The target page to transition to. 
                Format: projects/<Project ID>/locations/<Location ID>/agents/<Agent ID>/flows/<Flow ID>/pages/<Page ID>.
            - !ruby/object:Api::Type::String
              name: 'targetFlow'
              description: |
                The target flow to transition to. 
                Format: projects/<Project ID>/locations/<Location ID>/agents/<Agent ID>/flows/<Flow ID>.
      - !ruby/object:Api::Type::Array
        name: 'transitionRouteGroups'
        description: |
          A flow's transition route group serve two purposes:
          They are responsible for matching the user's first utterances in the flow.
          They are inherited by every page's [transition route groups][Page.transition_route_groups]. Transition route groups defined in the page have higher priority than those defined in the flow.
          Format:projects/<Project ID>/locations/<Location ID>/agents/<Agent ID>/flows/<Flow ID>/transitionRouteGroups/<TransitionRouteGroup ID>.
        item_type: Api::Type::String
      - !ruby/object:Api::Type::NestedObject
        name: 'nluSettings'
        description: |
          NLU related settings of the flow.
        properties:
          - !ruby/object:Api::Type::Enum
            name: 'modelType'
            description: |
              Indicates the type of NLU model.
              * MODEL_TYPE_STANDARD: Use standard NLU model.
              * MODEL_TYPE_ADVANCED: Use advanced NLU model.
            values:
              - :MODEL_TYPE_STANDARD
              - :MODEL_TYPE_ADVANCED
          - !ruby/object:Api::Type::Double
            name: 'classificationThreshold'
            description: |
              To filter out false positive results and still get variety in matched natural language inputs for your agent, you can tune the machine learning classification threshold. 
              If the returned score value is less than the threshold value, then a no-match event will be triggered. The score values range from 0.0 (completely uncertain) to 1.0 (completely certain). If set to 0.0, the default of 0.3 is used.
          - !ruby/object:Api::Type::Enum
            name: 'modelTrainingMode'
            description: |
              Indicates NLU model training mode.
              * MODEL_TRAINING_MODE_AUTOMATIC: NLU model training is automatically triggered when a flow gets modified. User can also manually trigger model training in this mode.
              * MODEL_TRAINING_MODE_MANUAL: User needs to manually trigger NLU model training. Best for large flows whose models take long time to train.
            values:
              - :MODEL_TRAINING_MODE_AUTOMATIC
              - :MODEL_TRAINING_MODE_MANUAL
  - !ruby/object:Api::Resource
    name: 'Version'
    base_url: "{{parent}}/versions"
    update_verb: :PATCH
    update_mask: true
    description: |
      You can create multiple versions of your agent flows and deploy them to separate serving environments.
      When you edit a flow, you are editing a draft flow. At any point, you can save a draft flow as a flow version. A flow version is an immutable snapshot of your flow data and associated agent data like intents, entities, webhooks, pages, route groups, etc.
    references: !ruby/object:Api::Resource::ReferenceLinks
      guides:
        'Official Documentation':
          'https://cloud.google.com/dialogflow/cx/docs'
      api: 'https://cloud.google.com/dialogflow/cx/docs/reference/rest/v3/projects.locations.agents.flows.versions'
    async: !ruby/object:Api::OpAsync
      operation: !ruby/object:Api::OpAsync::Operation
        path: 'name'
        base_url: '{{op_id}}'
        wait_ms: 1000
        timeouts: !ruby/object:Api::Timeouts
          insert_minutes: 60
          update_minutes: 60
          delete_minutes: 60
      result: !ruby/object:Api::OpAsync::Result
        path: 'response'
        resource_inside_response: true
      status: !ruby/object:Api::OpAsync::Status
        path: 'done'
        complete: true
        allowed:
          - true
          - false
      error: !ruby/object:Api::OpAsync::Error
        path: 'error'
        message: 'message'
    parameters:
      - !ruby/object:Api::Type::String
        name: parent
        url_param_only: true
        input: true
        description: |
          The Flow to create an Version for. 
          Format: projects/<Project ID>/locations/<Location ID>/agents/<Agent ID>/flows/<Flow ID>.
    properties:
      - !ruby/object:Api::Type::String
        name: 'name'
        output: true
        description: |
          Format: projects//locations//agents//flows//versions/. Version ID is a self-increasing number generated by Dialogflow upon version creation.
      - !ruby/object:Api::Type::String
        name: 'displayName'
        required: true
        description: |
          The human-readable name of the version. Limit of 64 characters.
      - !ruby/object:Api::Type::String
        name: 'description'
        description: |
         The description of the version. The maximum length is 500 characters. If exceeded, the request is rejected.
      - !ruby/object:Api::Type::NestedObject
        name: 'nluSettings'
        output: true
        description: |
          The NLU settings of the flow at version creation.
        properties:
          - !ruby/object:Api::Type::Enum
            name: 'modelType'
            description: |
              Indicates the type of NLU model.
              * MODEL_TYPE_STANDARD: Use standard NLU model.
              * MODEL_TYPE_ADVANCED: Use advanced NLU model.
            values:
              - :MODEL_TYPE_STANDARD
              - :MODEL_TYPE_ADVANCED
          - !ruby/object:Api::Type::Double
            name: 'classificationThreshold'
            description: |
              To filter out false positive results and still get variety in matched natural language inputs for your agent, you can tune the machine learning classification threshold. If the returned score value is less than the threshold value, then a no-match event will be triggered. 
              The score values range from 0.0 (completely uncertain) to 1.0 (completely certain). If set to 0.0, the default of 0.3 is used.
          - !ruby/object:Api::Type::Enum
            name: 'modelTrainingMode'
            description: |
              Indicates NLU model training mode.
              * MODEL_TRAINING_MODE_AUTOMATIC: NLU model training is automatically triggered when a flow gets modified. User can also manually trigger model training in this mode.
              * MODEL_TRAINING_MODE_MANUAL: User needs to manually trigger NLU model training. Best for large flows whose models take long time to train.
            values:
              - :MODEL_TRAINING_MODE_AUTOMATIC
              - :MODEL_TRAINING_MODE_MANUAL
      - !ruby/object:Api::Type::Time
        name: 'createTime'
        output: true
        description: 'A timestamp in RFC3339 UTC "Zulu" format, with nanosecond resolution and up to nine fractional digits. Examples: "2014-10-02T15:01:23Z" and "2014-10-02T15:01:23.045123456Z".'
      - !ruby/object:Api::Type::Enum
        name: 'state'
        output: true
        description: |
          The state of this version.
          * RUNNING: Version is not ready to serve (e.g. training is running).
          * SUCCEEDED: Training has succeeded and this version is ready to serve.
          * FAILED: Version training failed.
        values:
          - :RUNNING
          - :SUCCEEDED
          - :FAILED
  - !ruby/object:Api::Resource
    name: 'Page'
    base_url: "{{parent}}/pages"
    update_verb: :PATCH
    update_mask: true
    description: |
      A Dialogflow CX conversation (session) can be described and visualized as a state machine. The states of a CX session are represented by pages.
    references: !ruby/object:Api::Resource::ReferenceLinks
      guides:
        'Official Documentation':
          'https://cloud.google.com/dialogflow/cx/docs'
      api: 'https://cloud.google.com/dialogflow/cx/docs/reference/rest/v3/projects.locations.agents.flows.pages'
    parameters:
      - !ruby/object:Api::Type::String
        name: parent
        url_param_only: true
        input: true
        description: |
          The flow to create a page for. 
          Format: projects/<Project ID>/locations/<Location ID>/agents/<Agent ID>/flows/<Flow ID>.
      - !ruby/object:Api::Type::String
        name: 'languageCode'
        description: |
          The language of the following fields in page:

          Page.entry_fulfillment.messages
          Page.entry_fulfillment.conditional_cases
          Page.event_handlers.trigger_fulfillment.messages
          Page.event_handlers.trigger_fulfillment.conditional_cases
          Page.form.parameters.fill_behavior.initial_prompt_fulfillment.messages
          Page.form.parameters.fill_behavior.initial_prompt_fulfillment.conditional_cases
          Page.form.parameters.fill_behavior.reprompt_event_handlers.messages
          Page.form.parameters.fill_behavior.reprompt_event_handlers.conditional_cases
          Page.transition_routes.trigger_fulfillment.messages
          Page.transition_routes.trigger_fulfillment.conditional_cases
          If not specified, the agent's default language is used. Many languages are supported. Note: languages must be enabled in the agent before they can be used.
        input: true
    properties:
      - !ruby/object:Api::Type::String
        name: 'name'
        output: true
        description: |
          The unique identifier of the page. 
          Format: projects/<Project ID>/locations/<Location ID>/agents/<Agent ID>/flows/<Flow ID>/pages/<Page ID>.
      - !ruby/object:Api::Type::String
        name: 'displayName'
        required: true
        description: |
          The human-readable name of the page, unique within the agent.
      - !ruby/object:Api::Type::NestedObject
        name: 'entryFulfillment'
        description: |
          The fulfillment to call when the session is entering the page.
        properties:
          - !ruby/object:Api::Type::Array
            name: 'messages'
            description: |
              The list of rich message responses to present to the user.
            item_type: !ruby/object:Api::Type::NestedObject
              properties:
                - !ruby/object:Api::Type::NestedObject
                  name: 'text'
                  description: |
                    The text response message.
                  properties:
                    - !ruby/object:Api::Type::Array
                      name: 'text'
                      description: |
                        A collection of text responses.
                      item_type: Api::Type::String
                    - !ruby/object:Api::Type::Boolean
                      name: 'allowPlaybackInterruption'
                      output: true
                      description: |
                        Whether the playback of this message can be interrupted by the end user's speech and the client can then starts the next Dialogflow request.
          - !ruby/object:Api::Type::String
            name: 'webhook'
            description: |
              The webhook to call. Format: projects/<Project ID>/locations/<Location ID>/agents/<Agent ID>/webhooks/<Webhook ID>.
          - !ruby/object:Api::Type::Boolean
            name: 'returnPartialResponses'
            description: |
              Whether Dialogflow should return currently queued fulfillment response messages in streaming APIs. If a webhook is specified, it happens before Dialogflow invokes webhook. Warning: 1) This flag only affects streaming API. Responses are still queued and returned once in non-streaming API. 2) The flag can be enabled in any fulfillment but only the first 3 partial responses will be returned. You may only want to apply it to fulfillments that have slow webhooks.
          - !ruby/object:Api::Type::String
            name: 'tag'
            description: |
              The tag used by the webhook to identify which fulfillment is being called. This field is required if webhook is specified.
      - !ruby/object:Api::Type::NestedObject
        name: 'form'
        description: |
          The form associated with the page, used for collecting parameters relevant to the page.
        properties:
          - !ruby/object:Api::Type::Array
            name: 'parameters'
            description: |
              Parameters to collect from the user.
            item_type: !ruby/object:Api::Type::NestedObject
              properties:
                - !ruby/object:Api::Type::String
                  name: 'displayName'
                  description: |
                    The human-readable name of the parameter, unique within the form.
                - !ruby/object:Api::Type::Boolean
                  name: 'required'
                  description: |
                    Indicates whether the parameter is required. Optional parameters will not trigger prompts; however, they are filled if the user specifies them. 
                    Required parameters must be filled before form filling concludes.
                - !ruby/object:Api::Type::String
                  name: 'entityType'
                  description: |
                    The entity type of the parameter. 
                    Format: projects/-/locations/-/agents/-/entityTypes/<System Entity Type ID> for system entity types (for example, projects/-/locations/-/agents/-/entityTypes/sys.date), or projects/<Project ID>/locations/<Location ID>/agents/<Agent ID>/entityTypes/<Entity Type ID> for developer entity types.
                - !ruby/object:Api::Type::Boolean
                  name: 'isList'
                  description: |
                    Indicates whether the parameter represents a list of values.
                - !ruby/object:Api::Type::NestedObject
                  name: 'fillBehavior'
                  description: |
                    Defines fill behavior for the parameter.
                  properties:
                    - !ruby/object:Api::Type::NestedObject
                      name: 'initialPromptFulfillment'
                      description: |
                        The fulfillment to provide the initial prompt that the agent can present to the user in order to fill the parameter.
                      properties:
                        - !ruby/object:Api::Type::Array
                          name: 'messages'
                          description: |
                            The list of rich message responses to present to the user.
                          item_type: !ruby/object:Api::Type::NestedObject
                            properties:
                              - !ruby/object:Api::Type::NestedObject
                                name: 'text'
                                description: |
                                  The text response message.
                                properties:
                                  - !ruby/object:Api::Type::Array
                                    name: 'text'
                                    description: |
                                      A collection of text responses.
                                    item_type: Api::Type::String
                                  - !ruby/object:Api::Type::Boolean
                                    name: 'allowPlaybackInterruption'
                                    output: true
                                    description: |
                                      Whether the playback of this message can be interrupted by the end user's speech and the client can then starts the next Dialogflow request.
                        - !ruby/object:Api::Type::String
                          name: 'webhook'
                          description: |
                            The webhook to call. Format: projects/<Project ID>/locations/<Location ID>/agents/<Agent ID>/webhooks/<Webhook ID>.
                        - !ruby/object:Api::Type::Boolean
                          name: 'returnPartialResponses'
                          description: |
                            Whether Dialogflow should return currently queued fulfillment response messages in streaming APIs. If a webhook is specified, it happens before Dialogflow invokes webhook. Warning: 1) This flag only affects streaming API. Responses are still queued and returned once in non-streaming API. 2) The flag can be enabled in any fulfillment but only the first 3 partial responses will be returned. You may only want to apply it to fulfillments that have slow webhooks.
                        - !ruby/object:Api::Type::String
                          name: 'tag'
                          description: |
                            The tag used by the webhook to identify which fulfillment is being called. This field is required if webhook is specified.
                - !ruby/object:Api::Type::Boolean
                  name: 'redact'
                  description: |
                    Indicates whether the parameter content should be redacted in log. 
                    If redaction is enabled, the parameter content will be replaced by parameter name during logging. Note: the parameter content is subject to redaction if either parameter level redaction or entity type level redaction is enabled.
      - !ruby/object:Api::Type::Array
        name: 'transitionRouteGroups'
        description: |
          Ordered list of TransitionRouteGroups associated with the page. Transition route groups must be unique within a page.
          If multiple transition routes within a page scope refer to the same intent, then the precedence order is: page's transition route -> page's transition route group -> flow's transition routes.
          If multiple transition route groups within a page contain the same intent, then the first group in the ordered list takes precedence.
          Format:projects/<Project ID>/locations/<Location ID>/agents/<Agent ID>/flows/<Flow ID>/transitionRouteGroups/<TransitionRouteGroup ID>.
        item_type: Api::Type::String      
      - !ruby/object:Api::Type::Array
        name: 'transitionRoutes'
        description: |
          A list of transitions for the transition rules of this page. They route the conversation to another page in the same flow, or another flow.
          When we are in a certain page, the TransitionRoutes are evalauted in the following order:
          TransitionRoutes defined in the page with intent specified.
          TransitionRoutes defined in the transition route groups with intent specified.
          TransitionRoutes defined in flow with intent specified.
          TransitionRoutes defined in the transition route groups with intent specified.
          TransitionRoutes defined in the page with only condition specified.
          TransitionRoutes defined in the transition route groups with only condition specified.
        item_type: !ruby/object:Api::Type::NestedObject
          properties:
            - !ruby/object:Api::Type::String
              name: 'name'
              output: true
              description: |
                The unique identifier of this transition route.
            - !ruby/object:Api::Type::String
              name: 'intent'
              description: |
                The unique identifier of an Intent. 
                Format: projects/<Project ID>/locations/<Location ID>/agents/<Agent ID>/intents/<Intent ID>. Indicates that the transition can only happen when the given intent is matched. At least one of intent or condition must be specified. When both intent and condition are specified, the transition can only happen when both are fulfilled.
            - !ruby/object:Api::Type::String
              name: 'condition'
              description: |
                The condition to evaluate against form parameters or session parameters.
                At least one of intent or condition must be specified. When both intent and condition are specified, the transition can only happen when both are fulfilled.
            - !ruby/object:Api::Type::NestedObject
              name: 'triggerFulfillment'
              description: |
                The fulfillment to call when the event occurs. Handling webhook errors with a fulfillment enabled with webhook could cause infinite loop. It is invalid to specify such fulfillment for a handler handling webhooks.
              properties:
                - !ruby/object:Api::Type::Array
                  name: 'messages'
                  description: |
                    The list of rich message responses to present to the user.
                  item_type: !ruby/object:Api::Type::NestedObject
                    properties:
                      - !ruby/object:Api::Type::NestedObject
                        name: 'text'
                        description: |
                          The text response message.
                        properties:
                          - !ruby/object:Api::Type::Array
                            name: 'text'
                            description: |
                              A collection of text responses.
                            item_type: Api::Type::String
                          - !ruby/object:Api::Type::Boolean
                            name: 'allowPlaybackInterruption'
                            output: true
                            description: |
                              Whether the playback of this message can be interrupted by the end user's speech and the client can then starts the next Dialogflow request.
                - !ruby/object:Api::Type::String
                  name: 'webhook'
                  description: |
                    The webhook to call. Format: projects/<Project ID>/locations/<Location ID>/agents/<Agent ID>/webhooks/<Webhook ID>.
                - !ruby/object:Api::Type::Boolean
                  name: 'returnPartialResponses'
                  description: |
                    Whether Dialogflow should return currently queued fulfillment response messages in streaming APIs. If a webhook is specified, it happens before Dialogflow invokes webhook. Warning: 1) This flag only affects streaming API. Responses are still queued and returned once in non-streaming API. 2) The flag can be enabled in any fulfillment but only the first 3 partial responses will be returned. You may only want to apply it to fulfillments that have slow webhooks.
                - !ruby/object:Api::Type::String
                  name: 'tag'
                  description: |
                    The tag used by the webhook to identify which fulfillment is being called. This field is required if webhook is specified.
            - !ruby/object:Api::Type::String
              name: 'targetPage'
              description: |
                The target page to transition to. 
                Format: projects/<Project ID>/locations/<Location ID>/agents/<Agent ID>/flows/<Flow ID>/pages/<Page ID>.
            - !ruby/object:Api::Type::String
              name: 'targetFlow'
              description: |
                The target flow to transition to. 
                Format: projects/<Project ID>/locations/<Location ID>/agents/<Agent ID>/flows/<Flow ID>.
      - !ruby/object:Api::Type::Array
        name: 'eventHandlers'
        description: |
          Handlers associated with the page to handle events such as webhook errors, no match or no input.
        item_type: !ruby/object:Api::Type::NestedObject
          properties:
            - !ruby/object:Api::Type::String
              name: 'name'
              output: true
              description: |
                The unique identifier of this event handler.
            - !ruby/object:Api::Type::String
              name: 'event'
              description: |
                The name of the event to handle.
            - !ruby/object:Api::Type::NestedObject
              name: 'triggerFulfillment'
              description: |
                The fulfillment to call when the event occurs. Handling webhook errors with a fulfillment enabled with webhook could cause infinite loop. It is invalid to specify such fulfillment for a handler handling webhooks.
              properties:
                - !ruby/object:Api::Type::Array
                  name: 'messages'
                  description: |
                    The list of rich message responses to present to the user.
                  item_type: !ruby/object:Api::Type::NestedObject
                    properties:
                      - !ruby/object:Api::Type::NestedObject
                        name: 'text'
                        description: |
                          The text response message.
                        properties:
                          - !ruby/object:Api::Type::Array
                            name: 'text'
                            description: |
                              A collection of text responses.
                            item_type: Api::Type::String
                          - !ruby/object:Api::Type::Boolean
                            name: 'allowPlaybackInterruption'
                            output: true
                            description: |
                              Whether the playback of this message can be interrupted by the end user's speech and the client can then starts the next Dialogflow request.
                - !ruby/object:Api::Type::String
                  name: 'webhook'
                  description: |
                    The webhook to call. Format: projects/<Project ID>/locations/<Location ID>/agents/<Agent ID>/webhooks/<Webhook ID>.
                - !ruby/object:Api::Type::Boolean
                  name: 'returnPartialResponses'
                  description: |
                    Whether Dialogflow should return currently queued fulfillment response messages in streaming APIs. If a webhook is specified, it happens before Dialogflow invokes webhook. Warning: 1) This flag only affects streaming API. Responses are still queued and returned once in non-streaming API. 2) The flag can be enabled in any fulfillment but only the first 3 partial responses will be returned. You may only want to apply it to fulfillments that have slow webhooks.
                - !ruby/object:Api::Type::String
                  name: 'tag'
                  description: |
                    The tag used by the webhook to identify which fulfillment is being called. This field is required if webhook is specified.
            - !ruby/object:Api::Type::String
              name: 'targetPage'
              description: |
                The target page to transition to. 
                Format: projects/<Project ID>/locations/<Location ID>/agents/<Agent ID>/flows/<Flow ID>/pages/<Page ID>.
            - !ruby/object:Api::Type::String
              name: 'targetFlow'
              description: |
                The target flow to transition to. 
                Format: projects/<Project ID>/locations/<Location ID>/agents/<Agent ID>/flows/<Flow ID>.
  - !ruby/object:Api::Resource
    name: 'EntityType'
    base_url: "{{parent}}/entityTypes"
    update_verb: :PATCH
    update_mask: true
    description: |
      Entities are extracted from user input and represent parameters that are meaningful to your application. 
      For example, a date range, a proper name such as a geographic location or landmark, and so on. Entities represent actionable data for your application.
    references: !ruby/object:Api::Resource::ReferenceLinks
      guides:
        'Official Documentation':
          'https://cloud.google.com/dialogflow/cx/docs'
      api: 'https://cloud.google.com/dialogflow/cx/docs/reference/rest/v3/projects.locations.agents.entityTypes'
    parameters:
      - !ruby/object:Api::Type::String
        name: parent
        url_param_only: true
        input: true
        description: |
          The agent to create a entity type for. 
          Format: projects/<Project ID>/locations/<Location ID>/agents/<Agent ID>.
      - !ruby/object:Api::Type::String
        name: 'languageCode'
        description: |
          The language of the following fields in entityType:
          EntityType.entities.value
          EntityType.entities.synonyms
          EntityType.excluded_phrases.value
          If not specified, the agent's default language is used. Many languages are supported. Note: languages must be enabled in the agent before they can be used.
        input: true
        url_param_only: true
    properties:
      - !ruby/object:Api::Type::String
        name: 'name'
        output: true
        description: |
          The unique identifier of the entity type.
          Format: projects/<Project ID>/locations/<Location ID>/agents/<Agent ID>/entityTypes/<Entity Type ID>.
      - !ruby/object:Api::Type::String
        name: 'displayName'
        required: true
        description: |
          The human-readable name of the entity type, unique within the agent.
      - !ruby/object:Api::Type::Enum
        name: 'kind'
        required: true
        description: |
          Indicates whether the entity type can be automatically expanded.
          * KIND_MAP: Map entity types allow mapping of a group of synonyms to a canonical value.
          * KIND_LIST: List entity types contain a set of entries that do not map to canonical values. However, list entity types can contain references to other entity types (with or without aliases).
          * KIND_REGEXP: Regexp entity types allow to specify regular expressions in entries values.
        values:
          - :KIND_MAP
          - :KIND_LIST
          - :KIND_REGEXP
      - !ruby/object:Api::Type::Enum
        name: 'autoExpansionMode'
        description: |
          Represents kinds of entities.
          * AUTO_EXPANSION_MODE_UNSPECIFIED: Auto expansion disabled for the entity.
          * AUTO_EXPANSION_MODE_DEFAULT: Allows an agent to recognize values that have not been explicitly listed in the entity.
        values:
          - :AUTO_EXPANSION_MODE_DEFAULT
          - :AUTO_EXPANSION_MODE_UNSPECIFIED
      - !ruby/object:Api::Type::Array
        name: 'entities'
        required: true
        description: |
          The collection of entity entries associated with the entity type.
        item_type: !ruby/object:Api::Type::NestedObject
          properties:
            - !ruby/object:Api::Type::String
              name: 'value'
              description: |
                The primary value associated with this entity entry. For example, if the entity type is vegetable, the value could be scallions.
                For KIND_MAP entity types: A canonical value to be used in place of synonyms.
                For KIND_LIST entity types: A string that can contain references to other entity types (with or without aliases).
            - !ruby/object:Api::Type::Array
              name: 'synonyms'
              item_type: Api::Type::String
              description: |
                A collection of value synonyms. For example, if the entity type is vegetable, and value is scallions, a synonym could be green onions.
                For KIND_LIST entity types: This collection must contain exactly one synonym equal to value.
      - !ruby/object:Api::Type::Array
        name: 'excludedPhrases'
        description: |
          Collection of exceptional words and phrases that shouldn't be matched. For example, if you have a size entity type with entry giant(an adjective), you might consider adding giants(a noun) as an exclusion. 
          If the kind of entity type is KIND_MAP, then the phrases specified by entities and excluded phrases should be mutually exclusive.
        item_type: !ruby/object:Api::Type::NestedObject
          properties:
            - !ruby/object:Api::Type::String
              name: 'value'
              description: |
                The word or phrase to be excluded.
      - !ruby/object:Api::Type::Boolean
        name: 'enableFuzzyExtraction'
        description: |
          Enables fuzzy entity extraction during classification.
      - !ruby/object:Api::Type::Boolean
        name: 'redact'
        description: |
          Indicates whether parameters of the entity type should be redacted in log. If redaction is enabled, page parameters and intent parameters referring to the entity type will be replaced by parameter name when logging.    
  - !ruby/object:Api::Resource
    name: 'Environment'
    base_url: "{{parent}}/environments"
    update_verb: :PATCH
    update_mask: true
    description: |
      Represents an environment for an agent. You can create multiple versions of your agent and publish them to separate environments.
      When you edit an agent, you are editing the draft agent. At any point, you can save the draft agent as an agent version, which is an immutable snapshot of your agent. 
      When you save the draft agent, it is published to the default environment. When you create agent versions, you can publish them to custom environments. You can create a variety of custom environments for testing, development, production, etc.
    references: !ruby/object:Api::Resource::ReferenceLinks
      guides:
        'Official Documentation':
          'https://cloud.google.com/dialogflow/cx/docs'
      api: 'https://cloud.google.com/dialogflow/cx/docs/reference/rest/v3/projects.locations.agents.environments'
    async: !ruby/object:Api::OpAsync
      operation: !ruby/object:Api::OpAsync::Operation
        path: 'name'
        wait_ms: 1000
        timeouts: !ruby/object:Api::Timeouts
          insert_minutes: 60
          update_minutes: 60
          delete_minutes: 60
      result: !ruby/object:Api::OpAsync::Result
        path: 'response'
        resource_inside_response: true
      status: !ruby/object:Api::OpAsync::Status
        path: 'done'
        complete: true
        allowed:
          - true
          - false
      error: !ruby/object:Api::OpAsync::Error
        path: 'error'
        message: 'message'
    parameters:
      - !ruby/object:Api::Type::String
        name: parent
        url_param_only: true
        input: true
        description: |
          The Agent to create an Environment for. 
          Format: projects/<Project ID>/locations/<Location ID>/agents/<Agent ID>.
    properties:
      - !ruby/object:Api::Type::String
        name: 'name'
        output: true
        description: |
          The name of the environment.
      - !ruby/object:Api::Type::String
        name: 'displayName'
        required: true
        description: |
          The human-readable name of the environment (unique in an agent). Limit of 64 characters.
      - !ruby/object:Api::Type::String
        name: 'description'
        description: |
          The human-readable description of the environment. The maximum length is 500 characters. If exceeded, the request is rejected.
      - !ruby/object:Api::Type::Array
        name: 'versionConfigs'
        required: true
        description: |
         A list of configurations for flow versions. You should include version configs for all flows that are reachable from [Start Flow][Agent.start_flow] in the agent. Otherwise, an error will be returned.
        item_type: !ruby/object:Api::Type::NestedObject
          properties:
          - !ruby/object:Api::Type::String
            name: 'version'
            required: true
            description: |
              Format: projects/{{project}}/locations/{{location}}/agents/{{agent}}/flows/{{flow}}/versions/{{version}}.
      - !ruby/object:Api::Type::Time
        name: 'updateTime'
        output: true
        description: 'Update time of this environment. A timestamp in RFC3339 UTC "Zulu" format, with nanosecond resolution and up to nine fractional digits. Examples: "2014-10-02T15:01:23Z" and "2014-10-02T15:01:23.045123456Z".'