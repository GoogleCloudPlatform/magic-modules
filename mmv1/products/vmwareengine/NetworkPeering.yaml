# Copyright 2023 Google Inc.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

--- !ruby/object:Api::Resource
name: 'NetworkPeering'
base_url: 'projects/{{project}}/locations/global/networkPeering'
self_link: 'projects/{{project}}/locations/global/networkPeerings/{{name}}'
create_url: 'projects/{{project}}/locations/global/networkPeerings?networkPeeringId={{name}}'
update_verb: :PATCH
references: !ruby/object:Api::Resource::ReferenceLinks
  api: 'https://cloud.google.com/compute/docs/reference/rest/v1/networks/addPeering'
description: |
  Represents a network peering resource. Network peerings are global resources.
async: !ruby/object:Api::OpAsync
  operation: !ruby/object:Api::OpAsync::Operation
    path: "name"
    base_url: "{{op_id}}"
    wait_ms: 1000
  result: !ruby/object:Api::OpAsync::Result
    path: "response"
  status: !ruby/object:Api::OpAsync::Status
    path: "done"
    complete: true
    allowed:
      - true
      - false
  error: !ruby/object:Api::OpAsync::Error
    path: "error"
    message: "message"

import_format: ["projects/{{project}}/locations/global/networkPeerings/{{name}}"]
autogen_async: true

examples:
  - !ruby/object:Provider::Terraform::Examples
    name: "vmware_engine_network_peering_ven"
    primary_resource_id: "vmw-engine-network-peering"
    vars:
      name: "sample-network-peering"
    test_env_vars:
      region: :REGION
  - !ruby/object:Provider::Terraform::Examples
    name: "vmware_engine_network_peering_standard"
    primary_resource_id: "vmw-engine-network-peering"
    vars:
      name: "sample-network-peering"
    test_env_vars:
      region: :REGION

parameters:
  - !ruby/object:Api::Type::String
    name: "name"
    required: true
    immutable: true
    url_param_only: true
    description: |
      The ID of the Network Peering.

properties:
  - !ruby/object:Api::Type::Time
    name: 'createTime'
    output: true
    description: |
      Creation time of this resource.
      A timestamp in RFC3339 UTC "Zulu" format, with nanosecond resolution and
      up to nine fractional digits. Examples: "2014-10-02T15:01:23Z" and "2014-10-02T15:01:23.045123456Z".

  - !ruby/object:Api::Type::Time
    name: 'updateTime'
    output: true
    description: |
      Last updated time of this resource.
      A timestamp in RFC3339 UTC "Zulu" format, with nanosecond resolution and up to nine
      fractional digits. Examples: "2014-10-02T15:01:23Z" and "2014-10-02T15:01:23.045123456Z".

  - !ruby/object:Api::Type::String
    name: 'peerNetwork'
    required: true
    description: |
      The relative resource name of the network to peer with a standard VMware Engine network.
      The provided network can be a consumer VPC network or another standard VMware Engine network.

  - !ruby/object:Api::Type::Boolean
    name: exportCustomRoutes
    default_value: true
    send_empty_value: true
    description: |
      True if custom routes are exported to the peered network; false otherwise.

  - !ruby/object:Api::Type::Boolean
    name: importCustomRoutes
    default_value: true
    send_empty_value: true
    description: |
      True if custom routes are imported from the peered network; false otherwise.

  - !ruby/object:Api::Type::Boolean
    name: exportCustomRoutesWithPublicIp
    default_value: true
    send_empty_value: true
    description: |
      True if all subnet routes with a public IP address range are exported; false otherwise.

  - !ruby/object:Api::Type::Boolean
    name: importCustomRoutesWithPublicIp
    default_value: true
    send_empty_value: true
    description: |
      True if custom routes are imported from the peered network; false otherwise.

  - !ruby/object:Api::Type::String
    name: 'state'
    output: true
    description: |
      State of the network peering.
      This field has a value of 'ACTIVE' when there's a matching configuration in the peer network.
      New values may be added to this enum when appropriate.

  - !ruby/object:Api::Type::String
    name: 'stateDetails'
    output: true
    description: |
      Details about the current state of the network peering.

  - !ruby/object:Api::Type::Enum
    name: 'peerNetworkType'
    required: true
    description: |
      The type of the network to peer with the VMware Engine network.
    values:
      - :STANDARD
      - :VMWARE_ENGINE_NETWORK
      - :PRIVATE_SERVICES_ACCESS
      - :NETAPP_CLOUD_VOLUMES
      - :THIRD_PARTY_SERVICE
      - :DELL_POWERSCALE

  - !ruby/object:Api::Type::String
    name: 'uid'
    output: true
    description: |
      System-generated unique identifier for the resource.

  - !ruby/object:Api::Type::String
    name: 'vmwareEngineNetwork'
    required: true
    description: |
      The relative resource name of the VMware Engine network. Specify the name in the following form:
      projects/{project}/locations/{location}/vmwareEngineNetworks/{vmwareEngineNetworkId} where {project}
      can either be a project number or a project ID.

  - !ruby/object:Api::Type::String
    name: 'description'
    description: |
      User-provided description for this network peering.

  - !ruby/object:Api::Type::String
    name: 'vmwareEngineNetworkCanonical'
    output: true
    description: |
      The canonical name of the VMware Engine network in the form:
      projects/{project_number}/locations/{location}/vmwareEngineNetworks/{vmwareEngineNetworkId}
