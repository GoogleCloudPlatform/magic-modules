# Copyright 2024 Google Inc.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

---
name: 'Cluster'
description: |
  A cluster in a private cloud.
references:
  guides:
  api: 'https://cloud.google.com/vmware-engine/docs/reference/rest/v1/projects.locations.privateClouds.clusters'
docs:
id_format: '{{parent}}/clusters/{{name}}'
base_url: '{{parent}}/clusters'
self_link: '{{parent}}/clusters/{{name}}'
create_url: '{{parent}}/clusters?clusterId={{name}}'
update_verb: 'PATCH'
update_mask: true
import_format:
  - '{{%parent}}/clusters/{{name}}'
timeouts:
  insert_minutes: 210
  update_minutes: 190
  delete_minutes: 150
autogen_async: true
async:
  actions: ['create', 'delete', 'update']
  type: 'OpAsync'
  operation:
    base_url: '{{op_id}}'
    path: 'name'
    wait_ms: 5000
    timeouts:
      insert_minutes: 210
      update_minutes: 190
      delete_minutes: 150
  result:
    path: 'response'
    resource_inside_response: false
  error:
    path: 'error'
    message: 'message'
  include_project: true
custom_code:
# There is a handwritten sweeper that provides a list of locations to sweep
exclude_sweeper: true
error_abort_predicates:

  - 'transport_tpg.Is429QuotaError'
examples:
  - name: 'vmware_engine_cluster_basic'
    primary_resource_id: 'vmw-engine-ext-cluster'
    vars:
      name: 'ext-cluster'
      private_cloud_id: 'sample-pc'
      network_id: 'pc-nw'
      management_cluster_id: 'sample-mgmt-cluster'
    test_env_vars:
      region: 'REGION'
 # update tests will take care of create and update. PC and cluster creation is expensive and node reservation is required.
    exclude_test: true
  - name: 'vmware_engine_cluster_full'
    primary_resource_id: 'vmw-ext-cluster'
    vars:
      name: 'ext-cluster'
      private_cloud_id: 'sample-pc'
      network_id: 'pc-nw'
      management_cluster_id: 'sample-mgmt-cluster'
    test_env_vars:
      region: 'REGION'
 # update tests will take care of create and update. PC and cluster creation is expensive and node reservation is required.
    exclude_test: true
parameters:
  - name: 'parent'
    type: String
    description: |
      The resource name of the private cloud to create a new cluster in.
      Resource names are schemeless URIs that follow the conventions in https://cloud.google.com/apis/design/resource_names.
      For example: projects/my-project/locations/us-west1-a/privateClouds/my-cloud
    url_param_only: true
    required: true
    immutable: true
  - name: 'name'
    type: String
    description: |
      The ID of the Cluster.

    url_param_only: true
    required: true
    immutable: true
properties:
  - name: 'management'
    type: Boolean
    description: |
      True if the cluster is a management cluster; false otherwise.
      There can only be one management cluster in a private cloud and it has to be the first one.

    output: true
  - name: 'uid'
    type: String
    description: |
      System-generated unique identifier for the resource.

    output: true
  - name: 'state'
    type: Enum
    description: |
      State of the Cluster.
    output: true
    enum_values:
      - 'ACTIVE'
      - 'CREATING'
      - 'UPDATING'
      - 'DELETING'
      - 'REPAIRING'
  - name: 'nodeTypeConfigs'
    type: Map
    description: |
      The map of cluster node types in this cluster,
      where the key is canonical identifier of the node type (corresponds to the NodeType).
    update_mask_fields:
      - 'nodeTypeConfigs.*.nodeCount'
    key_name: 'node_type_id'
    key_description: |
      Canonical identifier of the NodeType.
    value_type:
      name: nodeTypeConfig
      type: NestedObject
      properties:
        - name: 'nodeCount'
          type: Integer
          description: |
            The number of nodes of this type in the cluster.
          required: true
        - name: 'customCoreCount'
          type: Integer
          description: |
            Customized number of cores available to each node of the type.
            This number must always be one of `nodeType.availableCustomCoreCounts`.
            If zero is provided max value from `nodeType.availableCustomCoreCounts` will be used.
            Once the customer is created then corecount cannot be changed.
          default_value: 0
  - name: 'autoscalingSettings'
    type: NestedObject
    description: |
      Configuration of the autoscaling applied to this cluster
    properties:
      - name: 'autoscalingPolicies'
        type: Map
        required: true
        description: |
          The map with autoscaling policies applied to the cluster.
          The key is the identifier of the policy.
          It must meet the following requirements:
            * Only contains 1-63 alphanumeric characters and hyphens
            * Begins with an alphabetical character
            * Ends with a non-hyphen character
            * Not formatted as a UUID
            * Complies with [RFC 1034](https://datatracker.ietf.org/doc/html/rfc1034) (section 3.5)

          Currently there map must contain only one element
          that describes the autoscaling policy for compute nodes.
        key_name: 'autoscale_policy_id'
        key_description: 'The key is the identifier of the policy.'
        value_type:
          name: AutoscalingPolicy
          type: NestedObject
          properties:
            - name: 'nodeTypeId'
              type: String
              required: true
              description: |
                The canonical identifier of the node type to add or remove.
            - name: 'scaleOutSize'
              type: Integer
              required: true
              description: |
                Number of nodes to add to a cluster during a scale-out operation.
                Must be divisible by 2 for stretched clusters.
            - name: 'minNodeCount'
              type: Integer
              description: |
                Minimum number of nodes of the given type in a cluster.
                The number is coerced to the minimum number of nodes of any type in the cluster.
            - name: 'maxNodeCount'
              type: Integer
              description: |
                Maximum number of nodes of the given type in a cluster.
                The number is coerced to the maximum number of nodes of any type in the cluster.
            - name: 'cpuThresholds'
              type: NestedObject
              description: |
                Utilization thresholds pertaining to CPU utilization.
              properties:
                - name: 'scaleOut'
                  type: Integer
                  description: |
                    The utilization triggering the scale-out operation in percent.
                - name: 'scaleIn'
                  type: Integer
                  description: |
                    The utilization triggering the scale-in operation in percent.
            - name: 'grantedMemoryThresholds'
              type: NestedObject
              description: |
                Utilization thresholds pertaining to amount of granted memory.
              properties:
                - name: 'scaleOut'
                  type: Integer
                  description: |
                    The utilization triggering the scale-out operation in percent.
                - name: 'scaleIn'
                  type: Integer
                  description: |
                    The utilization triggering the scale-in operation in percent.
            - name: 'consumedMemoryThresholds'
              type: NestedObject
              description: |
                Utilization thresholds pertaining to amount of consumed memory.
              properties:
                - name: 'scaleOut'
                  type: Integer
                  description: |
                    The utilization triggering the scale-out operation in percent.
                - name: 'scaleIn'
                  type: Integer
                  description: |
                    The utilization triggering the scale-in operation in percent.
            - name: 'storageThresholds'
              type: NestedObject
              description: |
                Utilization thresholds pertaining to amount of consumed storage.
              properties:
                - name: 'scaleOut'
                  type: Integer
                  description: |
                    The utilization triggering the scale-out operation in percent.
                - name: 'scaleIn'
                  type: Integer
                  description: |
                    The utilization triggering the scale-in operation in percent.
      - name: 'minClusterNodeCount'
        type: Integer
        description: |
          Minimum number of nodes of any type in a cluster.
          If not specified the default limits apply.
      - name: 'maxClusterNodeCount'
        type: Integer
        description: |
          Maximum number of nodes of any type in a cluster.
          If not specified the default limits apply.
      - name: 'coolDownPeriod'
        type: String
        description: |
          The minimum duration between consecutive autoscale operations.
          It starts once addition or removal of nodes is fully completed.
          Defaults to 30m if not specified.
          Cool down period must be in whole minutes (for example, 30m, 31m, 50m).
