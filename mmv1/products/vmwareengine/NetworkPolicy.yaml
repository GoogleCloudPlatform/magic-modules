# Copyright 2023 Google Inc.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

--- !ruby/object:Api::Resource
name: 'NetworkPolicy'
base_url: 'projects/{{project}}/locations/{{location}}/networkPolicies'
self_link: 'projects/{{project}}/locations/{{location}}/networkPolicies/{{name}}'
create_url: 'projects/{{project}}/locations/{{location}}/networkPolicies?networkPolicyId={{name}}'
update_verb: :PATCH
references: !ruby/object:Api::Resource::ReferenceLinks
  api: 'https://cloud.google.com/vmware-engine/docs/reference/rest/v1/projects.locations.networkPolicies'
description: |
  Represents a network policy resource. Network policies are regional resources.
async: !ruby/object:Api::OpAsync
  operation: !ruby/object:Api::OpAsync::Operation
    path: "name"
    base_url: "{{op_id}}"
    wait_ms: 5000
    timeouts: !ruby/object:Api::Timeouts
      insert_minutes: 60
      update_minutes: 60
      delete_minutes: 60
  result: !ruby/object:Api::OpAsync::Result
    path: "response"
  status: !ruby/object:Api::OpAsync::Status
    path: "done"
    complete: true
    allowed:
      - true
      - false
  error: !ruby/object:Api::OpAsync::Error
    path: "error"
    message: "message"

import_format: ["projects/{{project}}/locations/{{location}}/networkPolicies/{{name}}"]
autogen_async: true

examples:
  - !ruby/object:Provider::Terraform::Examples
    name: "vmware_engine_network_policy_basic"
    primary_resource_id: "vmw-engine-network-policy"
    vars:
      name: "sample-network-policy"
    test_env_vars:
      region: :REGION
  - !ruby/object:Provider::Terraform::Examples
    name: "vmware_engine_network_policy_full"
    primary_resource_id: "vmw-engine-network-policy"
    vars:
      name: "sample-network-policy-full"
    test_env_vars:
      region: :REGION

parameters:
  - !ruby/object:Api::Type::String
    name: "location"
    required: true
    immutable: true
    url_param_only: true
    description: |
      The resource name of the location (region) to create the new network policy in.
      Resource names are schemeless URIs that follow the conventions in https://cloud.google.com/apis/design/resource_names.
      For example: projects/my-project/locations/us-central1
  - !ruby/object:Api::Type::String
    name: "name"
    required: true
    immutable: true
    url_param_only: true
    description: |
      The ID of the Network Policy.

properties:
  - !ruby/object:Api::Type::Time
    name: 'createTime'
    output: true
    description: |
      Creation time of this resource.
      A timestamp in RFC3339 UTC "Zulu" format, with nanosecond resolution and
      up to nine fractional digits. Examples: "2014-10-02T15:01:23Z" and "2014-10-02T15:01:23.045123456Z".

  - !ruby/object:Api::Type::Time
    name: 'updateTime'
    output: true
    description: |
      Last updated time of this resource.
      A timestamp in RFC3339 UTC "Zulu" format, with nanosecond resolution and up to nine
      fractional digits. Examples: "2014-10-02T15:01:23Z" and "2014-10-02T15:01:23.045123456Z".

  - !ruby/object:Api::Type::String
    name: 'uid'
    output: true
    description: |
      System-generated unique identifier for the resource.

  - !ruby/object:Api::Type::String
    name: 'vmwareEngineNetworkCanonical'
    output: true
    description: |
      The canonical name of the VMware Engine network in the form:
      projects/{project_number}/locations/{location}/vmwareEngineNetworks/{vmwareEngineNetworkId}

  - !ruby/object:Api::Type::String
    name: 'edgeServicesCidr'
    required: true
    description: |
      IP address range in CIDR notation used to create internet access and external IP access.
      An RFC 1918 CIDR block, with a "/26" prefix, is required. The range cannot overlap with any
      prefixes either in the consumer VPC network or in use by the private clouds attached to that VPC network.

  - !ruby/object:Api::Type::String
    name: 'description'
    description: |
      User-provided description for this network policy.

  - !ruby/object:Api::Type::String
    name: 'vmwareEngineNetwork'
    required: true
    immutable: true
    description: |
      The relative resource name of the VMware Engine network. Specify the name in the following form:
      projects/{project}/locations/{location}/vmwareEngineNetworks/{vmwareEngineNetworkId} where {project}
      can either be a project number or a project ID.

  - !ruby/object:Api::Type::NestedObject
    name: 'internetAccess'
    description: |
      Network service that allows VMware workloads to access the internet.
    default_from_api: true
    properties:
      - !ruby/object:Api::Type::Boolean
        name: enabled
        send_empty_value: true
        description: |
          True if the service is enabled; false otherwise.

      - !ruby/object:Api::Type::Enum
        name: 'state'
        description: |
          State of the service. New values may be added to this enum when appropriate.
        output: true
        values:
          - :UNPROVISIONED
          - :RECONCILING
          - :ACTIVE

  - !ruby/object:Api::Type::NestedObject
    name: 'externalIp'
    description: |
      Network service that allows External IP addresses to be assigned to VMware workloads.
      This service can only be enabled when internetAccess is also enabled.
    default_from_api: true
    properties:
      - !ruby/object:Api::Type::Boolean
        name: enabled
        send_empty_value: true
        description: |
          True if the service is enabled; false otherwise.

      - !ruby/object:Api::Type::Enum
        name: 'state'
        description: |
          State of the service. New values may be added to this enum when appropriate.
        output: true
        values:
          - :UNPROVISIONED
          - :RECONCILING
          - :ACTIVE
