# Copyright 2023 Google Inc.
# Licensed under the Apache License, Version 2.0 (the License);
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

--- !ruby/object:Api::Resource
name: 'PrivateCloud'
base_url: 'projects/{{project}}/locations/{{location}}/privateClouds'
self_link: 'projects/{{project}}/locations/{{location}}/privateClouds/{{name}}'
delete_url: 'projects/{{project}}/locations/{{location}}/privateClouds/{{name}}?delay_hours=0'
create_url: 'projects/{{project}}/locations/{{location}}/privateClouds?privateCloudId={{name}}'
update_verb: :PATCH
references: !ruby/object:Api::Resource::ReferenceLinks
  api: 'https://cloud.google.com/vmware-engine/docs/reference/rest/v1/projects.locations.privateClouds'
description: Represents a private cloud resource. Private clouds are zonal resources.
error_abort_predicates: ['transport_tpg.Is429QuotaError']
async: !ruby/object:Api::OpAsync
  operation: !ruby/object:Api::OpAsync::Operation
    path: "name"
    base_url: "{{op_id}}"
    wait_ms: 5000
    timeouts: !ruby/object:Api::Timeouts
      insert_minutes: 240
      update_minutes: 190
      delete_minutes: 150
  result: !ruby/object:Api::OpAsync::Result
    path: "response"
  status: !ruby/object:Api::OpAsync::Status
    path: "done"
    complete: true
    allowed:
      - true
      - false
  error: !ruby/object:Api::OpAsync::Error
    path: "error"
    message: "message"
import_format: ["projects/{{project}}/locations/{{location}}/privateClouds/{{name}}"]
autogen_async: true
custom_code: !ruby/object:Provider::Terraform::CustomCode
  post_delete: "templates/terraform/post_delete/private_cloud.go.erb"
  decoder: "templates/terraform/decoders/private_cloud.go.erb"
  post_update: "templates/terraform/post_update/private_cloud.go.erb"
  update_encoder: "templates/terraform/update_encoder/private_cloud.go.erb"
  constants: templates/terraform/constants/vmwareengine_private_cloud_type.go.erb
examples:
  - !ruby/object:Provider::Terraform::Examples
    name: "vmware_engine_private_cloud_basic"
    config_path: "templates/terraform/examples/vmware_engine_private_cloud_basic.tf.erb"
    primary_resource_id: "vmw-engine-pc"
    skip_test: true   # update tests will take care of create and update. PC creation is expensive and node reservation is required.
    vars:
      private_cloud_id: "sample-pc"
      network_id: "pc-nw"
      management_cluster_id: "sample-mgmt-cluster"
    test_env_vars:
      region: :REGION
  - !ruby/object:Provider::Terraform::Examples
    name: "vmware_engine_private_cloud_full"
    config_path: "templates/terraform/examples/vmware_engine_private_cloud_full.tf.erb"
    primary_resource_id: "vmw-engine-pc"
    skip_test: true   # update tests will take care of create and update. PC creation is expensive and node reservation is required.
    vars:
      private_cloud_id: "sample-pc"
      network_id: "pc-nw"
      management_cluster_id: "sample-mgmt-cluster"
    test_env_vars:
      region: :REGION

parameters:
  - !ruby/object:Api::Type::String
    name: "location"
    required: true
    immutable: true
    url_param_only: true
    description: |
      The location where the PrivateCloud should reside.
  - !ruby/object:Api::Type::String
    name: "name"
    required: true
    immutable: true
    url_param_only: true
    description: |
      The ID of the PrivateCloud.

properties:
  - !ruby/object:Api::Type::String
    name: 'description'
    description: |
      User-provided description for this private cloud.

  - !ruby/object:Api::Type::String
    name: 'uid'
    output: true
    description: |
      System-generated unique identifier for the resource.

  - !ruby/object:Api::Type::Enum
    name: 'state'
    description: |
      State of the resource. New values may be added to this enum when appropriate.
    output: true
    values:
      - :ACTIVE
      - :CREATING
      - :UPDATING
      - :FAILED
      - :DELETED
      - :PURGING

  - !ruby/object:Api::Type::NestedObject
    name: 'networkConfig'
    required: true
    immutable: true
    description: |
      Network configuration in the consumer project with which the peering has to be done.
    properties:
      - !ruby/object:Api::Type::String
        name: 'managementCidr'
        description: |
          Management CIDR used by VMware management appliances.
        required: true

      - !ruby/object:Api::Type::String
        name: 'vmwareEngineNetwork'
        description: |
          The relative resource name of the VMware Engine network attached to the private cloud.
          Specify the name in the following form: projects/{project}/locations/{location}/vmwareEngineNetworks/{vmwareEngineNetworkId}
          where {project} can either be a project number or a project ID.

      - !ruby/object:Api::Type::String
        name: 'vmwareEngineNetworkCanonical'
        output: true
        description: |
          The canonical name of the VMware Engine network in
          the form: projects/{project_number}/locations/{location}/vmwareEngineNetworks/{vmwareEngineNetworkId}

      - !ruby/object:Api::Type::Integer
        name: 'managementIpAddressLayoutVersion'
        output: true
        description: |
          The IP address layout version of the management IP address range.
          Possible versions include:
          * managementIpAddressLayoutVersion=1: Indicates the legacy IP address layout used by some existing private clouds. This is no longer supported for new private clouds
          as it does not support all features.
          * managementIpAddressLayoutVersion=2: Indicates the latest IP address layout
          used by all newly created private clouds. This version supports all current features.

      - !ruby/object:Api::Type::String
        name: 'dnsServerIp'
        output: true
        description: |
          DNS Server IP of the Private Cloud.

  - !ruby/object:Api::Type::NestedObject
    name: 'managementCluster'
    required: true
    description: |
      The management cluster for this private cloud. This used for creating and managing the default cluster.
    properties:
      - !ruby/object:Api::Type::String
        name: 'clusterId'
        description: |
          The user-provided identifier of the new Cluster. The identifier must meet the following requirements:
            * Only contains 1-63 alphanumeric characters and hyphens
            * Begins with an alphabetical character
            * Ends with a non-hyphen character
            * Not formatted as a UUID
            * Complies with RFC 1034 (https://datatracker.ietf.org/doc/html/rfc1034) (section 3.5)
        required: true
      - !ruby/object:Api::Type::Map
        name: 'nodeTypeConfigs'
        description: |
          The map of cluster node types in this cluster,
          where the key is canonical identifier of the node type (corresponds to the NodeType).
        key_name: 'node_type_id'
        key_description: |
          Canonical identifier of the NodeType.
        value_type: !ruby/object:Api::Type::NestedObject
          name: nodeTypeConfig
          properties:
            - !ruby/object:Api::Type::Integer
              name: 'nodeCount'
              description: |
                The number of nodes of this type in the cluster.
              required: true
            - !ruby/object:Api::Type::Integer
              name: 'customCoreCount'
              default_value: 0
              description: |
                Customized number of cores available to each node of the type.
                This number must always be one of `nodeType.availableCustomCoreCounts`.
                If zero is provided max value from `nodeType.availableCustomCoreCounts` will be used.
                This cannot be changed once the PrivateCloud is created.

  - !ruby/object:Api::Type::NestedObject
    name: 'hcx'
    output: true
    description: |
      Details about a HCX Cloud Manager appliance.
    properties:
      - !ruby/object:Api::Type::String
        name: 'internalIp'
        description: |
          Internal IP address of the appliance.

      - !ruby/object:Api::Type::String
        name: 'version'
        description: |
          Version of the appliance.

      - !ruby/object:Api::Type::Enum
        name: 'state'
        description: |
          State of the appliance.
        values:
          - :ACTIVE
          - :CREATING

      - !ruby/object:Api::Type::String
        name: 'fqdn'
        description: |
          Fully qualified domain name of the appliance.

  - !ruby/object:Api::Type::NestedObject
    name: 'nsx'
    output: true
    description: |
      Details about a NSX Manager appliance.
    properties:
      - !ruby/object:Api::Type::String
        name: 'internalIp'
        description: |
          Internal IP address of the appliance.

      - !ruby/object:Api::Type::String
        name: 'version'
        description: |
          Version of the appliance.

      - !ruby/object:Api::Type::Enum
        name: 'state'
        description: |
          State of the appliance.
        values:
          - :ACTIVE
          - :CREATING

      - !ruby/object:Api::Type::String
        name: 'fqdn'
        description: |
          Fully qualified domain name of the appliance.

  - !ruby/object:Api::Type::NestedObject
    name: 'vcenter'
    output: true
    description: |
      Details about a vCenter Server management appliance.
    properties:
      - !ruby/object:Api::Type::String
        name: 'internalIp'
        description: |
          Internal IP address of the appliance.

      - !ruby/object:Api::Type::String
        name: 'version'
        description: |
          Version of the appliance.

      - !ruby/object:Api::Type::Enum
        name: 'state'
        description: |
          State of the appliance.
        values:
          - :ACTIVE
          - :CREATING

      - !ruby/object:Api::Type::String
        name: 'fqdn'
        description: |-
          Fully qualified domain name of the appliance.

  - !ruby/object:Api::Type::Enum
    name: 'type'
    description: |
      Initial type of the private cloud.
    immutable: true
    ignore_read: true
    diff_suppress_func: vmwareenginePrivateCloudStandardTypeDiffSuppressFunc
    values:
      - :STANDARD
      - :TIME_LIMITED
      - :STRETCHED

  - !ruby/object:Api::Type::String
    name: 'preferredZone'
    description: |
      The preferred single failure domain within a region.

  - !ruby/object:Api::Type::String
    name: 'secondaryZone'
    description: |
      The secondary single failure domain within a region.
