# Copyright 2024 Google Inc.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

---
name: 'PrivateCloud'
description: Represents a private cloud resource. Private clouds are zonal resources.
references:
  guides:
  api: 'https://cloud.google.com/vmware-engine/docs/reference/rest/v1/projects.locations.privateClouds'
docs:
base_url: 'projects/{{project}}/locations/{{location}}/privateClouds'
self_link: 'projects/{{project}}/locations/{{location}}/privateClouds/{{name}}'
create_url: 'projects/{{project}}/locations/{{location}}/privateClouds?privateCloudId={{name}}'
update_verb: 'PATCH'
delete_url: 'projects/{{project}}/locations/{{location}}/privateClouds/{{name}}'
import_format:
  - 'projects/{{project}}/locations/{{location}}/privateClouds/{{name}}'
timeouts:
  insert_minutes: 240
  update_minutes: 190
  delete_minutes: 150
autogen_async: true
async:
  actions: ['create', 'delete', 'update']
  type: 'OpAsync'
  operation:
    base_url: '{{op_id}}'
    path: 'name'
    wait_ms: 5000
    timeouts:
      insert_minutes: 240
      update_minutes: 190
      delete_minutes: 150
  result:
    path: 'response'
    resource_inside_response: false
  error:
    path: 'error'
    message: 'message'
custom_code:
  constants: 'templates/terraform/constants/vmwareengine_private_cloud.go.tmpl'
  update_encoder: 'templates/terraform/update_encoder/private_cloud.go.tmpl'
  decoder: 'templates/terraform/decoders/private_cloud.go.tmpl'
  pre_create: 'templates/terraform/pre_create/vmwareengine_private_cloud.go.tmpl'
  post_create: 'templates/terraform/post_create/private_cloud.go.tmpl'
  post_delete: 'templates/terraform/post_delete/private_cloud.go.tmpl'
  post_update: 'templates/terraform/post_update/private_cloud.go.tmpl'
  pre_delete: 'templates/terraform/pre_delete/vmwareengine_private_cloud.go.tmpl'
error_abort_predicates:

  - 'transport_tpg.Is429QuotaError'
examples:
  - name: 'vmware_engine_private_cloud_basic'
    primary_resource_id: 'vmw-engine-pc'
    vars:
      private_cloud_id: 'sample-pc'
      network_id: 'pc-nw'
      management_cluster_id: 'sample-mgmt-cluster'
    test_env_vars:
      region: 'REGION'
      # update tests will take care of create and update. PC creation is expensive and node reservation is required.
    exclude_test: true
  - name: 'vmware_engine_private_cloud_full'
    primary_resource_id: 'vmw-engine-pc'
    vars:
      private_cloud_id: 'sample-pc'
      network_id: 'pc-nw'
      management_cluster_id: 'sample-mgmt-cluster'
    test_env_vars:
      region: 'REGION'
    # update tests will take care of create and update. PC creation is expensive and node reservation is required.
    exclude_test: true
virtual_fields:
  - name: 'deletion_delay_hours'
    description: |
      The number of hours to delay this request. You can set this value to an hour between 0 to 8, where setting it to 0 starts the deletion request immediately. If no value is set, a default value is set at the API Level.
    type: Integer
  - name: 'send_deletion_delay_hours_if_zero'
    description: |
      While set true, deletion_delay_hours value will be sent in the request even for zero value of the field. This field is only useful for setting 0 value to the deletion_delay_hours field. It can be used both alone and together with deletion_delay_hours.
    type: Boolean
parameters:
  - name: 'location'
    type: String
    description: |
      The location where the PrivateCloud should reside.
    url_param_only: true
    required: true
    immutable: true
  - name: 'name'
    type: String
    description: |
      The ID of the PrivateCloud.
    url_param_only: true
    required: true
    immutable: true
properties:
  - name: 'description'
    type: String
    description: |
      User-provided description for this private cloud.
  - name: 'uid'
    type: String
    description: |
      System-generated unique identifier for the resource.
    output: true
  - name: 'state'
    type: Enum
    description: |
      State of the resource. New values may be added to this enum when appropriate.
    output: true
    enum_values:
      - 'ACTIVE'
      - 'CREATING'
      - 'UPDATING'
      - 'FAILED'
      - 'DELETED'
      - 'PURGING'
  - name: 'networkConfig'
    type: NestedObject
    description: |
      Network configuration in the consumer project with which the peering has to be done.
    required: true
    immutable: true
    properties:
      - name: 'managementCidr'
        type: String
        description: |
          Management CIDR used by VMware management appliances.
        required: true
      - name: 'vmwareEngineNetwork'
        type: String
        description: |
          The relative resource name of the VMware Engine network attached to the private cloud.
          Specify the name in the following form: projects/{project}/locations/{location}/vmwareEngineNetworks/{vmwareEngineNetworkId}
          where {project} can either be a project number or a project ID.
      - name: 'vmwareEngineNetworkCanonical'
        type: String
        description: |
          The canonical name of the VMware Engine network in
          the form: projects/{project_number}/locations/{location}/vmwareEngineNetworks/{vmwareEngineNetworkId}
        output: true
      - name: 'managementIpAddressLayoutVersion'
        type: Integer
        description: |
          The IP address layout version of the management IP address range.
          Possible versions include:
          * managementIpAddressLayoutVersion=1: Indicates the legacy IP address layout used by some existing private clouds. This is no longer supported for new private clouds
          as it does not support all features.
          * managementIpAddressLayoutVersion=2: Indicates the latest IP address layout
          used by all newly created private clouds. This version supports all current features.
        output: true
      - name: 'dnsServerIp'
        type: String
        description: |
          DNS Server IP of the Private Cloud.
        output: true
  - name: 'managementCluster'
    type: NestedObject
    description: |
      The management cluster for this private cloud. This used for creating and managing the default cluster.
    required: true
    properties:
      - name: 'clusterId'
        type: String
        description: |
          The user-provided identifier of the new Cluster. The identifier must meet the following requirements:
            * Only contains 1-63 alphanumeric characters and hyphens
            * Begins with an alphabetical character
            * Ends with a non-hyphen character
            * Not formatted as a UUID
            * Complies with RFC 1034 (https://datatracker.ietf.org/doc/html/rfc1034) (section 3.5)
        required: true
      - name: 'nodeTypeConfigs'
        type: Map
        description: |
          The map of cluster node types in this cluster,
          where the key is canonical identifier of the node type (corresponds to the NodeType).
        key_name: 'node_type_id'
        key_description: |
          Canonical identifier of the NodeType.
        value_type:
          name: nodeTypeConfig
          type: NestedObject
          properties:
            - name: 'nodeCount'
              type: Integer
              description: |
                The number of nodes of this type in the cluster.
              required: true
            - name: 'customCoreCount'
              type: Integer
              description: |
                Customized number of cores available to each node of the type.
                This number must always be one of `nodeType.availableCustomCoreCounts`.
                If zero is provided max value from `nodeType.availableCustomCoreCounts` will be used.
                This cannot be changed once the PrivateCloud is created.
              default_value: 0
      - name: 'stretchedClusterConfig'
        type: NestedObject
        description: |
          The stretched cluster configuration for the private cloud.
        properties:
          - name: 'preferredLocation'
            type: String
            description: |
              Zone that will remain operational when connection between the two zones is lost.
          - name: 'secondaryLocation'
            type: String
            description: |
              Additional zone for a higher level of availability and load balancing.
      - name: 'autoscalingSettings'
        type: NestedObject
        description: |
          Configuration of the autoscaling applied to this cluster
          Private cloud must have a minimum of 3 nodes to add autoscale settings
        properties:
          - name: 'autoscalingPolicies'
            type: Map
            required: true
            description: |
              The map with autoscaling policies applied to the cluster.
              The key is the identifier of the policy.
              It must meet the following requirements:
               * Only contains 1-63 alphanumeric characters and hyphens
               * Begins with an alphabetical character
               * Ends with a non-hyphen character
               * Not formatted as a UUID
               * Complies with [RFC 1034](https://datatracker.ietf.org/doc/html/rfc1034) (section 3.5)

              Currently the map must contain only one element
              that describes the autoscaling policy for compute nodes.
            key_name: 'autoscale_policy_id'
            key_description: 'The key is the identifier of the policy.'
            value_type:
              name: AutoscalingPolicy
              type: NestedObject
              properties:
                - name: 'nodeTypeId'
                  type: String
                  required: true
                  description: |
                    The canonical identifier of the node type to add or remove.
                - name: 'scaleOutSize'
                  type: Integer
                  required: true
                  description: |
                    Number of nodes to add to a cluster during a scale-out operation.
                    Must be divisible by 2 for stretched clusters.
                - name: 'cpuThresholds'
                  type: NestedObject
                  description: |
                    Utilization thresholds pertaining to CPU utilization.
                  properties:
                    - name: 'scaleOut'
                      type: Integer
                      required: true
                      description: |
                        The utilization triggering the scale-out operation in percent.
                    - name: 'scaleIn'
                      type: Integer
                      required: true
                      description: |
                        The utilization triggering the scale-in operation in percent.
                - name: 'consumedMemoryThresholds'
                  type: NestedObject
                  description: |
                    Utilization thresholds pertaining to amount of consumed memory.
                  properties:
                    - name: 'scaleOut'
                      type: Integer
                      required: true
                      description: |
                        The utilization triggering the scale-out operation in percent.
                    - name: 'scaleIn'
                      type: Integer
                      required: true
                      description: |
                        The utilization triggering the scale-in operation in percent.
                - name: 'storageThresholds'
                  type: NestedObject
                  description: |
                    Utilization thresholds pertaining to amount of consumed storage.
                  properties:
                    - name: 'scaleOut'
                      type: Integer
                      required: true
                      description: |
                        The utilization triggering the scale-out operation in percent.
                    - name: 'scaleIn'
                      type: Integer
                      required: true
                      description: |
                        The utilization triggering the scale-in operation in percent.
          - name: 'minClusterNodeCount'
            type: Integer
            description: |
              Minimum number of nodes of any type in a cluster.
              Mandatory for successful addition of autoscaling settings in cluster.
          - name: 'maxClusterNodeCount'
            type: Integer
            description: |
              Maximum number of nodes of any type in a cluster.
              Mandatory for successful addition of autoscaling settings in cluster.
          - name: 'coolDownPeriod'
            type: String
            description: |
              The minimum duration between consecutive autoscale operations.
              It starts once addition or removal of nodes is fully completed.
              Minimum cool down period is 30m.
              Cool down period must be in whole minutes (for example, 30m, 31m, 50m).
              Mandatory for successful addition of autoscaling settings in cluster.
  - name: 'hcx'
    type: NestedObject
    description: |
      Details about a HCX Cloud Manager appliance.
    output: true
    properties:
      - name: 'internalIp'
        type: String
        description: |
          Internal IP address of the appliance.
      - name: 'version'
        type: String
        description: |
          Version of the appliance.
      - name: 'state'
        type: Enum
        description: |
          State of the appliance.
        enum_values:
          - 'ACTIVE'
          - 'CREATING'
      - name: 'fqdn'
        type: String
        description: |
          Fully qualified domain name of the appliance.
  - name: 'nsx'
    type: NestedObject
    description: |
      Details about a NSX Manager appliance.
    output: true
    properties:
      - name: 'internalIp'
        type: String
        description: |
          Internal IP address of the appliance.
      - name: 'version'
        type: String
        description: |
          Version of the appliance.
      - name: 'state'
        type: Enum
        description: |
          State of the appliance.
        enum_values:
          - 'ACTIVE'
          - 'CREATING'
      - name: 'fqdn'
        type: String
        description: |
          Fully qualified domain name of the appliance.
  - name: 'vcenter'
    type: NestedObject
    description: |
      Details about a vCenter Server management appliance.
    output: true
    properties:
      - name: 'internalIp'
        type: String
        description: |
          Internal IP address of the appliance.
      - name: 'version'
        type: String
        description: |
          Version of the appliance.
      - name: 'state'
        type: Enum
        description: |
          State of the appliance.
        enum_values:
          - 'ACTIVE'
          - 'CREATING'
      - name: 'fqdn'
        type: String
        description: |-
          Fully qualified domain name of the appliance.
  - name: 'type'
    type: Enum
    description: |
      Initial type of the private cloud.
    immutable: true
    ignore_read: true
    diff_suppress_func: 'vmwareenginePrivateCloudStandardTypeDiffSuppressFunc'
    enum_values:
      - 'STANDARD'
      - 'TIME_LIMITED'
      - 'STRETCHED'
