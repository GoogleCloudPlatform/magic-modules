<<<<<<< HEAD
# Copyright 2023 Google Inc.
# Licensed under the Apache License, Version 2.0 (the License);
=======
# Copyright 2024 Google Inc.
# Licensed under the Apache License, Version 2.0 (the "License");
>>>>>>> 2fdda66097e2c96688e59f7c58c1f717c7785856
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

<<<<<<< HEAD
--- !ruby/object:Api::Resource
name: 'Subnet'
base_url: '{{parent}}/subnets'
create_url: '{{parent}}/subnets/{{name}}?update_mask=ip_cidr_range'
self_link: '{{parent}}/subnets/{{name}}'
update_mask: true
create_verb: :PATCH
update_verb: :PATCH
skip_delete: true
references: !ruby/object:Api::Resource::ReferenceLinks
  api: 'https://cloud.google.com/vmware-engine/docs/reference/rest/v1/projects.locations.privateClouds.subnets'
=======
---
name: 'Subnet'
>>>>>>> 2fdda66097e2c96688e59f7c58c1f717c7785856
description: |
  Subnet in a private cloud. A Private Cloud contains two types of subnets: `management` subnets (such as vMotion) that
  are read-only,and `userDefined`, which can also be updated. This resource should be used to read and update `userDefined`
  subnets. To read `management` subnets, please utilize the subnet data source.
<<<<<<< HEAD
async: !ruby/object:Api::OpAsync
  actions: ['create', 'update']
  operation: !ruby/object:Api::OpAsync::Operation
    path: "name"
    base_url: "{{op_id}}"
    wait_ms: 1000
  result: !ruby/object:Api::OpAsync::Result
    path: "response"
  status: !ruby/object:Api::OpAsync::Status
    path: "done"
    complete: true
    allowed:
      - true
      - false
  error: !ruby/object:Api::OpAsync::Error
    path: "error"
    message: "message"
  include_project: true

import_format: ["{{%parent}}/subnets/{{name}}"]
id_format: "{{parent}}/subnets/{{name}}"
autogen_async: true

examples:
  - !ruby/object:Provider::Terraform::Examples
    name: "vmware_engine_subnet_user_defined"
    skip_test: true   # update tests will take care of read and update. Parent PC creation is expensive and node reservation is required.
    primary_resource_id: "vmw-engine-subnet"
    vars:
      private_cloud_id: "sample-pc"
      management_cluster_id: "sample-mgmt-cluster"
      network_id: "pc-nw"
      subnet_id: "service-1"
    test_env_vars:
      region: :REGION

parameters:
  - !ruby/object:Api::Type::String
    name: "parent"
    immutable: true
    required: true
    url_param_only: true
=======
references:
  guides:
  api: 'https://cloud.google.com/vmware-engine/docs/reference/rest/v1/projects.locations.privateClouds.subnets'
docs:
id_format: '{{parent}}/subnets/{{name}}'
base_url: '{{parent}}/subnets'
self_link: '{{parent}}/subnets/{{name}}'
create_url: '{{parent}}/subnets/{{name}}?update_mask=ip_cidr_range'
create_verb: 'PATCH'
update_verb: 'PATCH'
update_mask: true
exclude_delete: true
import_format:
  - '{{%parent}}/subnets/{{name}}'
timeouts:
  insert_minutes: 20
  update_minutes: 20
  delete_minutes: 20
autogen_async: true
async:
  actions: ['create', 'update']
  type: 'OpAsync'
  operation:
    base_url: '{{op_id}}'
    path: 'name'
    wait_ms: 1000
  result:
    path: 'response'
    resource_inside_response: false
  error:
    path: 'error'
    message: 'message'
  include_project: true
custom_code:
examples:
  - name: 'vmware_engine_subnet_user_defined'
    primary_resource_id: 'vmw-engine-subnet'
    vars:
      private_cloud_id: 'sample-pc'
      management_cluster_id: 'sample-mgmt-cluster'
      network_id: 'pc-nw'
      subnet_id: 'service-1'
    test_env_vars:
      region: 'REGION'
 # update tests will take care of read and update. Parent PC creation is expensive and node reservation is required.
    exclude_test: true
parameters:
  - name: 'parent'
    type: String
>>>>>>> 2fdda66097e2c96688e59f7c58c1f717c7785856
    description: |
      The resource name of the private cloud to create a new subnet in.
      Resource names are schemeless URIs that follow the conventions in https://cloud.google.com/apis/design/resource_names.
      For example: projects/my-project/locations/us-west1-a/privateClouds/my-cloud

<<<<<<< HEAD
  - !ruby/object:Api::Type::String
    name: "name"
    required: true
    immutable: true
    url_param_only: true
=======
    url_param_only: true
    required: true
    immutable: true
  - name: 'name'
    type: String
>>>>>>> 2fdda66097e2c96688e59f7c58c1f717c7785856
    description: |
      The ID of the subnet. For userDefined subnets, this name should be in the format of "service-n",
      where n ranges from 1 to 5.

<<<<<<< HEAD
properties:
  - !ruby/object:Api::Type::Time
    name: 'createTime'
    output: true
=======
    url_param_only: true
    required: true
    immutable: true
properties:
  - name: 'createTime'
    type: Time
>>>>>>> 2fdda66097e2c96688e59f7c58c1f717c7785856
    description: |
      Creation time of this resource.
      A timestamp in RFC3339 UTC "Zulu" format, with nanosecond resolution and
      up to nine fractional digits. Examples: "2014-10-02T15:01:23Z" and "2014-10-02T15:01:23.045123456Z".

<<<<<<< HEAD
  - !ruby/object:Api::Type::Time
    name: 'updateTime'
    output: true
=======
    output: true
  - name: 'updateTime'
    type: Time
>>>>>>> 2fdda66097e2c96688e59f7c58c1f717c7785856
    description: |
      Last updated time of this resource.
      A timestamp in RFC3339 UTC "Zulu" format, with nanosecond resolution and up to nine
      fractional digits. Examples: "2014-10-02T15:01:23Z" and "2014-10-02T15:01:23.045123456Z".

<<<<<<< HEAD
  - !ruby/object:Api::Type::String
    name: 'ipCidrRange'
    required: true
    send_empty_value: true
    description: |
      The IP address range of the subnet in CIDR format.

  - !ruby/object:Api::Type::String
    name: 'gatewayIp'
    output: true
    description: |
      The IP address of the gateway of this subnet. Must fall within the IP prefix defined above.

  - !ruby/object:Api::Type::String
    name: 'gatewayId'
    output: true
    description: |
      The canonical identifier of the logical router that this subnet is attached to.

  - !ruby/object:Api::Type::Array
    name: 'dhcpAddressRanges'
    output: true
    description: |
      DHCP address ranges.
    item_type: !ruby/object:Api::Type::NestedObject
      properties:
        - !ruby/object:Api::Type::String
          name: 'firstAddress'
          output: true
          description: |
            The first IP address of the range.
        - !ruby/object:Api::Type::String
          name: 'lastAddress'
          output: true
          description: |
            The last IP address of the range.

  - !ruby/object:Api::Type::String
    name: 'type'
    output: true
    description: |
      The type of the subnet.

  - !ruby/object:Api::Type::Boolean
    name: standardConfig
    output: true
=======
    output: true
  - name: 'ipCidrRange'
    type: String
    description: |
      The IP address range of the subnet in CIDR format.

    required: true
    send_empty_value: true
  - name: 'gatewayIp'
    type: String
    description: |
      The IP address of the gateway of this subnet. Must fall within the IP prefix defined above.

    output: true
  - name: 'gatewayId'
    type: String
    description: |
      The canonical identifier of the logical router that this subnet is attached to.

    output: true
  - name: 'dhcpAddressRanges'
    type: Array
    description: |
      DHCP address ranges.
    output: true
    item_type:
      type: NestedObject
      properties:
        - name: 'firstAddress'
          type: String
          description: |
            The first IP address of the range.
          output: true
        - name: 'lastAddress'
          type: String
          description: |
            The last IP address of the range.

          output: true
  - name: 'type'
    type: String
    description: |
      The type of the subnet.

    output: true
  - name: 'standardConfig'
    type: Boolean
>>>>>>> 2fdda66097e2c96688e59f7c58c1f717c7785856
    description: |
      Whether the NSX-T configuration in the backend follows the standard configuration supported by Google Cloud.
      If false, the subnet cannot be modified through Google Cloud, only through NSX-T directly.

<<<<<<< HEAD
  - !ruby/object:Api::Type::String
    name: 'state'
    description: |
      State of the subnet.
    output: true

  - !ruby/object:Api::Type::String
    name: 'uid'
    output: true
    description: |
      System-generated unique identifier for the resource.

  - !ruby/object:Api::Type::Integer
    name: 'vlanId'
    output: true
    description: |
      VLAN ID of the VLAN on which the subnet is configured.
=======
    output: true
  - name: 'state'
    type: String
    description: |
      State of the subnet.
    output: true
  - name: 'uid'
    type: String
    description: |
      System-generated unique identifier for the resource.

    output: true
  - name: 'vlanId'
    type: Integer
    description: |
      VLAN ID of the VLAN on which the subnet is configured.
    output: true
>>>>>>> 2fdda66097e2c96688e59f7c58c1f717c7785856
