# Copyright 2023 Google Inc.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

--- !ruby/object:Api::Resource
name: 'Repository'
base_url: projects/{{project}}/repos
self_link: 'projects/{{project}}/repos/{{name}}'
update_verb: :PATCH
update_mask: true
references: !ruby/object:Api::Resource::ReferenceLinks
  guides:
    'Official Documentation': 'https://cloud.google.com/source-repositories/'
  api: 'https://cloud.google.com/source-repositories/docs/reference/rest/v1/projects.repos'
collection_url_key: 'repos'
description: |
  A repository (or repo) is a Git repository storing versioned source content.
import_format: ['projects/{{project}}/repos/{{%name}}', '{{%name}}']
exclude_tgc: true
iam_policy: !ruby/object:Api::Resource::IamPolicy
  method_name_separator: ':'
  parent_resource_attribute: 'repository'
  custom_diff_suppress: 'templates/terraform/iam/sourcerepo_diff_suppress.go.erb'
examples:
  - !ruby/object:Provider::Terraform::Examples
    name: 'sourcerepo_repository_basic'
    primary_resource_id: 'my-repo'
    primary_resource_name: "fmt.Sprintf(\"my/repository%s\",
      context[\"random_suffix\"\
      ])"
    vars:
      repository_name: 'my/repository'
  - !ruby/object:Provider::Terraform::Examples
    name: 'sourcerepo_repository_full'
    primary_resource_id: 'my-repo'
    vars:
      repository_name: 'my-repository'
      account_id: 'my-account'
      topic_name: 'my-topic'
custom_code: !ruby/object:Provider::Terraform::CustomCode
  constants: templates/terraform/constants/source_repo_repository.go.erb
  update_encoder: templates/terraform/update_encoder/source_repo_repository.erb
  post_create: templates/terraform/post_create/source_repo_repository_update.go.erb
properties:
  - !ruby/object:Api::Type::String
    name: 'name'
    required: true
    immutable: true
    description: |
      Resource name of the repository, of the form `{{repo}}`.
      The repo name may contain slashes. eg, `name/with/slash`
    custom_expand: templates/terraform/custom_expand/shortname_to_url.go.erb
    custom_flatten: templates/terraform/custom_flatten/repository_short_name_from_name.go.erb
  - !ruby/object:Api::Type::String
    name: 'url'
    output: true
    description: |
      URL to clone the repository from Google Cloud Source Repositories.
  - !ruby/object:Api::Type::Integer
    name: 'size'
    output: true
    description: |
      The disk usage of the repo, in bytes.
  - !ruby/object:Api::Type::Map
    name: 'pubsubConfigs'
    description: |
      How this repository publishes a change in the repository through Cloud Pub/Sub.
      Keyed by the topic names.
    key_name: topic
    key_description: |
      A Cloud Pub/Sub topic in this repo's project. Values are of the form
      `projects/<project>/topics/<topic>` or `<topic>` (where the topic will
      be inferred).
    value_type: !ruby/object:Api::Type::NestedObject
      name: pubsubConfig
      properties:
        - !ruby/object:Api::Type::Enum
          name: 'messageFormat'
          description: |
            The format of the Cloud Pub/Sub messages.
            - PROTOBUF: The message payload is a serialized protocol buffer of SourceRepoEvent.
            - JSON: The message payload is a JSON string of SourceRepoEvent.
          values:
            - :PROTOBUF
            - :JSON
          required: true
        - !ruby/object:Api::Type::String
          name: 'serviceAccountEmail'
          description: |
            Email address of the service account used for publishing Cloud Pub/Sub messages.
            This service account needs to be in the same project as the PubsubConfig. When added,
            the caller needs to have iam.serviceAccounts.actAs permission on this service account.
            If unspecified, it defaults to the compute engine default service account.

          default_from_api: true
    key_expander: 'expandSourceRepoRepositoryPubsubConfigsTopic'
    set_hash_func: 'resourceSourceRepoRepositoryPubSubConfigsHash'
