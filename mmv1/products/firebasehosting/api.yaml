# Copyright 2018 Google Inc.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

--- !ruby/object:Api::Product
name: FirebaseHosting
display_name: Firebase Hosting
versions:
  - !ruby/object:Api::Product::Version
    name: beta
    base_url: https://firebasehosting.googleapis.com/v1beta1/
scopes:
  - https://www.googleapis.com/auth/cloud-platform
objects:
  - !ruby/object:Api::Resource
    name: 'Site'
    min_version: beta
    base_url: projects/{{project}}/sites
    self_link: projects/{{project}}/sites/{{site_id}}
    create_url: projects/{{project}}/sites?siteId={{site_id}}
    update_verb: :PATCH
    update_mask: true
    description: 'A `Site` represents a Firebase Hosting site.'
    references: !ruby/object:Api::Resource::ReferenceLinks
      guides:
        'Official Documentation':
          'https://firebase.google.com/docs/hosting'
      api: 'https://firebase.google.com/docs/reference/hosting/rest/v1beta1/projects.sites'
    parameters:
      - !ruby/object:Api::Type::String
        name: 'site_id'
        description: |
          Required. Immutable. A globally unique identifier for the Hosting site. This identifier is
          used to construct the Firebase-provisioned subdomains for the site, so it must also be a valid
          domain name label.
        input: true
        url_param_only: true
    properties:
      - !ruby/object:Api::Type::String
        name: name
        description: |
          Output only. The fully-qualified resource name of the Hosting site, in the
          format: projects/PROJECT_IDENTIFIER/sites/SITE_ID PROJECT_IDENTIFIER: the
          Firebase project's
          [`ProjectNumber`](https://firebase.google.com/docs/reference/firebase-management/rest/v1beta1/projects#FirebaseProject.FIELDS.project_number) ***(recommended)*** or its
          [`ProjectId`](https://firebase.google.com/docs/reference/firebase-management/rest/v1beta1/projects#FirebaseProject.FIELDS.project_id).
          Learn more about using project identifiers in Google's
          [AIP 2510 standard](https://google.aip.dev/cloud/2510).
        output: true
      - !ruby/object:Api::Type::String
        name: appId
        description: |
          Optional. The [ID of a Web App](https://firebase.google.com/docs/reference/firebase-management/rest/v1beta1/projects.webApps#WebApp.FIELDS.app_id)
          associated with the Hosting site.
      - !ruby/object:Api::Type::String
        name: defaultUrl
        output: true
        description: The default URL for the site in the form of https://{name}.web.app
  - !ruby/object:Api::Resource
    name: 'Channel'
    min_version: beta
    base_url: sites/{{site_id}}/channels
    self_link: sites/{{site_id}}/channels/{{channel_id}}
    create_url: sites/{{site_id}}/channels?channelId={{channel_id}}
    update_verb: :PATCH
    update_mask: true
    description: |
      A `Channel` represents a stream of releases for a site. All sites have a default 
      `live` channel that serves content to the Firebase-provided subdomains and any
      connected custom domains.
    references: !ruby/object:Api::Resource::ReferenceLinks
      guides:
        'Official Documentation':
          'https://firebase.google.com/docs/hosting'
      api: 'https://firebase.google.com/docs/reference/hosting/rest/v1beta1/sites.channels'
    parameters:
      - !ruby/object:Api::Type::String
        name: site_id
        description: |
          Required. The ID of the site in which to create this channel.
        input: true
        required: true
        url_param_only: true
      - !ruby/object:Api::Type::String
        name: channel_id
        description: |
          Required. Immutable. A unique ID within the site that identifies the channel.
        input: true
        required: true
        url_param_only: true
    properties:
      - !ruby/object:Api::Type::String
        name: name
        pattern: sites/{{site_id}}/channels/{{channel_id}}
        description: |
          The fully-qualified resource name for the channel, in the format:
          sites/SITE_ID/channels/CHANNEL_ID
        output: true
      - !ruby/object:Api::Type::Integer
        name: retainedReleaseCount
        description: |
          The number of previous releases to retain on the channel for rollback or other
          purposes. Must be a number between 1-100. Defaults to 10 for new channels.
      - !ruby/object:Api::Type::KeyValuePairs
        name: labels
        description: Text labels used for extra metadata and/or filtering
      - !ruby/object:Api::Type::Time
        name: expireTime
        conflicts:
          - ttl
        description: |
          The time at which the channel will be automatically deleted. If null, the channel
          will not be automatically deleted. This field is present in the output whether it's
          set directly or via the `ttl` field.
      - !ruby/object:Api::Type::String
        name: ttl
        conflicts:
          - expireTime
        input: true
        description: |
          Input only. A time-to-live for this channel. Sets `expire_time` to the provided
          duration past the time of the request. A duration in seconds with up to nine fractional
          digits, terminated by 's'. Example: "86400s" (one day).
  - !ruby/object:Api::Resource
    name: "Release"
    min_version: beta
    base_url: "sites/{{site_id}}/channels/{{channel_id}}/releases"
    self_link: "sites/{{site_id}}/channels/{{channel_id}}/releases/{{release_id}}"
    create_url: "sites/{{site_id}}/channels/{{channel_id}}/releases?versionName={{version_name}}"
    input: true # not updatable
    description: |
      A Release is a particular collection of configurations that is set to be public at a particular time.
    references: !ruby/object:Api::Resource::ReferenceLinks
      guides:
        "Official Documentation": "https://firebase.google.com/docs/hosting"
      api: "https://firebase.google.com/docs/reference/hosting/rest/v1beta1/sites.releases"
    parameters:
      - !ruby/object:Api::Type::String
        name: site_id
        description: |
          Required. The ID of the site to which the release belongs.
        input: true
        required: true
        url_param_only: true
      - !ruby/object:Api::Type::String
        name: channel_id
        description: |
          The ID of the channel to which the release belongs. If not provided, the release will
          belong to the default "live" channel
        input: true
        url_param_only: true
        default_value: 'live'
      - !ruby/object:Api::Type::ResourceRef
        name: version_name
        resource: 'Version'
        imports: 'name'
        description: |
          The unique identifier for a version, in the format: sites/SITE_ID/versions/VERSION_ID.
          The content of the version specified will be actively displayed on the appropriate URL.
          The Version must belong to the same site as in the `site_id`.
          This parameter must be empty if the `type` of the release is `SITE_DISABLE`.
        input: true
        url_param_only: true
    properties:
      - !ruby/object:Api::Type::String
        name: name
        description: |
          The unique identifier for the release, in either of the following formats:
          sites/SITE_ID/releases/RELEASE_ID
          sites/SITE_ID/channels/CHANNEL_ID/releases/RELEASE_ID
        output: true
      - !ruby/object:Api::Type::String
        name: release_id
        description: The unique identifier for the Release.
        output: true
      - !ruby/object:Api::Type::Enum
        name: type
        description: |
          The type of the release; indicates what happened to the content of the site. There is no need to specify
          `DEPLOY` or `ROLLBACK` type if a `version_name` is provided.
          DEPLOY: A version was uploaded to Firebase Hosting and released. Output only.
          ROLLBACK: The release points back to a previously deployed version. Output only.
          SITE_DISABLE: The release prevents the site from serving content. Firebase Hosting acts as if the site never existed
        values:
          - :DEPLOY
          - :ROLLBACK
          - :SITE_DISABLE
      - !ruby/object:Api::Type::String
        name: message
        description: |
          The deploy description when the release was created. The value can be up to 512 characters.
  - !ruby/object:Api::Resource
    name: "Version"
    min_version: beta
    base_url: sites/{{site_id}}/versions
    self_link: sites/{{site_id}}/versions/{{version_id}}
    create_url: sites/{{site_id}}/versions
    input: true # not updatable
    description: |
      A `Version` is a configuration which determine how a site is displayed. Static files are not supported at the moment.
    references: !ruby/object:Api::Resource::ReferenceLinks
      guides:
        "Official Documentation": "https://firebase.google.com/docs/hosting"
      api: "https://firebase.google.com/docs/reference/hosting/rest/v1beta1/sites.versions"
    parameters:
      - !ruby/object:Api::Type::String
        name: site_id
        description: |
          Required. The ID of the site in which to create this Version.
        input: true
        required: true
        url_param_only: true
    properties:
      - !ruby/object:Api::Type::String
        name: name
        description: |
          The fully-qualified resource name for the version, in the format:
          sites/SITE_ID/versions/VERSION_ID
        output: true
      - !ruby/object:Api::Type::String
        name: version_id
        description: The ID for the version as in sites/SITE_ID/versions/VERSION_ID
        output: true
      - !ruby/object:Api::Type::NestedObject
        name: config
        description: The configuration for the behavior of the site. This configuration exists in the `firebase.json` file.
        properties:
          - !ruby/object:Api::Type::Array
            name: rewrites
            description: |
              An array of objects (called rewrite rules), where each rule specifies a URL pattern that, if matched to the
              request URL path, triggers Hosting to respond as if the service were given the specified destination URL.
            item_type: !ruby/object:Api::Type::NestedObject
              description: |
                A Rewrite specifies a URL pattern that, if matched to the request URL path, triggers Hosting to respond as
                if the service were given the specified destination URL.
              properties:
                - !ruby/object:Api::Type::String
                  name: glob
                  description: The user-supplied glob to match against the request URL path.
                  exactly_one_of:
                    - glob
                    - regex
                - !ruby/object:Api::Type::String
                  name: regex
                  description: The user-supplied RE2 regular expression to match against the request URL path.
                  exactly_one_of:
                    - glob
                    - regex
                - !ruby/object:Api::Type::String
                  name: function
                  description: The function to proxy requests to. Must match the exported function name exactly.
                  exactly_one_of:
                    - function
                    - run
                - !ruby/object:Api::Type::NestedObject
                  name: run
                  description: The request will be forwarded to Cloud Run.
                  exactly_one_of:
                    - function
                    - run
                  properties:
                    - !ruby/object:Api::Type::String
                      name: serviceId
                      description: User-defined ID of the Cloud Run service.
                      required: true
                    - !ruby/object:Api::Type::String
                      name: region
                      description: Optional. User-provided region where the Cloud Run service is hosted. Defaults to `us-central1` if not supplied.
          - !ruby/object:Api::Type::Array
            name: redirects
            description: |
              An array of objects (called redirect rules), where each rule specifies a URL pattern that, if matched to the request URL path,
              triggers Hosting to respond with a redirect to the specified destination path.
            item_type: !ruby/object:Api::Type::NestedObject
              description: |
                A Redirect specifies a URL pattern that, if matched to the request URL path, triggers Hosting to
                respond with a redirect to the specified destination path.
              properties:
                - !ruby/object:Api::Type::String
                  name: glob
                  description: The user-supplied glob to match against the request URL path.
                  exactly_one_of:
                    - glob
                    - regex
                - !ruby/object:Api::Type::String
                  name: regex
                  description: The user-supplied RE2 regular expression to match against the request URL path.
                  exactly_one_of:
                    - glob
                    - regex
                - !ruby/object:Api::Type::Integer
                  name: statusCode
                  required: true
                  description: The status HTTP code to return in the response. It must be a valid 3xx status code.
                - !ruby/object:Api::Type::String
                  name: location
                  required: true
                  description: |
                      The value to put in the HTTP location header of the response.
                      The location can contain capture group values from the pattern using a : prefix to identify
                      the segment and an optional * to capture the rest of the URL. For example:

                      ```hcl
                      redirects {
                        glob = "/:capture*"
                        status_code = 302
                        location = "https://example.com/foo/:capture"
                      }
                      ```
