# Copyright 2023 Google Inc.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

--- !ruby/object:Api::Resource
name: 'Version'
min_version: beta
base_url: sites/{{site_id}}/versions
self_link: sites/{{site_id}}/versions/{{version_id}}
create_url: sites/{{site_id}}/versions
immutable: true  # not updatable
description: |
  A `Version` is a configuration which determine how a site is displayed. Static files are not supported at the moment.
references: !ruby/object:Api::Resource::ReferenceLinks
  guides:
    'Official Documentation': 'https://firebase.google.com/docs/hosting'
  api: 'https://firebase.google.com/docs/reference/hosting/rest/v1beta1/sites.versions'
import_format:
  ['sites/{{site_id}}/versions/{{version_id}}', '{{site_id}}/{{version_id}}']
skip_delete: true
skip_sweeper: true
examples:
  - !ruby/object:Provider::Terraform::Examples
    name: 'firebasehosting_version_redirect'
    min_version: 'beta'
    primary_resource_id: 'default'
    vars:
      site_id: site-id
    test_env_vars:
      project_id: :PROJECT_NAME
  - !ruby/object:Provider::Terraform::Examples
    name: 'firebasehosting_version_path'
    min_version: 'beta'
    primary_resource_id: 'default'
    vars:
      site_id: site-id
    test_env_vars:
      project_id: :PROJECT_NAME
  - !ruby/object:Provider::Terraform::Examples
    name: 'firebasehosting_version_cloud_run'
    min_version: 'beta'
    primary_resource_id: 'default'
    vars:
      site_id: site-id
      cloud_run_service_id: cloud-run-service-via-hosting
    test_env_vars:
      project_id: :PROJECT_NAME
  - !ruby/object:Provider::Terraform::Examples
    name: 'firebasehosting_version_cloud_functions'
    min_version: 'beta'
    primary_resource_id: 'default'
    vars:
      site_id: site-id
      cloud_function_id: cloud-function-via-hosting
      zip_path: 'function-source.zip'
    test_env_vars:
      project_id: :PROJECT_NAME
    test_vars_overrides:
      zip_path: '"./test-fixtures/function-source.zip"'
custom_code: !ruby/object:Provider::Terraform::CustomCode
  decoder: templates/terraform/decoders/firebasehosting_version.go.erb
  post_create: templates/terraform/post_create/firebasehosting_version_immediate_finalize.erb
parameters:
  - !ruby/object:Api::Type::String
    name: site_id
    description: |
      Required. The ID of the site in which to create this Version.
    immutable: true
    required: true
    url_param_only: true
properties:
  - !ruby/object:Api::Type::String
    name: name
    description: |
      The fully-qualified resource name for the version, in the format:
      sites/SITE_ID/versions/VERSION_ID
    output: true
  - !ruby/object:Api::Type::String
    name: version_id
    description: The ID for the version as in sites/SITE_ID/versions/VERSION_ID
    output: true
    ignore_read: true
  - !ruby/object:Api::Type::NestedObject
    name: config
    description:
      The configuration for the behavior of the site. This configuration exists
      in the `firebase.json` file.
    properties:
      - !ruby/object:Api::Type::Array
        name: rewrites
        description: |
          An array of objects (called rewrite rules), where each rule specifies a URL pattern that, if matched to the
          request URL path, triggers Hosting to respond as if the service were given the specified destination URL.
        item_type: !ruby/object:Api::Type::NestedObject
          description: |
            A Rewrite specifies a URL pattern that, if matched to the request URL path, triggers Hosting to respond as
            if the service were given the specified destination URL.
          properties:
            - !ruby/object:Api::Type::String
              name: glob
              description:
                The user-supplied glob to match against the request URL path.
              exactly_one_of:
                - glob
                - regex
            - !ruby/object:Api::Type::String
              name: regex
              description:
                The user-supplied RE2 regular expression to match against the
                request URL path.
              exactly_one_of:
                - glob
                - regex
            - !ruby/object:Api::Type::String
              name: path
              description:
                The URL path to rewrite the request to.
              exactly_one_of:
                - path
                - function
                - run
            - !ruby/object:Api::Type::String
              name: function
              description:
                The function to proxy requests to. Must match the exported
                function name exactly.
              exactly_one_of:
                - path
                - function
                - run
            - !ruby/object:Api::Type::NestedObject
              name: run
              description: The request will be forwarded to Cloud Run.
              exactly_one_of:
                - path
                - function
                - run
              properties:
                - !ruby/object:Api::Type::String
                  name: serviceId
                  description: User-defined ID of the Cloud Run service.
                  required: true
                - !ruby/object:Api::Type::String
                  name: region
                  description:
                    Optional. User-provided region where the Cloud Run service
                    is hosted. Defaults to `us-central1` if not supplied.
      - !ruby/object:Api::Type::Array
        name: redirects
        description: |
          An array of objects (called redirect rules), where each rule specifies a URL pattern that, if matched to the request URL path,
          triggers Hosting to respond with a redirect to the specified destination path.
        item_type: !ruby/object:Api::Type::NestedObject
          description: |
            A Redirect specifies a URL pattern that, if matched to the request URL path, triggers Hosting to
            respond with a redirect to the specified destination path.
          properties:
            - !ruby/object:Api::Type::String
              name: glob
              description:
                The user-supplied glob to match against the request URL path.
              exactly_one_of:
                - glob
                - regex
            - !ruby/object:Api::Type::String
              name: regex
              description:
                The user-supplied RE2 regular expression to match against the
                request URL path.
              exactly_one_of:
                - glob
                - regex
            - !ruby/object:Api::Type::Integer
              name: statusCode
              required: true
              description:
                The status HTTP code to return in the response. It must be a
                valid 3xx status code.
            - !ruby/object:Api::Type::String
              name: location
              required: true
              description: |
                The value to put in the HTTP location header of the response.
                The location can contain capture group values from the pattern using a : prefix to identify
                the segment and an optional * to capture the rest of the URL. For example:

                ```hcl
                redirects {
                  glob = "/:capture*"
                  status_code = 302
                  location = "https://example.com/foo/:capture"
                }
                ```
