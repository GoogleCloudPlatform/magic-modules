# Copyright 2023 Google Inc.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

--- !ruby/object:Api::Resource
name: 'DeviceRegistry'
base_url: 'projects/{{project}}/locations/{{region}}/registries'
self_link: 'projects/{{project}}/locations/{{region}}/registries/{{name}}'
update_verb: :PATCH
update_mask: true
description: |
  A Google Cloud IoT Core device registry.
references: !ruby/object:Api::Resource::ReferenceLinks
  guides:
    'Official Documentation': 'https://cloud.google.com/iot/docs/'
  api: 'https://cloud.google.com/iot/docs/reference/cloudiot/rest/'
iam_policy: !ruby/object:Api::Resource::IamPolicy
  method_name_separator: ':'
  fetch_iam_policy_verb: :POST
  parent_resource_attribute: 'name'
  import_format:
    [
      'projects/{{project}}/locations/{{location}}/registries/{{name}}',
      '{{name}}',
    ]
legacy_name: 'google_cloudiot_registry'
import_format: ['{{project}}/locations/{{region}}/registries/{{name}}']
id_format: 'projects/{{project}}/locations/{{region}}/registries/{{name}}'
custom_code: !ruby/object:Provider::Terraform::CustomCode
  constants: templates/terraform/constants/cloudiot.go.erb
  decoder: templates/terraform/decoders/cloudiot_device_registry.go.erb
  encoder: templates/terraform/encoders/cloudiot_device_registry.go.erb
  extra_schema_entry: templates/terraform/extra_schema_entry/cloudiot_device_registry.go.erb
  pre_update: templates/terraform/pre_update/cloudiot_device_registry.go.erb
deprecation_message: >-
  `google_cloudiot_registry` is deprecated in the API. This resource will be removed in the next major release of the provider.
docs: !ruby/object:Provider::Terraform::Docs
  optional_properties: |
    * `state_notification_config` - A PubSub topic to publish device state updates.
      The structure is documented below.

    * `mqtt_config` - Activate or deactivate MQTT.
      The structure is documented below.

    * `http_config` - Activate or deactivate HTTP.
      The structure is documented below.

    * `credentials` - List of public key certificates to authenticate devices.
      The structure is documented below.

    The `state_notification_config` block supports:

    * `pubsub_topic_name` - PubSub topic name to publish device state updates.

    The `mqtt_config` block supports:

    * `mqtt_enabled_state` - The field allows `MQTT_ENABLED` or `MQTT_DISABLED`.

    The `http_config` block supports:

    * `http_enabled_state` - The field allows `HTTP_ENABLED` or `HTTP_DISABLED`.

    The `credentials` block supports:

    * `public_key_certificate` - A public key certificate format and data.

    The `public_key_certificate` block supports:

    * `format` - The field allows only `X509_CERTIFICATE_PEM`.

    * `certificate` - The certificate data.
examples:
  - !ruby/object:Provider::Terraform::Examples
    name: 'cloudiot_device_registry_basic'
    primary_resource_id: 'test-registry'
    primary_resource_name: "fmt.Sprintf(\"tf-test-cloudiot-registry%s\",
      context[\"\
      random_suffix\"])"
    vars:
      cloudiot_registry_name: 'cloudiot-registry'
    test_env_vars:
      project: :PROJECT_NAME
      region: :REGION
  - !ruby/object:Provider::Terraform::Examples
    name: 'cloudiot_device_registry_single_event_notification_configs'
    primary_resource_id: 'test-registry'
    vars:
      cloudiot_registry_name: 'cloudiot-registry'
      cloudiot_device_telemetry_topic_name: 'default-telemetry'
    test_env_vars:
      project: :PROJECT_NAME
      region: :REGION
  - !ruby/object:Provider::Terraform::Examples
    name: 'cloudiot_device_registry_full'
    primary_resource_id: 'test-registry'
    vars:
      cloudiot_registry_name: 'cloudiot-registry'
      cloudiot_device_status_topic_name: 'default-devicestatus'
      cloudiot_device_telemetry_topic_name: 'default-telemetry'
      cloudiot_additional_device_telemetry_topic_name: 'additional-telemetry'
      cloudiot_subfolder_matches_additional_device_telemetry_topic: 'test/path'
    test_env_vars:
      project: :PROJECT_NAME
      region: :REGION
parameters:
  - !ruby/object:Api::Type::String
    name: region
    immutable: true
    url_param_only: true
    required: false
    description: |
      The region in which the created registry should reside.
      If it is not provided, the provider region is used.
    ignore_read: true
    default_from_api: true
properties:
  - !ruby/object:Api::Type::String
    name: 'name'
    immutable: true
    required: true
    description: |
      A unique name for the resource, required by device registry.
    api_name: 'id'
    validation: !ruby/object:Provider::Terraform::Validation
      function: 'ValidateCloudIotDeviceRegistryID'
  - !ruby/object:Api::Type::Array
    name: 'eventNotificationConfigs'
    description: |
      List of configurations for event notifications, such as PubSub topics
      to publish device events to.
    max_size: 10
    default_from_api: true
    item_type: !ruby/object:Api::Type::NestedObject
      properties:
        - !ruby/object:Api::Type::String
          name: 'subfolderMatches'
          description: |
            If the subfolder name matches this string exactly, this
            configuration will be used. The string must not include the
            leading '/' character. If empty, all strings are matched. Empty
            value can only be used for the last `event_notification_configs`
            item.
          validation: !ruby/object:Provider::Terraform::Validation
            function: 'validateCloudIotDeviceRegistrySubfolderMatch'
        - !ruby/object:Api::Type::String
          name: 'pubsubTopicName'
          required: true
          description: |
            PubSub topic name to publish device events.
          diff_suppress_func: 'tpgresource.CompareSelfLinkOrResourceName'
  - !ruby/object:Api::Type::Enum
    name: 'logLevel'
    default_value: :NONE
    description: |
      The default logging verbosity for activity from devices in this
      registry. Specifies which events should be written to logs. For
      example, if the LogLevel is ERROR, only events that terminate in
      errors will be logged. LogLevel is inclusive; enabling INFO logging
      will also enable ERROR logging.
    values:
      - :NONE
      - :ERROR
      - :INFO
      - :DEBUG
    diff_suppress_func: 'tpgresource.EmptyOrDefaultStringSuppress("NONE")'
