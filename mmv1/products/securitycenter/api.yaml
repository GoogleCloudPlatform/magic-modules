# Copyright 2019 Google Inc.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

--- !ruby/object:Api::Product
name: SecurityCenter
display_name: Security Command Center (SCC)
versions:
  - !ruby/object:Api::Product::Version
    name: ga
    base_url: https://securitycenter.googleapis.com/v1/
scopes:
  - https://www.googleapis.com/auth/cloud-platform
objects:
  - !ruby/object:Api::Resource
    name: 'Source'
    base_url: organizations/{{organization}}/sources
    self_link: '{{name}}'
    update_verb: :PATCH
    update_mask: true
    description: |
      A Cloud Security Command Center's (Cloud SCC) finding source. A finding
      source is an entity or a mechanism that can produce a finding. A source is
      like a container of findings that come from the same scanner, logger,
      monitor, etc.
    references: !ruby/object:Api::Resource::ReferenceLinks
      guides:
        'Official Documentation':
          'https://cloud.google.com/security-command-center/docs'
      api: 'https://cloud.google.com/security-command-center/docs/reference/rest/v1/organizations.sources'
    iam_policy: !ruby/object:Api::Resource::IamPolicy
      method_name_separator: ':'
      fetch_iam_policy_verb: :POST
      parent_resource_attribute: 'source'
      base_url: organizations/{{organization}}/sources/{{source}}
      import_format: ["organizations/{{organization}}/sources/{{source}}", "{{source}}"]
    parameters:
      - !ruby/object:Api::Type::String
        name: organization
        required: true
        input: true
        url_param_only: true
        description: |
          The organization whose Cloud Security Command Center the Source
          lives in.
    properties:
      - !ruby/object:Api::Type::String
        name: name
        output: true
        description: |
          The resource name of this source, in the format
          `organizations/{{organization}}/sources/{{source}}`.
      - !ruby/object:Api::Type::String
        name: description
        description: |
          The description of the source (max of 1024 characters).
      - !ruby/object:Api::Type::String
        name: displayName
        required: true
        description: |
          The source’s display name. A source’s display name must be unique
          amongst its siblings, for example, two sources with the same parent
          can't share the same display name. The display name must start and end
          with a letter or digit, may contain letters, digits, spaces, hyphens,
          and underscores, and can be no longer than 32 characters.
  - !ruby/object:Api::Resource
    name: 'NotificationConfig'
    base_url: organizations/{{organization}}/notificationConfigs
    self_link: '{{name}}'
    create_url: organizations/{{organization}}/notificationConfigs?configId={{config_id}}
    update_verb: :PATCH
    update_mask: true
    description: |
      A Cloud Security Command Center (Cloud SCC) notification configs. A
      notification config is a Cloud SCC resource that contains the
      configuration to send notifications for create/update events of
      findings, assets and etc.
      ~> **Note:** In order to use Cloud SCC resources, your organization must be enrolled
      in [SCC Standard/Premium](https://cloud.google.com/security-command-center/docs/quickstart-security-command-center).
      Without doing so, you may run into errors during resource creation.
    references: !ruby/object:Api::Resource::ReferenceLinks
      guides:
        'Official Documentation':
          'https://cloud.google.com/security-command-center/docs'
      api: 'https://cloud.google.com/security-command-center/docs/reference/rest/v1/organizations.notificationConfigs'
    parameters:
      - !ruby/object:Api::Type::String
        name: organization
        required: true
        input: true
        url_param_only: true
        description: |
          The organization whose Cloud Security Command Center the Notification
          Config lives in.
      - !ruby/object:Api::Type::String
        name: configId
        required: true
        input: true
        url_param_only: true
        description: |
          This must be unique within the organization.
    properties:
      - !ruby/object:Api::Type::String
        name: name
        output: true
        description: |
          The resource name of this notification config, in the format
          `organizations/{{organization}}/notificationConfigs/{{config_id}}`.
      - !ruby/object:Api::Type::String
        name: description
        description: |
          The description of the notification config (max of 1024 characters).
      - !ruby/object:Api::Type::String
        name: pubsubTopic
        required: true
        description: |
          The Pub/Sub topic to send notifications to. Its format is
          "projects/[project_id]/topics/[topic]".
      - !ruby/object:Api::Type::String
        name: serviceAccount
        output: true
        description: |
          The service account that needs "pubsub.topics.publish" permission to
          publish to the Pub/Sub topic.
      - !ruby/object:Api::Type::NestedObject
        name: streamingConfig
        required: true
        description: |
          The config for triggering streaming-based notifications.
        properties:
          - !ruby/object:Api::Type::String
            name: filter
            required: true
            description: |
              Expression that defines the filter to apply across create/update
              events of assets or findings as specified by the event type. The
              expression is a list of zero or more restrictions combined via
              logical operators AND and OR. Parentheses are supported, and OR
              has higher precedence than AND.

              Restrictions have the form <field> <operator> <value> and may have
              a - character in front of them to indicate negation. The fields
              map to those defined in the corresponding resource.

              The supported operators are:

              * = for all value types.
              * >, <, >=, <= for integer values.
              * :, meaning substring matching, for strings.

              The supported value types are:

              * string literals in quotes.
              * integer literals without quotes.
              * boolean literals true and false without quotes.

              See
              [Filtering notifications](https://cloud.google.com/security-command-center/docs/how-to-api-filter-notifications)
              for information on how to write a filter.
  - !ruby/object:Api::Resource
      name: 'MuteConfig'
      base_url: '{{parent}}/muteConfigs'
      self_link: '{{name}}'
      create_url: '{{parent}}/muteConfigs?muteConfigId={{mute_config_id}}'
      update_verb: :PATCH
      update_mask: true
      description: |
        Mute Findings is a volume management feature in Security Command Center
        that lets you manually or programmatically hide irrelevant findings,
        and create filters to automatically silence existing and future
        findings based on criteria you specify.
      references: !ruby/object:Api::Resource::ReferenceLinks
        api: 'https://cloud.google.com/security-command-center/docs/reference/rest/v1/organizations.muteConfigs'
      parameters:
        - !ruby/object:Api::Type::String
          name: muteConfigId
          required: true
          input: true
          url_param_only: true
          description: |
            Unique identifier provided by the client within the parent scope.
        - !ruby/object:Api::Type::String
          name: parent
          required: true
          input: true
          url_param_only: true
          description: |
            Resource name of the new mute configs's parent. Its format is
            "organizations/[organization_id]", "folders/[folder_id]", or
            "projects/[project_id]".
      properties:
        - !ruby/object:Api::Type::String
          name: 'name'
          output: true
          description: |
            Name of the mute config. Its format is
            organizations/{organization}/muteConfigs/{configId},
            folders/{folder}/muteConfigs/{configId},
            or projects/{project}/muteConfigs/{configId}
        - !ruby/object:Api::Type::String
          name: 'description'
          description: A description of the mute config.
        - !ruby/object:Api::Type::String
          name: 'filter'
          description: |
            An expression that defines the filter to apply across create/update
            events of findings. While creating a filter string, be mindful of
            the scope in which the mute configuration is being created. E.g.,
            If a filter contains project = X but is created under the
            project = Y scope, it might not match any findings.
          required: true
        - !ruby/object:Api::Type::String
          name: 'createTime'
          description: |
            The time at which the mute config was created. This field is set by
            the server and will be ignored if provided on config creation.
          output: true
        - !ruby/object:Api::Type::String
          name: 'updateTime'
          description: |
            Output only. The most recent time at which the mute config was
            updated. This field is set by the server and will be ignored if
            provided on config creation or update.
          output: true
        - !ruby/object:Api::Type::String
          name: 'mostRecentEditor'
          description: |
            Email address of the user who last edited the mute config. This
            field is set by the server and will be ignored if provided on
            config creation or update.
          output: true
