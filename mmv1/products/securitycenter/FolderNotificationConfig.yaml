# Copyright 2024 Google Inc.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

--- !ruby/object:Api::Resource
name: 'FolderNotificationConfig'
base_url: folders/{{folder}}/notificationConfigs
self_link: 'folders/{{folder}}/notificationConfigs/{{config_id}}'
create_url: folders/{{folder}}/notificationConfigs?configId={{config_id}}
update_verb: :PATCH
update_mask: true
import_format:
  - 'folders/{{folder}}/notificationConfigs/{{config_id}}'
custom_code: !ruby/object:Provider::Terraform::CustomCode
  post_import: templates/terraform/post_import/scc_v1_folder_notification_config.go.erb
description: |
  A Cloud Security Command Center (Cloud SCC) notification configs. A
  notification config is a Cloud SCC resource that contains the
  configuration to send notifications for create/update events of
  findings, assets and etc.
  ~> **Note:** In order to use Cloud SCC resources, your organization must be enrolled
  in [SCC Standard/Premium](https://cloud.google.com/security-command-center/docs/quickstart-security-command-center).
  Without doing so, you may run into errors during resource creation.
references: !ruby/object:Api::Resource::ReferenceLinks
  guides:
    'Official Documentation': 'https://cloud.google.com/security-command-center/docs'
  api: 'https://cloud.google.com/security-command-center/docs/reference/rest/v1/folders.notificationConfigs'
examples:
  - !ruby/object:Provider::Terraform::Examples
    name: 'scc_folder_notification_config_basic'
    primary_resource_id: 'custom_notification_config'
    external_providers: ["random", "time"]
    skip_test: true
    vars:
      folder_display_name: "folder-name"
      config_id: 'my-config'
      topic_name: 'my-topic'
    test_env_vars:
      org_id: :ORG_ID

parameters:
  - !ruby/object:Api::Type::String
    name: folder
    required: true
    immutable: true
    url_param_only: true
    description: |
      Numerical ID of the parent folder.
  - !ruby/object:Api::Type::String
    name: configId
    required: true
    immutable: true
    url_param_only: true
    description: |
      This must be unique within the organization.
properties:
  - !ruby/object:Api::Type::String
    name: name
    output: true
    description: |
      The resource name of this notification config, in the format
      `folders/{{folder}}/notificationConfigs/{{config_id}}`.
  - !ruby/object:Api::Type::String
    name: description
    description: |
      The description of the notification config (max of 1024 characters).
    validation: !ruby/object:Provider::Terraform::Validation
      function: 'validation.StringLenBetween(0, 1024)'
  - !ruby/object:Api::Type::String
    name: pubsubTopic
    required: true
    description: |
      The Pub/Sub topic to send notifications to. Its format is
      "projects/[project_id]/topics/[topic]".
  - !ruby/object:Api::Type::String
    name: serviceAccount
    output: true
    description: |
      The service account that needs "pubsub.topics.publish" permission to
      publish to the Pub/Sub topic.
  - !ruby/object:Api::Type::NestedObject
    name: streamingConfig
    required: true
    description: |
      The config for triggering streaming-based notifications.
    update_mask_fields:
      - 'streamingConfig.filter'
    properties:
      - !ruby/object:Api::Type::String
        name: filter
        required: true
        description: |
          Expression that defines the filter to apply across create/update
          events of assets or findings as specified by the event type. The
          expression is a list of zero or more restrictions combined via
          logical operators AND and OR. Parentheses are supported, and OR
          has higher precedence than AND.

          Restrictions have the form <field> <operator> <value> and may have
          a - character in front of them to indicate negation. The fields
          map to those defined in the corresponding resource.

          The supported operators are:

          * = for all value types.
          * >, <, >=, <= for integer values.
          * :, meaning substring matching, for strings.

          The supported value types are:

          * string literals in quotes.
          * integer literals without quotes.
          * boolean literals true and false without quotes.

          See
          [Filtering notifications](https://cloud.google.com/security-command-center/docs/how-to-api-filter-notifications)
          for information on how to write a filter.
