# Copyright 2020 Google Inc.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

--- !ruby/object:Provider::Terraform::Config
overrides: !ruby/object:Overrides::ResourceOverrides
  CertificateAuthority: !ruby/object:Overrides::Terraform::ResourceOverride
    autogen_async: true
    import_format: ["projects/{{project}}/locations/{{location}}/caPools/{{pool}}/certificateAuthorities/{{certificate_authority_id}}"]
    docs: !ruby/object:Provider::Terraform::Docs
      warning: |
        On newer versions of the provider, you must explicitly set `deletion_protection=false`
        (and run `terraform apply` to write the field to state) in order to destroy a CertificateAuthority.
        It is recommended to not set this field (or set it to true) until you're ready to destroy.
    examples:
      - !ruby/object:Provider::Terraform::Examples
        name: "privateca_certificate_authority_basic"
        primary_resource_id: "default"
        vars:
          certificate_authority_id: "my-certificate-authority"
          pool_name: "ca-pool"
          pool_location: "us-central1"
          deletion_protection: "true"
        test_vars_overrides:
          pool_name: 'BootstrapSharedCaPoolInLocation(t, "us-central1")'
          pool_location: "\"us-central1\""
          deletion_protection: "false"
        ignore_read_extra:
          - "deletion_protection"
      - !ruby/object:Provider::Terraform::Examples
        name: "privateca_certificate_authority_subordinate"
        # This example ultimately generates a random id making replaying impossible at
        # https://github.com/hashicorp/terraform-provider-google-beta/blob/22bfbbcf2250054e622743c4a35a872e43ed5aed/google-beta/privateca_ca_utils.go#L147
        skip_vcr: true
        primary_resource_id: "default"
        vars:
          certificate_authority_id: "my-certificate-authority"
          pool_name: "ca-pool"
          pool_location: "us-central1"
          deletion_protection: "true"
        test_vars_overrides:
          pool_name: 'BootstrapSharedCaPoolInLocation(t, "us-central1")'
          pool_location: "\"us-central1\""
          deletion_protection: "false"
        ignore_read_extra:
          - "deletion_protection"
      - !ruby/object:Provider::Terraform::Examples
        # Skip test because it depends on a beta resource, but PrivateCA does
        # not have a beta endpoint
        skip_test: true
        name: "privateca_certificate_authority_byo_key"
        primary_resource_id: "default"
        # Multiple IAM bindings on the same key cause non-determinism
        skip_vcr: true
        vars:
          kms_key_name: "projects/keys-project/locations/us-central1/keyRings/key-ring/cryptoKeys/crypto-key"
          certificate_authority_id: "my-certificate-authority"
          pool_name: "ca-pool"
          pool_location: "us-central1"
          deletion_protection: "true"
        test_vars_overrides:
          kms_key_name: 'BootstrapKMSKeyWithPurposeInLocation(t, "ASYMMETRIC_SIGN", "us-central1").CryptoKey.Name'
          pool_name: 'BootstrapSharedCaPoolInLocation(t, "us-central1")'
          pool_location: "\"us-central1\""
          deletion_protection: "false"
        ignore_read_extra:
          - "deletion_protection"
    virtual_fields:
      - !ruby/object:Api::Type::Boolean
        name: 'deletion_protection'
        default_value: true
        description: |
          Whether or not to allow Terraform to destroy the CertificateAuthority. Unless this field is set to false
          in Terraform state, a `terraform destroy` or `terraform apply` that would delete the instance will fail.
      - !ruby/object:Api::Type::Enum
        name: 'desired_state'
        description: |
          Desired state of the CertificateAuthority. Set this field to `STAGED` to create a `STAGED` root CA.
        values:
          - :ENABLED
          - :DISABLED
          - :STAGED
    properties:
      type: !ruby/object:Overrides::Terraform::PropertyOverride
        description: |
          {{description}}

          ~> **Note:** For `SUBORDINATE` Certificate Authorities, they need to
          be activated before they can issue certificates.
      config.x509Config: !ruby/object:Overrides::Terraform::PropertyOverride
        custom_flatten: 'templates/terraform/custom_flatten/privateca_certificate_509_config.go.erb'
        custom_expand: 'templates/terraform/custom_expand/privateca_certificate_509_config.go.erb'
      subordinateConfig.certificateAuthority: !ruby/object:Overrides::Terraform::PropertyOverride
        diff_suppress_func: 'compareResourceNames'
    custom_code: !ruby/object:Provider::Terraform::CustomCode
      constants: 'templates/terraform/constants/privateca_certificate_authority.go.erb'
      resource_definition: 'templates/terraform/resource_definition/privateca_certificate_authority.go.erb'
      decoder: templates/terraform/decoders/treat_deleted_state_as_gone.go.erb
      pre_create: templates/terraform/pre_create/privateca_certificate_authority.go.erb
      post_create: templates/terraform/post_create/privateca_certificate_authority.go.erb
      pre_update: templates/terraform/pre_update/privateca_certificate_authority.go.erb
      pre_delete: templates/terraform/pre_delete/privateca_authority_disable.go.erb
      post_import: templates/terraform/post_import/privateca_import.go.erb
      test_check_destroy: templates/terraform/custom_check_destroy/privateca_certificate_authority.go.erb
  Certificate: !ruby/object:Overrides::Terraform::ResourceOverride
    autogen_async: true
    # This resource is a child resource
    skip_sweeper: true
    description: |
      {{description}}

      ~> **Note:** The Certificate Authority that is referenced by this resource **must** be 
      `tier = "ENTERPRISE"`
    properties:
      config.x509Config: !ruby/object:Overrides::Terraform::PropertyOverride
        custom_flatten: 'templates/terraform/custom_flatten/privateca_certificate_509_config.go.erb'
        custom_expand: 'templates/terraform/custom_expand/privateca_certificate_509_config.go.erb'
      certificateTemplate: !ruby/object:Overrides::Terraform::PropertyOverride
        diff_suppress_func: 'compareResourceNames'
    examples:
      - !ruby/object:Provider::Terraform::Examples
        name: "privateca_certificate_config"
        primary_resource_id: "default"
        vars:
          certificate_authority_id: "my-certificate-authority"
          certificate_name: "my-certificate"
        test_env_vars:
          project: :PROJECT_NAME
        test_vars_overrides:
          pool: 'BootstrapSharedCaPoolInLocation(t, "us-central1")'
      - !ruby/object:Provider::Terraform::Examples
        name: "privateca_certificate_with_template"
        primary_resource_id: "default"
        vars:
          certificate_name: "my-certificate"
          certificate_authority_id: "my-certificate-authority"
          certificate_template_name: "my-certificate-template"
        test_env_vars:
          project: :PROJECT_NAME
        test_vars_overrides:
          pool: 'BootstrapSharedCaPoolInLocation(t, "us-central1")'
      - !ruby/object:Provider::Terraform::Examples
        name: "privateca_certificate_csr"
        primary_resource_id: "default"
        vars:
          certificate_name: "my-certificate"
          certificate_authority_id: "my-certificate-authority"
        test_env_vars:
          project: :PROJECT_NAME
        test_vars_overrides:
          pool: 'BootstrapSharedCaPoolInLocation(t, "us-central1")'
      - !ruby/object:Provider::Terraform::Examples
        name: "privateca_certificate_no_authority"
        primary_resource_id: "default"
        vars:
          certificate_name: "my-certificate"
          certificate_authority_id: "my-authority"
        test_env_vars:
          project: :PROJECT_NAME
        test_vars_overrides:
          pool: 'BootstrapSharedCaPoolInLocation(t, "us-central1")'
    custom_code: !ruby/object:Provider::Terraform::CustomCode
      pre_create: templates/terraform/pre_create/privateca_certificate.go.erb
      test_check_destroy: templates/terraform/custom_check_destroy/privateca_certificate.go.erb
  CaPool: !ruby/object:Overrides::Terraform::ResourceOverride
    properties:
      issuancePolicy.baselineValues: !ruby/object:Overrides::Terraform::PropertyOverride
        custom_flatten: 'templates/terraform/custom_flatten/privateca_certificate_509_config.go.erb'
        custom_expand: 'templates/terraform/custom_expand/privateca_certificate_509_config.go.erb'
      publishingOptions: !ruby/object:Overrides::Terraform::PropertyOverride
        diff_suppress_func: 'emptyOrUnsetBlockDiffSuppress'
    iam_policy: !ruby/object:Api::Resource::IamPolicy
      allowed_iam_role: 'roles/privateca.certificateManager'
      method_name_separator: ':'
      parent_resource_attribute: ca_pool
      example_config_body: 'templates/terraform/iam/example_config_body/privateca_ca_pool.tf.erb'
      iam_conditions_request_type: :QUERY_PARAM_NESTED
    autogen_async: true
    import_format: ["projects/{{project}}/locations/{{location}}/caPools/{{name}}"]
    examples:
      - !ruby/object:Provider::Terraform::Examples
        name: "privateca_capool_basic"
        primary_resource_name: "fmt.Sprintf(\"tf-test-my-pool%s\", context[\"random_suffix\"])"
        primary_resource_id: "default"
        vars:
          name: "my-pool"
      - !ruby/object:Provider::Terraform::Examples
        name: "privateca_capool_all_fields"
        primary_resource_id: "default"
        vars:
          name: "my-pool"
      - !ruby/object:Provider::Terraform::Examples
        name: "privateca_quickstart"
        primary_resource_id: "default"
        skip_test: true
        skip_docs: true
        vars:
          my_ca_pool: "my-ca-pool"
          my_certificate: "my-certificate"
  CertificateTemplate: !ruby/object:Overrides::Terraform::ResourceOverride
    iam_policy: !ruby/object:Api::Resource::IamPolicy
      allowed_iam_role: 'roles/privateca.templateUser'
      method_name_separator: ':'
      parent_resource_attribute: certificate_template
      example_config_body: 'templates/terraform/iam/example_config_body/privateca_certificate_template.tf.erb'
      iam_conditions_request_type: :QUERY_PARAM_NESTED
    examples:
      - !ruby/object:Provider::Terraform::Examples
        name: "privateca_template_basic"
        primary_resource_name: "fmt.Sprintf(\"tf-test-my-template%s\", context[\"random_suffix\"])"
        primary_resource_id: "default"
        vars:
          name: "my-template"
