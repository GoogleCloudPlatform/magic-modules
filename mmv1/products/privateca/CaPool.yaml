# Copyright 2023 Google Inc.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

--- !ruby/object:Api::Resource
name: 'CaPool'
base_url: 'projects/{{project}}/locations/{{location}}/caPools'
create_url: 'projects/{{project}}/locations/{{location}}/caPools?caPoolId={{name}}'
self_link: 'projects/{{project}}/locations/{{location}}/caPools/{{name}}'
update_verb: :PATCH
update_mask: true
async: !ruby/object:Api::OpAsync
  operation: !ruby/object:Api::OpAsync::Operation
    base_url: '{{op_id}}'
    path: 'name'
    wait_ms: 1000
  result: !ruby/object:Api::OpAsync::Result
    path: 'response'
    resource_inside_response: true
  status: !ruby/object:Api::OpAsync::Status
    path: 'done'
    complete: true
    allowed:
      - true
      - false
  error: !ruby/object:Api::OpAsync::Error
    path: 'error'
    message: 'message'
description: |
  A CaPool represents a group of CertificateAuthorities that form a trust anchor. A CaPool can be used to manage
  issuance policies for one or more CertificateAuthority resources and to rotate CA certificates in and out of the
  trust anchor.
iam_policy: !ruby/object:Api::Resource::IamPolicy
  allowed_iam_role: 'roles/privateca.certificateManager'
  method_name_separator: ':'
  parent_resource_attribute: ca_pool
  example_config_body: 'templates/terraform/iam/example_config_body/privateca_ca_pool.tf.erb'
  iam_conditions_request_type: :QUERY_PARAM_NESTED
autogen_async: true
import_format: ['projects/{{project}}/locations/{{location}}/caPools/{{name}}']
examples:
  - !ruby/object:Provider::Terraform::Examples
    name: 'privateca_capool_basic'
    primary_resource_name: "fmt.Sprintf(\"tf-test-my-pool%s\",
      context[\"random_suffix\"\
      ])"
    primary_resource_id: 'default'
    vars:
      name: 'my-pool'
  - !ruby/object:Provider::Terraform::Examples
    name: 'privateca_capool_all_fields'
    primary_resource_id: 'default'
    vars:
      name: 'my-pool'
  - !ruby/object:Provider::Terraform::Examples
    name: 'privateca_quickstart'
    primary_resource_id: 'default'
    skip_test: true
    skip_docs: true
    vars:
      my_ca_pool: 'my-ca-pool'
      my_certificate: 'my-certificate'
parameters:
  - !ruby/object:Api::Type::String
    name: location
    description: |
      Location of the CaPool. A full list of valid locations can be found by
      running `gcloud privateca locations list`.
    required: true
    immutable: true
    url_param_only: true
properties:
  - !ruby/object:Api::Type::String
    name: 'name'
    description: |
      The name for this CaPool.
    required: true
    immutable: true
    url_param_only: true
  - !ruby/object:Api::Type::Enum
    name: 'tier'
    description: |
      The Tier of this CaPool.
    values:
      - 'ENTERPRISE'
      - 'DEVOPS'
    immutable: true
    required: true
  - !ruby/object:Api::Type::NestedObject
    name: 'issuancePolicy'
    description: |
      The IssuancePolicy to control how Certificates will be issued from this CaPool.
    properties:
      - !ruby/object:Api::Type::Array
        name: 'allowedKeyTypes'
        description: |
          If any AllowedKeyType is specified, then the certificate request's public key must match one of the key types listed here.
          Otherwise, any key may be used.
        item_type: !ruby/object:Api::Type::NestedObject
          properties:
            - !ruby/object:Api::Type::NestedObject
              name: 'rsa'
              description: |
                Describes an RSA key that may be used in a Certificate issued from a CaPool.
              properties:
                - !ruby/object:Api::Type::String
                  name: 'minModulusSize'
                  description: |
                    The minimum allowed RSA modulus size, in bits. If this is not set, or if set to zero, the
                    service-level min RSA modulus size will continue to apply.
                - !ruby/object:Api::Type::String
                  name: 'maxModulusSize'
                  description: |
                    The maximum allowed RSA modulus size, in bits. If this is not set, or if set to zero, the
                    service will not enforce an explicit upper bound on RSA modulus sizes.
            - !ruby/object:Api::Type::NestedObject
              name: 'ellipticCurve'
              description: |
                Represents an allowed Elliptic Curve key type.
              properties:
                - !ruby/object:Api::Type::Enum
                  name: 'signatureAlgorithm'
                  description: |
                    The algorithm used.
                  required: true
                  values:
                    - ECDSA_P256
                    - ECDSA_P384
                    - EDDSA_25519
      - !ruby/object:Api::Type::String
        name: 'maximumLifetime'
        description: |
          The maximum lifetime allowed for issued Certificates. Note that if the issuing CertificateAuthority
          expires before a Certificate's requested maximumLifetime, the effective lifetime will be explicitly truncated to match it.
      - !ruby/object:Api::Type::NestedObject
        name: 'allowedIssuanceModes'
        description: |
          IssuanceModes specifies the allowed ways in which Certificates may be requested from this CaPool.
        properties:
          - !ruby/object:Api::Type::Boolean
            name: 'allowCsrBasedIssuance'
            required: true
            description: |
              When true, allows callers to create Certificates by specifying a CSR.
          - !ruby/object:Api::Type::Boolean
            name: 'allowConfigBasedIssuance'
            required: true
            description: |
              When true, allows callers to create Certificates by specifying a CertificateConfig.
      - !ruby/object:Api::Type::NestedObject
        name: 'identityConstraints'
        description: |
          Describes constraints on identities that may appear in Certificates issued through this CaPool.
          If this is omitted, then this CaPool will not add restrictions on a certificate's identity.
        properties:
          - !ruby/object:Api::Type::Boolean
            name: 'allowSubjectPassthrough'
            required: true
            send_empty_value: true
            description: |
              If this is set, the Subject field may be copied from a certificate request into the signed certificate.
              Otherwise, the requested Subject will be discarded.
          - !ruby/object:Api::Type::Boolean
            name: 'allowSubjectAltNamesPassthrough'
            required: true
            send_empty_value: true
            description: |
              If this is set, the SubjectAltNames extension may be copied from a certificate request into the signed certificate.
              Otherwise, the requested SubjectAltNames will be discarded.
          - !ruby/object:Api::Type::NestedObject
            name: 'celExpression'
            description: |
              A CEL expression that may be used to validate the resolved X.509 Subject and/or Subject Alternative Name before a
              certificate is signed. To see the full allowed syntax and some examples,
              see https://cloud.google.com/certificate-authority-service/docs/cel-guide
            properties:
              - !ruby/object:Api::Type::String
                name: 'expression'
                required: true
                description: |
                  Textual representation of an expression in Common Expression Language syntax.
              - !ruby/object:Api::Type::String
                name: 'title'
                description: |
                  Title for the expression, i.e. a short string describing its purpose. This can be used e.g. in UIs which allow to enter the expression.
              - !ruby/object:Api::Type::String
                name: 'description'
                description: |
                  Description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI.
              - !ruby/object:Api::Type::String
                name: 'location'
                description: |
                  String indicating the location of the expression for error reporting, e.g. a file name and a position in the file.
      - !ruby/object:Api::Type::NestedObject
        name: 'baselineValues'
        description: |
          A set of X.509 values that will be applied to all certificates issued through this CaPool. If a certificate request
          includes conflicting values for the same properties, they will be overwritten by the values defined here. If a certificate
          request uses a CertificateTemplate that defines conflicting predefinedValues for the same properties, the certificate
          issuance request will fail.
        custom_flatten: 'templates/terraform/custom_flatten/privateca_certificate_509_config.go.erb'
        custom_expand: 'templates/terraform/custom_expand/privateca_certificate_509_config.go.erb'
        properties:
          - !ruby/object:Api::Type::Array
            name: 'additionalExtensions'
            description: |
              Specifies an X.509 extension, which may be used in different parts of X.509 objects like certificates, CSRs, and CRLs.
            item_type: !ruby/object:Api::Type::NestedObject
              properties:
                - !ruby/object:Api::Type::Boolean
                  name: 'critical'
                  required: true
                  description: |
                    Indicates whether or not this extension is critical (i.e., if the client does not know how to
                    handle this extension, the client should consider this to be an error).
                - !ruby/object:Api::Type::String
                  name: 'value'
                  required: true
                  description: |
                    The value of this X.509 extension. A base64-encoded string.
                - !ruby/object:Api::Type::NestedObject
                  name: 'objectId'
                  required: true
                  description: |
                    Describes values that are relevant in a CA certificate.
                  properties:
                    - !ruby/object:Api::Type::Array
                      name: 'objectIdPath'
                      required: true
                      item_type: Api::Type::Integer
                      description: |
                        An ObjectId specifies an object identifier (OID). These provide context and describe types in ASN.1 messages.
          - !ruby/object:Api::Type::Array
            name: 'policyIds'
            description: |
              Describes the X.509 certificate policy object identifiers, per https://tools.ietf.org/html/rfc5280#section-4.2.1.4.
            item_type: !ruby/object:Api::Type::NestedObject
              properties:
                - !ruby/object:Api::Type::Array
                  name: 'objectIdPath'
                  required: true
                  item_type: Api::Type::Integer
                  description: |
                    An ObjectId specifies an object identifier (OID). These provide context and describe types in ASN.1 messages.
          - !ruby/object:Api::Type::Array
            name: 'aiaOcspServers'
            item_type: Api::Type::String
            description: |
              Describes Online Certificate Status Protocol (OCSP) endpoint addresses that appear in the
              "Authority Information Access" extension in the certificate.
          - !ruby/object:Api::Type::NestedObject
            name: 'caOptions'
            required: true
            description: |
              Describes values that are relevant in a CA certificate.
            properties:
              - !ruby/object:Api::Type::Boolean
                name: 'isCa'
                description: |
                  When true, the "CA" in Basic Constraints extension will be set to true.
              - !ruby/object:Api::Type::Boolean
                name: 'nonCa'
                url_param_only: true
                description: |
                  When true, the "CA" in Basic Constraints extension will be set to false.
                  If both `is_ca` and `non_ca` are unset, the extension will be omitted from the CA certificate.
              - !ruby/object:Api::Type::Integer
                name: 'maxIssuerPathLength'
                description: |
                  Refers to the "path length constraint" in Basic Constraints extension. For a CA certificate, this value describes the depth of
                  subordinate CA certificates that are allowed. If this value is less than 0, the request will fail.
              - !ruby/object:Api::Type::Boolean
                name: 'zeroMaxIssuerPathLength'
                url_param_only: true
                description: |
                  When true, the "path length constraint" in Basic Constraints extension will be set to 0.
                  if both `max_issuer_path_length` and `zero_max_issuer_path_length` are unset,
                  the max path length will be omitted from the CA certificate.
          - !ruby/object:Api::Type::NestedObject
            name: 'keyUsage'
            required: true
            description: |
              Indicates the intended use for keys that correspond to a certificate.
            properties:
              - !ruby/object:Api::Type::NestedObject
                name: 'baseKeyUsage'
                required: true
                description: |
                  Describes high-level ways in which a key may be used.
                properties:
                  - !ruby/object:Api::Type::Boolean
                    name: 'digitalSignature'
                    description: |
                      The key may be used for digital signatures.
                  - !ruby/object:Api::Type::Boolean
                    name: 'contentCommitment'
                    description: |
                      The key may be used for cryptographic commitments. Note that this may also be referred to as "non-repudiation".
                  - !ruby/object:Api::Type::Boolean
                    name: 'keyEncipherment'
                    description: |
                      The key may be used to encipher other keys.
                  - !ruby/object:Api::Type::Boolean
                    name: 'dataEncipherment'
                    description: |
                      The key may be used to encipher data.
                  - !ruby/object:Api::Type::Boolean
                    name: 'keyAgreement'
                    description: |
                      The key may be used in a key agreement protocol.
                  - !ruby/object:Api::Type::Boolean
                    name: 'certSign'
                    description: |
                      The key may be used to sign certificates.
                  - !ruby/object:Api::Type::Boolean
                    name: 'crlSign'
                    description: |
                      The key may be used sign certificate revocation lists.
                  - !ruby/object:Api::Type::Boolean
                    name: 'encipherOnly'
                    description: |
                      The key may be used to encipher only.
                  - !ruby/object:Api::Type::Boolean
                    name: 'decipherOnly'
                    description: |
                      The key may be used to decipher only.
              - !ruby/object:Api::Type::NestedObject
                name: 'extendedKeyUsage'
                required: true
                description: |
                  Describes high-level ways in which a key may be used.
                properties:
                  - !ruby/object:Api::Type::Boolean
                    name: 'serverAuth'
                    description: |
                      Corresponds to OID 1.3.6.1.5.5.7.3.1. Officially described as "TLS WWW server authentication", though regularly used for non-WWW TLS.
                  - !ruby/object:Api::Type::Boolean
                    name: 'clientAuth'
                    description: |
                      Corresponds to OID 1.3.6.1.5.5.7.3.2. Officially described as "TLS WWW client authentication", though regularly used for non-WWW TLS.
                  - !ruby/object:Api::Type::Boolean
                    name: 'codeSigning'
                    description: |
                      Corresponds to OID 1.3.6.1.5.5.7.3.3. Officially described as "Signing of downloadable executable code client authentication".
                  - !ruby/object:Api::Type::Boolean
                    name: 'emailProtection'
                    description: |
                      Corresponds to OID 1.3.6.1.5.5.7.3.4. Officially described as "Email protection".
                  - !ruby/object:Api::Type::Boolean
                    name: 'timeStamping'
                    description: |
                      Corresponds to OID 1.3.6.1.5.5.7.3.8. Officially described as "Binding the hash of an object to a time".
                  - !ruby/object:Api::Type::Boolean
                    name: 'ocspSigning'
                    description: |
                      Corresponds to OID 1.3.6.1.5.5.7.3.9. Officially described as "Signing OCSP responses".
              - !ruby/object:Api::Type::Array
                name: 'unknownExtendedKeyUsages'
                description: |
                  An ObjectId specifies an object identifier (OID). These provide context and describe types in ASN.1 messages.
                item_type: !ruby/object:Api::Type::NestedObject
                  properties:
                    - !ruby/object:Api::Type::Array
                      name: 'objectIdPath'
                      required: true
                      item_type: Api::Type::Integer
                      description: |
                        An ObjectId specifies an object identifier (OID). These provide context and describe types in ASN.1 messages.
          - !ruby/object:Api::Type::NestedObject
            name: 'nameConstraints'
            description: |
              Describes the X.509 name constraints extension.
            properties:
              - !ruby/object:Api::Type::Boolean
                name: 'critical'
                description:
                  Indicates whether or not the name constraints are marked
                  critical.
                required: true
              - !ruby/object:Api::Type::Array
                name: 'permittedDnsNames'
                description: |
                  Contains permitted DNS names. Any DNS name that can be
                  constructed by simply adding zero or more labels to
                  the left-hand side of the name satisfies the name constraint.
                  For example, `example.com`, `www.example.com`, `www.sub.example.com`
                  would satisfy `example.com` while `example1.com` does not.
                item_type: Api::Type::String
              - !ruby/object:Api::Type::Array
                name: 'excludedDnsNames'
                description: |
                  Contains excluded DNS names. Any DNS name that can be
                  constructed by simply adding zero or more labels to
                  the left-hand side of the name satisfies the name constraint.
                  For example, `example.com`, `www.example.com`, `www.sub.example.com`
                  would satisfy `example.com` while `example1.com` does not.
                item_type: Api::Type::String
              - !ruby/object:Api::Type::Array
                name: 'permittedIpRanges'
                description: |
                  Contains the permitted IP ranges. For IPv4 addresses, the ranges
                  are expressed using CIDR notation as specified in RFC 4632.
                  For IPv6 addresses, the ranges are expressed in similar encoding as IPv4
                  addresses.
                item_type: Api::Type::String
              - !ruby/object:Api::Type::Array
                name: 'excludedIpRanges'
                description: |
                  Contains the excluded IP ranges. For IPv4 addresses, the ranges
                  are expressed using CIDR notation as specified in RFC 4632.
                  For IPv6 addresses, the ranges are expressed in similar encoding as IPv4
                  addresses.
                item_type: Api::Type::String
              - !ruby/object:Api::Type::Array
                name: 'permittedEmailAddresses'
                description: |
                  Contains the permitted email addresses. The value can be a particular
                  email address, a hostname to indicate all email addresses on that host or
                  a domain with a leading period (e.g. `.example.com`) to indicate
                  all email addresses in that domain.
                item_type: Api::Type::String
              - !ruby/object:Api::Type::Array
                name: 'excludedEmailAddresses'
                description: |
                  Contains the excluded email addresses. The value can be a particular
                  email address, a hostname to indicate all email addresses on that host or
                  a domain with a leading period (e.g. `.example.com`) to indicate
                  all email addresses in that domain.
                item_type: Api::Type::String
              - !ruby/object:Api::Type::Array
                name: 'permittedUris'
                description: |
                  Contains the permitted URIs that apply to the host part of the name.
                  The value can be a hostname or a domain with a
                  leading period (like `.example.com`)
                item_type: Api::Type::String
              - !ruby/object:Api::Type::Array
                name: 'excludedUris'
                description: |
                  Contains the excluded URIs that apply to the host part of the name.
                  The value can be a hostname or a domain with a
                  leading period (like `.example.com`)
                item_type: Api::Type::String
  - !ruby/object:Api::Type::NestedObject
    name: 'publishingOptions'
    description: |
      The PublishingOptions to follow when issuing Certificates from any CertificateAuthority in this CaPool.
    diff_suppress_func: 'tpgresource.EmptyOrUnsetBlockDiffSuppress'
    properties:
      - !ruby/object:Api::Type::Boolean
        name: 'publishCaCert'
        required: true
        description: |
          When true, publishes each CertificateAuthority's CA certificate and includes its URL in the "Authority Information Access"
          X.509 extension in all issued Certificates. If this is false, the CA certificate will not be published and the corresponding
          X.509 extension will not be written in issued certificates.
      - !ruby/object:Api::Type::Boolean
        name: 'publishCrl'
        required: true
        description: |
          When true, publishes each CertificateAuthority's CRL and includes its URL in the "CRL Distribution Points" X.509 extension
          in all issued Certificates. If this is false, CRLs will not be published and the corresponding X.509 extension will not
          be written in issued certificates. CRLs will expire 7 days from their creation. However, we will rebuild daily. CRLs are
          also rebuilt shortly after a certificate is revoked.
      - !ruby/object:Api::Type::Enum
        name: 'encodingFormat'
        description: |
          Specifies the encoding format of each CertificateAuthority's CA
          certificate and CRLs. If this is omitted, CA certificates and CRLs
          will be published in PEM.
        values:
          - :PEM
          - :DER
  - !ruby/object:Api::Type::KeyValueLabels
    name: 'labels'
    description: |
      Labels with user-defined metadata.

      An object containing a list of "key": value pairs. Example: { "name": "wrench", "mass":
      "1.3kg", "count": "3" }.
