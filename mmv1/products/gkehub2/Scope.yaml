# Copyright 2023 Google Inc.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

--- !ruby/object:Api::Resource
name: 'Scope'
base_url: 'projects/{{project}}/locations/global/scopes'
create_url: 'projects/{{project}}/locations/global/scopes?scopeId={{scope_id}}'
update_url: 'projects/{{project}}/locations/global/scopes/{{scope_id}}'
self_link: 'projects/{{project}}/locations/global/scopes/{{scope_id}}'
update_verb: :PATCH
update_mask: true
description: |
  Scope represents a Scope in a Fleet.
references: !ruby/object:Api::Resource::ReferenceLinks
  guides:
    'Registering a Cluster': 'https://cloud.google.com/anthos/multicluster-management/connect/registering-a-cluster#register_cluster'
  api: 'https://cloud.google.com/anthos/fleet-management/docs/reference/rest/v1/projects.locations.scopes'
async: !ruby/object:Api::OpAsync
  operation: !ruby/object:Api::OpAsync::Operation
    kind: 'gkehub#operation'
    path: 'name'
    base_url: '{{op_id}}'
    wait_ms: 1000
  result: !ruby/object:Api::OpAsync::Result
    path: 'response'
    resource_inside_response: true
  status: !ruby/object:Api::OpAsync::Status
    path: 'done'
    complete: 'true'
    allowed:
      - 'true'
      - 'false'
  error: !ruby/object:Api::OpAsync::Error
    path: 'error/errors'
    message: 'message'
autogen_async: true
iam_policy: !ruby/object:Api::Resource::IamPolicy
  parent_resource_attribute: scope_id
  exclude: false
  method_name_separator: ':'
  import_format:
    [
      'projects/{{project}}/locations/global/scopes/{{scope_id}}',
      '{{scope_id}}',
    ]
examples:
  - !ruby/object:Provider::Terraform::Examples
    name: 'gkehub_scope_basic'
    primary_resource_name: 'fmt.Sprintf("tf-test-scope%s", context["random_suffix"])'
    primary_resource_id: 'scope'
    test_env_vars:
      project: :PROJECT_NAME
# Skip sweeper gen since this is a child resource.
skip_sweeper: true
id_format: 'projects/{{project}}/locations/global/scopes/{{scope_id}}'
import_format:
  ['projects/{{project}}/locations/global/scopes/{{scope_id}}']
properties:
  - !ruby/object:Api::Type::String
    name: 'scopeId'
    description: |
      The client-provided identifier of the scope.
    required: true
    immutable: true
    url_param_only: true
  - !ruby/object:Api::Type::String
    name: 'name'
    output: true
    description: |
      The unique identifier of the scope
  - !ruby/object:Api::Type::String
    name: 'uid'
    output: true
    description: |
      Google-generated UUID for this resource.
  - !ruby/object:Api::Type::Time
    name: 'createTime'
    description: |
      Time the Scope was created in UTC.
    output: true
  - !ruby/object:Api::Type::Time
    name: 'updateTime'
    description: |
      Time the Scope was updated in UTC.
    output: true
  - !ruby/object:Api::Type::Time
    name: 'deleteTime'
    description: |
      Time the Scope was deleted in UTC.
    output: true
  - !ruby/object:Api::Type::NestedObject
    name: 'state'
    description: |
      State of the scope resource.
    output: true
    properties:
      - !ruby/object:Api::Type::Enum
        name: 'code'
        description: |
          Code describes the state of a Scope resource.
        output: true
        values:
          - :CODE_UNSPECIFIED
          - :CREATING
          - :READY
          - :DELETING
          - :UPDATING
  - !ruby/object:Api::Type::KeyValuePairs
    name: 'labels'
    description: |
      Labels for this Scope.
