# Copyright 2023 Google Inc.
# Licensed under the Apache License, Version 2.0 (the License);
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

--- !ruby/object:Api::Resource
name: 'Feature'
base_url: projects/{{project}}/locations/{{location}}/features
create_url: projects/{{project}}/locations/{{location}}/features?featureId={{name}}
update_url: projects/{{project}}/locations/{{location}}/features/{{name}}
self_link: projects/{{project}}/locations/{{location}}/features/{{name}}
update_verb: :PATCH
update_mask: true
legacy_long_form_project: true
description: |
  Feature represents the settings and status of any Hub Feature.
references: !ruby/object:Api::Resource::ReferenceLinks
  guides:
    'Registering a Cluster': 'https://cloud.google.com/anthos/multicluster-management/connect/registering-a-cluster#register_cluster'
  api: 'https://cloud.google.com/anthos/fleet-management/docs/reference/rest/v1/projects.locations.features'
async: !ruby/object:Api::OpAsync
  operation: !ruby/object:Api::OpAsync::Operation
    kind: 'gkehub2#operation'
    path: 'name'
    base_url: '{{op_id}}'
    wait_ms: 1000
  result: !ruby/object:Api::OpAsync::Result
    path: 'response'
    resource_inside_response: true
  status: !ruby/object:Api::OpAsync::Status
    path: 'done'
    complete: 'true'
    allowed:
      - 'true'
      - 'false'
  error: !ruby/object:Api::OpAsync::Error
    path: 'error/errors'
    message: 'message'
iam_policy: !ruby/object:Api::Resource::IamPolicy
  parent_resource_attribute: name
  method_name_separator: ':'
  import_format:
    [
      'projects/{{project}}/locations/{{location}}/features/{{name}}',
      '{{name}}',
    ]
examples:
  - !ruby/object:Provider::Terraform::Examples
    name: 'gkehub_feature_multi_cluster_ingress'
    skip_test: true
    primary_resource_name: 'fmt.Sprint("multiclusteringress")'
    primary_resource_id: 'feature'
  - !ruby/object:Provider::Terraform::Examples
    name: 'gkehub_feature_multi_cluster_service_discovery'
    skip_test: true
    primary_resource_name: 'fmt.Sprint("multiclusterservicediscovery")'
    primary_resource_id: 'feature'
  - !ruby/object:Provider::Terraform::Examples
    name: 'gkehub_feature_anthos_service_mesh'
    skip_test: true
    primary_resource_name: 'fmt.Sprint("servicemesh")'
    primary_resource_id: 'feature'
  - !ruby/object:Provider::Terraform::Examples
    name: 'enable_fleet_observability_for_default_logs_with_COPY'
    skip_test: true
    primary_resource_name: 'fmt.Sprint("fleetobservability")'
    primary_resource_id: 'feature'
  - !ruby/object:Provider::Terraform::Examples
    name: 'enable_fleet_observability_for_scope_logs_with_MOVE'
    skip_test: true
    primary_resource_name: 'fmt.Sprint("fleetobservability")'
    primary_resource_id: 'feature'
  - !ruby/object:Provider::Terraform::Examples
    name: 'enable_fleet_observability_for_both_default_and_scope_logs'
    skip_test: true
    primary_resource_name: 'fmt.Sprint("fleetobservability")'
    primary_resource_id: 'feature'
  - !ruby/object:Provider::Terraform::Examples
    name: 'enable_fleet_default_member_config_service_mesh'
    skip_test: true
    primary_resource_name: 'fmt.Sprintf("servicemesh")'
    primary_resource_id: 'feature'
  - !ruby/object:Provider::Terraform::Examples
    name: 'enable_fleet_default_member_config_configmanagement'
    skip_test: true
    primary_resource_name: 'fmt.Sprintf("configmanagement")'
    primary_resource_id: 'feature'
  - !ruby/object:Provider::Terraform::Examples
    name: 'enable_fleet_default_member_config_policycontroller'
    skip_test: true
    primary_resource_name: 'fmt.Sprintf("policycontroller")'
    primary_resource_id: 'feature'
  - !ruby/object:Provider::Terraform::Examples
    name: 'enable_fleet_default_member_config_policycontroller_full'
    skip_test: true
    primary_resource_name: 'fmt.Sprintf("policycontroller")'
    primary_resource_id: 'feature'
  - !ruby/object:Provider::Terraform::Examples
    name: 'enable_fleet_default_member_config_policycontroller_minimal'
    skip_test: true
    primary_resource_name: 'fmt.Sprintf("policycontroller")'
    primary_resource_id: 'feature'
  - !ruby/object:Provider::Terraform::Examples
    name: 'gkehub_feature_clusterupgrade'
    skip_test: true
    primary_resource_name: 'fmt.Sprint("clusterupgrade")'
    primary_resource_id: 'feature'
autogen_async: true
# Skip sweeper gen since this is a child resource.
skip_sweeper: true
id_format: 'projects/{{project}}/locations/{{location}}/features/{{name}}'
import_format:
  ['projects/{{project}}/locations/{{location}}/features/{{name}}']
parameters:
  - !ruby/object:Api::Type::String
    name: location
    description: The location for the resource
    url_param_only: true
    required: true
    immutable: true
properties:
  - !ruby/object:Api::Type::String
    name: name
    description: The full, unique name of this Feature resource
    immutable: true
    url_param_only: true
    diff_suppress_func: 'tpgresource.CompareSelfLinkOrResourceName'
    custom_expand: templates/terraform/custom_expand/resource_from_self_link.go.erb
    custom_flatten: templates/terraform/custom_flatten/name_from_self_link.erb
  - !ruby/object:Api::Type::KeyValueLabels
    name: 'labels'
    description: GCP labels for this Feature.
  - !ruby/object:Api::Type::NestedObject
    name: resourceState
    description: State of the Feature resource itself.
    output: true
    properties:
      - !ruby/object:Api::Type::Enum
        name: state
        description: The current state of the Feature resource in the Hub API.
        output: true
        values:
          - :STATE_UNSPECIFIED
          - :ENABLING
          - :ACTIVE
          - :DISABLING
          - :UPDATING
          - :SERVICE_UPDATING
      - !ruby/object:Api::Type::Boolean
        name: hasResources
        description: Whether this Feature has outstanding resources that need to be cleaned up before it can be disabled.
        output: true
  - !ruby/object:Api::Type::NestedObject
    name: spec
    description: Optional. Hub-wide Feature configuration. If this Feature does not support any Hub-wide configuration, this field may be unused.
    properties:
      - !ruby/object:Api::Type::NestedObject
        name: multiclusteringress
        description: Multicluster Ingress-specific spec.
        properties:
          - !ruby/object:Api::Type::String
            name: configMembership
            description: 'Fully-qualified Membership name which hosts the MultiClusterIngress CRD. Example: `projects/foo-proj/locations/global/memberships/bar`'
            required: true
      - !ruby/object:Api::Type::NestedObject
        name: fleetobservability
        description: Fleet Observability feature spec.
        properties:
          - !ruby/object:Api::Type::NestedObject
            name: loggingConfig
            description: 'Specified if fleet logging feature is enabled for the entire fleet. If UNSPECIFIED, fleet logging feature is disabled for the entire fleet.'
            properties:
              - !ruby/object:Api::Type::NestedObject
                name: defaultConfig
                description: 'Specified if applying the default routing config to logs not specified in other configs.'
                properties:
                  - !ruby/object:Api::Type::Enum
                    name: mode
                    description: Specified if fleet logging feature is enabled.
                    values:
                      - :MODE_UNSPECIFIED
                      - :COPY
                      - :MOVE
              - !ruby/object:Api::Type::NestedObject
                name: fleetScopeLogsConfig
                description: 'Specified if applying the routing config to all logs for all fleet scopes.'
                properties:
                  - !ruby/object:Api::Type::Enum
                    name: mode
                    description: Specified if fleet logging feature is enabled.
                    values:
                      - :MODE_UNSPECIFIED
                      - :COPY
                      - :MOVE
      - !ruby/object:Api::Type::NestedObject
        name: clusterupgrade
        description: Clusterupgrade feature spec.
        properties:
          - !ruby/object:Api::Type::Array
            name: 'upstreamFleets'
            description: |
              Specified if other fleet should be considered as a source of upgrades. Currently, at most one upstream fleet is allowed. The fleet name should be either fleet project number or id.
            required: true
            item_type: Api::Type::String
          - !ruby/object:Api::Type::NestedObject
            name: 'postConditions'
            description: |
              Post conditions to override for the specified upgrade.
            required: true
            default_from_api: true
            properties:
              - !ruby/object:Api::Type::String
                name: 'soaking'
                description: |
                  Amount of time to "soak" after a rollout has been finished before marking it COMPLETE. Cannot exceed 30 days.
                required: true
          - !ruby/object:Api::Type::Array
            name: 'gkeUpgradeOverrides'
            description: |
              Configuration overrides for individual upgrades.
            item_type: !ruby/object:Api::Type::NestedObject
              properties:
                - !ruby/object:Api::Type::NestedObject
                  name: 'upgrade'
                  description: |
                    Which upgrade to override.
                  required: true
                  properties:
                    - !ruby/object:Api::Type::String
                      name: 'name'
                      description: |
                        Name of the upgrade, e.g., "k8s_control_plane". It should be a valid upgrade name. It must not exceet 99 characters.
                      required: true
                    - !ruby/object:Api::Type::String
                      name: 'version'
                      description: |
                         Version of the upgrade, e.g., "1.22.1-gke.100". It should be a valid version. It must not exceet 99 characters.
                      required: true
                - !ruby/object:Api::Type::NestedObject
                  name: 'postConditions'
                  description: |
                    Post conditions to override for the specified upgrade.
                  required: true
                  properties:
                    - !ruby/object:Api::Type::String
                      name: 'soaking'
                      description: |
                        Amount of time to "soak" after a rollout has been finished before marking it COMPLETE. Cannot exceed 30 days.
                      required: true
  - !ruby/object:Api::Type::NestedObject
    name: fleetDefaultMemberConfig
    description: Optional. Fleet Default Membership Configuration.
    send_empty_value: true
    properties:
      - !ruby/object:Api::Type::NestedObject
        name: mesh
        description: Service Mesh spec
        properties:
          - !ruby/object:Api::Type::Enum
            name: management
            description: 'Whether to automatically manage Service Mesh'
            values:
              - :MANAGEMENT_UNSPECIFIED
              - :MANAGEMENT_AUTOMATIC
              - :MANAGEMENT_MANUAL
            required: true
      - !ruby/object:Api::Type::NestedObject
        name: configmanagement
        description: Config Management spec
        properties:
          - !ruby/object:Api::Type::String
            name: version
            description: 'Version of ACM installed'
          - !ruby/object:Api::Type::NestedObject
            name: configSync
            description: 'ConfigSync configuration for the cluster'
            properties:
              - !ruby/object:Api::Type::String
                name: sourceFormat
                description: 'Specifies whether the Config Sync Repo is in hierarchical or unstructured mode'
              - !ruby/object:Api::Type::Boolean
                name: preventDrift
                description: 'Set to true to enable the Config Sync admission webhook to prevent drifts. If set to `false`, disables the Config Sync admission webhook and does not prevent drifts.'
              - !ruby/object:Api::Type::NestedObject
                name: git
                description: 'Git repo configuration for the cluster'
                properties:
                  - !ruby/object:Api::Type::String
                    name: syncRepo
                    description: 'The URL of the Git repository to use as the source of truth'
                  - !ruby/object:Api::Type::String
                    name: syncBranch
                    description: 'The branch of the repository to sync from. Default: master'
                  - !ruby/object:Api::Type::String
                    name: policyDir
                    description: 'The path within the Git repository that represents the top level of the repo to sync'
                  - !ruby/object:Api::Type::String
                    name: syncRev
                    description: 'Git revision (tag or hash) to check out. Default HEAD'
                  - !ruby/object:Api::Type::String
                    name: secretType
                    description: 'Type of secret configured for access to the Git repo'
                    required: true
                  - !ruby/object:Api::Type::String
                    name: httpsProxy
                    description: 'URL for the HTTPS Proxy to be used when communicating with the Git repo'
                  - !ruby/object:Api::Type::String
                    name: gcpServiceAccountEmail
                    description: 'The Google Cloud Service Account Email used for auth when secretType is gcpServiceAccount'
                  - !ruby/object:Api::Type::String
                    name: syncWaitSecs
                    description: 'Period in seconds between consecutive syncs. Default: 15'
              - !ruby/object:Api::Type::NestedObject
                name: oci
                description: 'OCI repo configuration for the cluster'
                properties:
                  - !ruby/object:Api::Type::String
                    name: syncRepo
                    description: 'The OCI image repository URL for the package to sync from'
                  - !ruby/object:Api::Type::String
                    name: policyDir
                    description: 'The absolute path of the directory that contains the local resources. Default: the root directory of the image'
                  - !ruby/object:Api::Type::String
                    name: secretType
                    description: 'Type of secret configured for access to the Git repo'
                    required: true
                  - !ruby/object:Api::Type::String
                    name: gcpServiceAccountEmail
                    description: 'The Google Cloud Service Account Email used for auth when secretType is gcpServiceAccount'
                  - !ruby/object:Api::Type::String
                    name: syncWaitSecs
                    description: 'Period in seconds between consecutive syncs. Default: 15'
                  - !ruby/object:Api::Type::String
                    name: version
                    description: 'Version of ACM installed'
                    deprecation_message: The `configmanagement.config_sync.oci.version` field is deprecated and will be removed in a future major release. Please use `configmanagement.version` field to specify the version of ACM installed instead.
      - !ruby/object:Api::Type::NestedObject
        name: policycontroller
        description: Policy Controller spec
        properties:
          - !ruby/object:Api::Type::String
            name: version
            description: 'Configures the version of Policy Controller'
            default_from_api: true
          - !ruby/object:Api::Type::NestedObject
            name: policyControllerHubConfig
            description: 'Configuration of Policy Controller'
            required: true
            properties:
              - !ruby/object:Api::Type::Enum
                name: installSpec
                description: 'Configures the mode of the Policy Controller installation'
                values:
                  - :INSTALL_SPEC_UNSPECIFIED
                  - :INSTALL_SPEC_NOT_INSTALLED
                  - :INSTALL_SPEC_ENABLED
                  - :INSTALL_SPEC_SUSPENDED
                  - :INSTALL_SPEC_DETACHED
                required: true
              - !ruby/object:Api::Type::Integer
                name: auditIntervalSeconds
                description: 'Interval for Policy Controller Audit scans (in seconds). When set to 0, this disables audit functionality altogether.'
              - !ruby/object:Api::Type::Array
                name: exemptableNamespaces
                description: 'The set of namespaces that are excluded from Policy Controller checks. Namespaces do not need to currently exist on the cluster.'
                item_type: Api::Type::String
              - !ruby/object:Api::Type::Boolean
                name: logDeniesEnabled
                description: 'Logs all denies and dry run failures.'
              - !ruby/object:Api::Type::Boolean
                name: mutationEnabled
                description: 'Enables the ability to mutate resources using Policy Controller.'
              - !ruby/object:Api::Type::Boolean
                name: referentialRulesEnabled
                description: 'Enables the ability to use Constraint Templates that reference to objects other than the object currently being evaluated.'
              - !ruby/object:Api::Type::NestedObject
                name: monitoring
                description: 'Monitoring specifies the configuration of monitoring Policy Controller.'
                default_from_api: true
                properties:
                  - !ruby/object:Api::Type::Array
                    name: backends
                    description: 'Specifies the list of backends Policy Controller will export to. An empty list would effectively disable metrics export.'
                    default_from_api: true
                    item_type: !ruby/object:Api::Type::Enum
                      name: 'required but unused'
                      description: 'required but unused'
                      values:
                        - :MONITORING_BACKEND_UNSPECIFIED
                        - :PROMETHEUS
                        - :CLOUD_MONITORING
              - !ruby/object:Api::Type::Integer
                name: constraintViolationLimit
                description: 'The maximum number of audit violations to be stored in a constraint. If not set, the internal default of 20 will be used.'
              - !ruby/object:Api::Type::Map
                name: deploymentConfigs
                description: 'Map of deployment configs to deployments ("admission", "audit", "mutation").'
                key_name: component
                key_description: 'Specifies which component to apply the deployment config to. Accepted values are "admission", "audit" and "mutation".'
                default_from_api: true
                value_type: !ruby/object:Api::Type::NestedObject
                  name: deploymentConfig
                  description: 'Configures deployment-specific options, such as high availability.'
                  properties:
                    - !ruby/object:Api::Type::Integer
                      name: replicaCount
                      description: 'Pod replica count.'
                      send_empty_value: false
                      default_from_api: true
                    - !ruby/object:Api::Type::NestedObject
                      name: containerResources
                      description: 'Container resource requirements.'
                      properties:
                        - !ruby/object:Api::Type::NestedObject
                          name: limits
                          description: 'Limits describes the maximum amount of compute resources allowed for use by the running container.'
                          properties:
                            - !ruby/object:Api::Type::String
                              name: memory
                              description: 'Memory requirement expressed in Kubernetes resource units.'
                            - !ruby/object:Api::Type::String
                              name: cpu
                              description: 'CPU requirement expressed in Kubernetes resource units.'
                        - !ruby/object:Api::Type::NestedObject
                          name: requests
                          description: 'Requests describes the amount of compute resources reserved for the container by the kube-scheduler.'
                          properties:
                            - !ruby/object:Api::Type::String
                              name: memory
                              description: 'Memory requirement expressed in Kubernetes resource units.'
                            - !ruby/object:Api::Type::String
                              name: cpu
                              description: 'CPU requirement expressed in Kubernetes resource units.'
                    - !ruby/object:Api::Type::Enum
                      name: podAffinity
                      description: 'Pod affinity configuration.'
                      default_from_api: true
                      values:
                        - :AFFINITY_UNSPECIFIED
                        - :NO_AFFINITY
                        - :ANTI_AFFINITY
                    - !ruby/object:Api::Type::Array
                      name: podToleration
                      api_name: podTolerations
                      description: 'Pod tolerations of node taints.'
                      item_type: !ruby/object:Api::Type::NestedObject
                        name: 'required but unused'
                        description: 'required but unused'
                        properties:
                          - !ruby/object:Api::Type::String
                            name: key
                            description: 'Matches a taint key (not necessarily unique).'
                          - !ruby/object:Api::Type::String
                            name: operator
                            description: 'Matches a taint operator.'
                          - !ruby/object:Api::Type::String
                            name: value
                            description: 'Matches a taint value.'
                          - !ruby/object:Api::Type::String
                            name: effect
                            description: 'Matches a taint effect.'
              - !ruby/object:Api::Type::NestedObject
                name: policyContent
                description: 'Specifies the desired policy content on the cluster.'
                # default_from_api: true
                properties:
                  - !ruby/object:Api::Type::NestedObject
                    name: templateLibrary
                    description: 'Configures the installation of the Template Library.'
                    default_from_api: true
                    properties:
                      - !ruby/object:Api::Type::Enum
                        name: installation
                        description: 'Configures the manner in which the template library is installed on the cluster.'
                        values:
                          - :INSTALATION_UNSPECIFIED
                          - :NOT_INSTALLED
                          - :ALL
                  - !ruby/object:Api::Type::Map
                    name: bundles
                    description: 'Configures which bundles to install and their corresponding install specs.'
                    key_name: bundle
                    key_description: 'A bundle name supported in this version. Values configure the exempted namespaces for this bundle.'
                    value_type: !ruby/object:Api::Type::NestedObject
                      name: bundleInstallSpec
                      description: 'The specification configuration for a single managed bundle.'
                      properties:
                        - !ruby/object:Api::Type::Array
                          name: exemptedNamespaces
                          description: 'The set of namespaces to be exempted from the bundle.'
                          item_type: Api::Type::String
  - !ruby/object:Api::Type::NestedObject
    name: state
    description: Output only. The Hub-wide Feature state
    output: true
    properties:
      - !ruby/object:Api::Type::NestedObject
        name: state
        description: Output only. The "running state" of the Feature in this Hub.
        output: true
        properties:
          - !ruby/object:Api::Type::Enum
            name: code
            description: The high-level, machine-readable status of this Feature.
            output: true
            values:
              - :CODE_UNSPECIFIED
              - :OK
              - :WARNING
              - :ERROR
          - !ruby/object:Api::Type::String
            name: description
            description: A human-readable description of the current status.
            output: true
          - !ruby/object:Api::Type::String
            name: updateTime
            description: 'The time this status and any related Feature-specific details were updated. A timestamp in RFC3339 UTC "Zulu" format, with nanosecond resolution and up to nine fractional digits. Examples: "2014-10-02T15:01:23Z" and "2014-10-02T15:01:23.045123456Z"'
            output: true
  - !ruby/object:Api::Type::String
    name: createTime
    description: Output only. When the Feature resource was created.
    output: true
  - !ruby/object:Api::Type::String
    name: updateTime
    description: Output only. When the Feature resource was last updated.
    output: true
  - !ruby/object:Api::Type::String
    name: deleteTime
    description: Output only. When the Feature resource was deleted.
    output: true
