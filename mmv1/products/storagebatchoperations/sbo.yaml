# Copyright 2024 Google Inc.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

---
name: 'Jobs'
kind: 'storagebatchoperations#jobs'
id_format: 'projects/{{project}}/locations/{{location}}/jobs/{{job_id}}'
base_url: 'projects/{{project}}/locations/{{location}}/jobs'
self_link: 'projects/{{project}}/locations/{{location}}/jobs/{{job_id}}'
create_url: 'projects/{{project}}/locations/{{location}}/jobs?jobId={{job_id}}'
import_format:
  - 'projects/{{project}}/locations/{{location}}/jobs/{{job_id}}'
timeouts:
  insert_minutes: 120
  update_minutes: 120
  delete_minutes: 20
exclude_sweeper: true
exclude_delete: true
autogen_async: true
async:
  actions: ['create', 'update']
  type: 'OpAsync'
  operation:
    base_url: '{{op_id}}'
  result:
    resource_inside_response: true
description: |
  Storage Batch Operations (SBO) is a Cloud Storage management feature that offers a
  seamless experience to perform single batch operations on millions of GCS objects in a
  serverless manner.
examples:
  - name: 'storage_batch_operations'
custom_code:
   constants: 'templates/terraform/constants/storage_batch_operations_jobs.go.tmpl'
   custom_update: 'templates/terraform/custom_update/storage_batch_operations_jobs.go.tmpl'
   custom_delete: 'templates/terraform/custom_delete/storage_batch_operations_jobs.go.tmpl'
custom_diff:
  - 'verifyJobIdChange'   
virtual_fields:
  - name: 'delete_protection'
    description: |
      If set to `true`, the storage batch operation job will not be deleted and new job will be created.
    type: Boolean
    default_value: true
parameters:
  - name: 'createTime'
    type: String
    description: |
      The timestamp at which this storage batch operation was created.
    output: true
  - name: 'updateTime'
    type: String
    description: |
      The timestamp at which this storage batch operation was most recently updated.
    output: true
  - name: 'jobId'
    type: String
    description: 'The ID of the job.'
    url_param_only: true
    immutable: true
    validation:
      regex: '^[a-z0-9]([-a-z0-9]*[a-z0-9])?.$'
properties:
  - name: 'location'
    type: String
    description: 'The location of the job.'
    immutable: true
    required: true
    url_param_only: true
  - name: 'prefixList'
    type: NestedObject
    description: All objects in the bucket that match the prefix will be in scope for the selected batch operation
    immutable: true
    exactly_one_of:
      - 'prefix_list'
      - 'manifest'
    properties:
    - name: 'prefixes'
      type: Array
      min_size: 1
      max_size: 1
      description: contains object_prefix and bucket
      immutable: true
      item_type:
        type: NestedObject
        properties:
        - name: 'bucket'
          type: string
          required: true
          immutable: true
          description: 'bucket on which operations performed'
        - name: 'objectPrefix'
          type: string
          immutable: true
          required: false
          description: 'object prefix allows to specify a prefix as the scope for batch operations'
  - name: 'manifest'
    type: NestedObject
    immutable: true
    description: one of prefix_list or manifest allowed
    exactly_one_of:
      - 'prefix_list'
      - 'manifest'
    properties:
      - name: 'manifestLocation'
        type: String
        description: 'list of objects to perform operations in csv format on storage bucket'
        immutable: true
        required: true
  - name: 'deleteObject'
    type: NestedObject
    description: 'allows batch operations to delete objects in bucket'
    immutable: true
    properties:
      - name: 'permanentObjectDeletionEnabled'
        type: Boolean
        description: 'enable flag to permanently delete object and all object versions if versioning is enabled on bucket'
        immutable: true
        required: true
    exactly_one_of:
      - 'delete_object'
      - 'put_metadata'
      - 'put_kms_key'
      - 'put_object_hold'  
  - name: 'putMetadata'
    type: NestedObject
    description: 'allows batch operations to update metadata for objects in bucket'
    immutable: true
    exactly_one_of:
      - 'delete_object'
      - 'put_metadata'
      - 'put_kms_key'
      - 'put_object_hold'
    properties:
      - name: 'contentDisposition'
        type: String
        description: 'Content-Disposition of the object data.'
        immutable: true
        at_least_one_of:
          - 'put_metadata.0.content_disposition'
          - 'put_metadata.0.content_encoding'
          - 'put_metadata.0.content_language'
          - 'put_metadata.0.content_type'
          - 'put_metadata.0.cache_control'
          - 'put_metadata.0.custom_metadata'
      - name: 'contentEncoding'
        type: String
        description: 'Content Encoding of the object data.'
        immutable: true
        at_least_one_of:
          - 'put_metadata.0.content_disposition'
          - 'put_metadata.0.content_encoding'
          - 'put_metadata.0.content_language'
          - 'put_metadata.0.content_type'
          - 'put_metadata.0.cache_control'
          - 'put_metadata.0.custom_metadata'
      - name: 'contentType'
        type: String
        description: 'Content-Type of the object data.'
        immutable: true
        at_least_one_of:
          - 'put_metadata.0.content_disposition'
          - 'put_metadata.0.content_encoding'
          - 'put_metadata.0.content_language'
          - 'put_metadata.0.content_type'
          - 'put_metadata.0.cache_control'
          - 'put_metadata.0.custom_metadata'
      - name: 'contentLanguage'
        type: String
        description: 'Content-Language of the object data.'
        immutable: true
        at_least_one_of:
          - 'put_metadata.0.content_disposition'
          - 'put_metadata.0.content_encoding'
          - 'put_metadata.0.content_language'
          - 'put_metadata.0.content_type'
          - 'put_metadata.0.cache_control'
          - 'put_metadata.0.custom_metadata'
      - name: 'cacheControl'
        type: String
        description: 'Cache-Control directive to specify caching behavior of object data. If omitted and object is accessible to all anonymous users, the default will be public, max-age=3600'
        immutable: true
        at_least_one_of:
          - 'put_metadata.0.content_disposition'
          - 'put_metadata.0.content_encoding'
          - 'put_metadata.0.content_language'
          - 'put_metadata.0.content_type'
          - 'put_metadata.0.cache_control'
          - 'put_metadata.0.custom_metadata'
      - name: 'customMetadata'
        type: KeyValuePairs
        description: 'User-provided metadata, in key/value pairs.'
        immutable: true
        at_least_one_of:
          - 'put_metadata.0.content_disposition'
          - 'put_metadata.0.content_encoding'
          - 'put_metadata.0.content_language'
          - 'put_metadata.0.content_type'
          - 'put_metadata.0.cache_control'
          - 'put_metadata.0.custom_metadata'
  - name: 'putKmsKey'
    type: NestedObject
    description: 'allows to update encryption key for objects in bucket'
    immutable: true
    exactly_one_of:
      - 'delete_object'
      - 'put_metadata'
      - 'put_kms_key'
      - 'put_object_hold'
    properties:
      - name: 'kmsKey'
        type: String
        description: 'valid kms key'
        immutable: true
        required: true
  - name: 'putObjectHold'
    type: NestedObject
    description: 'allows to update temporary hold or eventBased hold for objects in bucket'
    immutable: true
    exactly_one_of:
      - 'delete_object'
      - 'put_metadata'
      - 'put_kms_key'
      - 'put_object_hold'
    properties:
    - name: 'eventBasedHold'
      type: TypeString
      immutable: true
      description: 'set/unset to update event based hold for objects'
      validation:
        function: 'validation.StringInSlice([]string{"SET", "UNSET"}, false)'  
      at_least_one_of:
        - 'putObjectHold.0.eventBasedHold'
        - 'putObjectHold.0.temporaryHold'  
    - name: 'temporaryHold'
      type: TypeString
      immutable: true
      description: 'set/unset to update temporary based hold for objects'
      validation:
          function: 'validation.StringInSlice([]string{"SET", "UNSET"}, false)'  
      at_least_one_of:
        - 'putObjectHold.0.eventBasedHold'
        - 'putObjectHold.0.temporaryHold'
