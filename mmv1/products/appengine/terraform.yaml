# Copyright 2017 Google Inc.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

--- !ruby/object:Provider::Terraform::Config
overrides: !ruby/object:Overrides::ResourceOverrides
  FirewallRule: !ruby/object:Overrides::Terraform::ResourceOverride
    import_format: ["apps/{{project}}/firewall/ingressRules/{{priority}}"]
    mutex: "apps/{{project}}"
    async: !ruby/object:Provider::Terraform::PollAsync
      check_response_func_existence: PollCheckForExistence
      actions: ['create']
      operation: !ruby/object:Api::Async::Operation
        timeouts: !ruby/object:Api::Timeouts
          insert_minutes: 4
          update_minutes: 4
          delete_minutes: 4
    # This resource is a child resource (requires app ID in the URL)
    skip_sweeper: true
    examples:
      - !ruby/object:Provider::Terraform::Examples
        name: "app_engine_firewall_rule_basic"
        primary_resource_id: "rule"
        vars:
          project_id: "ae-project"
        test_env_vars:
          org_id: :ORG_ID
  StandardAppVersion: !ruby/object:Overrides::Terraform::ResourceOverride
    import_format: ["apps/{{project}}/services/{{service}}/versions/{{version_id}}"]
    id_format: "apps/{{project}}/services/{{service}}/versions/{{version_id}}"
    mutex: "apps/{{project}}"
    error_retry_predicates: ["isAppEngineRetryableError"]
    parameters:
      service: !ruby/object:Overrides::Terraform::PropertyOverride
        default_from_api: true
        required: false
    virtual_fields:
      - !ruby/object:Api::Type::Boolean
        name: 'noop_on_destroy'
        default_value: false
        description: |
          If set to `true`, the application version will not be deleted.
      - !ruby/object:Api::Type::Boolean
        name: 'delete_service_on_destroy'
        default_value: false
        description: |
          If set to `true`, the service will be deleted if it is the last version.    
    custom_code: !ruby/object:Provider::Terraform::CustomCode
      custom_delete: templates/terraform/custom_delete/appversion_delete.go.erb
      test_check_destroy: templates/terraform/custom_check_destroy/appengine.go.erb
    properties:
      id: !ruby/object:Overrides::Terraform::PropertyOverride
        name: 'version_id'
      deployment: !ruby/object:Overrides::Terraform::PropertyOverride
        ignore_read: true
      entrypoint: !ruby/object:Overrides::Terraform::PropertyOverride
        ignore_read: true
      envVariables: !ruby/object:Overrides::Terraform::PropertyOverride
        ignore_read: true
      threadsafe: !ruby/object:Overrides::Terraform::PropertyOverride
        ignore_read: true
      handlers: !ruby/object:Overrides::Terraform::PropertyOverride
        default_from_api: true
      # instanceClass defaults to a value based on the scaling method
      instanceClass: !ruby/object:Overrides::Terraform::PropertyOverride
        default_from_api: true
      inboundServices: !ruby/object:Overrides::Terraform::PropertyOverride
        is_set: true
    examples:
      - !ruby/object:Provider::Terraform::Examples
        name: "app_engine_standard_app_version"
        primary_resource_id: "myapp_v1"
        ignore_read_extra:
          - "delete_service_on_destroy"
        vars:
          project_id: "ae-project"
          bucket_name: "appengine-static-content"
          service_name: "ae-service"
        test_env_vars:
          org_id: :ORG_ID
  FlexibleAppVersion: !ruby/object:Overrides::Terraform::ResourceOverride
    import_format: ["apps/{{project}}/services/{{service}}/versions/{{version_id}}"]
    id_format: "apps/{{project}}/services/{{service}}/versions/{{version_id}}"
    mutex: "apps/{{project}}"
    error_retry_predicates: ["isAppEngineRetryableError"]
    parameters:
      service: !ruby/object:Overrides::Terraform::PropertyOverride
        default_from_api: true
        required: false
    virtual_fields:
      - !ruby/object:Api::Type::Boolean
        name: 'noop_on_destroy'
        default_value: false
        description: |
          If set to `true`, the application version will not be deleted.
      - !ruby/object:Api::Type::Boolean
        name: 'delete_service_on_destroy'
        default_value: false
        description: |
          If set to `true`, the service will be deleted if it is the last version.    
    custom_code: !ruby/object:Provider::Terraform::CustomCode
      custom_delete: templates/terraform/custom_delete/appversion_delete.go.erb
      test_check_destroy: templates/terraform/custom_check_destroy/skip_delete_during_test.go.erb
      encoder: templates/terraform/encoders/flex_app_version.go.erb
    properties:
      id: !ruby/object:Overrides::Terraform::PropertyOverride
        name: 'version_id'
      deployment: !ruby/object:Overrides::Terraform::PropertyOverride
        ignore_read: true
      entrypoint: !ruby/object:Overrides::Terraform::PropertyOverride
        ignore_read: true
      envVariables: !ruby/object:Overrides::Terraform::PropertyOverride
        description:
          Environment variables available to the application.  As these are not returned
          in the API request, Terraform will not detect any changes made outside of the Terraform config.
        ignore_read: true
      network.subnetworkName: !ruby/object:Overrides::Terraform::PropertyOverride
        name: 'subnetwork'
      betaSettings: !ruby/object:Overrides::Terraform::PropertyOverride
        # https://issuetracker.google.com/issues/150157861
        ignore_read: true
        # default_from_api: true
      # maxConcurrentRequests defaults to a runtime-specific value
      automaticScaling.maxConcurrentRequests: !ruby/object:Overrides::Terraform::PropertyOverride
        default_from_api: true
      # runtimeApiVersion defaults to a runtime-specific value
      runtimeApiVersion: !ruby/object:Overrides::Terraform::PropertyOverride
        default_from_api: true
      handlers: !ruby/object:Overrides::Terraform::PropertyOverride
        default_from_api: true
      inboundServices: !ruby/object:Overrides::Terraform::PropertyOverride
        is_set: true
    examples:
      - !ruby/object:Provider::Terraform::Examples
        name: "app_engine_flexible_app_version"
        primary_resource_id: "myapp_v1"
        ignore_read_extra:
          - "noop_on_destroy"
        vars:
          bucket_name: "appengine-static-content"
          project: "appeng-flex"
        test_env_vars:
          org_id: :ORG_ID
          billing_account: :BILLING_ACCT
  Service: !ruby/object:Overrides::Terraform::ResourceOverride
    exclude: true
  DomainMapping: !ruby/object:Overrides::Terraform::ResourceOverride
    self_link: 'apps/{{project}}/domainMappings/{{domain_name}}'
    id_format: 'apps/{{project}}/domainMappings/{{domain_name}}'
    import_format: ['apps/{{project}}/domainMappings/{{domain_name}}']
    mutex: "apps/{{project}}"
    examples:
      - !ruby/object:Provider::Terraform::Examples
        name: "app_engine_domain_mapping_basic"
        primary_resource_id: "domain_mapping"
    custom_code:  !ruby/object:Provider::Terraform::CustomCode
      constants: templates/terraform/constants/domain_mapping.erb
    properties:
      id: !ruby/object:Overrides::Terraform::PropertyOverride
        name: 'domainName'
      overrideStrategy: !ruby/object:Overrides::Terraform::PropertyOverride
        ignore_read: true
      sslSettings: !ruby/object:Overrides::Terraform::PropertyOverride
        diff_suppress_func: 'sslSettingsDiffSuppress'
        update_mask_fields:
          - "ssl_settings.certificate_id"
          - "ssl_settings.ssl_management_type"
      sslSettings.certificateId: !ruby/object:Overrides::Terraform::PropertyOverride
        default_from_api: true
  ApplicationUrlDispatchRules: !ruby/object:Overrides::Terraform::ResourceOverride
    id_format: "{{project}}"
    import_format: ["{{project}}"]
    mutex: "apps/{{project}}"
    error_retry_predicates: ["isAppEngineRetryableError"]
    # This resource is a child resource (requires app ID in the URL)
    skip_sweeper: true
    custom_code: !ruby/object:Provider::Terraform::CustomCode
      test_check_destroy: templates/terraform/custom_check_destroy/appengine.go.erb
    examples:
      - !ruby/object:Provider::Terraform::Examples
        name: "app_engine_application_url_dispatch_rules_basic"
        primary_resource_id: "web_service"
        vars:
          bucket_name: "appengine-test-bucket"
  ServiceSplitTraffic: !ruby/object:Overrides::Terraform::ResourceOverride
    id_format: "apps/{{project}}/services/{{service}}"
    import_format: ["apps/{{project}}/services/{{service}}"]
    mutex: "apps/{{project}}"
    skip_delete: true
    custom_code: !ruby/object:Provider::Terraform::CustomCode
      test_check_destroy: templates/terraform/custom_check_destroy/skip_delete_during_test.go.erb
    properties:
      split: !ruby/object:Overrides::Terraform::PropertyOverride
        ignore_read: true
      split.allocations: !ruby/object:Overrides::Terraform::PropertyOverride
        custom_flatten: templates/terraform/custom_flatten/float64_to_string.go.erb
    examples:
      - !ruby/object:Provider::Terraform::Examples
        name: "app_engine_service_split_traffic"
        primary_resource_id: 'liveapp'
        vars:
          service_id: "default"
          split.allocations.v1: "1"
          bucket_name: "appengine-static-content"
        test_env_vars:
          org_id: :ORG_ID
  ServiceNetworkSettings: !ruby/object:Overrides::Terraform::ResourceOverride
    id_format: "apps/{{project}}/services/{{service}}"
    import_format: ["apps/{{project}}/services/{{service}}"]
    mutex: "apps/{{project}}"
    skip_delete: true
    custom_code: !ruby/object:Provider::Terraform::CustomCode
      test_check_destroy: templates/terraform/custom_check_destroy/skip_delete_during_test.go.erb
    examples:
      - !ruby/object:Provider::Terraform::Examples
        name: "app_engine_service_network_settings"
        primary_resource_id: 'liveapp'
        vars:
          service_id: "default"
          bucket_name: "appengine-static-content"
# This is for copying files over
files: !ruby/object:Provider::Config::Files
  # These files have templating (ERB) code that will be run.
  # This is usually to add licensing info, autogeneration notices, etc.
  compile:
<%= lines(indent(compile('provider/terraform/product~compile.yaml'), 4)) -%>
