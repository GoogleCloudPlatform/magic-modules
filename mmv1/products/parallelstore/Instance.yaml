# Copyright 2024 Google Inc.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

--- !ruby/object:Api::Resource
base_url: projects/{{project}}/locations/{{location}}/instances
create_url: projects/{{project}}/locations/{{location}}/instances?instanceId={{instance_id}}
self_link: projects/{{project}}/locations/{{location}}/instances/{{instance_id}}
id_format: projects/{{project}}/locations/{{location}}/instances/{{instance_id}}
import_format:
  - projects/{{project}}/locations/{{location}}/instances/{{instance_id}}
name: Instance
description: A Parallelstore Instance.
update_verb: :PATCH
update_mask: true
min_version: beta
autogen_async: true
examples:
  - !ruby/object:Provider::Terraform::Examples
    name: 'parallelstore_instance_basic'
    primary_resource_id: 'instance'
    min_version: 'beta'
    vars:
      name: 'instance'
      network_name: 'network'
      address_name: 'address'
properties:
  - !ruby/object:Api::Type::String
    name: name
    description: "The resource name of the instance, in the format\n`projects/{project}/locations/{location}/instances/{instance_id}` "
    output: true
  - !ruby/object:Api::Type::String
    name: description
    description: 'The description of the instance. 2048 characters or less. '
  - !ruby/object:Api::Type::String
    name: state
    description: "The instance state. \n Possible values:\n STATE_UNSPECIFIED\nCREATING\nACTIVE\nDELETING\nFAILED"
    output: true
  - !ruby/object:Api::Type::String
    name: createTime
    description: 'The time when the instance was created. '
    output: true
  - !ruby/object:Api::Type::String
    name: updateTime
    description: 'The time when the instance was updated. '
    output: true
  - !ruby/object:Api::Type::KeyValueLabels
    name: labels
    description: "Cloud Labels are a flexible and lightweight mechanism for
      organizing cloud\nresources into groups that reflect a customer's organizational
      needs and\ndeployment strategies. Cloud Labels can be used to filter collections
      of\nresources. They can be used to control how resource metrics are aggregated.\nAnd
      they can be used as arguments to policy management rules (e.g. route,\nfirewall,
      load balancing, etc.).\n\n * Label keys must be between 1 and 63 characters long
      and must conform to\n   the following regular expression: `a-z{0,62}`.\n * Label
      values must be between 0 and 63 characters long and must conform\n   to the regular
      expression `[a-z0-9_-]{0,63}`.\n * No more than 64 labels can be associated with
      a given resource.\n\nSee https://goo.gl/xmQnxf for more information on and examples
      of labels.\n\nIf you plan to use labels in your own code, please note that additional\ncharacters
      may be allowed in the future. Therefore, you are advised to use\nan internal label
      representation, such as JSON, which doesn't rely upon\nspecific characters being
      disallowed.  For example, representing labels\nas the string:  name + \"_\" +
      value  would prove problematic if we were to\nallow \"_\" in a future release. "
  - !ruby/object:Api::Type::String
    name: capacityGib
    description: 'Immutable. Storage capacity of Parallelstore instance in
      Gibibytes (GiB). '
    required: true
    immutable: true
  - !ruby/object:Api::Type::String
    name: daosVersion
    description: 'The version of DAOS software running in the instance '
    output: true
  - !ruby/object:Api::Type::Array
    name: accessPoints
    item_type: Api::Type::String
    description: "List of access_points.\nContains a list of IPv4 addresses
      used for client side configuration. "
    output: true
  - !ruby/object:Api::Type::String
    name: network
    description: "Immutable. The name of the Google Compute Engine\n[VPC network](https://cloud.google.com/vpc/docs/vpc)
      to which the\ninstance is connected. "
    immutable: true
  - !ruby/object:Api::Type::String
    name: reservedIpRange
    description: "Immutable. Contains the id of the allocated IP address range
      associated with the\nprivate service access connection for example, \"test-default\"
      associated\nwith IP range 10.0.0.0/29. If no range id is provided all ranges will
      be\nconsidered. "
    immutable: true
  - !ruby/object:Api::Type::String
    name: effectiveReservedIpRange
    description: "Immutable. Contains the id of the allocated IP address
      range associated with the\nprivate service access connection for example, \"test-default\"
      associated\nwith IP range 10.0.0.0/29. This field is populated by the service
      and\nand contains the value currently used by the service. "
    immutable: true
    output: true
parameters:
  - !ruby/object:Api::Type::String
    name: location
    description: "Part of `parent`. See documentation of `projectsId`."
    url_param_only: true
    required: true
    immutable: true
  - !ruby/object:Api::Type::String
    name: instanceId
    description: |
        The logical name of the Parallelstore instance in the user project with the following restrictions:

        * Must contain only lowercase letters, numbers, and hyphens.
        * Must start with a letter.
        * Must be between 1-63 characters.
        * Must end with a number or a letter.
        * Must be unique within the customer project/ location
    url_param_only: true
    required: true
    immutable: true
async: !ruby/object:Api::OpAsync
  operation: !ruby/object:Api::OpAsync::Operation
    path: name
    base_url: "{{op_id}}"
    wait_ms: 1000
    timeouts:
  result: !ruby/object:Api::OpAsync::Result
    path: response
    resource_inside_response: true
  status: !ruby/object:Api::OpAsync::Status
    path: done
    complete: true
    allowed:
      - true
      - false
  error: !ruby/object:Api::OpAsync::Error
    path: error
    message: message
