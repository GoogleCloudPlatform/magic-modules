<<<<<<< HEAD
# Copyright 2023 Google Inc.
# Licensed under the Apache License, Version 2.0 (the 'License');
=======
# Copyright 2024 Google Inc.
# Licensed under the Apache License, Version 2.0 (the "License");
>>>>>>> 2fdda66097e2c96688e59f7c58c1f717c7785856
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
<<<<<<< HEAD
# distributed under the License is distributed on an 'AS IS' BASIS,
=======
# distributed under the License is distributed on an "AS IS" BASIS,
>>>>>>> 2fdda66097e2c96688e59f7c58c1f717c7785856
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

<<<<<<< HEAD
--- !ruby/object:Api::Resource
name: 'TlsRoute'
base_url: 'projects/{{project}}/locations/global/tlsRoutes'
create_url: 'projects/{{project}}/locations/global/tlsRoutes?tlsRouteId={{name}}'
self_link: 'projects/{{project}}/locations/global/tlsRoutes/{{name}}'
min_version: beta
update_verb: :PATCH
update_mask: true
description: |
  TlsRoute defines how traffic should be routed based on SNI and other matching L3 attributes.
references: !ruby/object:Api::Resource::ReferenceLinks
  api: 'https://cloud.google.com/traffic-director/docs/reference/network-services/rest/v1beta1/projects.locations.tlsRoutes'
async: !ruby/object:Api::OpAsync
  operation: !ruby/object:Api::OpAsync::Operation
    path: 'name'
    base_url: '{{op_id}}'
    wait_ms: 1000
    timeouts: !ruby/object:Api::Timeouts
      insert_minutes: 30
      update_minutes: 30
      delete_minutes: 30
  result: !ruby/object:Api::OpAsync::Result
    path: 'response'
  status: !ruby/object:Api::OpAsync::Status
    path: 'done'
    complete: true
    allowed:
      - true
      - false
  error: !ruby/object:Api::OpAsync::Error
    path: 'error'
    message: 'message'
autogen_async: true
import_format: ['projects/{{project}}/locations/global/tlsRoutes/{{name}}']
examples:
  - !ruby/object:Provider::Terraform::Examples
    min_version: beta
    name: 'network_services_tls_route_basic'
    primary_resource_id: 'default'
=======
---
name: 'TlsRoute'
description: |
  TlsRoute defines how traffic should be routed based on SNI and other matching L3 attributes.
min_version: 'beta'
references:
  guides:
  api: 'https://cloud.google.com/traffic-director/docs/reference/network-services/rest/v1beta1/projects.locations.tlsRoutes'
docs:
base_url: 'projects/{{project}}/locations/global/tlsRoutes'
self_link: 'projects/{{project}}/locations/global/tlsRoutes/{{name}}'
create_url: 'projects/{{project}}/locations/global/tlsRoutes?tlsRouteId={{name}}'
update_verb: 'PATCH'
update_mask: true
import_format:
  - 'projects/{{project}}/locations/global/tlsRoutes/{{name}}'
timeouts:
  insert_minutes: 30
  update_minutes: 30
  delete_minutes: 30
autogen_async: true
async:
  actions: ['create', 'delete', 'update']
  type: 'OpAsync'
  operation:
    base_url: '{{op_id}}'
    path: 'name'
    wait_ms: 1000
    timeouts:
      insert_minutes: 30
      update_minutes: 30
      delete_minutes: 30
  result:
    path: 'response'
    resource_inside_response: false
  error:
    path: 'error'
    message: 'message'
custom_code:
examples:
  - name: 'network_services_tls_route_basic'
    primary_resource_id: 'default'
    min_version: 'beta'
>>>>>>> 2fdda66097e2c96688e59f7c58c1f717c7785856
    vars:
      resource_name: 'my-tls-route'
      backend_service_name: 'my-backend-service'
      http_health_check_name: 'backend-service-health-check'
<<<<<<< HEAD
  - !ruby/object:Provider::Terraform::Examples
    min_version: beta
    name: 'network_services_tls_route_mesh_basic'
    primary_resource_id: 'default'
=======
  - name: 'network_services_tls_route_mesh_basic'
    primary_resource_id: 'default'
    min_version: 'beta'
>>>>>>> 2fdda66097e2c96688e59f7c58c1f717c7785856
    vars:
      resource_name: 'my-tls-route'
      backend_service_name: 'my-backend-service'
      http_health_check_name: 'backend-service-health-check'
<<<<<<< HEAD
  - !ruby/object:Provider::Terraform::Examples
    min_version: beta
    name: 'network_services_tls_route_gateway_basic'
    primary_resource_id: 'default'
=======
  - name: 'network_services_tls_route_gateway_basic'
    primary_resource_id: 'default'
    min_version: 'beta'
>>>>>>> 2fdda66097e2c96688e59f7c58c1f717c7785856
    vars:
      resource_name: 'my-tls-route'
      backend_service_name: 'my-backend-service'
      http_health_check_name: 'backend-service-health-check'
parameters:
<<<<<<< HEAD
  - !ruby/object:Api::Type::String
    name: 'name'
    required: true
    url_param_only: true
    immutable: true
    description: |
      Name of the TlsRoute resource.
properties:
  - !ruby/object:Api::Type::String
    name: 'selfLink'
    description: |
      Server-defined URL of this resource.
    output: true
  - !ruby/object:Api::Type::Time
    name: 'createTime'
    description: |
      Time the TlsRoute was created in UTC.
    output: true
  - !ruby/object:Api::Type::Time
    name: 'updateTime'
    description: |
      Time the TlsRoute was updated in UTC.
    output: true
  - !ruby/object:Api::Type::String
    name: 'description'
    description: |
      A free-text description of the resource. Max length 1024 characters.
  - !ruby/object:Api::Type::Array
    name: meshes
    item_type: Api::Type::String
=======
  - name: 'name'
    type: String
    description: |
      Name of the TlsRoute resource.
    min_version: 'beta'
    url_param_only: true
    required: true
    immutable: true
properties:
  - name: 'selfLink'
    type: String
    description: |
      Server-defined URL of this resource.
    min_version: 'beta'
    output: true
  - name: 'createTime'
    type: Time
    description: |
      Time the TlsRoute was created in UTC.
    min_version: 'beta'
    output: true
  - name: 'updateTime'
    type: Time
    description: |
      Time the TlsRoute was updated in UTC.
    min_version: 'beta'
    output: true
  - name: 'description'
    type: String
    description: |
      A free-text description of the resource. Max length 1024 characters.
    min_version: 'beta'
  - name: 'meshes'
    type: Array
>>>>>>> 2fdda66097e2c96688e59f7c58c1f717c7785856
    description: |
      Meshes defines a list of meshes this TlsRoute is attached to, as one of the routing rules to route the requests served by the mesh.
      Each mesh reference should match the pattern: projects/*/locations/global/meshes/<mesh_name>
      The attached Mesh should be of a type SIDECAR
<<<<<<< HEAD
    send_empty_value: true
  - !ruby/object:Api::Type::Array
    name: gateways
    item_type: Api::Type::String
    description: |
      Gateways defines a list of gateways this TlsRoute is attached to, as one of the routing rules to route the requests served by the gateway.
      Each gateway reference should match the pattern: projects/*/locations/global/gateways/<gateway_name>
    send_empty_value: true
  - !ruby/object:Api::Type::Array
    name: rules
    description: |
      Rules that define how traffic is routed and handled.
    required: true
    send_empty_value: true
    item_type: !ruby/object:Api::Type::NestedObject
      properties:
        - !ruby/object:Api::Type::Array
          name: matches
          description: |
            Matches define the predicate used to match requests to a given action.
          required: true
          item_type: !ruby/object:Api::Type::NestedObject
            properties:
              - !ruby/object:Api::Type::Array
                name: sniHost
                description: |
                  SNI (server name indicator) to match against. SNI will be matched against all wildcard domains, i.e. www.example.com will be first matched against www.example.com, then *.example.com, then *.com.
                  Partial wildcards are not supported, and values like *w.example.com are invalid. At least one of sniHost and alpn is required. Up to 5 sni hosts across all matches can be set.
                item_type: Api::Type::String
                send_empty_value: true
              - !ruby/object:Api::Type::Array
                name: alpn
                description: |
                  ALPN (Application-Layer Protocol Negotiation) to match against. Examples: "http/1.1", "h2". At least one of sniHost and alpn is required. Up to 5 alpns across all matches can be set.
                item_type: Api::Type::String
                send_empty_value: true
        - !ruby/object:Api::Type::NestedObject
          name: action
          description: |
            Required. A detailed rule defining how to route traffic.
          required: true
          properties:
            - !ruby/object:Api::Type::Array
              name: destinations
              description: |
                The destination to which traffic should be forwarded.
              item_type: !ruby/object:Api::Type::NestedObject
                properties:
                  - !ruby/object:Api::Type::String
                    name: serviceName
                    description: |
                      The URL of a BackendService to route traffic to.
                  - !ruby/object:Api::Type::Integer
                    name: weight
                    description: |
                      Specifies the proportion of requests forwarded to the backend referenced by the serviceName field.
=======
    min_version: 'beta'
    send_empty_value: true
    item_type:
      type: String
  - name: 'gateways'
    type: Array
    description: |
      Gateways defines a list of gateways this TlsRoute is attached to, as one of the routing rules to route the requests served by the gateway.
      Each gateway reference should match the pattern: projects/*/locations/global/gateways/<gateway_name>
    min_version: 'beta'
    send_empty_value: true
    item_type:
      type: String
  - name: 'rules'
    type: Array
    description: |
      Rules that define how traffic is routed and handled.
    min_version: 'beta'
    required: true
    send_empty_value: true
    item_type:
      type: NestedObject
      properties:
        - name: 'matches'
          type: Array
          description: |
            Matches define the predicate used to match requests to a given action.
          min_version: 'beta'
          required: true
          item_type:
            type: NestedObject
            properties:
              - name: 'sniHost'
                type: Array
                description: |
                  SNI (server name indicator) to match against. SNI will be matched against all wildcard domains, i.e. www.example.com will be first matched against www.example.com, then *.example.com, then *.com.
                  Partial wildcards are not supported, and values like *w.example.com are invalid. At least one of sniHost and alpn is required. Up to 5 sni hosts across all matches can be set.
                min_version: 'beta'
                send_empty_value: true
                item_type:
                  type: String
              - name: 'alpn'
                type: Array
                description: |
                  ALPN (Application-Layer Protocol Negotiation) to match against. Examples: "http/1.1", "h2". At least one of sniHost and alpn is required. Up to 5 alpns across all matches can be set.
                min_version: 'beta'
                send_empty_value: true
                item_type:
                  type: String
        - name: 'action'
          type: NestedObject
          description: |
            Required. A detailed rule defining how to route traffic.
          min_version: 'beta'
          required: true
          properties:
            - name: 'destinations'
              type: Array
              description: |
                The destination to which traffic should be forwarded.
              min_version: 'beta'
              item_type:
                type: NestedObject
                properties:
                  - name: 'serviceName'
                    type: String
                    description: |
                      The URL of a BackendService to route traffic to.
                    min_version: 'beta'
                  - name: 'weight'
                    type: Integer
                    description: |
                      Specifies the proportion of requests forwarded to the backend referenced by the serviceName field.
                    min_version: 'beta'
>>>>>>> 2fdda66097e2c96688e59f7c58c1f717c7785856
