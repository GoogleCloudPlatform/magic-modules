# Copyright 2024 Google Inc.
# Licensed under the Apache License, Version 2.0 (the 'License');
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an 'AS IS' BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

--- !ruby/object:Api::Resource
name: 'ServiceLbPolicies'
base_url: 'projects/{{project}}/locations/{{location}}/serviceLbPolicies'
min_version: beta
create_url: 'projects/{{project}}/locations/{{location}}/serviceLbPolicies?serviceLbPolicyId={{name}}'
self_link: 'projects/{{project}}/locations/{{location}}/serviceLbPolicies/{{name}}'
update_verb: :PATCH
update_mask: true
description: |
  ServiceLbPolicy holds global load balancing and traffic distribution configuration that can be applied to a BackendService.
references: !ruby/object:Api::Resource::ReferenceLinks
  api: 'https://cloud.google.com/service-mesh/docs/reference/network-services/rest/v1/projects.locations.serviceLbPolicies'
async: !ruby/object:Api::OpAsync
  operation: !ruby/object:Api::OpAsync::Operation
    path: 'name'
    base_url: '{{op_id}}'
    wait_ms: 1000
    timeouts: !ruby/object:Api::Timeouts
      insert_minutes: 30
      update_minutes: 30
      delete_minutes: 30
  result: !ruby/object:Api::OpAsync::Result
    path: 'response'
  status: !ruby/object:Api::OpAsync::Status
    path: 'done'
    complete: true
    allowed:
      - true
      - false
  error: !ruby/object:Api::OpAsync::Error
    path: 'error'
    message: 'message'
autogen_async: true
import_format: ['projects/{{project}}/locations/{{location}}/serviceLbPolicies/{{name}}']
examples:
  - !ruby/object:Provider::Terraform::Examples
    name: 'network_services_service_lb_policies_basic'
    primary_resource_id: 'default'
    vars:
      resource_name: 'my-lb-policy'
  - !ruby/object:Provider::Terraform::Examples
    name: 'network_services_service_lb_policies_advanced'
    primary_resource_id: 'default'
    vars:
      resource_name: 'my-lb-policy'
      backend_name: 'my-lb-backend'
parameters:
  - !ruby/object:Api::Type::String
    name: 'name'
    required: true
    url_param_only: true
    description: |
      Name of the ServiceLbPolicy resource. It matches pattern `projects/{project}/locations/{location}/serviceLbPolicies/{service_lb_policy_name}`.
  - !ruby/object:Api::Type::String
    name: 'location'
    required: true
    url_param_only: true
    description: |
      The location of the service lb policy.
properties:
  - !ruby/object:Api::Type::Time
    name: 'createTime'
    description: |
      Time the ServiceLbPolicy was created in UTC.
    output: true
  - !ruby/object:Api::Type::Time
    name: 'updateTime'
    description: |
      Time the ServiceLbPolicy was updated in UTC.
    output: true
  - !ruby/object:Api::Type::KeyValueLabels
    name: 'labels'
    description: 'Set of label tags associated with the ServiceLbPolicy resource.'
  - !ruby/object:Api::Type::String
    name: 'description'
    description: |
      A free-text description of the resource. Max length 1024 characters.
  - !ruby/object:Api::Type::Enum
    name: 'loadBalancingAlgorithm'
    description: |
      The type of load balancing algorithm to be used. The default behavior is WATERFALL_BY_REGION.
    values:
      - :SPRAY_TO_REGION
      - :SPRAY_TO_WORLD
      - :WATERFALL_BY_REGION
      - :WATERFALL_BY_ZONE
  - !ruby/object:Api::Type::NestedObject
    name: 'autoCapacityDrain'
    description: |
      Option to specify if an unhealthy MIG/NEG should be considered for global load balancing and traffic routing.
    properties:
      - !ruby/object:Api::Type::Boolean
        name: 'enable'
        description:
          Optional. If set to 'True', an unhealthy MIG/NEG will be set as drained. - An MIG/NEG is considered unhealthy if less than 25% of the instances/endpoints in the MIG/NEG are healthy. - This option will never result in draining more than 50% of the configured IGs/NEGs for the Backend Service.
  - !ruby/object:Api::Type::NestedObject
    name: 'failoverConfig'
    description: |
      Option to specify health based failover behavior. This is not related to Network load balancer FailoverPolicy.
    properties:
      - !ruby/object:Api::Type::Integer
        name: 'failoverHealthThreshold'
        required: true
        description:
          Optional. The percentage threshold that a load balancer will begin to send traffic to failover backends. If the percentage of endpoints in a MIG/NEG is smaller than this value, traffic would be sent to failover backends if possible. This field should be set to a value between 1 and 99. The default value is 50 for Global external HTTP(S) load balancer (classic) and Proxyless service mesh, and 70 for others.
