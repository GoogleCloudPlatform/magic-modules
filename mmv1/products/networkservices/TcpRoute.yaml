# Copyright 2024 Google Inc.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

---
name: 'TcpRoute'
description: |
  TcpRoute is the resource defining how TCP traffic should be routed by a Mesh/Gateway resource.
min_version: 'beta'
references:
  guides:
    'Setup TCP Services': 'https://cloud.google.com/traffic-director/docs/set-up-tcp-route'
  api: 'https://cloud.google.com/traffic-director/docs/reference/network-services/rest/v1beta1/projects.locations.tcpRoutes'
docs:
base_url: 'projects/{{project}}/locations/global/tcpRoutes'
self_link: 'projects/{{project}}/locations/global/tcpRoutes/{{name}}'
create_url: 'projects/{{project}}/locations/global/tcpRoutes?tcpRouteId={{name}}'
update_verb: 'PATCH'
update_mask: true
import_format:
  - 'projects/{{project}}/locations/global/tcpRoutes/{{name}}'
timeouts:
  insert_minutes: 30
  update_minutes: 30
  delete_minutes: 30
autogen_async: true
async:
  actions: ['create', 'delete', 'update']
  type: 'OpAsync'
  operation:
    base_url: '{{op_id}}'
    path: 'name'
    wait_ms: 1000
    timeouts:
      insert_minutes: 30
      update_minutes: 30
      delete_minutes: 30
  result:
    path: 'response'
    resource_inside_response: false
  error:
    path: 'error'
    message: 'message'
custom_code:
examples:
  - name: 'network_services_tcp_route_basic'
    primary_resource_id: 'default'
    min_version: 'beta'
    vars:
      resource_name: 'my-tcp-route'
      backend_service_name: 'my-backend-service'
      http_health_check_name: 'backend-service-health-check'
  - name: 'network_services_tcp_route_actions'
    primary_resource_id: 'default'
    min_version: 'beta'
    vars:
      resource_name: 'my-tcp-route'
      backend_service_name: 'my-backend-service'
      http_health_check_name: 'backend-service-health-check'
  - name: 'network_services_tcp_route_mesh_basic'
    primary_resource_id: 'default'
    min_version: 'beta'
    vars:
      resource_name: 'my-tcp-route'
      backend_service_name: 'my-backend-service'
      http_health_check_name: 'backend-service-health-check'
  - name: 'network_services_tcp_route_gateway_basic'
    primary_resource_id: 'default'
    min_version: 'beta'
    vars:
      resource_name: 'my-tcp-route'
      backend_service_name: 'my-backend-service'
      http_health_check_name: 'backend-service-health-check'
parameters:
  - name: 'name'
    type: String
    description: |
      Name of the TcpRoute resource.
    min_version: 'beta'
    url_param_only: true
    required: true
    immutable: true
properties:
  - name: 'selfLink'
    type: String
    description: |
      Server-defined URL of this resource.
    min_version: 'beta'
    output: true
  - name: 'createTime'
    type: Time
    description: |
      Time the TcpRoute was created in UTC.
    min_version: 'beta'
    output: true
  - name: 'updateTime'
    type: Time
    description: |
      Time the TcpRoute was updated in UTC.
    min_version: 'beta'
    output: true
  - name: 'labels'
    type: KeyValueLabels
    description: Set of label tags associated with the TcpRoute resource.
    min_version: 'beta'
  - name: 'description'
    type: String
    description: |
      A free-text description of the resource. Max length 1024 characters.
    min_version: 'beta'
  - name: 'meshes'
    type: Array
    description: |
      Meshes defines a list of meshes this TcpRoute is attached to, as one of the routing rules to route the requests served by the mesh.
      Each mesh reference should match the pattern: projects/*/locations/global/meshes/<mesh_name>
      The attached Mesh should be of a type SIDECAR
    min_version: 'beta'
    send_empty_value: true
    item_type:
      type: String
  - name: 'gateways'
    type: Array
    description: |
      Gateways defines a list of gateways this TcpRoute is attached to, as one of the routing rules to route the requests served by the gateway.
      Each gateway reference should match the pattern: projects/*/locations/global/gateways/<gateway_name>
    min_version: 'beta'
    send_empty_value: true
    item_type:
      type: String
  - name: 'rules'
    type: Array
    description: |
      Rules that define how traffic is routed and handled. At least one RouteRule must be supplied.
      If there are multiple rules then the action taken will be the first rule to match.
    min_version: 'beta'
    required: true
    send_empty_value: true
    item_type:
      type: NestedObject
      properties:
        - name: 'matches'
          type: Array
          description: |
            RouteMatch defines the predicate used to match requests to a given action. Multiple match types are "OR"ed for evaluation.
            If no routeMatch field is specified, this rule will unconditionally match traffic.
          min_version: 'beta'
          send_empty_value: true
          item_type:
            type: NestedObject
            properties:
              - name: 'address'
                type: String
                description: |
                  Must be specified in the CIDR range format. A CIDR range consists of an IP Address and a prefix length to construct the subnet mask.
                  By default, the prefix length is 32 (i.e. matches a single IP address). Only IPV4 addresses are supported. Examples: "10.0.0.1" - matches against this exact IP address. "10.0.0.0/8" - matches against any IP address within the 10.0.0.0 subnet and 255.255.255.0 mask. "0.0.0.0/0" - matches against any IP address'.
                min_version: 'beta'
                required: true
              - name: 'port'
                type: String
                description: |
                  Specifies the destination port to match against.
                min_version: 'beta'
                required: true
        - name: 'action'
          type: NestedObject
          description: |
            A detailed rule defining how to route traffic.
          min_version: 'beta'
          required: true
          properties:
            - name: 'destinations'
              type: Array
              description: |
                The destination services to which traffic should be forwarded. At least one destination service is required.
              min_version: 'beta'
              item_type:
                type: NestedObject
                properties:
                  - name: 'serviceName'
                    type: String
                    description: |
                      The URL of a BackendService to route traffic to.
                    min_version: 'beta'
                  - name: 'weight'
                    type: Integer
                    description: |
                      Specifies the proportion of requests forwarded to the backend referenced by the serviceName field. This is computed as: weight/Sum(weights in this destination list). For non-zero values, there may be some epsilon from the exact proportion defined here depending on the precision an implementation supports.
                      If only one serviceName is specified and it has a weight greater than 0, 100% of the traffic is forwarded to that backend.
                      If weights are specified for any one service name, they need to be specified for all of them.
                      If weights are unspecified for all services, then, traffic is distributed in equal proportions to all of them.
                    min_version: 'beta'
            - name: 'originalDestination'
              type: Boolean
              description: |
                If true, Router will use the destination IP and port of the original connection as the destination of the request.
              min_version: 'beta'
            - name: 'idleTimeout'
              type: String
              description: |
                Specifies the idle timeout for the selected route. The idle timeout is defined as the period in which there are no bytes sent or received on either the upstream or downstream connection. If not set, the default idle timeout is 30 seconds. If set to 0s, the timeout will be disabled.

                A duration in seconds with up to nine fractional digits, ending with 's'. Example: "3.5s".
              min_version: 'beta'
              validation:
                regex: '^(0|[1-9][0-9]*)(\.[0-9]{1,9})?s$'
