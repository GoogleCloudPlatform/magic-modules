# Copyright 2023 Google Inc.
# Licensed under the Apache License, Version 2.0 (the 'License');
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an 'AS IS' BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

--- !ruby/object:Api::Resource
name: 'EndpointPolicy'
base_url: 'projects/{{project}}/locations/global/endpointPolicies'
create_url: 'projects/{{project}}/locations/global/endpointPolicies?endpointPolicyId={{name}}'
self_link: 'projects/{{project}}/locations/global/endpointPolicies/{{name}}'
min_version: beta
update_verb: :PATCH
update_mask: true
description: |
  EndpointPolicy is a resource that helps apply desired configuration on the endpoints that match specific criteria.
references: !ruby/object:Api::Resource::ReferenceLinks
  api: 'https://cloud.google.com/traffic-director/docs/reference/network-services/rest/v1beta1/projects.locations.endpointPolicies'
async: !ruby/object:Api::OpAsync
  operation: !ruby/object:Api::OpAsync::Operation
    path: 'name'
    base_url: '{{op_id}}'
    wait_ms: 1000
    timeouts: !ruby/object:Api::Timeouts
      insert_minutes: 30
      update_minutes: 30
      delete_minutes: 30
  result: !ruby/object:Api::OpAsync::Result
    path: 'response'
  status: !ruby/object:Api::OpAsync::Status
    path: 'done'
    complete: true
    allowed:
      - true
      - false
  error: !ruby/object:Api::OpAsync::Error
    path: 'error'
    message: 'message'
autogen_async: true
examples:
  - !ruby/object:Provider::Terraform::Examples
    min_version: beta
    name: 'network_services_endpoint_policy_basic'
    primary_resource_id: 'default'
    vars:
      resource_name: 'my-endpoint-policy'
  - !ruby/object:Provider::Terraform::Examples
    min_version: beta
    name: 'network_services_endpoint_policy_empty_match'
    primary_resource_id: 'default'
    vars:
      resource_name: 'my-endpoint-policy'
parameters:
  - !ruby/object:Api::Type::String
    name: 'name'
    required: true
    url_param_only: true
    immutable: true
    description: |
      Name of the EndpointPolicy resource.
properties:
  - !ruby/object:Api::Type::Time
    name: 'createTime'
    description: |
      Time the TcpRoute was created in UTC.
    output: true
  - !ruby/object:Api::Type::Time
    name: 'updateTime'
    description: |
      Time the TcpRoute was updated in UTC.
    output: true
  - !ruby/object:Api::Type::KeyValueLabels
    name: 'labels'
    description: Set of label tags associated with the TcpRoute resource.
  - !ruby/object:Api::Type::String
    name: 'description'
    description: |
      A free-text description of the resource. Max length 1024 characters.
  - !ruby/object:Api::Type::String
    name: 'authorizationPolicy'
    description: |
      This field specifies the URL of AuthorizationPolicy resource that applies authorization policies to the inbound traffic at the matched endpoints.
  - !ruby/object:Api::Type::String
    name: 'serverTlsPolicy'
    description: |
      A URL referring to ServerTlsPolicy resource. ServerTlsPolicy is used to determine the authentication policy to be applied to terminate the inbound traffic at the identified backends.
  - !ruby/object:Api::Type::String
    name: 'clientTlsPolicy'
    description: |
      A URL referring to a ClientTlsPolicy resource. ClientTlsPolicy can be set to specify the authentication for traffic from the proxy to the actual endpoints.
  - !ruby/object:Api::Type::Enum
    name: type
    description: |
      The type of endpoint policy. This is primarily used to validate the configuration.
    required: true
    values:
      - :SIDECAR_PROXY
      - :GRPC_SERVER
  - !ruby/object:Api::Type::NestedObject
    name: 'trafficPortSelector'
    description: |
      Port selector for the (matched) endpoints. If no port selector is provided, the matched config is applied to all ports.
    properties:
      - !ruby/object:Api::Type::Array
        name: 'ports'
        description: |
          List of ports. Can be port numbers or port range (example, [80-90] specifies all ports from 80 to 90, including 80 and 90) or named ports or * to specify all ports. If the list is empty, all ports are selected.
        item_type: Api::Type::String
        required: true
  - !ruby/object:Api::Type::NestedObject
    name: 'endpointMatcher'
    description: |
      Required. A matcher that selects endpoints to which the policies should be applied.
    required: true
    properties:
      - !ruby/object:Api::Type::NestedObject
        name: metadataLabelMatcher
        description: |
          The matcher is based on node metadata presented by xDS clients.
        required: true
        properties:
          - !ruby/object:Api::Type::Enum
            name: metadataLabelMatchCriteria
            description: |
              Specifies how matching should be done.
            required: true
            values:
              - :MATCH_ANY
              - :MATCH_ALL
          - !ruby/object:Api::Type::Array
            name: metadataLabels
            description: |
              The list of label value pairs that must match labels in the provided metadata based on filterMatchCriteria
            item_type: !ruby/object:Api::Type::NestedObject
              properties:
                - !ruby/object:Api::Type::String
                  name: 'labelName'
                  description: |
                    Required. Label name presented as key in xDS Node Metadata.
                  required: true
                - !ruby/object:Api::Type::String
                  name: 'labelValue'
                  description: |
                    Required. Label value presented as value corresponding to the above key, in xDS Node Metadata.
                  required: true
