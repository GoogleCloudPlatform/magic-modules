# Copyright 2023 Google Inc.
# Licensed under the Apache License, Version 2.0 (the 'License');
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an 'AS IS' BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

--- !ruby/object:Api::Resource
name: 'HttpRoute'
base_url: 'projects/{{project}}/locations/global/httpRoutes'
create_url: 'projects/{{project}}/locations/global/httpRoutes?httpRouteId={{name}}'
self_link: 'projects/{{project}}/locations/global/httpRoutes/{{name}}'
min_version: beta
update_verb: :PATCH
update_mask: true
description: |
  HttpRoute is the resource defining how HTTP traffic should be routed by a Mesh or Gateway resource.
references: !ruby/object:Api::Resource::ReferenceLinks
  guides:
    'Setup HTTP Services': 'https://cloud.google.com/traffic-director/docs/set-up-envoy-http-mesh'
  api: 'https://cloud.google.com/traffic-director/docs/reference/network-services/rest/v1beta1/projects.locations.httpRoutes'
async: !ruby/object:Api::OpAsync
  operation: !ruby/object:Api::OpAsync::Operation
    path: 'name'
    base_url: '{{op_id}}'
    wait_ms: 1000
    timeouts: !ruby/object:Api::Timeouts
      insert_minutes: 30
      update_minutes: 30
      delete_minutes: 30
  result: !ruby/object:Api::OpAsync::Result
    path: 'response'
  status: !ruby/object:Api::OpAsync::Status
    path: 'done'
    complete: true
    allowed:
      - true
      - false
  error: !ruby/object:Api::OpAsync::Error
    path: 'error'
    message: 'message'
autogen_async: true
import_format: ['projects/{{project}}/locations/global/httpRoutes/{{name}}']
examples:
  - !ruby/object:Provider::Terraform::Examples
    min_version: beta
    name: 'network_services_http_route_basic'
    primary_resource_id: 'default'
    vars:
      resource_name: 'my-http-route'
  - !ruby/object:Provider::Terraform::Examples
    min_version: beta
    name: 'network_services_http_route_matches_and_actions'
    primary_resource_id: 'default'
    vars:
      resource_name: 'my-http-route'
  - !ruby/object:Provider::Terraform::Examples
    min_version: beta
    name: 'network_services_http_route_actions'
    primary_resource_id: 'default'
    vars:
      resource_name: 'my-http-route'
  - !ruby/object:Provider::Terraform::Examples
    min_version: beta
    name: 'network_services_http_route_mesh_basic'
    primary_resource_id: 'default'
    vars:
      mesh_name: 'my-mesh'
      resource_name: 'my-http-route'
parameters:
  - !ruby/object:Api::Type::String
    name: 'name'
    required: true
    url_param_only: true
    immutable: true
    description: |
      Name of the HttpRoute resource.
properties:
  - !ruby/object:Api::Type::String
    name: 'selfLink'
    description: |
      Server-defined URL of this resource.
    output: true
  - !ruby/object:Api::Type::Time
    name: 'createTime'
    description: |
      Time the HttpRoute was created in UTC.
    output: true
  - !ruby/object:Api::Type::Time
    name: 'updateTime'
    description: |
      Time the HttpRoute was updated in UTC.
    output: true
  - !ruby/object:Api::Type::KeyValuePairs
    name: 'labels'
    description: Set of label tags associated with the HttpRoute resource.
  - !ruby/object:Api::Type::String
    name: 'description'
    description: |
      A free-text description of the resource. Max length 1024 characters.
  - !ruby/object:Api::Type::Array
    name: hostnames
    item_type: Api::Type::String
    description: |
          Set of hosts that should match against the HTTP host header to select a HttpRoute to process the request.  
    required: true
  - !ruby/object:Api::Type::Array
    name: meshes
    item_type: Api::Type::String
    description: |
          Meshes defines a list of meshes this HttpRoute is attached to, as one of the routing rules to route the requests served by the mesh.
          Each mesh reference should match the pattern: projects/*/locations/global/meshes/<mesh_name>.
          The attached Mesh should be of a type SIDECAR.
    send_empty_value: true 
  - !ruby/object:Api::Type::Array
    name: gateways
    item_type: Api::Type::String
    description: |
          Gateways defines a list of gateways this HttpRoute is attached to, as one of the routing rules to route the requests served by the gateway.
          Each gateway reference should match the pattern: projects/*/locations/global/gateways/<gateway_name>
    send_empty_value: true
  - !ruby/object:Api::Type::Array
    name: rules
    description: |
          Rules that define how traffic is routed and handled.  
    required: true
    send_empty_value: true
    item_type: !ruby/object:Api::Type::NestedObject
      properties: 
        - !ruby/object:Api::Type::Array
          name: matches
          description: |
            A list of matches define conditions used for matching the rule against incoming HTTP requests. Each match is independent, i.e. this rule will be matched if ANY one of the matches is satisfied.
            If no matches field is specified, this rule will unconditionally match traffic.
            If a default rule is desired to be configured, add a rule with no matches specified to the end of the rules list.
          send_empty_value: true
          item_type: !ruby/object:Api::Type::NestedObject
            properties:
              - !ruby/object:Api::Type::Boolean
                name: ignoreCase
                description: |
                  Specifies if prefixMatch and fullPathMatch matches are case sensitive. The default value is false.
                send_empty_value: true
              - !ruby/object:Api::Type::String
                name: fullPathMatch
                description: |
                  The HTTP request path value should exactly match this value.
                exactly_one_of:
                  - fullPathMatch
                  - prefixMatch
                  - regexMatch
              - !ruby/object:Api::Type::String
                name: prefixMatch
                description: |
                  The HTTP request path value must begin with specified prefixMatch. prefixMatch must begin with a /.
                exactly_one_of:
                  - fullPathMatch
                  - prefixMatch
                  - regexMatch
              - !ruby/object:Api::Type::String
                name: regexMatch
                description: |
                  The HTTP request path value must satisfy the regular expression specified by regexMatch after removing any query parameters and anchor supplied with the original URL. For regular expression grammar, please see https://github.com/google/re2/wiki/Syntax
                exactly_one_of:
                  - fullPathMatch
                  - prefixMatch
                  - regexMatch   
              - !ruby/object:Api::Type::Array
                name: queryParameters
                description: |
                  Specifies a list of query parameters to match against. 
                item_type: !ruby/object:Api::Type::NestedObject
                  properties:
                    - !ruby/object:Api::Type::String
                      name: queryParameter
                      description: |
                        The name of the query parameter to match.
                    - !ruby/object:Api::Type::String
                      name: exactMatch
                      description: |
                        The value of the query parameter must exactly match the contents of exactMatch.
                      exactly_one_of:
                        - exactMatch
                        - regexMatch
                        - presentMatch
                    - !ruby/object:Api::Type::String
                      name: regexMatch
                      description: |
                        The value of the query parameter must match the regular expression specified by regexMatch.For regular expression grammar, please see https://github.com/google/re2/wiki/Syntax
                      exactly_one_of:
                        - exactMatch
                        - regexMatch
                        - presentMatch
                    - !ruby/object:Api::Type::Boolean
                      name: presentMatch
                      description: |
                        Specifies that the QueryParameterMatcher matches if request contains query parameter, irrespective of whether the parameter has a value or not.
                      exactly_one_of:
                        - exactMatch
                        - regexMatch
                        - presentMatch
              - !ruby/object:Api::Type::Array
                name: headers
                description: |
                  Specifies a list of HTTP request headers to match against. 
                item_type: !ruby/object:Api::Type::NestedObject
                  properties:
                    - !ruby/object:Api::Type::String
                      name: header
                      description: |
                        The name of the HTTP header to match against.
                    - !ruby/object:Api::Type::Boolean
                      name: invertMatch
                      description: |
                        If specified, the match result will be inverted before checking. Default value is set to false.
                      send_empty_value: true
                    - !ruby/object:Api::Type::String
                      name: exactMatch
                      description: |
                        The value of the header should match exactly the content of exactMatch.
                      exactly_one_of:
                        - exactMatch
                        - regexMatch
                        - prefixMatch
                        - presentMatch
                        - suffixMatch
                        - rangeMatch
                    - !ruby/object:Api::Type::String
                      name: regexMatch
                      description: |
                        The value of the header must match the regular expression specified in regexMatch.
                      exactly_one_of:
                        - exactMatch
                        - regexMatch
                        - prefixMatch
                        - presentMatch
                        - suffixMatch
                        - rangeMatch
                    - !ruby/object:Api::Type::String
                      name: prefixMatch
                      description: |
                        The value of the header must start with the contents of prefixMatch.
                      exactly_one_of:
                        - exactMatch
                        - regexMatch
                        - prefixMatch
                        - presentMatch
                        - suffixMatch
                        - rangeMatch
                    - !ruby/object:Api::Type::Boolean
                      name: presentMatch
                      description: |
                        A header with headerName must exist. The match takes place whether or not the header has a value.
                      exactly_one_of:
                        - exactMatch
                        - regexMatch
                        - prefixMatch
                        - presentMatch
                        - suffixMatch
                        - rangeMatch
                    - !ruby/object:Api::Type::String
                      name: suffixMatch
                      description: |
                        The value of the header must end with the contents of suffixMatch.
                      exactly_one_of:
                        - exactMatch
                        - regexMatch
                        - prefixMatch
                        - presentMatch
                        - suffixMatch
                        - rangeMatch
                    - !ruby/object:Api::Type::NestedObject
                      name: rangeMatch
                      description: |
                        If specified, the rule will match if the request header value is within the range.
                      exactly_one_of:
                        - exactMatch
                        - regexMatch
                        - prefixMatch
                        - presentMatch
                        - suffixMatch
                        - rangeMatch
                      properties:
                        - !ruby/object:Api::Type::Integer
                          name: start
                          description: |
                             Start of the range (inclusive).
                          required: true
                        - !ruby/object:Api::Type::Integer
                          name: end
                          description: |
                             End of the range (exclusive).
                          required: true                
        - !ruby/object:Api::Type::NestedObject
          name: action
          description: |
              The detailed rule defining how to route matched traffic.
          send_empty_value: true
          properties:
            - !ruby/object:Api::Type::Array
              name: destinations
              description: |
                The destination to which traffic should be forwarded.
              item_type: !ruby/object:Api::Type::NestedObject
                properties:
                  - !ruby/object:Api::Type::String
                    name: serviceName
                    description: |
                      The URL of a BackendService to route traffic to.
                  - !ruby/object:Api::Type::Integer
                    name: weight
                    description: |
                      Specifies the proportion of requests forwarded to the backend referenced by the serviceName field. This is computed as: weight/Sum(weights in this destination list). For non-zero values, there may be some epsilon from the exact proportion defined here depending on the precision an implementation supports.
                      If only one serviceName is specified and it has a weight greater than 0, 100% of the traffic is forwarded to that backend.
                      If weights are specified for any one service name, they need to be specified for all of them.
                      If weights are unspecified for all services, then, traffic is distributed in equal proportions to all of them.
            - !ruby/object:Api::Type::NestedObject
              name: redirect
              description: |
                If set, the request is directed as configured by this field.
              properties:
                - !ruby/object:Api::Type::String
                  name: hostRedirect
                  description: |
                    The host that will be used in the redirect response instead of the one that was supplied in the request.
                - !ruby/object:Api::Type::String
                  name: pathRedirect
                  description: |
                    The path that will be used in the redirect response instead of the one that was supplied in the request. pathRedirect can not be supplied together with prefixRedirect. Supply one alone or neither. If neither is supplied, the path of the original request will be used for the redirect.
                - !ruby/object:Api::Type::String
                  name: prefixRewrite
                  description: |
                    Indicates that during redirection, the matched prefix (or path) should be swapped with this value.
                - !ruby/object:Api::Type::String
                  name: responseCode
                  description: |
                    The HTTP Status code to use for the redirect.
                - !ruby/object:Api::Type::Boolean
                  name: httpsRedirect
                  description: |
                    If set to true, the URL scheme in the redirected request is set to https.
                - !ruby/object:Api::Type::Boolean
                  name: stripQuery
                  description: |
                    If set to true, any accompanying query portion of the original URL is removed prior to redirecting the request. 
                - !ruby/object:Api::Type::Integer
                  name: portRedirect
                  description: |
                    The port that will be used in the redirected request instead of the one that was supplied in the request.
            - !ruby/object:Api::Type::NestedObject
              name: faultInjectionPolicy
              description: |
                The specification for fault injection introduced into traffic to test the resiliency of clients to backend service failure.
              properties:
                - !ruby/object:Api::Type::NestedObject
                  name: delay
                  description: |
                    Specification of how client requests are delayed as part of fault injection before being sent to a destination.
                  properties:
                    - !ruby/object:Api::Type::String
                      name: fixedDelay
                      description: |
                       Specify a fixed delay before forwarding the request.
                    - !ruby/object:Api::Type::Integer
                      name: percentage
                      description: |
                         The percentage of traffic on which delay will be injected.
                      send_empty_value: true
                - !ruby/object:Api::Type::NestedObject
                  name: abort
                  description: |
                     Specification of how client requests are aborted as part of fault injection before being sent to a destination.
                  properties:
                    - !ruby/object:Api::Type::Integer
                      name: httpStatus
                      description: |
                         The HTTP status code used to abort the request.
                    - !ruby/object:Api::Type::Integer
                      name: percentage
                      description: |
                         The percentage of traffic which will be aborted.
                      send_empty_value: true
            - !ruby/object:Api::Type::NestedObject
              name: requestHeaderModifier
              description: |
                The specification for modifying the headers of a matching request prior to delivery of the request to the destination.
              properties:
                - !ruby/object:Api::Type::KeyValuePairs
                  name: set
                  description: |
                    Completely overwrite/replace the headers with given map where key is the name of the header, value is the value of the header.
                - !ruby/object:Api::Type::KeyValuePairs
                  name: add
                  description: |
                    Add the headers with given map where key is the name of the header, value is the value of the header.
                - !ruby/object:Api::Type::Array
                  name: remove
                  item_type: Api::Type::String
                  description: |
                    Remove headers (matching by header names) specified in the list.
            - !ruby/object:Api::Type::NestedObject
              name: responseHeaderModifier
              description: |
                The specification for modifying the headers of a response prior to sending the response back to the client.
              properties:
                - !ruby/object:Api::Type::KeyValuePairs
                  name: set
                  description: |
                    Completely overwrite/replace the headers with given map where key is the name of the header, value is the value of the header.
                - !ruby/object:Api::Type::KeyValuePairs
                  name: add
                  description: |
                    Add the headers with given map where key is the name of the header, value is the value of the header.
                - !ruby/object:Api::Type::Array
                  name: remove
                  item_type: Api::Type::String
                  description: |
                    Remove headers (matching by header names) specified in the list.
            - !ruby/object:Api::Type::NestedObject
              name: urlRewrite
              description: |
                The specification for rewrite URL before forwarding requests to the destination.
              properties: 
                - !ruby/object:Api::Type::String
                  name: pathPrefixRewrite
                  description: |
                    Prior to forwarding the request to the selected destination, the matching portion of the requests path is replaced by this value.
                - !ruby/object:Api::Type::String
                  name: hostRewrite
                  description: |
                    Prior to forwarding the request to the selected destination, the requests host header is replaced by this value.
            - !ruby/object:Api::Type::String
              name: timeout
              description: |
                Specifies the timeout for selected route.
            - !ruby/object:Api::Type::NestedObject
              name: retryPolicy
              description: |
                Specifies the retry policy associated with this route.
              properties:
                - !ruby/object:Api::Type::Array
                  name: retryConditions
                  item_type: Api::Type::String
                  description: |
                    Specifies one or more conditions when this retry policy applies.
                - !ruby/object:Api::Type::Integer
                  name: numRetries
                  description: |
                    Specifies the allowed number of retries.
                - !ruby/object:Api::Type::String
                  name: perTryTimeout
                  description: |
                    Specifies a non-zero timeout per retry attempt. A duration in seconds with up to nine fractional digits, ending with 's'. Example: "3.5s".
            - !ruby/object:Api::Type::NestedObject
              name: requestMirrorPolicy
              description: |
                Specifies the policy on how requests intended for the routes destination are shadowed to a separate mirrored destination.
              properties:
                - !ruby/object:Api::Type::NestedObject
                  name: destination
                  description: |
                    The destination the requests will be mirrored to. 
                  properties:
                    - !ruby/object:Api::Type::String
                      name: serviceName
                      description: |
                        The URL of a BackendService to route traffic to.
                    - !ruby/object:Api::Type::Integer
                      name: weight
                      description: |
                        Specifies the proportion of requests forwarded to the backend referenced by the serviceName field. This is computed as: weight/Sum(weights in this destination list). For non-zero values, there may be some epsilon from the exact proportion defined here depending on the precision an implementation supports.
                        If only one serviceName is specified and it has a weight greater than 0, 100% of the traffic is forwarded to that backend.
                        If weights are specified for any one service name, they need to be specified for all of them.
                        If weights are unspecified for all services, then, traffic is distributed in equal proportions to all of them.
            - !ruby/object:Api::Type::NestedObject
              name: corsPolicy
              description: |
                The specification for allowing client side cross-origin requests.
              properties: 
                - !ruby/object:Api::Type::Array
                  name: allowOrigins
                  item_type: Api::Type::String
                  description: |
                    Specifies the list of origins that will be allowed to do CORS requests.
                - !ruby/object:Api::Type::Array
                  name: allowOriginRegexes
                  item_type: Api::Type::String
                  description: |
                    Specifies the regular expression patterns that match allowed origins.
                - !ruby/object:Api::Type::Array
                  name: allowMethods
                  item_type: Api::Type::String
                  description: |
                    Specifies the content for Access-Control-Allow-Methods header.
                - !ruby/object:Api::Type::Array
                  name: allowHeaders
                  item_type: Api::Type::String
                  description: |
                    Specifies the content for Access-Control-Allow-Headers header.
                - !ruby/object:Api::Type::Array
                  name: exposeHeaders
                  item_type: Api::Type::String
                  description: |
                    Specifies the content for Access-Control-Expose-Headers header.
                - !ruby/object:Api::Type::String
                  name: maxAge
                  description: |
                    Specifies how long result of a preflight request can be cached in seconds.
                - !ruby/object:Api::Type::Boolean
                  name: allowCredentials
                  description: |
                    In response to a preflight request, setting this to true indicates that the actual request can include user credentials.
                - !ruby/object:Api::Type::Boolean
                  name: disabled
                  description: |
                    If true, the CORS policy is disabled. The default value is false, which indicates that the CORS policy is in effect.


  
