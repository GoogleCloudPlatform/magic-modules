# Copyright 2020 Google Inc.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

--- !ruby/object:Provider::Terraform::Config
overrides: !ruby/object:Overrides::ResourceOverrides
  DeidentifyTemplate: !ruby/object:Overrides::Terraform::ResourceOverride
    id_format: "{{parent}}/deidentifyTemplates/{{name}}"
    properties:
      name: !ruby/object:Overrides::Terraform::PropertyOverride
        custom_flatten: templates/terraform/custom_flatten/name_from_self_link.erb
      deidentifyConfig.infoTypeTransformations.transformations.primitiveTransformation.replaceWithInfoTypeConfig: !ruby/object:Overrides::Terraform::PropertyOverride
        custom_flatten: templates/terraform/custom_flatten/object_to_bool.go.erb
        custom_expand: templates/terraform/custom_expand/bool_to_object.go.erb
      deidentifyConfig.recordTransformations.fieldTransformations.condition.expressions.conditions.conditions.value.timestampValue: !ruby/object:Overrides::Terraform::PropertyOverride
          validation: !ruby/object:Provider::Terraform::Validation
            function: 'validateRFC3339Date'
      deidentifyConfig.recordTransformations.fieldTransformations.condition.expressions.conditions.conditions.value.timeValue.hours: !ruby/object:Overrides::Terraform::PropertyOverride
          validation: !ruby/object:Provider::Terraform::Validation
            function: 'validation.IntBetween(0, 24)' # "An API may choose to allow the value "24:00:00" for scenarios like business closing time."
      deidentifyConfig.recordTransformations.fieldTransformations.condition.expressions.conditions.conditions.value.timeValue.minutes: !ruby/object:Overrides::Terraform::PropertyOverride
          validation: !ruby/object:Provider::Terraform::Validation
            function: 'validation.IntBetween(0, 59)'
      deidentifyConfig.recordTransformations.fieldTransformations.condition.expressions.conditions.conditions.value.timeValue.seconds: !ruby/object:Overrides::Terraform::PropertyOverride
          validation: !ruby/object:Provider::Terraform::Validation
            function: 'validation.IntBetween(0, 60)' # "An API may allow the value 60 if it allows leap-seconds."
      deidentifyConfig.recordTransformations.fieldTransformations.condition.expressions.conditions.conditions.value.timeValue.nanos: !ruby/object:Overrides::Terraform::PropertyOverride
          validation: !ruby/object:Provider::Terraform::Validation
            function: 'validation.IntBetween(0, 999999999)'
      deidentifyConfig.recordTransformations.fieldTransformations.condition.expressions.conditions.conditions.value.dateValue.year: !ruby/object:Overrides::Terraform::PropertyOverride
          validation: !ruby/object:Provider::Terraform::Validation
            function: 'validation.IntBetween(1, 9999)'
      deidentifyConfig.recordTransformations.fieldTransformations.condition.expressions.conditions.conditions.value.dateValue.month: !ruby/object:Overrides::Terraform::PropertyOverride
          validation: !ruby/object:Provider::Terraform::Validation
            function: 'validation.IntBetween(0, 12)'
      deidentifyConfig.recordTransformations.fieldTransformations.condition.expressions.conditions.conditions.value.dateValue.day: !ruby/object:Overrides::Terraform::PropertyOverride
          validation: !ruby/object:Provider::Terraform::Validation
            function: 'validation.IntBetween(0, 31)'
      deidentifyConfig.recordTransformations.fieldTransformations.primitiveTransformation.replaceConfig.newValue.timestampValue: !ruby/object:Overrides::Terraform::PropertyOverride
          validation: !ruby/object:Provider::Terraform::Validation
            function: 'validateRFC3339Date'
      deidentifyConfig.recordTransformations.fieldTransformations.primitiveTransformation.replaceConfig.newValue.timeValue.hours: !ruby/object:Overrides::Terraform::PropertyOverride
          validation: !ruby/object:Provider::Terraform::Validation
            function: 'validation.IntBetween(0, 24)' # "An API may choose to allow the value "24:00:00" for scenarios like business closing time."
      deidentifyConfig.recordTransformations.fieldTransformations.primitiveTransformation.replaceConfig.newValue.timeValue.minutes: !ruby/object:Overrides::Terraform::PropertyOverride
          validation: !ruby/object:Provider::Terraform::Validation
            function: 'validation.IntBetween(0, 59)'
      deidentifyConfig.recordTransformations.fieldTransformations.primitiveTransformation.replaceConfig.newValue.timeValue.seconds: !ruby/object:Overrides::Terraform::PropertyOverride
          validation: !ruby/object:Provider::Terraform::Validation
            function: 'validation.IntBetween(0, 60)' # "An API may allow the value 60 if it allows leap-seconds."
      deidentifyConfig.recordTransformations.fieldTransformations.primitiveTransformation.replaceConfig.newValue.timeValue.nanos: !ruby/object:Overrides::Terraform::PropertyOverride
          validation: !ruby/object:Provider::Terraform::Validation
            function: 'validation.IntBetween(0, 999999999)'
      deidentifyConfig.recordTransformations.fieldTransformations.primitiveTransformation.replaceConfig.newValue.dateValue.year: !ruby/object:Overrides::Terraform::PropertyOverride
          validation: !ruby/object:Provider::Terraform::Validation
            function: 'validation.IntBetween(1, 9999)'
      deidentifyConfig.recordTransformations.fieldTransformations.primitiveTransformation.replaceConfig.newValue.dateValue.month: !ruby/object:Overrides::Terraform::PropertyOverride
          validation: !ruby/object:Provider::Terraform::Validation
            function: 'validation.IntBetween(0, 12)'
      deidentifyConfig.recordTransformations.fieldTransformations.primitiveTransformation.replaceConfig.newValue.dateValue.day: !ruby/object:Overrides::Terraform::PropertyOverride
          validation: !ruby/object:Provider::Terraform::Validation
            function: 'validation.IntBetween(0, 31)'
      deidentifyConfig.recordTransformations.fieldTransformations.primitiveTransformation.replaceConfig.newValue.timestampValue: !ruby/object:Overrides::Terraform::PropertyOverride
          validation: !ruby/object:Provider::Terraform::Validation
            function: 'validateRFC3339Date'
    examples:
      - !ruby/object:Provider::Terraform::Examples
        name: "dlp_deidentify_template_basic"
        primary_resource_id: "basic"
        test_env_vars:
          project: :PROJECT_NAME
      - !ruby/object:Provider::Terraform::Examples
        name: "dlp_deidentify_template_skip_characters"
        primary_resource_id: "basic"
        test_env_vars:
          project: :PROJECT_NAME
        skip_docs: true
    custom_code: !ruby/object:Provider::Terraform::CustomCode
      encoder: templates/terraform/encoders/wrap_object.go.erb
      custom_import: templates/terraform/custom_import/dlp_import.go.erb
  JobTrigger: !ruby/object:Overrides::Terraform::ResourceOverride
    id_format: "{{parent}}/jobTriggers/{{name}}"
    properties:
      name: !ruby/object:Overrides::Terraform::PropertyOverride
        custom_flatten: templates/terraform/custom_flatten/name_from_self_link.erb
    examples:
      - !ruby/object:Provider::Terraform::Examples
        name: "dlp_job_trigger_basic"
        primary_resource_id: "basic"
        vars:
          trigger: "trigger"
        test_env_vars:
          project: :PROJECT_NAME
      - !ruby/object:Provider::Terraform::Examples
        name: "dlp_job_trigger_bigquery_row_limit"
        primary_resource_id: "bigquery_row_limit"
        vars:
          trigger: "trigger"
        test_env_vars:
          project: :PROJECT_NAME
      - !ruby/object:Provider::Terraform::Examples
        name: "dlp_job_trigger_bigquery_row_limit_percentage"
        primary_resource_id: "bigquery_row_limit_percentage"
        vars:
          trigger: "trigger"
        test_env_vars:
          project: :PROJECT_NAME
      - !ruby/object:Provider::Terraform::Examples
        name: "dlp_job_trigger_data_catalog_output"
        primary_resource_id: "data_catalog_output"
        vars:
          trigger: "trigger"
        test_env_vars:
          project: :PROJECT_NAME
        skip_docs: true
      - !ruby/object:Provider::Terraform::Examples
        name: "dlp_job_trigger_scc_output"
        primary_resource_id: "scc_output"
        vars:
          trigger: "trigger"
        test_env_vars:
          project: :PROJECT_NAME
        skip_docs: true
    custom_code: !ruby/object:Provider::Terraform::CustomCode
      encoder: templates/terraform/encoders/wrap_object.go.erb
      custom_import: templates/terraform/custom_import/dlp_import.go.erb
  InspectTemplate: !ruby/object:Overrides::Terraform::ResourceOverride
    id_format: "{{parent}}/inspectTemplates/{{name}}"
    properties:
      name: !ruby/object:Overrides::Terraform::PropertyOverride
        custom_flatten: templates/terraform/custom_flatten/name_from_self_link.erb
    examples:
      - !ruby/object:Provider::Terraform::Examples
        name: "dlp_inspect_template_basic"
        primary_resource_id: "basic"
        vars:
          template: "temp"
        test_env_vars:
          project: :PROJECT_NAME
      - !ruby/object:Provider::Terraform::Examples
        name: "dlp_inspect_template_custom_type"
        primary_resource_id: "custom"
        vars:
          template: "temp"
        test_env_vars:
          project: :PROJECT_NAME
    custom_code: !ruby/object:Provider::Terraform::CustomCode
      encoder: templates/terraform/encoders/wrap_object.go.erb
      custom_import: templates/terraform/custom_import/dlp_import.go.erb
  StoredInfoType: !ruby/object:Overrides::Terraform::ResourceOverride
    async: !ruby/object:Provider::Terraform::PollAsync
      check_response_func_existence: PollCheckForExistence
      actions: ['create']
    id_format: "{{parent}}/storedInfoTypes/{{name}}"
    properties:
      name: !ruby/object:Overrides::Terraform::PropertyOverride
        custom_flatten: templates/terraform/custom_flatten/name_from_self_link.erb
    examples:
      - !ruby/object:Provider::Terraform::Examples
        name: "dlp_stored_info_type_basic"
        primary_resource_id: "basic"
        test_env_vars:
          project: :PROJECT_NAME
      - !ruby/object:Provider::Terraform::Examples
        name: "dlp_stored_info_type_dictionary"
        primary_resource_id: "dictionary"
        test_env_vars:
          project: :PROJECT_NAME
      - !ruby/object:Provider::Terraform::Examples
        name: "dlp_stored_info_type_large_custom_dictionary"
        primary_resource_id: "large"
        vars:
          bucket_name: tf-test-bucket
          object_name: tf-test-object
        test_env_vars:
          project: :PROJECT_NAME
    custom_code: !ruby/object:Provider::Terraform::CustomCode
      decoder: templates/terraform/decoders/dlp_stored_info_type.go.erb
      encoder: templates/terraform/encoders/dlp_stored_info_type.go.erb
      custom_import: templates/terraform/custom_import/dlp_import.go.erb
# This is for copying files over
files: !ruby/object:Provider::Config::Files
  # These files have templating (ERB) code that will be run.
  # This is usually to add licensing info, autogeneration notices, etc.
  compile:
<%= lines(indent(compile('provider/terraform/product~compile.yaml'), 4)) -%>
