<<<<<<< HEAD
# Copyright 2023 Google Inc.
=======
# Copyright 2024 Google Inc.
>>>>>>> 2fdda66097e2c96688e59f7c58c1f717c7785856
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

<<<<<<< HEAD
--- !ruby/object:Api::Resource
name: 'ConnectivityTest'
base_url: projects/{{project}}/locations/global/connectivityTests
create_url: projects/{{project}}/locations/global/connectivityTests?testId={{name}}
update_verb: :PATCH
update_mask: true
=======
---
name: 'ConnectivityTest'
>>>>>>> 2fdda66097e2c96688e59f7c58c1f717c7785856
description: |
  A connectivity test are a static analysis of your resource configurations
  that enables you to evaluate connectivity to and from Google Cloud
  resources in your Virtual Private Cloud (VPC) network.
<<<<<<< HEAD
references: !ruby/object:Api::Resource::ReferenceLinks
  guides:
    'Official Documentation': 'https://cloud.google.com/network-intelligence-center/docs'
  api: 'https://cloud.google.com/network-intelligence-center/docs/connectivity-tests/reference/networkmanagement/rest/v1/projects.locations.global.connectivityTests'
filename_override: 'connectivity_test_resource'
id_format: projects/{{project}}/locations/global/connectivityTests/{{name}}
autogen_async: true
examples:
  - !ruby/object:Provider::Terraform::Examples
    name: 'network_management_connectivity_test_instances'
=======
references:
  guides:
    'Official Documentation': 'https://cloud.google.com/network-intelligence-center/docs'
  api: 'https://cloud.google.com/network-intelligence-center/docs/connectivity-tests/reference/networkmanagement/rest/v1/projects.locations.global.connectivityTests'
docs:
id_format: 'projects/{{project}}/locations/global/connectivityTests/{{name}}'
base_url: 'projects/{{project}}/locations/global/connectivityTests'
create_url: 'projects/{{project}}/locations/global/connectivityTests?testId={{name}}'
update_verb: 'PATCH'
update_mask: true
timeouts:
  insert_minutes: 20
  update_minutes: 20
  delete_minutes: 20
autogen_async: true
async:
  actions: ['create', 'delete', 'update']
  type: 'OpAsync'
  operation:
    base_url: '{{op_id}}'
    path: 'name'
    wait_ms: 1000
  result:
    path: 'response'
    resource_inside_response: true
  error:
    path: 'error'
    message: 'message'
custom_code:
filename_override: 'connectivity_test_resource'
examples:
  - name: 'network_management_connectivity_test_instances'
>>>>>>> 2fdda66097e2c96688e59f7c58c1f717c7785856
    primary_resource_id: 'instance-test'
    vars:
      primary_resource_name: 'conn-test-instances'
      network_name: 'conn-test-net'
      source_instance: 'source-vm'
      dest_instance: 'dest-vm'
<<<<<<< HEAD
  - !ruby/object:Provider::Terraform::Examples
    name: 'network_management_connectivity_test_addresses'
=======
  - name: 'network_management_connectivity_test_addresses'
>>>>>>> 2fdda66097e2c96688e59f7c58c1f717c7785856
    primary_resource_id: 'address-test'
    vars:
      primary_resource_name: 'conn-test-addr'
      network: 'connectivity-vpc'
      source_addr: 'src-addr'
      dest_addr: 'dest-addr'
<<<<<<< HEAD
properties:
  - !ruby/object:Api::Type::String
    name: name
=======
parameters:
properties:
  - name: 'name'
    type: String
>>>>>>> 2fdda66097e2c96688e59f7c58c1f717c7785856
    description: |-
      Unique name for the connectivity test.
    required: true
    immutable: true
<<<<<<< HEAD
    custom_expand: 'templates/terraform/custom_expand/network_management_connectivity_test_name.go.erb'
    custom_flatten: 'templates/terraform/custom_flatten/name_from_self_link.erb'
  - !ruby/object:Api::Type::String
    name: description
    description: |-
      The user-supplied description of the Connectivity Test.
      Maximum of 512 characters.
  - !ruby/object:Api::Type::NestedObject
    name: 'source'
    required: true
=======
    custom_flatten: 'templates/terraform/custom_flatten/name_from_self_link.tmpl'
    custom_expand: 'templates/terraform/custom_expand/network_management_connectivity_test_name.go.tmpl'
  - name: 'description'
    type: String
    description: |-
      The user-supplied description of the Connectivity Test.
      Maximum of 512 characters.
  - name: 'source'
    type: NestedObject
>>>>>>> 2fdda66097e2c96688e59f7c58c1f717c7785856
    description: |
      Required. Source specification of the Connectivity Test.

      You can use a combination of source IP address, virtual machine
      (VM) instance, or Compute Engine network to uniquely identify the
      source location.

      Examples: If the source IP address is an internal IP address within
      a Google Cloud Virtual Private Cloud (VPC) network, then you must
      also specify the VPC network. Otherwise, specify the VM instance,
      which already contains its internal IP address and VPC network
      information.

      If the source of the test is within an on-premises network, then
      you must provide the destination VPC network.

      If the source endpoint is a Compute Engine VM instance with multiple
      network interfaces, the instance itself is not sufficient to
      identify the endpoint. So, you must also specify the source IP
      address or VPC network.

      A reachability analysis proceeds even if the source location is
      ambiguous. However, the test result may include endpoints that
      you don't intend to test.
<<<<<<< HEAD
=======
    required: true
>>>>>>> 2fdda66097e2c96688e59f7c58c1f717c7785856
    update_mask_fields:
      - 'source.ipAddress'
      - 'source.port'
      - 'source.instance'
      - 'source.network'
      - 'source.networkType'
      - 'source.projectId'
    properties:
<<<<<<< HEAD
      - !ruby/object:Api::Type::String
        name: ipAddress
=======
      - name: 'ipAddress'
        type: String
>>>>>>> 2fdda66097e2c96688e59f7c58c1f717c7785856
        description: |-
          The IP address of the endpoint, which can be an external or
          internal IP. An IPv6 address is only allowed when the test's
          destination is a global load balancer VIP.
<<<<<<< HEAD
      - !ruby/object:Api::Type::Integer
        name: port
        description: |-
          The IP protocol port of the endpoint. Only applicable when
          protocol is TCP or UDP.
      - !ruby/object:Api::Type::String
        name: instance
        description: |-
          A Compute Engine instance URI.
      - !ruby/object:Api::Type::String
        name: network
        description: |-
          A Compute Engine network URI.
      - !ruby/object:Api::Type::Enum
        name: networkType
        description: |-
          Type of the network where the endpoint is located.
        values:
          - :GCP_NETWORK
          - :NON_GCP_NETWORK
      - !ruby/object:Api::Type::String
        name: projectId
=======
      - name: 'port'
        type: Integer
        description: |-
          The IP protocol port of the endpoint. Only applicable when
          protocol is TCP or UDP.
      - name: 'instance'
        type: String
        description: |-
          A Compute Engine instance URI.
      - name: 'network'
        type: String
        description: |-
          A Compute Engine network URI.
      - name: 'networkType'
        type: Enum
        description: |-
          Type of the network where the endpoint is located.
        enum_values:
          - 'GCP_NETWORK'
          - 'NON_GCP_NETWORK'
      - name: 'projectId'
        type: String
>>>>>>> 2fdda66097e2c96688e59f7c58c1f717c7785856
        description: |-
          Project ID where the endpoint is located. The Project ID can be
          derived from the URI if you provide a VM instance or network URI.
          The following are two cases where you must provide the project ID:

          1. Only the IP address is specified, and the IP address is
             within a GCP project.
          2. When you are using Shared VPC and the IP address
             that you provide is from the service project. In this case,
             the network that the IP address resides in is defined in the
             host project.
<<<<<<< HEAD
  - !ruby/object:Api::Type::NestedObject
    name: 'destination'
    required: true
=======
  - name: 'destination'
    type: NestedObject
>>>>>>> 2fdda66097e2c96688e59f7c58c1f717c7785856
    description: |
      Required. Destination specification of the Connectivity Test.

      You can use a combination of destination IP address, Compute
      Engine VM instance, or VPC network to uniquely identify the
      destination location.

      Even if the destination IP address is not unique, the source IP
      location is unique. Usually, the analysis can infer the destination
      endpoint from route information.

      If the destination you specify is a VM instance and the instance has
      multiple network interfaces, then you must also specify either a
      destination IP address or VPC network to identify the destination
      interface.

      A reachability analysis proceeds even if the destination location
      is ambiguous. However, the result can include endpoints that you
      don't intend to test.
<<<<<<< HEAD
=======
    required: true
>>>>>>> 2fdda66097e2c96688e59f7c58c1f717c7785856
    update_mask_fields:
      - 'destination.ipAddress'
      - 'destination.port'
      - 'destination.instance'
      - 'destination.network'
      - 'destination.projectId'
    properties:
<<<<<<< HEAD
      - !ruby/object:Api::Type::String
        name: ipAddress
=======
      - name: 'ipAddress'
        type: String
>>>>>>> 2fdda66097e2c96688e59f7c58c1f717c7785856
        description: |-
          The IP address of the endpoint, which can be an external or
          internal IP. An IPv6 address is only allowed when the test's
          destination is a global load balancer VIP.
<<<<<<< HEAD
      - !ruby/object:Api::Type::Integer
        name: port
        description: |-
          The IP protocol port of the endpoint. Only applicable when
          protocol is TCP or UDP.
      - !ruby/object:Api::Type::String
        name: instance
        description: |-
          A Compute Engine instance URI.
      - !ruby/object:Api::Type::String
        name: network
        description: |-
          A Compute Engine network URI.
      - !ruby/object:Api::Type::String
        name: projectId
=======
      - name: 'port'
        type: Integer
        description: |-
          The IP protocol port of the endpoint. Only applicable when
          protocol is TCP or UDP.
      - name: 'instance'
        type: String
        description: |-
          A Compute Engine instance URI.
      - name: 'network'
        type: String
        description: |-
          A Compute Engine network URI.
      - name: 'projectId'
        type: String
>>>>>>> 2fdda66097e2c96688e59f7c58c1f717c7785856
        description: |-
          Project ID where the endpoint is located. The Project ID can be
          derived from the URI if you provide a VM instance or network URI.
          The following are two cases where you must provide the project ID:
          1. Only the IP address is specified, and the IP address is within
          a GCP project. 2. When you are using Shared VPC and the IP address
          that you provide is from the service project. In this case, the
          network that the IP address resides in is defined in the host
          project.
<<<<<<< HEAD
  - !ruby/object:Api::Type::String
    name: protocol
    description: |-
      IP Protocol of the test. When not provided, "TCP" is assumed.
    default_value: 'TCP'
  - !ruby/object:Api::Type::Array
    name: relatedProjects
=======
  - name: 'protocol'
    type: String
    description: |-
      IP Protocol of the test. When not provided, "TCP" is assumed.
    default_value: "TCP"
  - name: 'relatedProjects'
    type: Array
>>>>>>> 2fdda66097e2c96688e59f7c58c1f717c7785856
    description: |-
      Other projects that may be relevant for reachability analysis.
      This is applicable to scenarios where a test can cross project
      boundaries.
<<<<<<< HEAD
    item_type: Api::Type::String
  - !ruby/object:Api::Type::KeyValueLabels
    name: 'labels'
=======
    item_type:
      type: String
  - name: 'labels'
    type: KeyValueLabels
>>>>>>> 2fdda66097e2c96688e59f7c58c1f717c7785856
    description: |
      Resource labels to represent user-provided metadata.
