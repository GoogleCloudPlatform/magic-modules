# Copyright 2019 Google Inc.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

--- !ruby/object:Provider::Terraform::Config
legacy_name: 'bigquery'
overrides: !ruby/object:Overrides::ResourceOverrides
  Dataset: !ruby/object:Overrides::Terraform::ResourceOverride
    import_format: ["projects/{{project}}/datasets/{{dataset_id}}"]
    delete_url: projects/{{project}}/datasets/{{dataset_id}}?deleteContents={{delete_contents_on_destroy}}
    # Skipping sweeper due to the abnormal delete_url
    skip_sweeper: true
    examples:
      - !ruby/object:Provider::Terraform::Examples
        name: "bigquery_dataset_basic"
        primary_resource_id: "dataset"
        vars:
          dataset_id: "example_dataset"
          account_name: "bqowner"
      - !ruby/object:Provider::Terraform::Examples
        name: "bigquery_dataset_cmek"
        skip_test: true
        primary_resource_id: "dataset"
        vars:
          dataset_id: "example_dataset"
          key_name: "example-key"
          keyring_name: "example-keyring"
    virtual_fields:
      - !ruby/object:Api::Type::Boolean
        name: 'delete_contents_on_destroy'
        default_value: false
        description: |
          If set to `true`, delete all the tables in the
          dataset when destroying the resource; otherwise,
          destroying the resource will fail if tables are present.
    properties:
      access: !ruby/object:Overrides::Terraform::PropertyOverride
        default_from_api: true
        is_set: true
      access.iamMember: !ruby/object:Overrides::Terraform::PropertyOverride
        exclude: true
      defaultTableExpirationMs: !ruby/object:Overrides::Terraform::PropertyOverride
        validation: !ruby/object:Provider::Terraform::Validation
          function: 'validateDefaultTableExpirationMs'
      datasetReference: !ruby/object:Overrides::Terraform::PropertyOverride
        flatten_object: true
      datasetReference.datasetId: !ruby/object:Overrides::Terraform::PropertyOverride
        validation: !ruby/object:Provider::Terraform::Validation
          function: 'validateDatasetId'
      datasetReference.projectId: !ruby/object:Overrides::Terraform::PropertyOverride
        exclude: true
      id: !ruby/object:Overrides::Terraform::PropertyOverride
        exclude: true
      location: !ruby/object:Overrides::Terraform::PropertyOverride
        input: true
        custom_flatten: templates/terraform/custom_flatten/bigquery_dataset_location.go.erb
      name: !ruby/object:Overrides::Terraform::PropertyOverride
        exclude: true
    custom_code: !ruby/object:Provider::Terraform::CustomCode
      constants: templates/terraform/constants/bigquery_dataset.go.erb
    docs: !ruby/object:Provider::Terraform::Docs
      warning: |
        You must specify the role field using the legacy format `OWNER` instead of `roles/bigquery.dataOwner`. 
        The API does accept both formats but it will always return the legacy format which results in Terraform
        showing permanent diff on each plan and apply operation.
  DatasetAccess: !ruby/object:Overrides::Terraform::ResourceOverride
    exclude_import: true # no unique way to specify
    skip_sweeper: true  # covered by Dataset sweeper
    exclude_validator: true
    error_retry_predicates: ["isBigqueryIAMQuotaError"]
    mutex: "{{dataset_id}}"
    examples:
      - !ruby/object:Provider::Terraform::Examples
        name: "bigquery_dataset_access_basic_user"
        skip_test: true  # not importable
        primary_resource_id: "access"
        vars:
          dataset_id: "example_dataset"
          account_name: "bqowner"
      - !ruby/object:Provider::Terraform::Examples
        name: "bigquery_dataset_access_view"
        skip_test: true  # not importable
        primary_resource_id: "access"
        vars:
          dataset_id: "example_dataset"
          dataset_id2: "example_dataset2"
          table_id: "example_table"
    properties:
      datasetId: !ruby/object:Overrides::Terraform::PropertyOverride
        ignore_read: true
      role: !ruby/object:Overrides::Terraform::PropertyOverride
        # Bigquery allows for two different formats for specific roles
        # (IAM vs "primitive" format), but will return the primitive role in API
        # responses. We identify this fine-grained resource from a list
        # of DatasetAccess objects by comparing role, and we must use the same
        # format when comparing.
        diff_suppress_func: 'resourceBigQueryDatasetAccessRoleDiffSuppress'
        # This custom expand makes sure we are correctly
        # converting IAM roles set in state to their primitive equivalents
        # before comparison.
        custom_expand: "templates/terraform/custom_expand/bigquery_access_role.go.erb"
      iamMember: !ruby/object:Overrides::Terraform::PropertyOverride
        diff_suppress_func: resourceBigQueryDatasetAccessIamMemberDiffSuppress
      userByEmail: !ruby/object:Overrides::Terraform::PropertyOverride
        diff_suppress_func: resourceBigQueryDatasetAccessIamMemberDiffSuppress
      groupByEmail: !ruby/object:Overrides::Terraform::PropertyOverride
        diff_suppress_func: resourceBigQueryDatasetAccessIamMemberDiffSuppress
      specialGroup: !ruby/object:Overrides::Terraform::PropertyOverride
        diff_suppress_func: resourceBigQueryDatasetAccessIamMemberDiffSuppress
      domain: !ruby/object:Overrides::Terraform::PropertyOverride
        diff_suppress_func: resourceBigQueryDatasetAccessIamMemberDiffSuppress
    custom_code: !ruby/object:Provider::Terraform::CustomCode
      constants: templates/terraform/constants/bigquery_dataset_access.go.erb
      post_create: templates/terraform/post_create/bigquery_dataset_access.go.erb
      extra_schema_entry: templates/terraform/extra_schema_entry/bigquery_dataset_access.go.erb
    docs: !ruby/object:Provider::Terraform::Docs
      warning: |
        You must specify the role field using the legacy format `OWNER` instead of `roles/bigquery.dataOwner`. 
        The API does accept both formats but it will always return the legacy format which results in Terraform
        showing permanent diff on each plan and apply operation.
  Job: !ruby/object:Overrides::Terraform::ResourceOverride
    import_format: ["projects/{{project}}/jobs/{{job_id}}/location/{{location}}", "projects/{{project}}/jobs/{{job_id}}", "{{project}}/{{job_id}}", "{{job_id}}"]
    skip_delete: true
    id_format: projects/{{project}}/jobs/{{job_id}}
    async: !ruby/object:Provider::Terraform::PollAsync
      check_response_func_existence: PollCheckForExistence
      actions: ['create']
      operation: !ruby/object:Api::Async::Operation
        timeouts: !ruby/object:Api::Timeouts
          insert_minutes: 4
    examples:
      - !ruby/object:Provider::Terraform::Examples
        name: "bigquery_job_query"
        primary_resource_id: "job"
        vars:
          job_id: "job_query"
          account_name: "bqowner"
        ignore_read_extra:
          - "etag"
          - "status.0.state"
      - !ruby/object:Provider::Terraform::Examples
        name: "bigquery_job_query_table_reference"
        primary_resource_id: "job"
        vars:
          job_id: "job_query"
          account_name: "bqowner"
        ignore_read_extra:
          - "etag"
          - "query.0.default_dataset.0.dataset_id"
          - "query.0.destination_table.0.table_id"
          - "status.0.state"
      - !ruby/object:Provider::Terraform::Examples
        name: "bigquery_job_load"
        primary_resource_id: "job"
        vars:
          job_id: "job_load"
        ignore_read_extra:
          - "etag"
          - "status.0.state"
      - !ruby/object:Provider::Terraform::Examples
        name: "bigquery_job_load_table_reference"
        primary_resource_id: "job"
        vars:
          job_id: "job_load"
        ignore_read_extra:
          - "etag"
          - "load.0.destination_table.0.table_id"
          - "status.0.state"
        skip_docs: true  # there are a lot of examples for this resource, so omitting some that are similar to others
      - !ruby/object:Provider::Terraform::Examples
        name: "bigquery_job_copy"
        primary_resource_id: "job"
        vars:
          job_id: "job_copy"
          account_name: "bqowner"
          key_name: "example-key"
          keyring_name: "example-keyring"
        test_env_vars:
          project: :PROJECT_NAME
        ignore_read_extra:
          - "etag"
          - "status.0.state"
      - !ruby/object:Provider::Terraform::Examples
        name: "bigquery_job_copy_table_reference"
        primary_resource_id: "job"
        vars:
          job_id: "job_copy"
          account_name: "bqowner"
          key_name: "example-key"
          keyring_name: "example-keyring"
        test_env_vars:
          project: :PROJECT_NAME
        ignore_read_extra:
          - "etag"
          - "copy.0.destination_table.0.table_id"
          - "copy.0.source_tables.0.table_id"
          - "copy.0.source_tables.1.table_id"
          - "status.0.state"
        skip_docs: true  # there are a lot of examples for this resource, so omitting some that are similar to others
      - !ruby/object:Provider::Terraform::Examples
        name: "bigquery_job_extract"
        primary_resource_id: "job"
        vars:
          job_id: "job_extract"
          account_name: "bqowner"
        ignore_read_extra:
          - "etag"
          - "status.0.state"
      - !ruby/object:Provider::Terraform::Examples
        name: "bigquery_job_extract_table_reference"
        primary_resource_id: "job"
        vars:
          job_id: "job_extract"
          account_name: "bqowner"
        ignore_read_extra:
          - "etag"
          - "extract.0.source_table.0.table_id"
          - "status.0.state"
        skip_docs: true  # there are a lot of examples for this resource, so omitting some that are similar to others
    properties:
      id: !ruby/object:Overrides::Terraform::PropertyOverride
        exclude: true
      configuration: !ruby/object:Overrides::Terraform::PropertyOverride
        flatten_object: true
      configuration.copy.destinationTable: !ruby/object:Overrides::Terraform::PropertyOverride
        custom_expand: 'templates/terraform/custom_expand/bigquery_table_ref.go.erb'
        custom_flatten: 'templates/terraform/custom_flatten/bigquery_table_ref_copy_destinationtable.go.erb'
      configuration.copy.destinationTable.projectId: !ruby/object:Overrides::Terraform::PropertyOverride
        required: false
        default_from_api: true
      configuration.copy.destinationTable.datasetId: !ruby/object:Overrides::Terraform::PropertyOverride
        required: false
        default_from_api: true
      configuration.copy.destinationTable.tableId: !ruby/object:Overrides::Terraform::PropertyOverride
        description: |
          The table. Can be specified `{{table_id}}` if `project_id` and `dataset_id` are also set,
          or of the form `projects/{{project}}/datasets/{{dataset_id}}/tables/{{table_id}}` if not.
        diff_suppress_func: 'compareSelfLinkRelativePaths'
      configuration.copy.sourceTables: !ruby/object:Overrides::Terraform::PropertyOverride
        custom_expand: 'templates/terraform/custom_expand/bigquery_table_ref_array.go.erb'
        custom_flatten: 'templates/terraform/custom_flatten/bigquery_table_ref_copy_sourcetables.go.erb'
      configuration.copy.sourceTables.projectId: !ruby/object:Overrides::Terraform::PropertyOverride
        required: false
        default_from_api: true
      configuration.copy.sourceTables.datasetId: !ruby/object:Overrides::Terraform::PropertyOverride
        required: false
        default_from_api: true
      configuration.copy.sourceTables.tableId: !ruby/object:Overrides::Terraform::PropertyOverride
        description: |
          The table. Can be specified `{{table_id}}` if `project_id` and `dataset_id` are also set,
          or of the form `projects/{{project}}/datasets/{{dataset_id}}/tables/{{table_id}}` if not.
        diff_suppress_func: 'compareSelfLinkRelativePaths'
      configuration.load.destinationTable: !ruby/object:Overrides::Terraform::PropertyOverride
        custom_expand: 'templates/terraform/custom_expand/bigquery_table_ref.go.erb'
        custom_flatten: 'templates/terraform/custom_flatten/bigquery_table_ref_load_destinationtable.go.erb'
      configuration.load.destinationTable.projectId: !ruby/object:Overrides::Terraform::PropertyOverride
        required: false
        default_from_api: true
      configuration.load.destinationTable.datasetId: !ruby/object:Overrides::Terraform::PropertyOverride
        required: false
        default_from_api: true
      configuration.load.destinationTable.tableId: !ruby/object:Overrides::Terraform::PropertyOverride
        description: |
          The table. Can be specified `{{table_id}}` if `project_id` and `dataset_id` are also set,
          or of the form `projects/{{project}}/datasets/{{dataset_id}}/tables/{{table_id}}` if not.
        diff_suppress_func: 'compareSelfLinkRelativePaths'
      configuration.load.skipLeadingRows: !ruby/object:Overrides::Terraform::PropertyOverride
        validation: !ruby/object:Provider::Terraform::Validation
          function: 'validation.IntAtLeast(0)'
      configuration.load.fieldDelimiter: !ruby/object:Overrides::Terraform::PropertyOverride
        default_from_api: true
      configuration.load.quote: !ruby/object:Overrides::Terraform::PropertyOverride
        default_from_api: true
      configuration.extract.fieldDelimiter: !ruby/object:Overrides::Terraform::PropertyOverride
        default_from_api: true
      configuration.extract.destinationFormat: !ruby/object:Overrides::Terraform::PropertyOverride
        default_from_api: true
      configuration.extract.sourceTable: !ruby/object:Overrides::Terraform::PropertyOverride
        custom_expand: 'templates/terraform/custom_expand/bigquery_table_ref.go.erb'
        custom_flatten: 'templates/terraform/custom_flatten/bigquery_table_ref_extract_sourcetable.go.erb'
      configuration.extract.sourceTable.projectId: !ruby/object:Overrides::Terraform::PropertyOverride
        required: false
        default_from_api: true
      configuration.extract.sourceTable.datasetId: !ruby/object:Overrides::Terraform::PropertyOverride
        required: false
        default_from_api: true
      configuration.extract.sourceTable.tableId: !ruby/object:Overrides::Terraform::PropertyOverride
        description: |
          The table. Can be specified `{{table_id}}` if `project_id` and `dataset_id` are also set,
          or of the form `projects/{{project}}/datasets/{{dataset_id}}/tables/{{table_id}}` if not.
        diff_suppress_func: 'compareSelfLinkRelativePaths'
      configuration.query.destinationTable: !ruby/object:Overrides::Terraform::PropertyOverride
        custom_expand: 'templates/terraform/custom_expand/bigquery_table_ref.go.erb'
        custom_flatten: 'templates/terraform/custom_flatten/bigquery_table_ref_query_destinationtable.go.erb'
      configuration.query.destinationTable.projectId: !ruby/object:Overrides::Terraform::PropertyOverride
        required: false
        default_from_api: true
      configuration.query.destinationTable.datasetId: !ruby/object:Overrides::Terraform::PropertyOverride
        required: false
        default_from_api: true
      configuration.query.destinationTable.tableId: !ruby/object:Overrides::Terraform::PropertyOverride
        description: |
          The table. Can be specified `{{table_id}}` if `project_id` and `dataset_id` are also set,
          or of the form `projects/{{project}}/datasets/{{dataset_id}}/tables/{{table_id}}` if not.
        diff_suppress_func: 'compareSelfLinkRelativePaths'
      configuration.query.defaultDataset: !ruby/object:Overrides::Terraform::PropertyOverride
        custom_expand: 'templates/terraform/custom_expand/bigquery_dataset_ref.go.erb'
        custom_flatten: 'templates/terraform/custom_flatten/bigquery_dataset_ref.go.erb'
      configuration.query.defaultDataset.projectId: !ruby/object:Overrides::Terraform::PropertyOverride
        required: false
        default_from_api: true
      configuration.query.defaultDataset.datasetId: !ruby/object:Overrides::Terraform::PropertyOverride
        description: |
          The dataset. Can be specified `{{dataset_id}}` if `project_id` is also set,
          or of the form `projects/{{project}}/datasets/{{dataset_id}}` if not.
        diff_suppress_func: 'compareSelfLinkRelativePaths'
      configuration.copy.destinationEncryptionConfiguration: !ruby/object:Overrides::Terraform::PropertyOverride
        custom_flatten: 'templates/terraform/custom_flatten/bigquery_kms_version.go.erb'
      configuration.load.destinationEncryptionConfiguration: !ruby/object:Overrides::Terraform::PropertyOverride
        custom_flatten: 'templates/terraform/custom_flatten/bigquery_kms_version.go.erb'
      configuration.query.destinationEncryptionConfiguration: !ruby/object:Overrides::Terraform::PropertyOverride
        custom_flatten: 'templates/terraform/custom_flatten/bigquery_kms_version.go.erb'
      jobReference: !ruby/object:Overrides::Terraform::PropertyOverride
        flatten_object: true
      jobReference.projectId: !ruby/object:Overrides::Terraform::PropertyOverride
        exclude: true
    custom_code: !ruby/object:Provider::Terraform::CustomCode
      constants: templates/terraform/constants/bigquery_job.go
      encoder: templates/terraform/encoders/bigquery_job.go.erb
  Table: !ruby/object:Overrides::Terraform::ResourceOverride
    base_url: 'projects/{{project}}/datasets/{{dataset_id}}/tables/{{table_id}}'
    self_link: 'projects/{{project}}/datasets/{{dataset_id}}/tables/{{table_id}}'
    exclude_resource: true
    iam_policy: !ruby/object:Api::Resource::IamPolicy
      method_name_separator: ':'
      parent_resource_type: 'google_bigquery_table'
      parent_resource_attribute: 'table_id'
      fetch_iam_policy_verb: :POST
      allowed_iam_role: 'roles/bigquery.dataOwner'
      iam_conditions_request_type: :REQUEST_BODY
      iam_policy_version: '1'
    id_format: "{{table_id}}"
    import_format: [
        "projects/{{project}}/datasets/{{dataset_id}}/tables/{{table_id}}", "{{table_id}}"
    ]
    examples:
      - !ruby/object:Provider::Terraform::Examples
        name: "bigquery_bigquery_table"
        primary_resource_id: "test"
        primary_resource_name: "fmt.Sprintf(\"tf_test_dataset_id%s\", context[\"random_suffix\"]), fmt.Sprintf(\"tf_test_table_id%s\", context[\"random_suffix\"])"
        vars:
          dataset_id: "dataset_id"
          table_id: "table_id"
  Routine: !ruby/object:Overrides::Terraform::ResourceOverride
    import_format: ["projects/{{project}}/datasets/{{dataset_id}}/routines/{{routine_id}}"]
    examples:
      - !ruby/object:Provider::Terraform::Examples
        name: "big_query_routine_basic"
        primary_resource_id: "sproc"
        primary_resource_name: "fmt.Sprintf(\"tf_test_dataset_id%s\", context[\"random_suffix\"]), fmt.Sprintf(\"tf_test_table_id%s\", context[\"random_suffix\"])"
        vars:
          dataset_id: "dataset_id"
          routine_id: "routine_id"
      - !ruby/object:Provider::Terraform::Examples
        name: "big_query_routine_json"
        primary_resource_id: "sproc"
        primary_resource_name: "fmt.Sprintf(\"tf_test_dataset_id%s\", context[\"random_suffix\"]), fmt.Sprintf(\"tf_test_table_id%s\", context[\"random_suffix\"])"
        vars:
          dataset_id: "dataset_id"
          routine_id: "routine_id"
    properties:
      routineReference: !ruby/object:Overrides::Terraform::PropertyOverride
        custom_expand: 'templates/terraform/custom_expand/bigquery_routine_ref.go.erb'
        flatten_object: true
      routineReference.projectId: !ruby/object:Overrides::Terraform::PropertyOverride
        exclude: true
      arguments.dataType: !ruby/object:Overrides::Terraform::PropertyOverride
        custom_expand: 'templates/terraform/custom_expand/json_schema.erb'
        custom_flatten: 'templates/terraform/custom_flatten/json_schema.erb'
        state_func: 'func(v interface{}) string { s, _ := structure.NormalizeJsonString(v); return s }'
        validation: !ruby/object:Provider::Terraform::Validation
          function: 'validation.StringIsJSON'
      returnType: !ruby/object:Overrides::Terraform::PropertyOverride
        custom_expand: 'templates/terraform/custom_expand/json_schema.erb'
        custom_flatten: 'templates/terraform/custom_flatten/json_schema.erb'
        state_func: 'func(v interface{}) string { s, _ := structure.NormalizeJsonString(v); return s }'
        validation: !ruby/object:Provider::Terraform::Validation
          function: 'validation.StringIsJSON'
      id: !ruby/object:Overrides::Terraform::PropertyOverride
        exclude: true
# This is for copying files over
files: !ruby/object:Provider::Config::Files
  # These files have templating (ERB) code that will be run.
  # This is usually to add licensing info, autogeneration notices, etc.
  compile:
<%= lines(indent(compile('provider/terraform/product~compile.yaml'), 4)) -%>
