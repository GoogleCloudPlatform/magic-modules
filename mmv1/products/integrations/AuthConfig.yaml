# Copyright 2024 Google Inc.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

--- !ruby/object:Api::Resource
name: 'AuthConfig'
description: |
  The AuthConfig resource use to hold channels and connection config data.
references: !ruby/object:Api::Resource::ReferenceLinks
  guides:
    'Official Documentation': 'https://cloud.google.com/application-integration/docs/overview'
    'Manage authentication profiles': 'https://cloud.google.com/application-integration/docs/configure-authentication-profiles'
  api: 'https://cloud.google.com/application-integration/docs/reference/rest/v1/projects.locations.authConfigs'
base_url: 'projects/{{project}}/locations/{{location}}/authConfigs'
self_link: '{{name}}'
update_verb: :PATCH
autogen_async: false
id_format: '{{name}}'
import_format: ['{{name}}']
mutex: '{{name}}'
custom_code: !ruby/object:Provider::Terraform::CustomCode
  custom_import: templates/terraform/custom_import/self_link_as_name.erb
  pre_create: templates/terraform/pre_create/integrations_auth_config.go.erb
  post_create: templates/terraform/post_create/set_computed_name.erb
  pre_update: templates/terraform/pre_update/integrations_auth_config.go.erb
parameters:
  - !ruby/object:Api::Type::String
    name: 'location'
    required: true
    immutable: true
    url_param_only: true
    description: |
      Location in which client needs to be provisioned.
properties:
  - !ruby/object:Api::Type::String
    name: 'name'
    description: |
      Resource name of the auth config.
    output: true
  - !ruby/object:Api::Type::String
    name: 'displayName'
    description: |
      The name of the auth config.
    required: true
  - !ruby/object:Api::Type::String
    name: 'description'
    description: |
      A description of the auth config.
  - !ruby/object:Api::Type::String
    name: 'certificateId'
    description: |
      Certificate id for client certificate.
    output: true
  - !ruby/object:Api::Type::Enum
    name: 'credentialType'
    description: |
      Credential type of the encrypted credential.
    values:
      - USERNAME_AND_PASSWORD
      - OAUTH2_AUTHORIZATION_CODE
      - OAUTH2_IMPLICIT
      - OAUTH2_CLIENT_CREDENTIALS
      - OAUTH2_RESORUCE_OWNER_CREDENTIALS
      - JWT
      - AUTH_TOKEN
      - SERVICE_ACCOUNT
      - CLIENT_CERTIFICATE_ONLY
      - OIDC_TOKEN
    output: true
  - !ruby/object:Api::Type::String
    name: 'creatorEmail'
    description: |
      The creator's email address. Generated based on the End User Credentials/LOAS role of the user making the call.
    output: true
  - !ruby/object:Api::Type::Time
    name: "createTime"
    description: |
      The timestamp when the auth config is created.

      A timestamp in RFC3339 UTC "Zulu" format, with nanosecond resolution and up to nine fractional digits. Examples: "2014-10-02T15:01:23Z" and "2014-10-02T15:01:23.045123456Z".
    output: true
  - !ruby/object:Api::Type::String
    name: 'lastModifierEmail'
    description: |
      The last modifier's email address. Generated based on the End User Credentials/LOAS role of the user making the call.
    output: true
  - !ruby/object:Api::Type::Time
    name: "updateTime"
    description: |
      The timestamp when the auth config is modified.

      A timestamp in RFC3339 UTC "Zulu" format, with nanosecond resolution and up to nine fractional digits. Examples: "2014-10-02T15:01:23Z" and "2014-10-02T15:01:23.045123456Z".
    output: true
  - !ruby/object:Api::Type::Enum
    name: 'visibility'
    description: |
      The visibility of the auth config.
    values:
      - PRIVATE
      - CLIENT_VISIBLE
  - !ruby/object:Api::Type::Enum
    name: 'state'
    description: |
      The status of the auth config.
    values:
      - VALID
      - INVALID
      - SOFT_DELETED
      - EXPIRED
      - UNAUTHORIZED
      - UNSUPPORTED
    output: true
  - !ruby/object:Api::Type::String
    name: 'reason'
    description: |
      The reason / details of the current status.
    output: true
  - !ruby/object:Api::Type::Array
    name: 'expiryNotificationDuration'
    description: |
      User can define the time to receive notification after which the auth config becomes invalid. Support up to 30 days. Support granularity in hours.

      A duration in seconds with up to nine fractional digits, ending with 's'. Example: "3.5s".
    item_type: Api::Type::String
  - !ruby/object:Api::Type::String
    name: 'validTime'
    description: |
      The time until the auth config is valid. Empty or max value is considered the auth config won't expire.

      A timestamp in RFC3339 UTC "Zulu" format, with nanosecond resolution and up to nine fractional digits. Examples: "2014-10-02T15:01:23Z" and "2014-10-02T15:01:23.045123456Z".
    output: true
  - !ruby/object:Api::Type::String
    name: 'overrideValidTime'
    description: |
      User provided expiry time to override. For the example of Salesforce, username/password credentials can be valid for 6 months depending on the instance settings.

      A timestamp in RFC3339 UTC "Zulu" format, with nanosecond resolution and up to nine fractional digits. Examples: "2014-10-02T15:01:23Z" and "2014-10-02T15:01:23.045123456Z".
  - !ruby/object:Api::Type::String
    name: 'encryptedCredential'
    description: |
      Auth credential encrypted by Cloud KMS. Can be decrypted as Credential with proper KMS key.

      A base64-encoded string.
    output: true
  - !ruby/object:Api::Type::NestedObject
    name: 'decryptedCredential'
    description: |
      Raw auth credentials.
    properties:
      - !ruby/object:Api::Type::ResourceRef
        name: 'credentialType'
        description: |
          Credential type associated with auth configs.
        resource: 'AuthConfig'
        imports: 'credentialType'
        required: true
      - !ruby/object:Api::Type::NestedObject
        name: 'usernameAndPassword'
        description: |
          Username and password credential.
        conflicts:
          - decryptedCredential.0.oauth2_authorization_code
          - decryptedCredential.0.oauth2_client_credentials
          - decryptedCredential.0.jwt
          - decryptedCredential.0.auth_token
          - decryptedCredential.0.service_account_credentials
          - decryptedCredential.0.oidc_token
        properties:
          - !ruby/object:Api::Type::String
            name: 'username'
            description: |
              Username to be used.
          - !ruby/object:Api::Type::String
            name: 'password'
            description: |
              Password to be used.
      - !ruby/object:Api::Type::NestedObject
        name: 'oauth2AuthorizationCode'
        description: |
          OAuth2 authorization code credential.
        conflicts:
          - decryptedCredential.0.username_and_password
          - decryptedCredential.0.oauth2_client_credentials
          - decryptedCredential.0.jwt
          - decryptedCredential.0.auth_token
          - decryptedCredential.0.service_account_credentials
          - decryptedCredential.0.oidc_token
        properties:
          - !ruby/object:Api::Type::String
            name: 'clientId'
            description: |
              The client's id.
          - !ruby/object:Api::Type::String
            name: 'clientSecret'
            description: |
              The client's secret.
          - !ruby/object:Api::Type::String
            name: 'scope'
            description: |
              A space-delimited list of requested scope permissions.
          - !ruby/object:Api::Type::String
            name: 'authEndpoint'
            description: |
              The auth url endpoint to send the auth code request to.
          - !ruby/object:Api::Type::String
            name: 'tokenEndpoint'
            description: |
              The token url endpoint to send the token request to.
      - !ruby/object:Api::Type::NestedObject
        name: 'oauth2ClientCredentials'
        description: |
          OAuth2 client credentials.
        conflicts:
          - decryptedCredential.0.username_and_password
          - decryptedCredential.0.oauth2_authorization_code
          - decryptedCredential.0.jwt
          - decryptedCredential.0.auth_token
          - decryptedCredential.0.service_account_credentials
          - decryptedCredential.0.oidc_token
        properties:
          - !ruby/object:Api::Type::String
            name: 'clientId'
            description: |
              The client's ID.
          - !ruby/object:Api::Type::String
            name: 'clientSecret'
            description: |
              The client's secret.
          - !ruby/object:Api::Type::String
            name: 'tokenEndpoint'
            description: |
              The token endpoint is used by the client to obtain an access token by presenting its authorization grant or refresh token.
          - !ruby/object:Api::Type::String
            name: 'scope'
            description: |
              A space-delimited list of requested scope permissions.
          - !ruby/object:Api::Type::NestedObject
            name: 'tokenParams'
            description: |
              Token parameters for the auth request.
            properties:  # ParameterMap
              - !ruby/object:Api::Type::Array
                name: 'entries'
                description: |
                  A list of parameter map entries.
                item_type: !ruby/object:Api::Type::NestedObject
                  properties:  # ParameterMapEntry
                    - !ruby/object:Api::Type::NestedObject
                      name: 'key'
                      description: |
                        Key of the map entry.
                      properties:  # ParameterMapField
                        - !ruby/object:Api::Type::NestedObject
                          name: 'literalValue'
                          description: |
                            Passing a literal value
                          properties:  # ValueType
                            - !ruby/object:Api::Type::String
                              name: 'stringValue'
                              description: |
                                String.
                    - !ruby/object:Api::Type::NestedObject
                      name: 'value'
                      description: |
                        Value of the map entry.
                      properties:  # ParameterMapField
                        - !ruby/object:Api::Type::NestedObject
                          name: 'literalValue'
                          description: |
                            Passing a literal value
                          properties:  # ValueType
                            - !ruby/object:Api::Type::String
                              name: 'stringValue'
                              description: |
                                String.
          - !ruby/object:Api::Type::Enum
            name: 'requestType'
            description: |
              Represent how to pass parameters to fetch access token
            values:
              - REQUEST_TYPE_UNSPECIFIED
              - REQUEST_BODY
              - QUERY_PARAMETERS
              - ENCODED_HEADER
      - !ruby/object:Api::Type::NestedObject
        name: 'jwt'
        description: |
          JWT credential.
        conflicts:
          - decryptedCredential.0.username_and_password
          - decryptedCredential.0.oauth2_authorization_code
          - decryptedCredential.0.oauth2_client_credentials
          - decryptedCredential.0.auth_token
          - decryptedCredential.0.service_account_credentials
          - decryptedCredential.0.oidc_token
        properties:
          - !ruby/object:Api::Type::String
            name: 'jwtHeader'
            description: |
              Identifies which algorithm is used to generate the signature.
          - !ruby/object:Api::Type::String
            name: 'jwtPayload'
            description: |
              Contains a set of claims. The JWT specification defines seven Registered Claim Names which are the standard fields commonly included in tokens. Custom claims are usually also included, depending on the purpose of the token.
          - !ruby/object:Api::Type::String
            name: 'secret'
            description: |
              User's pre-shared secret to sign the token.
          - !ruby/object:Api::Type::String
            name: 'jwt'
            description: |
              The token calculated by the header, payload and signature.
            output: true
      - !ruby/object:Api::Type::NestedObject
        name: 'authToken'
        description: |
          Auth token credential.
        conflicts:
          - decryptedCredential.0.username_and_password
          - decryptedCredential.0.oauth2_authorization_code
          - decryptedCredential.0.oauth2_client_credentials
          - decryptedCredential.0.jwt
          - decryptedCredential.0.service_account_credentials
          - decryptedCredential.0.oidc_token
        properties:
          - !ruby/object:Api::Type::String
            name: 'type'
            description: |
              Authentication type, e.g. "Basic", "Bearer", etc.
          - !ruby/object:Api::Type::String
            name: 'token'
            description: |
              The token for the auth type.
      - !ruby/object:Api::Type::NestedObject
        name: 'serviceAccountCredentials'
        description: |
          Service account credential.
        conflicts:
          - decryptedCredential.0.username_and_password
          - decryptedCredential.0.oauth2_authorization_code
          - decryptedCredential.0.oauth2_client_credentials
          - decryptedCredential.0.jwt
          - decryptedCredential.0.auth_token
          - decryptedCredential.0.oidc_token
        properties:
          - !ruby/object:Api::Type::String
            name: 'serviceAccount'
            description: |
              Name of the service account that has the permission to make the request.
          - !ruby/object:Api::Type::String
            name: 'scope'
            description: |
              A space-delimited list of requested scope permissions.
      - !ruby/object:Api::Type::NestedObject
        name: 'oidcToken'
        description: |
          Google OIDC ID Token.
        conflicts:
          - decryptedCredential.0.username_and_password
          - decryptedCredential.0.oauth2_authorization_code
          - decryptedCredential.0.oauth2_client_credentials
          - decryptedCredential.0.jwt
          - decryptedCredential.0.auth_token
          - decryptedCredential.0.service_account_credentials
        properties:
          - !ruby/object:Api::Type::String
            name: 'serviceAccountEmail'
            description: |
              The service account email to be used as the identity for the token.
          - !ruby/object:Api::Type::String
            name: 'audience'
            description: |
              Audience to be used when generating OIDC token. The audience claim identifies the recipients that the JWT is intended for.
          - !ruby/object:Api::Type::String
            name: 'token'
            description: |
              ID token obtained for the service account.
            output: true
          - !ruby/object:Api::Type::String
            name: 'tokenExpireTime'
            description: |
              The approximate time until the token retrieved is valid.

              A timestamp in RFC3339 UTC "Zulu" format, with nanosecond resolution and up to nine fractional digits. Examples: "2014-10-02T15:01:23Z" and "2014-10-02T15:01:23.045123456Z".
            output: true
  - !ruby/object:Api::Type::NestedObject
    name: 'client_certificate'
    description: |
      Raw client certificate
    ignore_read: true
    properties:
      - !ruby/object:Api::Type::String
        name: 'ssl_certificate'
        description: |
          The ssl certificate encoded in PEM format. This string must include the begin header and end footer lines.
        required: true
      - !ruby/object:Api::Type::String
        name: 'encrypted_private_key'
        description: |
          The ssl certificate encoded in PEM format. This string must include the begin header and end footer lines.
        required: true
      - !ruby/object:Api::Type::String
        name: 'passphrase'
        description: |
          'passphrase' should be left unset if private key is not encrypted.
          Note that 'passphrase' is not the password for web server, but an extra layer of security to protected private key.
examples:
  - !ruby/object:Provider::Terraform::Examples
    name: "integrations_auth_config_basic"
    primary_resource_id: "basic_example"
    vars:
      auth_config_name: 'test-authconfig'
    skip_test: true # This is already part of other examples.
  - !ruby/object:Provider::Terraform::Examples
    name: "integrations_auth_config_advance"
    primary_resource_id: "advance_example"
    vars:
      auth_config_name: 'test-authconfig'
    skip_docs: true
  - !ruby/object:Provider::Terraform::Examples
    name: "integrations_auth_config_username_and_password"
    primary_resource_id: "username_and_password_example"
    vars:
      auth_config_name: 'test-authconfig-username-and-password'
    skip_docs: true
  - !ruby/object:Provider::Terraform::Examples
    name: "integrations_auth_config_oauth2_authorization_code"
    primary_resource_id: "oauth2_authotization_code_example"
    vars:
      auth_config_name: 'test-authconfig-oauth2-authorization-code'
    skip_docs: true
  - !ruby/object:Provider::Terraform::Examples
    name: "integrations_auth_config_oauth2_client_credentials"
    primary_resource_id: "oauth2_client_credentials_example"
    vars:
      auth_config_name: 'test-authconfig-oauth2-client-credentials'
    skip_docs: true
  - !ruby/object:Provider::Terraform::Examples
    name: "integrations_auth_config_jwt"
    primary_resource_id: "jwt_example"
    vars:
      auth_config_name: 'test-authconfig-jwt'
    skip_docs: true
  - !ruby/object:Provider::Terraform::Examples
    name: "integrations_auth_config_auth_token"
    primary_resource_id: "auth_token_example"
    vars:
      auth_config_name: 'test-authconfig-auth-token'
    skip_docs: true
  - !ruby/object:Provider::Terraform::Examples
    name: "integrations_auth_config_service_account"
    primary_resource_id: "service_account_example"
    vars:
      auth_config_name: 'test-authconfig-service-account'
      service_account_id: sa
    skip_docs: true
  - !ruby/object:Provider::Terraform::Examples
    name: "integrations_auth_config_oidc_token"
    primary_resource_id: "oidc_token_example"
    vars:
      auth_config_name: 'test-authconfig-oidc-token'
      service_account_id: sa
    skip_docs: true
  - !ruby/object:Provider::Terraform::Examples
    name: "integrations_auth_config_client_certificate_only"
    primary_resource_id: "client_certificate_example"
    vars:
      auth_config_name: 'test-authconfig-client-certificate'
    skip_docs: true
