# Copyright 2020 Google Inc.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

--- !ruby/object:Provider::Terraform::Config
overrides: !ruby/object:Overrides::ResourceOverrides
  Domain: !ruby/object:Overrides::Terraform::ResourceOverride
    id_format: "{{name}}"
    import_format: ["{{name}}"]
    autogen_async: true
    properties:
      authorizedNetworks: !ruby/object:Overrides::Terraform::PropertyOverride
        is_set: true
      domainName: !ruby/object:Overrides::Terraform::PropertyOverride
        required: true
        validation: !ruby/object:Provider::Terraform::Validation
          function: 'validateADDomainName()'
    custom_code: !ruby/object:Provider::Terraform::CustomCode
      custom_import: templates/terraform/custom_import/self_link_as_name.erb   
    examples:
      - !ruby/object:Provider::Terraform::Examples
        name: "active_directory_domain_basic"
        primary_resource_id: "ad-domain"
        vars:
          name: "myorg"
          # the part of the domain before the first "." must be <15 chars, and
          # the random suffix is 10 chars. In order to make sure these get swept,
          # 'tfgen' is the only option here.
          domain_name: tfgen
  DomainTrust: !ruby/object:Overrides::Terraform::ResourceOverride
    id_format: "projects/{{project}}/locations/global/domains/{{domain}}/{{target_domain_name}}"
    import_format: ["projects/{{project}}/locations/global/domains/{{domain}}/{{target_domain_name}}"]
    autogen_async: true
    properties:
      targetDnsIpAddresses: !ruby/object:Overrides::Terraform::PropertyOverride
        is_set: true
      trustHandshakeSecret: !ruby/object:Overrides::Terraform::PropertyOverride
        sensitive: true
        ignore_read: true  
    custom_code: !ruby/object:Provider::Terraform::CustomCode
      update_encoder: templates/terraform/update_encoder/active_directory_domain_trust.go.erb
      # Delete function needs to be modified any time when the resource schema is edited
      custom_delete: templates/terraform/custom_delete/active_directory_domain_trust.go.erb
      encoder: templates/terraform/encoders/active_directory_domain_trust.go.erb
      decoder: templates/terraform/decoders/unwrap_resource.go.erb
    examples:
      - !ruby/object:Provider::Terraform::Examples
        name: "active_directory_domain_trust_basic"
        primary_resource_id: "ad-domain-trust"
        # Fine-grained resource need different autogenerated tests, as
        # we need to check destroy during a test step where the parent resource
        # still exists and we need to validate that child resource has been deleted
        skip_test: true
files: !ruby/object:Provider::Config::Files
  # These files have templating (ERB) code that will be run.
  # This is usually to add licensing info, autogeneration notices, etc.
  compile:
<%= lines(indent(compile('provider/terraform/product~compile.yaml'), 4)) -%>