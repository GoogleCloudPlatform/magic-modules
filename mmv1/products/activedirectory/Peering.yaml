<<<<<<< HEAD
# Copyright 2023 Google Inc.
=======
# Copyright 2024 Google Inc.
>>>>>>> 2fdda66097e2c96688e59f7c58c1f717c7785856
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

<<<<<<< HEAD
--- !ruby/object:Api::Resource
name: 'Peering'
kind: 'activedirectory#peering'
base_url: 'projects/{{project}}/locations/global/peerings'
min_version: beta
create_url: projects/{{project}}/locations/global/peerings?peeringId={{peering_id}}
delete_url: projects/{{project}}/locations/global/peerings/{{peering_id}}
update_verb: :PATCH
update_mask: false
self_link: '{{name}}'
description: Creates a Peering for Managed AD instance.
references: !ruby/object:Api::Resource::ReferenceLinks
  guides:
    'Active Directory Domain Peering': 'https://cloud.google.com/managed-microsoft-ad/docs/domain-peering'
  api: 'https://cloud.google.com/managed-microsoft-ad/reference/rest/v1beta1/projects.locations.global.peerings'
async: !ruby/object:Api::OpAsync
  operation: !ruby/object:Api::OpAsync::Operation
    path: 'name'
    base_url: '{{op_id}}'
    wait_ms: 1000
  result: !ruby/object:Api::OpAsync::Result
    path: 'response'
    resource_inside_response: true
  status: !ruby/object:Api::OpAsync::Status
    path: 'done'
    complete: true
    allowed:
      - true
      - false
  error: !ruby/object:Api::OpAsync::Error
    path: 'error'
    message: 'message'
id_format: 'projects/{{project}}/locations/global/domains/{{peering_id}}'
exclude_import: true
autogen_async: true
examples:
  - !ruby/object:Provider::Terraform::Examples
    name: 'active_directory_peering_basic'
=======
---
name: 'Peering'
kind: 'activedirectory#peering'
description: Creates a Peering for Managed AD instance.
min_version: 'beta'
references:
  guides:
    'Active Directory Domain Peering': 'https://cloud.google.com/managed-microsoft-ad/docs/domain-peering'
  api: 'https://cloud.google.com/managed-microsoft-ad/reference/rest/v1beta1/projects.locations.global.peerings'
docs:
id_format: 'projects/{{project}}/locations/global/domains/{{peering_id}}'
base_url: 'projects/{{project}}/locations/global/peerings'
self_link: '{{name}}'
create_url: 'projects/{{project}}/locations/global/peerings?peeringId={{peering_id}}'
update_verb: 'PATCH'
update_mask: false
delete_url: 'projects/{{project}}/locations/global/peerings/{{peering_id}}'
exclude_import: true
timeouts:
  insert_minutes: 20
  update_minutes: 20
  delete_minutes: 20
autogen_async: true
async:
  actions: ['create', 'delete', 'update']
  type: 'OpAsync'
  operation:
    base_url: '{{op_id}}'
    path: 'name'
    wait_ms: 1000
  result:
    path: 'response'
    resource_inside_response: true
  error:
    path: 'error'
    message: 'message'
custom_code:
examples:
  - name: 'active_directory_peering_basic'
>>>>>>> 2fdda66097e2c96688e59f7c58c1f717c7785856
    primary_resource_id: 'ad-domain-peering'
    vars:
      domain_name: 'ad.test.hashicorptest.com'
      project_id: 'my-peered-project'
    test_env_vars:
<<<<<<< HEAD
      org_id: :ORG_ID
      billing_account: :BILLING_ACCT
    skip_import_test:
      true
      # skip the test until Active Directory setup issue got resolved
    skip_test: true
parameters:
  - !ruby/object:Api::Type::String
    name: peeringId
    required: true
    url_param_only: true
    immutable: true
    description: ''
properties:
  - !ruby/object:Api::Type::String
    name: name
    output: true
    description: |
      Unique name of the peering in this scope including projects and location using the form: projects/{projectId}/locations/global/peerings/{peeringId}.
  - !ruby/object:Api::Type::KeyValueLabels
    name: 'labels'
    description: 'Resource labels that can contain user-provided metadata'
  - !ruby/object:Api::Type::String
    name: authorizedNetwork
    required: true
    immutable: true
    description: |
      The full names of the Google Compute Engine networks to which the instance is connected. Caller needs to make sure that CIDR subnets do not overlap between networks, else peering creation will fail.
  - !ruby/object:Api::Type::String
    name: domainResource
    required: true
    immutable: true
    description: |
      Full domain resource path for the Managed AD Domain involved in peering. The resource path should be in the form projects/{projectId}/locations/global/domains/{domainName}
  - !ruby/object:Api::Type::String
    name: status
    url_param_only: true
    description: |
      The current state of this Peering.
    ignore_read: true
  - !ruby/object:Api::Type::String
    name: statusMessage
    description: |
      Additional information about the current status of this peering, if available.

=======
      org_id: 'ORG_ID'
      billing_account: 'BILLING_ACCT'
      # skip the test until Active Directory setup issue got resolved
    exclude_test: true
    exclude_import_test: true
parameters:
  - name: 'peeringId'
    type: String
    description: ''
    min_version: 'beta'
    url_param_only: true
    required: true
    immutable: true
properties:
  - name: 'name'
    type: String
    description: |
      Unique name of the peering in this scope including projects and location using the form: projects/{projectId}/locations/global/peerings/{peeringId}.
    min_version: 'beta'
    output: true
  - name: 'labels'
    type: KeyValueLabels
    description: 'Resource labels that can contain user-provided metadata'
    min_version: 'beta'
  - name: 'authorizedNetwork'
    type: String
    description: |
      The full names of the Google Compute Engine networks to which the instance is connected. Caller needs to make sure that CIDR subnets do not overlap between networks, else peering creation will fail.
    min_version: 'beta'
    required: true
    immutable: true
  - name: 'domainResource'
    type: String
    description: |
      Full domain resource path for the Managed AD Domain involved in peering. The resource path should be in the form projects/{projectId}/locations/global/domains/{domainName}
    min_version: 'beta'
    required: true
    immutable: true
  - name: 'status'
    type: String
    description: |
      The current state of this Peering.
    min_version: 'beta'
    url_param_only: true
    ignore_read: true
  - name: 'statusMessage'
    type: String
    description: |
      Additional information about the current status of this peering, if available.

    min_version: 'beta'
>>>>>>> 2fdda66097e2c96688e59f7c58c1f717c7785856
    ignore_read: true
