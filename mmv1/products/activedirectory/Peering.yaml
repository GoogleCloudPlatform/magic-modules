# Copyright 2023 Google Inc.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

--- !ruby/object:Api::Resource
name: 'Peering'
kind: 'activedirectory#peering'
base_url: 'projects/{{project}}/locations/global/peerings'
min_version: beta
create_url: projects/{{project}}/locations/global/peerings?peeringId={{peering_id}}
delete_url: projects/{{project}}/locations/global/peerings/{{peering_id}}
update_verb: :PATCH
update_mask: false
self_link: '{{name}}'
description: Creates a Peering for Managed AD instance.
references: !ruby/object:Api::Resource::ReferenceLinks
  guides:
    'Active Directory Domain Peering': 'https://cloud.google.com/managed-microsoft-ad/docs/domain-peering'
  api: 'https://cloud.google.com/managed-microsoft-ad/reference/rest/v1beta1/projects.locations.global.peerings'
async: !ruby/object:Api::OpAsync
  operation: !ruby/object:Api::OpAsync::Operation
    path: 'name'
    base_url: '{{op_id}}'
    wait_ms: 1000
  result: !ruby/object:Api::OpAsync::Result
    path: 'response'
    resource_inside_response: true
  status: !ruby/object:Api::OpAsync::Status
    path: 'done'
    complete: true
    allowed:
      - true
      - false
  error: !ruby/object:Api::OpAsync::Error
    path: 'error'
    message: 'message'
id_format: 'projects/{{project}}/locations/global/domains/{{peering_id}}'
exclude_import: true
autogen_async: true
examples:
  - !ruby/object:Provider::Terraform::Examples
    name: 'active_directory_peering_basic'
    primary_resource_id: 'ad-domain-peering'
    vars:
      domain_name: 'ad.test.hashicorptest.com'
      project_id: 'my-peered-project'
    test_env_vars:
      org_id: :ORG_ID
      billing_account: :BILLING_ACCT
    skip_import_test:
      true
      # skip the test until Active Directory setup issue got resolved
    skip_test: true
parameters:
  - !ruby/object:Api::Type::String
    name: peeringId
    required: true
    url_param_only: true
    immutable: true
    description: ''
properties:
  - !ruby/object:Api::Type::String
    name: name
    output: true
    description: |
      Unique name of the peering in this scope including projects and location using the form: projects/{projectId}/locations/global/peerings/{peeringId}.
  - !ruby/object:Api::Type::KeyValueLabels
    name: 'labels'
    description: 'Resource labels that can contain user-provided metadata'
  - !ruby/object:Api::Type::String
    name: authorizedNetwork
    required: true
    immutable: true
    description: |
      The full names of the Google Compute Engine networks to which the instance is connected. Caller needs to make sure that CIDR subnets do not overlap between networks, else peering creation will fail.
  - !ruby/object:Api::Type::String
    name: domainResource
    required: true
    immutable: true
    description: |
      Full domain resource path for the Managed AD Domain involved in peering. The resource path should be in the form projects/{projectId}/locations/global/domains/{domainName}
  - !ruby/object:Api::Type::String
    name: status
    url_param_only: true
    description: |
      The current state of this Peering.
    ignore_read: true
  - !ruby/object:Api::Type::String
    name: statusMessage
    description: |
      Additional information about the current status of this peering, if available.

    ignore_read: true
