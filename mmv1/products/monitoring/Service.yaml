<<<<<<< HEAD
# Copyright 2023 Google Inc.
=======
# Copyright 2024 Google Inc.
>>>>>>> 2fdda66097e2c96688e59f7c58c1f717c7785856
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

<<<<<<< HEAD
--- !ruby/object:Api::Resource
name: Service
base_url: v3/projects/{{project}}/services
create_url: v3/projects/{{project}}/services?serviceId={{service_id}}
self_link: 'v3/{{name}}'
update_verb: :PATCH
update_mask: true
=======
---
name: 'Service'
legacy_name: 'google_monitoring_custom_service'
>>>>>>> 2fdda66097e2c96688e59f7c58c1f717c7785856
description: |
  A Service is a discrete, autonomous, and network-accessible unit,
  designed to solve an individual concern. In Cloud Monitoring,
  a Service acts as the root resource under which operational aspects of
  the service are accessible
<<<<<<< HEAD
references: !ruby/object:Api::Resource::ReferenceLinks
=======
references:
>>>>>>> 2fdda66097e2c96688e59f7c58c1f717c7785856
  guides:
    'Service Monitoring': 'https://cloud.google.com/monitoring/service-monitoring'
    'Monitoring API Documentation': 'https://cloud.google.com/monitoring/api/v3/'
    'Service-orientation on Wikipedia': 'https://en.wikipedia.org/wiki/Service-orientation'
  api: 'https://cloud.google.com/monitoring/api/ref_v3/rest/v3/services'
<<<<<<< HEAD
legacy_name: 'google_monitoring_custom_service'
id_format: '{{name}}'
import_format: ['{{name}}']
error_retry_predicates: ['transport_tpg.IsMonitoringConcurrentEditError']
examples:
  - !ruby/object:Provider::Terraform::Examples
    name: 'monitoring_service_custom'
=======
docs:
id_format: '{{name}}'
base_url: 'v3/projects/{{project}}/services'
self_link: 'v3/{{name}}'
create_url: 'v3/projects/{{project}}/services?serviceId={{service_id}}'
update_verb: 'PATCH'
update_mask: true
import_format:
  - '{{name}}'
timeouts:
  insert_minutes: 20
  update_minutes: 20
  delete_minutes: 20
custom_code:
  encoder: 'templates/terraform/encoders/monitoring_service.go.tmpl'
  custom_import: 'templates/terraform/custom_import/self_link_as_name.tmpl'
error_retry_predicates:

  - 'transport_tpg.IsMonitoringConcurrentEditError'
examples:
  - name: 'monitoring_service_custom'
>>>>>>> 2fdda66097e2c96688e59f7c58c1f717c7785856
    primary_resource_id: 'custom'
    vars:
      service_id: 'custom-srv'
      resource_name: '//product.googleapis.com/foo/foo/services/test'
<<<<<<< HEAD
custom_code: !ruby/object:Provider::Terraform::CustomCode
  custom_import: templates/terraform/custom_import/self_link_as_name.erb
  encoder: templates/terraform/encoders/monitoring_service.go.erb

parameters:
  - !ruby/object:Api::Type::String
    name: serviceId
    description: |
      An optional service ID to use. If not given, the server will generate a
      service ID.
    immutable: true
    api_name: 'name'
    custom_flatten: templates/terraform/custom_flatten/name_from_self_link.erb
    default_from_api: true
    validation: !ruby/object:Provider::Terraform::Validation
      regex: '^[a-zA-Z0-9\-_:.]+$'
properties:
  - !ruby/object:Api::Type::String
    name: name
=======
parameters:
  - name: 'serviceId'
    type: String
    description: |
      An optional service ID to use. If not given, the server will generate a
      service ID.
    api_name: name
    immutable: true
    default_from_api: true
    custom_flatten: 'templates/terraform/custom_flatten/name_from_self_link.tmpl'
    validation:
      regex: '^[a-zA-Z0-9\-_:.]+$'
properties:
  - name: 'name'
    type: String
>>>>>>> 2fdda66097e2c96688e59f7c58c1f717c7785856
    description: |
      The full resource name for this service. The syntax is:
      projects/[PROJECT_ID]/services/[SERVICE_ID].
    output: true
<<<<<<< HEAD
  - !ruby/object:Api::Type::String
    name: displayName
    description: |
      Name used for UI elements listing this Service.
  - !ruby/object:Api::Type::KeyValuePairs
    name: 'userLabels'
=======
  - name: 'displayName'
    type: String
    description: |
      Name used for UI elements listing this Service.
  - name: 'userLabels'
    type: KeyValuePairs
>>>>>>> 2fdda66097e2c96688e59f7c58c1f717c7785856
    description: |
      Labels which have been used to annotate the service. Label keys must start
      with a letter. Label keys and values may contain lowercase letters,
      numbers, underscores, and dashes. Label keys and values have a maximum
      length of 63 characters, and must be less than 128 bytes in size. Up to 64
      label entries may be stored. For labels which do not have a semantic value,
      the empty string may be supplied for the label value.
    send_empty_value: true
<<<<<<< HEAD
  - !ruby/object:Api::Type::NestedObject
    name: telemetry
    description: |
      Configuration for how to query telemetry on a Service.
    properties:
      - !ruby/object:Api::Type::String
        name: resourceName
=======
  - name: 'telemetry'
    type: NestedObject
    description: |
      Configuration for how to query telemetry on a Service.
    properties:
      - name: 'resourceName'
        type: String
>>>>>>> 2fdda66097e2c96688e59f7c58c1f717c7785856
        description: |
          The full name of the resource that defines this service.
          Formatted as described in
          https://cloud.google.com/apis/design/resource_names.
