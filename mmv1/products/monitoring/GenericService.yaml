# Copyright 2023 Google Inc.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

--- !ruby/object:Api::Resource
name: GenericService
base_url: v3/projects/{{project}}/services
create_url: v3/projects/{{project}}/services?serviceId={{service_id}}
self_link: 'v3/projects/{{project}}/services/{{service_id}}'
update_verb: :PATCH
update_mask: true
description: |
  A Service is a discrete, autonomous, and network-accessible unit,
  designed to solve an individual concern. In Cloud Monitoring,
  a Service acts as the root resource under which operational aspects of
  the service are accessible
references: !ruby/object:Api::Resource::ReferenceLinks
  guides:
    'Service Monitoring': 'https://cloud.google.com/monitoring/service-monitoring'
    'Monitoring API Documentation': 'https://cloud.google.com/monitoring/api/v3/'
    'Service-orientation on Wikipedia': 'https://en.wikipedia.org/wiki/Service-orientation'
  api: 'https://cloud.google.com/monitoring/api/ref_v3/rest/v3/services'
legacy_name: 'google_monitoring_service'
id_format: 'projects/{{project}}/services/{{service_id}}'
import_format: ['projects/{{project}}/services/{{service_id}}']
error_retry_predicates: ['transport_tpg.IsMonitoringConcurrentEditError']
examples:
  - !ruby/object:Provider::Terraform::Examples
    name: 'monitoring_service_example'
    primary_resource_id: 'my_service'
    vars:
      service_id: 'my-service'

parameters:
  - !ruby/object:Api::Type::String
    name: serviceId
    description: |
      An optional service ID to use. If not given, the server will generate a
      service ID.
    immutable: true
    required: true
    url_param_only: true
properties:
  - !ruby/object:Api::Type::String
    name: name
    description: |
      The full resource name for this service. The syntax is:
      projects/[PROJECT_ID]/services/[SERVICE_ID].
    output: true
  - !ruby/object:Api::Type::String
    name: displayName
    description: |
      Name used for UI elements listing this Service.
  - !ruby/object:Api::Type::KeyValuePairs
    name: 'userLabels'
    description: |
      Labels which have been used to annotate the service. Label keys must start
      with a letter. Label keys and values may contain lowercase letters,
      numbers, underscores, and dashes. Label keys and values have a maximum
      length of 63 characters, and must be less than 128 bytes in size. Up to 64
      label entries may be stored. For labels which do not have a semantic value,
      the empty string may be supplied for the label value.
    send_empty_value: true
  - !ruby/object:Api::Type::NestedObject
    name: telemetry
    description: |
      Configuration for how to query telemetry on a Service.
    # Non custom service have non-editable telemetry
    output: true
    properties:
      - !ruby/object:Api::Type::String
        name: resourceName
        description: |
          The full name of the resource that defines this service.
          Formatted as described in
          https://cloud.google.com/apis/design/resource_names.
  - !ruby/object:Api::Type::NestedObject
    name: basicService
    description: |
      A well-known service type, defined by its service type and service labels.
      Valid values of service types and services labels are described at
      https://cloud.google.com/stackdriver/docs/solutions/slo-monitoring/api/api-structures#basic-svc-w-basic-sli
    # BasicService info can be set on creation but is then immutable.
    immutable: true
    properties:
      - !ruby/object:Api::Type::String
        name: serviceType
        description: |
          The type of service that this basic service defines, e.g.
          APP_ENGINE service type
      - !ruby/object:Api::Type::KeyValuePairs
        name: serviceLabels
        immutable: true
        description: |
          Labels that specify the resource that emits the monitoring data
          which is used for SLO reporting of this `Service`.
