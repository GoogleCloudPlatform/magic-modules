# Copyright 2019 Google Inc.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
---
!ruby/object:Api::Product
name: Logging
display_name: Cloud (Stackdriver) Logging
versions:
  - !ruby/object:Api::Product::Version
    name: ga
    base_url: https://logging.googleapis.com/v2/
scopes:
  - https://www.googleapis.com/auth/cloud-platform
apis_required:
  - !ruby/object:Api::Product::ApiReference
    name: Stackdriver Logging API
    url: https://console.cloud.google.com/apis/library/logging.googleapis.com/
objects:
  - !ruby/object:Api::Resource
    name: "Metric"
    base_url: projects/{{project}}/metrics
    # The % in self_link indicates that the name value should be URL-encoded.
    self_link: "projects/{{project}}/metrics/{{%name}}"
    update_verb: :PUT
    description: |
      Logs-based metric can also be used to extract values from logs and create a a distribution
      of the values. The distribution records the statistics of the extracted values along with
      an optional histogram of the values as specified by the bucket options.
    references: !ruby/object:Api::Resource::ReferenceLinks
      guides:
        "Official Documentation": "https://cloud.google.com/logging/docs/apis"
      api: "https://cloud.google.com/logging/docs/reference/v2/rest/v2/projects.metrics/create"
    properties:
      - !ruby/object:Api::Type::String
        name: name
        description: |
          The client-assigned metric identifier. Examples - "error_count", "nginx/requests".
          Metric identifiers are limited to 100 characters and can include only the following
          characters A-Z, a-z, 0-9, and the special characters _-.,+!*',()%/. The forward-slash
          character (/) denotes a hierarchy of name pieces, and it cannot be the first character
          of the name.
        required: true
      - !ruby/object:Api::Type::String
        name: description
        description: |
          A description of this metric, which is used in documentation. The maximum length of the
          description is 8000 characters.
        required: false
      - !ruby/object:Api::Type::String
        name: filter
        description: |
          An advanced logs filter (https://cloud.google.com/logging/docs/view/advanced-filters) which
          is used to match log entries.
        required: true
      - !ruby/object:Api::Type::NestedObject
        name: metricDescriptor
        description: |
          The metric descriptor associated with the logs-based metric.
        required: true
        properties:
          - !ruby/object:Api::Type::String
            name: unit
            description: |
              The unit in which the metric value is reported. It is only applicable if the valueType is
              `INT64`, `DOUBLE`, or `DISTRIBUTION`. The supported units are a subset of
              [The Unified Code for Units of Measure](http://unitsofmeasure.org/ucum.html) standard
            default_value: "1"
          - !ruby/object:Api::Type::Enum
            name: valueType
            description: |
              Whether the measurement is an integer, a floating-point number, etc.
              Some combinations of metricKind and valueType might not be supported.
              For counter metrics, set this to INT64.
            values:
              - :BOOL
              - :INT64
              - :DOUBLE
              - :STRING
              - :DISTRIBUTION
              - :MONEY
            required: true
          - !ruby/object:Api::Type::Enum
            name: metricKind
            description: |
              Whether the metric records instantaneous values, changes to a value, etc.
              Some combinations of metricKind and valueType might not be supported.
              For counter metrics, set this to DELTA.
            values:
              - :DELTA
              - :GAUGE
              - :CUMULATIVE
            required: true
          - !ruby/object:Api::Type::Array
            name: labels
            description: |
              The set of labels that can be used to describe a specific instance of this metric type. For
              example, the appengine.googleapis.com/http/server/response_latencies metric type has a label
              for the HTTP response code, response_code, so you can look at latencies for successful responses
              or just for responses that failed.
            required: false
            item_type: !ruby/object:Api::Type::NestedObject
              properties:
                - !ruby/object:Api::Type::String
                  name: key
                  description: |
                    The label key.
                  required: true
                  input: true
                - !ruby/object:Api::Type::String
                  name: description
                  description: |
                    A human-readable description for the label.
                  required: false
                - !ruby/object:Api::Type::Enum
                  name: valueType
                  description: |
                    The type of data that can be assigned to the label.
                  values:
                    - :BOOL
                    - :INT64
                    - :STRING
                  required: false
                  default_value: :STRING
                  input: true
          - !ruby/object:Api::Type::String
            name: displayName
            description: |
              A concise name for the metric, which can be displayed in user interfaces. Use sentence case 
              without an ending period, for example "Request count". This field is optional but it is 
              recommended to be set for any metrics associated with user-visible concepts, such as Quota.
          - !ruby/object:Api::Type::String
            name: type
            output: true
            description: |
              The metric type, including its DNS name prefix. The type is not URL-encoded.
              All user-defined metric types have the DNS name `custom.googleapis.com` or `external.googleapis.com`.
      - !ruby/object:Api::Type::KeyValuePairs
        name: labelExtractors
        description: |
          A map from a label key string to an extractor expression which is used to extract data from a log
          entry field and assign as the label value. Each label key specified in the LabelDescriptor must
          have an associated extractor expression in this map. The syntax of the extractor expression is
          the same as for the valueExtractor field.
      - !ruby/object:Api::Type::String
        name: valueExtractor
        description: |
          A valueExtractor is required when using a distribution logs-based metric to extract the values to
          record from a log entry. Two functions are supported for value extraction - EXTRACT(field) or
          REGEXP_EXTRACT(field, regex). The argument are 1. field - The name of the log entry field from which
          the value is to be extracted. 2. regex - A regular expression using the Google RE2 syntax
          (https://github.com/google/re2/wiki/Syntax) with a single capture group to extract data from the specified
          log entry field. The value of the field is converted to a string before applying the regex. It is an
          error to specify a regex that does not include exactly one capture group.
      - !ruby/object:Api::Type::NestedObject
        name: bucketOptions
        description: |
          The bucketOptions are required when the logs-based metric is using a DISTRIBUTION value type and it
          describes the bucket boundaries used to create a histogram of the extracted values.
        properties:
          - !ruby/object:Api::Type::NestedObject
            name: linearBuckets
            at_least_one_of:
              - bucket_options.0.linear_buckets
              - bucket_options.0.exponential_buckets
              - bucket_options.0.explicit_buckets
            description: |
              Specifies a linear sequence of buckets that all have the same width (except overflow and underflow).
              Each bucket represents a constant absolute uncertainty on the specific value in the bucket.
            properties:
              - !ruby/object:Api::Type::Integer
                name: numFiniteBuckets
                at_least_one_of:
                  - bucket_options.0.linear_buckets.0.num_finite_buckets
                  - bucket_options.0.linear_buckets.0.width
                  - bucket_options.0.linear_buckets.0.offset
                description: |
                  Must be greater than 0.
              - !ruby/object:Api::Type::Integer
                name: width
                at_least_one_of:
                  - bucket_options.0.linear_buckets.0.num_finite_buckets
                  - bucket_options.0.linear_buckets.0.width
                  - bucket_options.0.linear_buckets.0.offset
                description: |
                  Must be greater than 0.
              - !ruby/object:Api::Type::Double
                name: offset
                at_least_one_of:
                  - bucket_options.0.linear_buckets.0.num_finite_buckets
                  - bucket_options.0.linear_buckets.0.width
                  - bucket_options.0.linear_buckets.0.offset
                description: |
                  Lower bound of the first bucket.
          - !ruby/object:Api::Type::NestedObject
            name: exponentialBuckets
            at_least_one_of:
              - bucket_options.0.linear_buckets
              - bucket_options.0.exponential_buckets
              - bucket_options.0.explicit_buckets
            description: |
              Specifies an exponential sequence of buckets that have a width that is proportional to the value of
              the lower bound. Each bucket represents a constant relative uncertainty on a specific value in the bucket.
            properties:
              - !ruby/object:Api::Type::Integer
                name: numFiniteBuckets
                at_least_one_of:
                  - bucket_options.0.exponential_buckets.0.num_finite_buckets
                  - bucket_options.0.exponential_buckets.0.growth_factor
                  - bucket_options.0.exponential_buckets.0.scale
                description: |
                  Must be greater than 0.
              - !ruby/object:Api::Type::Double
                name: growthFactor
                at_least_one_of:
                  - bucket_options.0.exponential_buckets.0.num_finite_buckets
                  - bucket_options.0.exponential_buckets.0.growth_factor
                  - bucket_options.0.exponential_buckets.0.scale
                description: |
                  Must be greater than 1.
              - !ruby/object:Api::Type::Double
                name: scale
                at_least_one_of:
                  - bucket_options.0.exponential_buckets.0.num_finite_buckets
                  - bucket_options.0.exponential_buckets.0.growth_factor
                  - bucket_options.0.exponential_buckets.0.scale
                description: |
                  Must be greater than 0.
          - !ruby/object:Api::Type::NestedObject
            name: explicitBuckets
            at_least_one_of:
              - bucket_options.0.linear_buckets
              - bucket_options.0.exponential_buckets
              - bucket_options.0.explicit_buckets
            description: |
              Specifies a set of buckets with arbitrary widths.
            properties:
              - !ruby/object:Api::Type::Array
                name: bounds
                required: true
                item_type: Api::Type::Double
                description: |
                  The values must be monotonically increasing.
  - !ruby/object:Api::Resource
    name: "OrganizationLogSink"
    base_url: organizations/{{organization}}/sinks
    self_link: organizations/{{organization}}/sinks/{{name}}
    collection_url_key: 'sinks'
    description: |
      Describes a sink used to export log entries
    properties:
      - !ruby/object:Api::Type::String
        name: organization
        description: |
          Id of the organization that this sink belongs to.
        required: true
      - !ruby/object:Api::Type::String
        name: name
        description: |
          Name of the log sink.
        required: true
      - !ruby/object:Api::Type::String
        name: filter
        description: |
          An advanced logs filter. The only exported log entries are those that are in the
          resource owning the sink and that match the filter.
      - !ruby/object:Api::Type::String
        name: destination
        description: |
          The export destination.
      - !ruby/object:Api::Type::String
        name: writerIdentity
        description: |
          An IAM identity—a service account or group—under which Logging writes the exported
          log entries to the sink's destination. This field is set by sinks.create and sinks.update
          based on the value of uniqueWriterIdentity in those methods.
      - !ruby/object:Api::Type::Boolean
        name: includeChildren
        description: |
          If the field is false, the default, only the logs owned by the sink's parent resource are
          available for export. If the field is true, then logs from all the projects, folders, and
          billing accounts contained in the sink's parent resource are also available for export.
          Whether a particular log entry from the children is exported depends on the sink's filter expression.
  - !ruby/object:Api::Resource
    name: "ProjectLogSink"
    base_url: projects/{{project}}/sinks
    self_link: projects/{{project}}/sinks/{{name}}
    collection_url_key: 'sinks'
    description: |
      Describes a sink used to export log entries
    properties:
      - !ruby/object:Api::Type::String
        name: project
        description: |
          Id of the project that this sink belongs to.
        required: true
      - !ruby/object:Api::Type::String
        name: name
        description: |
          Name of the log sink.
        required: true
      - !ruby/object:Api::Type::String
        name: filter
        description: |
          An advanced logs filter. The only exported log entries are those that are in the
          resource owning the sink and that match the filter.
      - !ruby/object:Api::Type::String
        name: destination
        description: |
          The export destination.
      - !ruby/object:Api::Type::String
        name: writerIdentity
        description: |
          An IAM identity—a service account or group—under which Logging writes the exported
          log entries to the sink's destination. This field is set by sinks.create and sinks.update
          based on the value of uniqueWriterIdentity in those methods.
      - !ruby/object:Api::Type::Boolean
        name: includeChildren
        description: |
          If the field is false, the default, only the logs owned by the sink's parent resource are
          available for export. If the field is true, then logs from all the projects, folders, and
          billing accounts contained in the sink's parent resource are also available for export.
          Whether a particular log entry from the children is exported depends on the sink's filter expression.
  - !ruby/object:Api::Resource
    name: "FolderExclusion"
    base_url: folders/{{folder}}/exclusions
    self_link: folders/{{folder}}/exclusions/{{name}}
    collection_url_key: 'exclusions'
    description: |
      Specifies a set of log entries that are not to be stored in Logging.
    properties:
      - !ruby/object:Api::Type::String
        name: folder
        description: |
          Id of the folder that this exclusion applies to.
        required: true
      - !ruby/object:Api::Type::String
        name: name
        description: |
          Name of the exclusion, specified by the server during create.
        required: true
      - !ruby/object:Api::Type::String
        name: description
        description: |
          A user provided description of this exclusion.
      - !ruby/object:Api::Type::String
        name: filter
        description: |
          An advanced logs filter. The only exported log entries are those that are in the
          resource owning the sink and that match the filter.
      - !ruby/object:Api::Type::Boolean
        name: disabled
        description: |
          If set to true then this exclusion is disabled and it does not exclude any log entries.
  - !ruby/object:Api::Resource
    name: "ProjectExclusion"
    base_url: projects/{{project}}/exclusions
    self_link: projects/{{project}}/exclusions/{{name}}
    collection_url_key: 'exclusions'
    description: |
      Specifies a set of log entries that are not to be stored in Logging.
    properties:
      - !ruby/object:Api::Type::String
        name: project
        description: |
          Id of the project that this exclusion applies to.
        required: true
      - !ruby/object:Api::Type::String
        name: name
        description: |
          Name of the exclusion, specified by the server during create.
        required: true
      - !ruby/object:Api::Type::String
        name: description
        description: |
          A user provided description of this exclusion.
      - !ruby/object:Api::Type::String
        name: filter
        description: |
          An advanced logs filter. The only exported log entries are those that are in the
          resource owning the sink and that match the filter.
      - !ruby/object:Api::Type::Boolean
        name: disabled
        description: |
          If set to true then this exclusion is disabled and it does not exclude any log entries.
  - !ruby/object:Api::Resource
    name: "FolderLogSink"
    base_url: folders/{{folder}}/sinks
    self_link: folders/{{folder}}/sinks/{{name}}
    collection_url_key: 'sinks'
    description: |
      Describes a sink used to export log entries
    properties:
      - !ruby/object:Api::Type::String
        name: folder
        description: |
          Id of the folder that this sink belongs to.
        required: true
      - !ruby/object:Api::Type::String
        name: name
        description: |
          Name of the log sink.
        required: true
      - !ruby/object:Api::Type::String
        name: filter
        description: |
          An advanced logs filter. The only exported log entries are those that are in the
          resource owning the sink and that match the filter.
      - !ruby/object:Api::Type::String
        name: destination
        description: |
          The export destination.
      - !ruby/object:Api::Type::String
        name: writerIdentity
        description: |
          An IAM identity—a service account or group—under which Logging writes the exported
          log entries to the sink's destination. This field is set by sinks.create and sinks.update
          based on the value of uniqueWriterIdentity in those methods.
      - !ruby/object:Api::Type::Boolean
        name: includeChildren
        description: |
          If the field is false, the default, only the logs owned by the sink's parent resource are
          available for export. If the field is true, then logs from all the projects, folders, and
          billing accounts contained in the sink's parent resource are also available for export.
          Whether a particular log entry from the children is exported depends on the sink's filter expression.
