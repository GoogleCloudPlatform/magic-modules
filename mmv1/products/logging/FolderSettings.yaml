# Copyright 2023 Google Inc.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

--- !ruby/object:Api::Resource
name: 'FolderSettings'
description: |
  Default resource settings control whether CMEK is required for new log buckets. These settings also determine the storage location for the _Default and _Required log buckets, and whether the _Default sink is enabled or disabled.
references: !ruby/object:Api::Resource::ReferenceLinks
  guides:
    'Configure default settings for organizations and folders': 'https://cloud.google.com/logging/docs/default-settings'
  api: 'https://cloud.google.com/logging/docs/reference/v2/rest/v2/TopLevel/getSettings'
base_url: 'folders/{{folder}}/settings'
self_link: 'folders/{{folder}}/settings'
import_format: ['folders/{{folder}}/settings']
# Hardcode the updateMask since d.HasChanged does not work on create.
create_url: 'folders/{{folder}}/settings?updateMask=disableDefaultSink,storageLocation,kmsKeyName'
update_url: 'folders/{{folder}}/settings?updateMask=disableDefaultSink,storageLocation,kmsKeyName'
# This is a singleton resource that already is created, so create
# is really an update, and therefore should be PATCHed.
create_verb: :PATCH
update_verb: :PATCH
# update_mask: true
# This is a singleton resource that cannot be deleted, so skip delete.
skip_delete: true
examples:
  - !ruby/object:Provider::Terraform::Examples
    name: "logging_folder_settings_all"
    primary_resource_id: "example"
    vars:
      key_name: "kms-key"
      folder_name: "folder-name"
    test_env_vars:
      org_id: :ORG_ID
    test_vars_overrides:
      key_name: 'acctest.BootstrapKMSKeyInLocation(t, "us-central1").CryptoKey.Name'
parameters:
  - !ruby/object:Api::Type::String
    name: 'folder'
    required: true
    immutable: true
    url_param_only: true
    description: |
      The folder for which to retrieve settings.
properties:
  - !ruby/object:Api::Type::String
    name: name
    output: true
    description: |
      The resource name of the settings.
  - !ruby/object:Api::Type::String
    name: kmsKeyName
    default_from_api: true
    description: |
      The resource name for the configured Cloud KMS key.
  - !ruby/object:Api::Type::String
    name: kmsServiceAccountId
    output: true
    description: |
      The service account that will be used by the Log Router to access your Cloud KMS key.
  - !ruby/object:Api::Type::String
    name: storageLocation
    default_from_api: true
    description: |
      The storage location that Cloud Logging will use to create new resources when a location is needed but not explicitly provided.
  - !ruby/object:Api::Type::Boolean
    name: disableDefaultSink
    default_from_api: true
    description: |
      If set to true, the _Default sink in newly created projects and folders will created in a disabled state. This can be used to automatically disable log storage if there is already an aggregated sink configured in the hierarchy. The _Default sink can be re-enabled manually if needed.
  - !ruby/object:Api::Type::String
    name: loggingServiceAccountId
    output: true
    description: |
      The service account for the given container. Sinks use this service account as their writerIdentity if no custom service account is provided.
