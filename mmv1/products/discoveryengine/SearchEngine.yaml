<<<<<<< HEAD
# Copyright 2023 Google Inc.
=======
# Copyright 2024 Google Inc.
>>>>>>> 2fdda66097e2c96688e59f7c58c1f717c7785856
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

<<<<<<< HEAD
--- !ruby/object:Api::Resource
name: 'SearchEngine'
description: |
  Vertex AI Search and Conversation can be used to create a search engine or a chat application by connecting it with a datastore
references: !ruby/object:Api::Resource::ReferenceLinks
  guides:
    'Create a Search Engine': 'https://cloud.google.com/generative-ai-app-builder/docs/create-engine-es'
  api: 'https://cloud.google.com/generative-ai-app-builder/docs/reference/rest/v1/projects.locations.collections.engines'

base_url: 'projects/{{project}}/locations/{{location}}/collections/{{collection_id}}/engines/{{engine_id}}'
self_link: 'projects/{{project}}/locations/{{location}}/collections/{{collection_id}}/engines/{{engine_id}}'
create_url: 'projects/{{project}}/locations/{{location}}/collections/{{collection_id}}/engines?engineId={{engine_id}}'
delete_url: 'projects/{{project}}/locations/{{location}}/collections/{{collection_id}}/engines/{{engine_id}}'

update_verb: :PATCH
update_mask: true

autogen_async: true

async: !ruby/object:Api::OpAsync
  actions: ['create', 'delete']
  operation: !ruby/object:Api::OpAsync::Operation
    base_url: '{{op_id}}'
  result: !ruby/object:Api::OpAsync::Result
    resource_inside_response: true

import_format:
  [
    'projects/{{project}}/locations/{{location}}/collections/{{collection_id}}/engines/{{engine_id}}',
  ]
custom_code: !ruby/object:Provider::Terraform::CustomCode
  encoder: templates/terraform/encoders/discovery_engine_search_engine_hardcode_solution_type.go.erb
examples:
  - !ruby/object:Provider::Terraform::Examples
    name: "discoveryengine_searchengine_basic"
    primary_resource_id: 'basic'
    vars:
      engine_id: "example-engine-id"
      data_store_id: "example-datastore-id"

parameters:
  - !ruby/object:Api::Type::String
    name: 'engineId'
    description: |
      Unique ID to use for Search Engine App.
    required: true
    immutable: true
    url_param_only: true
  - !ruby/object:Api::Type::String
    name: 'collectionId'
    description: |
      The collection ID.
    required: true
    immutable: true
    url_param_only: true
  - !ruby/object:Api::Type::String
    name: 'location'
    description: |
      Location.
    required: true
    immutable: true
    url_param_only: true

properties:
  - !ruby/object:Api::Type::String
    name: 'name'
=======
---
name: 'SearchEngine'
description: |
  Vertex AI Search and Conversation can be used to create a search engine or a chat application by connecting it with a datastore
references:
  guides:
    'Create a Search Engine': 'https://cloud.google.com/generative-ai-app-builder/docs/create-engine-es'
  api: 'https://cloud.google.com/generative-ai-app-builder/docs/reference/rest/v1/projects.locations.collections.engines'
docs:
base_url: 'projects/{{project}}/locations/{{location}}/collections/{{collection_id}}/engines/{{engine_id}}'
self_link: 'projects/{{project}}/locations/{{location}}/collections/{{collection_id}}/engines/{{engine_id}}'
create_url: 'projects/{{project}}/locations/{{location}}/collections/{{collection_id}}/engines?engineId={{engine_id}}'
update_verb: 'PATCH'
update_mask: true
delete_url: 'projects/{{project}}/locations/{{location}}/collections/{{collection_id}}/engines/{{engine_id}}'
import_format:
  - 'projects/{{project}}/locations/{{location}}/collections/{{collection_id}}/engines/{{engine_id}}'
timeouts:
  insert_minutes: 20
  update_minutes: 20
  delete_minutes: 20
autogen_async: true
async:
  actions: ['create', 'delete']
  type: 'OpAsync'
  operation:
    base_url: '{{op_id}}'
  result:
    resource_inside_response: true
custom_code:
  encoder: 'templates/terraform/encoders/discovery_engine_search_engine_hardcode_solution_type.go.tmpl'
examples:
  - name: 'discoveryengine_searchengine_basic'
    primary_resource_id: 'basic'
    vars:
      engine_id: 'example-engine-id'
      data_store_id: 'example-datastore-id'
parameters:
  - name: 'engineId'
    type: String
    description: |
      Unique ID to use for Search Engine App.
    url_param_only: true
    required: true
    immutable: true
  - name: 'collectionId'
    type: String
    description: |
      The collection ID.
    url_param_only: true
    required: true
    immutable: true
  - name: 'location'
    type: String
    description: |
      Location.
    url_param_only: true
    required: true
    immutable: true
properties:
  - name: 'name'
    type: String
>>>>>>> 2fdda66097e2c96688e59f7c58c1f717c7785856
    description: |
      The unique full resource name of the search engine. Values are of the format
      `projects/{project}/locations/{location}/collections/{collection_id}/engines/{engine_id}`.
      This field must be a UTF-8 encoded string with a length limit of 1024
      characters.
    output: true
<<<<<<< HEAD
  - !ruby/object:Api::Type::Enum
    name: 'industryVertical'
    description: |
      The industry vertical that the engine registers. The restriction of the Engine industry vertical is based on DataStore: If unspecified, default to GENERIC. Vertical on Engine has to match vertical of the DataStore liniked to the engine.
    immutable: true
    values:
      - :GENERIC
      - :MEDIA
    default_value: :GENERIC
  - !ruby/object:Api::Type::String
    name: 'displayName'
    description: |
      Required. The display name of the engine. Should be human readable. UTF-8 encoded string with limit of 1024 characters.
    required: true
  - !ruby/object:Api::Type::Array
    name: 'dataStoreIds'
=======
  - name: 'industryVertical'
    type: Enum
    description: |
      The industry vertical that the engine registers. The restriction of the Engine industry vertical is based on DataStore: If unspecified, default to GENERIC. Vertical on Engine has to match vertical of the DataStore liniked to the engine.
    immutable: true
    default_value: "GENERIC"
    enum_values:
      - 'GENERIC'
      - 'MEDIA'
  - name: 'displayName'
    type: String
    description: |
      Required. The display name of the engine. Should be human readable. UTF-8 encoded string with limit of 1024 characters.
    required: true
  - name: 'dataStoreIds'
    type: Array
>>>>>>> 2fdda66097e2c96688e59f7c58c1f717c7785856
    description: |
      The data stores associated with this engine. For SOLUTION_TYPE_SEARCH type of engines, they can only associate with at most one data store.
    required: true
    immutable: true
<<<<<<< HEAD
    item_type: Api::Type::String
  - !ruby/object:Api::Type::Time
    name: 'createTime'
    description: |
      Timestamp the Engine was created at.
    output: true
  - !ruby/object:Api::Type::Time
    name: 'updateTime'
    description: |
      Timestamp the Engine was last updated.
    output: true
  - !ruby/object:Api::Type::NestedObject
    name: 'searchEngineConfig'
=======
    item_type:
      type: String
  - name: 'createTime'
    type: Time
    description: |
      Timestamp the Engine was created at.
    output: true
  - name: 'updateTime'
    type: Time
    description: |
      Timestamp the Engine was last updated.
    output: true
  - name: 'searchEngineConfig'
    type: NestedObject
>>>>>>> 2fdda66097e2c96688e59f7c58c1f717c7785856
    description: |
      Configurations for a Search Engine.
    required: true
    properties:
<<<<<<< HEAD
      - !ruby/object:Api::Type::Enum
        name: 'searchTier'
        description: |
          The search feature tier of this engine. Defaults to SearchTier.SEARCH_TIER_STANDARD if not specified.
        values:
          - :SEARCH_TIER_STANDARD
          - :SEARCH_TIER_ENTERPRISE
        default_value: :SEARCH_TIER_STANDARD
      - !ruby/object:Api::Type::Array
        name: 'searchAddOns'
        description: |
          The add-on that this search engine enables.
        item_type: !ruby/object:Api::Type::Enum
          name: 'searchAddOn'
          description: |
            The add-on that this search engine enables.
          values:
            - :SEARCH_ADD_ON_LLM
  - !ruby/object:Api::Type::NestedObject
    name: 'commonConfig'
=======
      - name: 'searchTier'
        type: Enum
        description: |
          The search feature tier of this engine. Defaults to SearchTier.SEARCH_TIER_STANDARD if not specified.
        default_value: "SEARCH_TIER_STANDARD"
        enum_values:
          - 'SEARCH_TIER_STANDARD'
          - 'SEARCH_TIER_ENTERPRISE'
      - name: 'searchAddOns'
        type: Array
        description: |
          The add-on that this search engine enables.
        item_type:
          type: Enum
          description: |
            The add-on that this search engine enables.
          enum_values:
            - 'SEARCH_ADD_ON_LLM'
  - name: 'commonConfig'
    type: NestedObject
>>>>>>> 2fdda66097e2c96688e59f7c58c1f717c7785856
    description: |
      Common config spec that specifies the metadata of the engine.
    immutable: true
    properties:
<<<<<<< HEAD
      - !ruby/object:Api::Type::String
        name: 'companyName'
=======
      - name: 'companyName'
        type: String
>>>>>>> 2fdda66097e2c96688e59f7c58c1f717c7785856
        description: |
          The name of the company, business or entity that is associated with the engine. Setting this may help improve LLM related features.cd
        immutable: true
