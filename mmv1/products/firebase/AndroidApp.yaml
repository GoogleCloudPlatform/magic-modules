<<<<<<< HEAD
# Copyright 2023 Google Inc.
=======
# Copyright 2024 Google Inc.
>>>>>>> 2fdda66097e2c96688e59f7c58c1f717c7785856
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

<<<<<<< HEAD
--- !ruby/object:Api::Resource
name: 'AndroidApp'
min_version: beta
base_url: projects/{{project}}/androidApps
self_link: 'projects/{{project}}/androidApps/{{app_id}}'
update_verb: :PATCH
update_mask: true
delete_verb: :POST
delete_url: 'projects/{{project}}/androidApps/{{app_id}}:remove'
description: |
  A Google Cloud Firebase Android application instance
references: !ruby/object:Api::Resource::ReferenceLinks
  guides:
    'Official Documentation': 'https://firebase.google.com/docs/android/setup'
  api: 'https://firebase.google.com/docs/reference/firebase-management/rest/v1beta1/projects.androidApps'
async: !ruby/object:Api::OpAsync
  actions: ['create', 'delete']
  operation: !ruby/object:Api::OpAsync::Operation
    path: 'name'
    base_url: '{{op_id}}'
    wait_ms: 1000
  result: !ruby/object:Api::OpAsync::Result
    path: 'response'
    resource_inside_response: true
  status: !ruby/object:Api::OpAsync::Status
    path: 'done'
    complete: true
    allowed:
      - true
      - false
  error: !ruby/object:Api::OpAsync::Error
    path: 'error'
    message: 'message'
import_format:
  [
    '{{project}} projects/{{project}}/androidApps/{{app_id}}',
    'projects/{{project}}/androidApps/{{app_id}}',
    'androidApps/{{app_id}}',
    '{{app_id}}',
  ]
autogen_async: true
# Sweeper skipped as this resource has customized deletion.
skip_sweeper: true
identity:
  - appId
  - name
examples:
  - !ruby/object:Provider::Terraform::Examples
    name: 'firebase_android_app_basic'
    min_version: 'beta'
    primary_resource_id: 'basic'
=======
---
name: 'AndroidApp'
description: |
  A Google Cloud Firebase Android application instance
min_version: 'beta'
references:
  guides:
    'Official Documentation': 'https://firebase.google.com/docs/android/setup'
  api: 'https://firebase.google.com/docs/reference/firebase-management/rest/v1beta1/projects.androidApps'
docs:
base_url: 'projects/{{project}}/androidApps'
self_link: 'projects/{{project}}/androidApps/{{app_id}}'
update_verb: 'PATCH'
update_mask: true
delete_url: 'projects/{{project}}/androidApps/{{app_id}}:remove'
delete_verb: 'POST'
import_format:
  - '{{project}} projects/{{project}}/androidApps/{{app_id}}'
  - 'projects/{{project}}/androidApps/{{app_id}}'
  - 'androidApps/{{app_id}}'
  - '{{app_id}}'
timeouts:
  insert_minutes: 20
  update_minutes: 20
  delete_minutes: 20
autogen_async: true
async:
  actions: ['create', 'delete']
  type: 'OpAsync'
  operation:
    base_url: '{{op_id}}'
    path: 'name'
    wait_ms: 1000
  result:
    path: 'response'
    resource_inside_response: true
  error:
    path: 'error'
    message: 'message'
identity:
  - appId
  - name
custom_code:
  custom_delete: 'templates/terraform/custom_delete/firebase_app_deletion_policy.tmpl'
# Sweeper skipped as this resource has customized deletion.
exclude_sweeper: true
examples:
  - name: 'firebase_android_app_basic'
    primary_resource_id: 'basic'
    min_version: 'beta'
>>>>>>> 2fdda66097e2c96688e59f7c58c1f717c7785856
    vars:
      display_name: 'Display Name Basic'
      package_name: 'android.package.app'
    test_env_vars:
<<<<<<< HEAD
      project_id: :PROJECT_NAME
    test_vars_overrides:
      package_name: '"android.package.app" + acctest.RandString(t, 4)'
      display_name: '"tf-test Display Name Basic"'
    ignore_read_extra:
      - project
      - deletion_policy
  - !ruby/object:Provider::Terraform::Examples
    name: 'firebase_android_app_custom_api_key'
    min_version: 'beta'
    primary_resource_id: 'default'
=======
      project_id: 'PROJECT_NAME'
    test_vars_overrides:
      'package_name': '"android.package.app" + acctest.RandString(t, 4)'
      'display_name': '"tf-test Display Name Basic"'
    ignore_read_extra:
      - 'project'
      - 'deletion_policy'
  - name: 'firebase_android_app_custom_api_key'
    primary_resource_id: 'default'
    min_version: 'beta'
>>>>>>> 2fdda66097e2c96688e59f7c58c1f717c7785856
    vars:
      display_name: 'Display Name'
      api_key_name: 'api-key'
      package_name: 'android.package.app'
    test_env_vars:
<<<<<<< HEAD
      project_id: :PROJECT_NAME
    test_vars_overrides:
      package_name: '"android.package.app" + acctest.RandString(t, 4)'
      display_name: '"tf-test Display Name"'
    ignore_read_extra:
      - project
      - deletion_policy
virtual_fields:
  - !ruby/object:Api::Type::String
    name: 'deletion_policy'
=======
      project_id: 'PROJECT_NAME'
    test_vars_overrides:
      'package_name': '"android.package.app" + acctest.RandString(t, 4)'
      'display_name': '"tf-test Display Name"'
    ignore_read_extra:
      - 'project'
      - 'deletion_policy'
virtual_fields:
  - name: 'deletion_policy'
>>>>>>> 2fdda66097e2c96688e59f7c58c1f717c7785856
    description: |
      (Optional) Set to `ABANDON` to allow the AndroidApp to be untracked from terraform state
      rather than deleted upon `terraform destroy`. This is useful because the AndroidApp may be
      serving traffic. Set to `DELETE` to delete the AndroidApp. Defaults to `DELETE`.
<<<<<<< HEAD
    default_value: DELETE
custom_code: !ruby/object:Provider::Terraform::CustomCode
  custom_delete: templates/terraform/custom_delete/firebase_app_deletion_policy.erb
properties:
  - !ruby/object:Api::Type::String
    name: name
    description: |
      The fully qualified resource name of the AndroidApp, for example:
      projects/projectId/androidApps/appId
    output: true
  - !ruby/object:Api::Type::String
    name: displayName
    required: true
    description: |
      The user-assigned display name of the AndroidApp.
  - !ruby/object:Api::Type::String
    name: appId
    output: true
    description: |
      The globally unique, Firebase-assigned identifier of the AndroidApp.
      This identifier should be treated as an opaque token, as the data format is not specified.
  - !ruby/object:Api::Type::String
    name: packageName
    immutable: true
    required: true
    description: |
      The canonical package name of the Android app as would appear in the Google Play
      Developer Console.
  - !ruby/object:Api::Type::Array
    name: sha1Hashes
    description: |
      The SHA1 certificate hashes for the AndroidApp.
    item_type: Api::Type::String
  - !ruby/object:Api::Type::Array
    name: sha256Hashes
    description: |
      The SHA256 certificate hashes for the AndroidApp.
    item_type: Api::Type::String
  - !ruby/object:Api::Type::String
    name: apiKeyId
    default_from_api: true
=======
    type: String
    default_value: "DELETE"
parameters:
properties:
  - name: 'name'
    type: String
    description: |
      The fully qualified resource name of the AndroidApp, for example:
      projects/projectId/androidApps/appId
    min_version: 'beta'
    output: true
  - name: 'displayName'
    type: String
    description: |
      The user-assigned display name of the AndroidApp.
    min_version: 'beta'
    required: true
  - name: 'appId'
    type: String
    description: |
      The globally unique, Firebase-assigned identifier of the AndroidApp.
      This identifier should be treated as an opaque token, as the data format is not specified.
    min_version: 'beta'
    output: true
  - name: 'packageName'
    type: String
    description: |
      The canonical package name of the Android app as would appear in the Google Play
      Developer Console.
    min_version: 'beta'
    required: true
    immutable: true
  - name: 'sha1Hashes'
    type: Array
    description: |
      The SHA1 certificate hashes for the AndroidApp.
    min_version: 'beta'
    item_type:
      type: String
  - name: 'sha256Hashes'
    type: Array
    description: |
      The SHA256 certificate hashes for the AndroidApp.
    min_version: 'beta'
    item_type:
      type: String
  - name: 'apiKeyId'
    type: String
>>>>>>> 2fdda66097e2c96688e59f7c58c1f717c7785856
    description: |
      The globally unique, Google-assigned identifier (UID) for the Firebase API key associated with the AndroidApp.
      If apiKeyId is not set during creation, then Firebase automatically associates an apiKeyId with the AndroidApp.
      This auto-associated key may be an existing valid key or, if no valid key exists, a new one will be provisioned.
<<<<<<< HEAD
  - !ruby/object:Api::Type::Fingerprint
    name: etag
    description: |
      This checksum is computed by the server based on the value of other fields, and it may be sent
      with update requests to ensure the client has an up-to-date value before proceeding.
=======
    min_version: 'beta'
    default_from_api: true
  - name: 'etag'
    type: Fingerprint
    description: |
      This checksum is computed by the server based on the value of other fields, and it may be sent
      with update requests to ensure the client has an up-to-date value before proceeding.
    min_version: 'beta'
    output: true
>>>>>>> 2fdda66097e2c96688e59f7c58c1f717c7785856
