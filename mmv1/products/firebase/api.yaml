# Copyright 2018 Google Inc.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

--- !ruby/object:Api::Product
name: Firebase
display_name: Firebase
versions:
  - !ruby/object:Api::Product::Version
    name: beta
    base_url: https://firebase.googleapis.com/v1beta1/
scopes:
  - https://www.googleapis.com/auth/cloud-platform
async: !ruby/object:Api::OpAsync
  operation: !ruby/object:Api::OpAsync::Operation
    path: 'name'
    base_url: '{{op_id}}'
    wait_ms: 1000
  result: !ruby/object:Api::OpAsync::Result
    path: 'response'
    resource_inside_response: true
  status: !ruby/object:Api::OpAsync::Status
    path: 'done'
    complete: true
    allowed:
      - true
      - false
  error: !ruby/object:Api::OpAsync::Error
    path: 'error'
    message: 'message'
objects:
  - !ruby/object:Api::Resource
    name: 'Project'
    min_version: beta
    base_url: projects/{{project}}
    self_link: projects/{{project}}
    create_url: projects/{{project}}:addFirebase
    input: true
    description: |
      A Google Cloud Firebase instance. This enables Firebase resources on a given google project.
      Since a FirebaseProject is actually also a GCP Project, a FirebaseProject uses underlying GCP
      identifiers (most importantly, the projectId) as its own for easy interop with GCP APIs.

      Once Firebase has been added to a Google Project it cannot be removed.
    references: !ruby/object:Api::Resource::ReferenceLinks
      guides:
        'Official Documentation':
          'https://firebase.google.com/'
      api: 'https://firebase.google.com/docs/projects/api/reference/rest/v1beta1/projects'
    properties:
      - !ruby/object:Api::Type::String
        name: projectNumber
        output: true
        description: |
          Immutable. The globally unique, Google-assigned canonical identifier
          for the Project. Use this identifier when configuring integrations and/or
          making API calls to Firebase or third-party services.
      - !ruby/object:Api::Type::String
        name: displayName
        output: true
        description: |
          The user-assigned display name of the Project. This field may only be assigned on Update.
      - !ruby/object:Api::Type::KeyValuePairs
        name: annotations
        description: |
          Set of user-defined annotations for the FirebaseProject. These annotations
          are intended solely for developers and client-side tools Firebase services
          will not mutate this annotation set.  This field may only be assigned on Update.
      - !ruby/object:Api::Type::NestedObject
        name: resources
        output: true
        description: |
          The default Firebase resources associated with the Project. This field will be deprecated.
        properties:
          - !ruby/object:Api::Type::String
            name: hostingSite
            output: true
            description: |
              The default Firebase Hosting site name, in the format:
              `PROJECT_ID` Though rare, your `projectId` might already be used as
              the name for an existing Hosting site in another project (learn more
              about creating non-default, [additional sites](https://firebase.google.com/docs/hosting/multisites)).
              In these cases, your `projectId` is appended with a hyphen then five
              alphanumeric characters to create your default Hosting site name.
              For example, if your `projectId` is `myproject123`, your default Hosting
              site name might be: `myproject123-a5c16`.
          - !ruby/object:Api::Type::String
            name: locationId
            output: true
            description: |
              The ID of the Project's default GCP resource location.
              The location is one of the available [GCP resource locations](https://firebase.google.com/docs/projects/locations).
              This field is omitted if the default GCP resource location has not
              been finalized yet. To set a Project's default GCP resource location,
              call [`FinalizeDefaultLocation`](../projects.defaultLocation/finalize)
              after you add Firebase resources to the Project.
          - !ruby/object:Api::Type::String
            name: realtimeDatabaseInstance
            output: true
            description: |
              The default Firebase Realtime Database instance name,
              in the format: `PROJECT_ID` Though rare, your `projectId` might already
              be used as the name for an existing Realtime Database instance in
              another project (learn more about [database sharding](https://firebase.google.com/docs/database/usage/sharding)).
              In these cases, your `projectId` is appended with a hyphen then five
              alphanumeric characters to create your default Realtime Database instance
              name. For example, if your `projectId` is `myproject123`, your default
              database instance name might be: `myproject123-a5c16`
          - !ruby/object:Api::Type::String
            name: storageBucket
            output: true
            description: |
              The default Cloud Storage for Firebase storage bucket, in the format: `PROJECT_ID.appspot.com`.
  - !ruby/object:Api::Resource
    name: 'ProjectLocation'
    min_version: beta
    base_url: projects/{{project}}
    self_link: projects/{{project}}
    create_url: projects/{{project}}/defaultLocation:finalize
    nested_query: !ruby/object:Api::Resource::NestedQuery
      keys:
        - resources
    input: true
    description: |
      Sets the default Google Cloud Platform (GCP) resource location for the specified FirebaseProject.

      This method creates an App Engine application with a default Cloud Storage bucket, located in the specified
      locationId. This location must be one of the available GCP resource locations.

      After the default GCP resource location is finalized, or if it was already set, it cannot be changed.
      The default GCP resource location for the specified FirebaseProject might already be set because either the
      GCP Project already has an App Engine application or defaultLocation.finalize was previously called with a
      specified locationId. Any new calls to defaultLocation.finalize with a different specified locationId will
      return a 409 error.
    references: !ruby/object:Api::Resource::ReferenceLinks
      guides:
        'Official Documentation':
          'https://firebase.google.com/'
      api: 'https://firebase.google.com/docs/projects/api/reference/rest/v1beta1/projects.defaultLocation/finalize'
    properties:
      - !ruby/object:Api::Type::String
        name: locationId
        required: true
        description: |
          The ID of the default GCP resource location for the Project. The location must be one of the available GCP
          resource locations.
  - !ruby/object:Api::Resource
    name: 'WebApp'
    min_version: beta
    base_url: projects/{{project}}/webApps
    self_link: '{{name}}'
    update_verb: :PATCH
    update_mask: true
    delete_verb: :POST
    delete_url: '{{name}}:remove'
    description: |
      A Google Cloud Firebase web application instance
    references: !ruby/object:Api::Resource::ReferenceLinks
      guides:
        'Official Documentation':
          'https://firebase.google.com/'
      api: 'https://firebase.google.com/docs/projects/api/reference/rest/v1beta1/projects.webApps'
    async: !ruby/object:Api::OpAsync
      actions: ["create", "delete"]
      operation: !ruby/object:Api::OpAsync::Operation
        path: 'name'
        base_url: '{{op_id}}'
        wait_ms: 1000
      result: !ruby/object:Api::OpAsync::Result
        path: 'response'
        resource_inside_response: true
      status: !ruby/object:Api::OpAsync::Status
        path: 'done'
        complete: true
        allowed:
          - true
          - false
      error: !ruby/object:Api::OpAsync::Error
        path: 'error'
        message: 'message'
    properties:
      - !ruby/object:Api::Type::String
        name: name
        description: |
          The fully qualified resource name of the App, for example:
          projects/projectId/webApps/appId
        output: true
      - !ruby/object:Api::Type::String
        name: displayName
        required: true
        description: |
          The user-assigned display name of the App.
      - !ruby/object:Api::Type::String
        name: appId
        output: true
        description: |
          Immutable. The globally unique, Firebase-assigned identifier of the App.

          This identifier should be treated as an opaque token, as the data format is not specified.
      - !ruby/object:Api::Type::Array
        name: appUrls
        output: true
        description: |
          The URLs where the `WebApp` is hosted.
        item_type: Api::Type::String
  - !ruby/object:Api::Resource
    name: 'AndroidApp'
    min_version: beta
    base_url: projects/{{project}}/androidApps
    self_link: '{{name}}'
    update_verb: :PATCH
    update_mask: true
    delete_verb: :POST
    delete_url: '{{name}}:remove'
    description: |
      A Google Cloud Firebase Android application instance
    references: !ruby/object:Api::Resource::ReferenceLinks
      guides:
        'Official Documentation':
          'https://firebase.google.com/docs/android/setup'
      api: 'https://firebase.google.com/docs/projects/api/reference/rest/v1beta1/projects.androidApps'
    async: !ruby/object:Api::OpAsync
      actions: ["create", "delete"]
      operation: !ruby/object:Api::OpAsync::Operation
        path: 'name'
        base_url: '{{op_id}}'
        wait_ms: 1000
      result: !ruby/object:Api::OpAsync::Result
        path: 'response'
        resource_inside_response: true
      status: !ruby/object:Api::OpAsync::Status
        path: 'done'
        complete: true
        allowed:
          - true
          - false
      error: !ruby/object:Api::OpAsync::Error
        path: 'error'
        message: 'message'
    parameters:
      - !ruby/object:Api::Type::String
        name: 'deletion_policy'
        description: |
          (Optional) Set to `ABANDON` to allow the AndroidApp to be untracked from terraform state
          rather than deleted upon `terraform destroy`. This is useful because the AndroidApp may be
          serving traffic. Set to `DELETE` to delete the AndroidApp. Default to `DELETE`.
        input: true
        url_param_only: true
        default_value: DELETE
    properties:
      - !ruby/object:Api::Type::String
        name: name
        description: |
          The fully qualified resource name of the App, for example:
          projects/projectId/androidApps/appId
        output: true
      - !ruby/object:Api::Type::String
        name: displayName
        required: true
        description: |
          The user-assigned display name of the App.
      - !ruby/object:Api::Type::String
        name: appId
        output: true
        description: |
          Immutable. The globally unique, Firebase-assigned identifier of the App.
          This identifier should be treated as an opaque token, as the data format is not specified.
      - !ruby/object:Api::Type::String
        name: packageName
        description: |
          Immutable. The canonical package name of the Android app as would appear in the Google Play
          Developer Console.
