# Copyright 2023 Google Inc.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

--- !ruby/object:Api::Resource
name: 'AppleApp'
min_version: beta
base_url: projects/{{project}}/iosApps
self_link: 'projects/{{project}}/iosApps/{{app_id}}'
update_verb: :PATCH
delete_verb: :POST
delete_url: 'projects/{{project}}/iosApps/{{app_id}}:remove'
update_mask: true
description: |
  A Google Cloud Firebase Apple application instance
references: !ruby/object:Api::Resource::ReferenceLinks
  guides:
    'Official Documentation': 'https://firebase.google.com/docs/ios/setup'
  api: 'https://firebase.google.com/docs/reference/firebase-management/rest/v1beta1/projects.iosApps'
async: !ruby/object:Api::OpAsync
  actions: ['create', 'delete']
  operation: !ruby/object:Api::OpAsync::Operation
    path: 'name'
    base_url: '{{op_id}}'
    wait_ms: 1000
  result: !ruby/object:Api::OpAsync::Result
    path: 'response'
    resource_inside_response: true
  status: !ruby/object:Api::OpAsync::Status
    path: 'done'
    complete: true
    allowed:
      - true
      - false
  error: !ruby/object:Api::OpAsync::Error
    path: 'error'
    message: 'message'
import_format:
  [
    '{{project}} projects/{{project}}/iosApps/{{app_id}}',
    'projects/{{project}}/iosApps/{{app_id}}',
    'iosApps/{{app_id}}',
    '{{app_id}}'
  ]
autogen_async: true
skip_sweeper: true
identity:
  - appId
  - name
examples:
  - !ruby/object:Provider::Terraform::Examples
    name: 'firebase_apple_app_basic'
    min_version: 'beta'
    primary_resource_id: 'default'
    vars:
      display_name: 'Display Name Basic'
      bundle_id: 'apple.app.12345'
    test_env_vars:
      org_id: :ORG_ID
      project_id: :PROJECT_NAME
    test_vars_overrides:
      display_name: '"tf-test Display Name Basic"'
  - !ruby/object:Provider::Terraform::Examples
    name: 'firebase_apple_app_full'
    min_version: 'beta'
    primary_resource_id: 'full'
    vars:
      display_name: 'Display Name Full'
      bundle_id: 'apple.app.12345'
      app_store_id: '12345'
      team_id: '9987654321'  # Has to be a 10-digit number.
      api_key_name: 'api-key'
    test_env_vars:
      org_id: :ORG_ID
      project_id: :PROJECT_NAME
    test_vars_overrides:
      app_store_id: '12345'
      team_id: '9987654321'
      display_name: '"tf-test Display Name Full"'
    ignore_read_extra:
      - project
      - deletion_policy
virtual_fields:
  # TODO: make this an enum in a future major version. If using this field as a reference, look at PerInstanceConfig's minimal_action field for enum configuration.
  - !ruby/object:Api::Type::String
    name: 'deletion_policy'
    description: |
      (Optional) Set to `ABANDON` to allow the Apple to be untracked from terraform state
      rather than deleted upon `terraform destroy`. This is useful because the Apple may be
      serving traffic. Set to `DELETE` to delete the Apple. Defaults to `DELETE`.
    default_value: DELETE
custom_code: !ruby/object:Provider::Terraform::CustomCode
  custom_delete: templates/terraform/custom_delete/firebase_app_deletion_policy.erb
properties:
  - !ruby/object:Api::Type::String
    name: name
    description: |
      The fully qualified resource name of the App, for example:
      projects/projectId/iosApps/appId
    output: true
  - !ruby/object:Api::Type::String
    name: displayName
    required: true
    description: |
      The user-assigned display name of the App.
  - !ruby/object:Api::Type::String
    name: appId
    output: true
    description: |
      The globally unique, Firebase-assigned identifier of the App.
      This identifier should be treated as an opaque token, as the data format is not specified.
  - !ruby/object:Api::Type::String
    name: bundleId
    required: true
    immutable: true
    description: |
      The canonical bundle ID of the Apple app as it would appear in the Apple AppStore.
  - !ruby/object:Api::Type::String
    name: appStoreId
    description: |
      The automatically generated Apple ID assigned to the Apple app by Apple in the Apple App Store.
  - !ruby/object:Api::Type::String
    name: teamId
    description: |
      The Apple Developer Team ID associated with the App in the App Store.
  - !ruby/object:Api::Type::String
    name: apiKeyId
    default_from_api: true
    description: |
      The globally unique, Google-assigned identifier (UID) for the Firebase API key associated with the AppleApp.
      If apiKeyId is not set during creation, then Firebase automatically associates an apiKeyId with the AppleApp.
      This auto-associated key may be an existing valid key or, if no valid key exists, a new one will be provisioned.
