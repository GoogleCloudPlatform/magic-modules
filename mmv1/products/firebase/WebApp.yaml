# Copyright 2023 Google Inc.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

--- !ruby/object:Api::Resource
name: 'WebApp'
min_version: beta
base_url: projects/{{project}}/webApps
self_link: 'projects/{{project}}/webApps/{{app_id}}'
update_verb: :PATCH
update_mask: true
delete_verb: :POST
delete_url: 'projects/{{project}}/webApps/{{app_id}}:remove'
description: |
  A Google Cloud Firebase web application instance
references: !ruby/object:Api::Resource::ReferenceLinks
  guides:
    'Official Documentation': 'https://firebase.google.com/'
  api: 'https://firebase.google.com/docs/reference/firebase-management/rest/v1beta1/projects.webApps'
async: !ruby/object:Api::OpAsync
  actions: ['create', 'delete']
  operation: !ruby/object:Api::OpAsync::Operation
    path: 'name'
    base_url: '{{op_id}}'
    wait_ms: 1000
  result: !ruby/object:Api::OpAsync::Result
    path: 'response'
    resource_inside_response: true
  status: !ruby/object:Api::OpAsync::Status
    path: 'done'
    complete: true
    allowed:
      - true
      - false
  error: !ruby/object:Api::OpAsync::Error
    path: 'error'
    message: 'message'
import_format:
  [
    '{{project}} projects/{{project}}/webApps/{{app_id}}',
    'projects/{{project}}/webApps/{{app_id}}',
    'webApps/{{app_id}}',
    '{{app_id}}',
  ]
autogen_async: true
skip_sweeper: true
identity:
  - appId
  - name
examples:
  - !ruby/object:Provider::Terraform::Examples  # TODO: https://github.com/hashicorp/terraform-provider-google/issues/14158
    skip_vcr: true
    name: 'firebase_web_app_basic'
    min_version: 'beta'
    primary_resource_id: 'basic'
    vars:
      display_name: 'Display Name Basic'
      bucket_name: 'fb-webapp-'
      project_name: "my-project"
    test_env_vars:
      org_id: :ORG_ID
    test_vars_overrides:
      display_name: '"tf-test Display Name Basic"'
    ignore_read_extra:
      - project
      - deletion_policy
  - !ruby/object:Provider::Terraform::Examples
    name: 'firebase_web_app_custom_api_key'
    min_version: 'beta'
    primary_resource_id: 'default'
    vars:
      display_name: 'Display Name'
      api_key_name: "api-key"
    test_env_vars:
      project_id: :PROJECT_NAME
    ignore_read_extra:
      - project
      - deletion_policy
virtual_fields:
  # TODO: make this an enum in a future major version. If using this field as a reference, look at PerInstanceConfig's minimal_action field for enum configuration.
  - !ruby/object:Api::Type::String
    name: 'deletion_policy'
    description: |
      Set to `ABANDON` to allow the WebApp to be untracked from terraform state
      rather than deleted upon `terraform destroy`. This is useful becaue the WebApp may be
      serving traffic. Set to `DELETE` to delete the WebApp. Default to `ABANDON`
    default_value: ABANDON
custom_code: !ruby/object:Provider::Terraform::CustomCode
  custom_delete: templates/terraform/custom_delete/firebase_app_deletion_policy.erb
properties:
  - !ruby/object:Api::Type::String
    name: name
    description: |
      The fully qualified resource name of the App, for example:
      projects/projectId/webApps/appId
    output: true
  - !ruby/object:Api::Type::String
    name: displayName
    required: true
    description: |
      The user-assigned display name of the App.
  - !ruby/object:Api::Type::String
    name: appId
    output: true
    description: |
      The globally unique, Firebase-assigned identifier of the App.
      This identifier should be treated as an opaque token, as the data format is not specified.
  - !ruby/object:Api::Type::Array
    name: appUrls
    output: true
    description: |
      The URLs where the `WebApp` is hosted.
    item_type: Api::Type::String
  - !ruby/object:Api::Type::String
    name: apiKeyId
    default_from_api: true
    description: |
      The globally unique, Google-assigned identifier (UID) for the Firebase API key associated with the WebApp.
      If apiKeyId is not set during creation, then Firebase automatically associates an apiKeyId with the WebApp.
      This auto-associated key may be an existing valid key or, if no valid key exists, a new one will be provisioned.
