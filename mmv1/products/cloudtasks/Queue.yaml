# Copyright 2023 Google Inc.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

--- !ruby/object:Api::Resource
name: 'Queue'
base_url: projects/{{project}}/locations/{{location}}/queues
update_verb: :PATCH
update_mask: true
description: |
  A named resource to which messages are sent by publishers.
iam_policy: !ruby/object:Api::Resource::IamPolicy
  method_name_separator: ':'
  parent_resource_attribute: 'name'
  fetch_iam_policy_verb: :POST
  import_format:
    ['projects/{{project}}/locations/{{location}}/queues/{{name}}', '{{name}}']
id_format: 'projects/{{project}}/locations/{{location}}/queues/{{name}}'
custom_code: !ruby/object:Provider::Terraform::CustomCode
  constants: 'templates/terraform/constants/cloud_tasks_retry_config_custom_diff.go.erb'
examples:
  - !ruby/object:Provider::Terraform::Examples
    name: 'queue_basic'
    primary_resource_id: 'default'
    primary_resource_name: "fmt.Sprintf(\"tf-test-cloud-tasks-queue-test%s\",
      context[\"\
      random_suffix\"])"
    vars:
      name: 'cloud-tasks-queue-test'
  - !ruby/object:Provider::Terraform::Examples
    name: 'cloud_tasks_queue_advanced'
    primary_resource_id: 'advanced_configuration'
    ignore_read_extra:
      - 'app_engine_routing_override.0.service'
      - 'app_engine_routing_override.0.version'
      - 'app_engine_routing_override.0.instance'
    vars:
      name: 'instance-name'
  - !ruby/object:Provider::Terraform::Examples
    name: 'cloud_tasks_queue_http_target_oidc'
    primary_resource_id: 'http_target_oidc'
    vars:
      name: 'cloud-tasks-queue-http-target-oidc'
  - !ruby/object:Provider::Terraform::Examples
    name: 'cloud_tasks_queue_http_target_oauth'
    primary_resource_id: 'http_target_oauth'
    vars:
      name: 'cloud-tasks-queue-http-target-oauth'
parameters:
  - !ruby/object:Api::Type::String
    name: 'location'
    required: true
    immutable: true
    description: The location of the queue
    url_param_only: true
properties:
  - !ruby/object:Api::Type::String
    name: 'name'
    immutable: true
    description: The queue name.
    custom_flatten: templates/terraform/custom_flatten/name_from_self_link.erb
    custom_expand: templates/terraform/custom_expand/qualify_queue_name.go.erb
  - !ruby/object:Api::Type::NestedObject
    name: 'appEngineRoutingOverride'
    description: |
      Overrides for task-level appEngineRouting. These settings apply only
      to App Engine tasks in this queue
    custom_flatten: templates/terraform/custom_flatten/cloudtasks_queue_appenginerouting.go.erb
    properties:
      - !ruby/object:Api::Type::String
        name: 'service'
        description: |
          App service.

          By default, the task is sent to the service which is the default service when the task is attempted.
      - !ruby/object:Api::Type::String
        name: 'version'
        description: |
          App version.

          By default, the task is sent to the version which is the default version when the task is attempted.
      - !ruby/object:Api::Type::String
        name: 'instance'
        description: |
          App instance.

          By default, the task is sent to an instance which is available when the task is attempted.
      - !ruby/object:Api::Type::String
        name: 'host'
        output: true
        description: The host that the task is sent to.
  - !ruby/object:Api::Type::NestedObject
    name: 'rateLimits'
    description: |
      Rate limits for task dispatches.

      The queue's actual dispatch rate is the result of:

      * Number of tasks in the queue
      * User-specified throttling: rateLimits, retryConfig, and the queue's state.
      * System throttling due to 429 (Too Many Requests) or 503 (Service
        Unavailable) responses from the worker, high error rates, or to
        smooth sudden large traffic spikes.
    default_from_api: true
    properties:
      - !ruby/object:Api::Type::Double
        name: 'maxDispatchesPerSecond'
        description: |
          The maximum rate at which tasks are dispatched from this queue.

          If unspecified when the queue is created, Cloud Tasks will pick the default.
        default_from_api: true
      - !ruby/object:Api::Type::Integer
        name: 'maxConcurrentDispatches'
        description: |
          The maximum number of concurrent tasks that Cloud Tasks allows to
          be dispatched for this queue. After this threshold has been
          reached, Cloud Tasks stops dispatching tasks until the number of
          concurrent requests decreases.
        default_from_api: true
      - !ruby/object:Api::Type::Integer
        name: 'maxBurstSize'
        output: true
        description: |
          The max burst size.

          Max burst size limits how fast tasks in queue are processed when many tasks are
          in the queue and the rate is high. This field allows the queue to have a high
          rate so processing starts shortly after a task is enqueued, but still limits
          resource usage when many tasks are enqueued in a short period of time.
  - !ruby/object:Api::Type::NestedObject
    name: 'retryConfig'
    description: Settings that determine the retry behavior.
    default_from_api: true
    properties:
      - !ruby/object:Api::Type::Integer
        name: 'maxAttempts'
        description: |
          Number of attempts per task.

          Cloud Tasks will attempt the task maxAttempts times (that is, if
          the first attempt fails, then there will be maxAttempts - 1
          retries). Must be >= -1.

          If unspecified when the queue is created, Cloud Tasks will pick
          the default.

          -1 indicates unlimited attempts.
        default_from_api: true
      - !ruby/object:Api::Type::String
        name: 'maxRetryDuration'
        description: |
          If positive, maxRetryDuration specifies the time limit for
          retrying a failed task, measured from when the task was first
          attempted. Once maxRetryDuration time has passed and the task has
          been attempted maxAttempts times, no further attempts will be
          made and the task will be deleted.

          If zero, then the task age is unlimited.
        default_from_api: true
        diff_suppress_func: 'suppressOmittedMaxDuration'
      - !ruby/object:Api::Type::String
        name: 'minBackoff'
        description: |
          A task will be scheduled for retry between minBackoff and
          maxBackoff duration after it fails, if the queue's RetryConfig
          specifies that the task should be retried.
        default_from_api: true
        diff_suppress_func: 'tpgresource.DurationDiffSuppress'
      - !ruby/object:Api::Type::String
        name: 'maxBackoff'
        description: |
          A task will be scheduled for retry between minBackoff and
          maxBackoff duration after it fails, if the queue's RetryConfig
          specifies that the task should be retried.
        default_from_api: true
        diff_suppress_func: 'tpgresource.DurationDiffSuppress'
      - !ruby/object:Api::Type::Integer
        name: 'maxDoublings'
        description: |
          The time between retries will double maxDoublings times.

          A task's retry interval starts at minBackoff, then doubles maxDoublings times,
          then increases linearly, and finally retries retries at intervals of maxBackoff
          up to maxAttempts times.
        default_from_api: true
  - !ruby/object:Api::Type::NestedObject
    name: 'stackdriverLoggingConfig'
    description: |
      Configuration options for writing logs to Stackdriver Logging.
    properties:
      - !ruby/object:Api::Type::Double
        name: 'samplingRatio'
        required: true
        description: |
          Specifies the fraction of operations to write to Stackdriver Logging.
          This field may contain any value between 0.0 and 1.0, inclusive. 0.0 is the
          default and means that no operations are logged.
  - !ruby/object:Api::Type::NestedObject
    name: 'httpTarget'
    description: Modifies HTTP target for HTTP tasks.
    properties:
      - !ruby/object:Api::Type::Enum
        name: 'httpMethod'
        description: |
          The HTTP method to use for the request.

          When specified, it overrides HttpRequest for the task.
          Note that if the value is set to GET the body of the task will be ignored at execution time.
        values:
          - HTTP_METHOD_UNSPECIFIED
          - POST
          - GET
          - HEAD
          - PUT
          - DELETE
          - PATCH
          - OPTIONS
        default_from_api: true
      - !ruby/object:Api::Type::NestedObject
        name: 'uriOverride'
        description: |
          URI override.

          When specified, overrides the execution URI for all the tasks in the queue.
        properties:
          - !ruby/object:Api::Type::Enum
            name: 'scheme'
            description: |
              Scheme override.

              When specified, the task URI scheme is replaced by the provided value (HTTP or HTTPS).
            values:
              - 'HTTP'
              - 'HTTPS'
            default_from_api: true
          - !ruby/object:Api::Type::String
            name: 'host'
            description: |
              Host override.

              When specified, replaces the host part of the task URL.
              For example, if the task URL is "https://www.google.com", and host value
              is set to "example.net", the overridden URI will be changed to "https://example.net".
              Host value cannot be an empty string (INVALID_ARGUMENT).
          - !ruby/object:Api::Type::String
            name: 'port'
            description: |
              Port override.

              When specified, replaces the port part of the task URI.
              For instance, for a URI http://www.google.com/foo and port=123, the overridden URI becomes http://www.google.com:123/foo.
              Note that the port value must be a positive integer.
              Setting the port to 0 (Zero) clears the URI port.
          - !ruby/object:Api::Type::NestedObject
            name: 'pathOverride'
            description: |
              URI path.

              When specified, replaces the existing path of the task URL.
              Setting the path value to an empty string clears the URI path segment.
            properties:
              - !ruby/object:Api::Type::String
                name: 'path'
                description: The URI path (e.g., /users/1234). Default is an empty string.
                default_from_api: true
          - !ruby/object:Api::Type::NestedObject
            name: 'queryOverride'
            description: |
              URI query.

              When specified, replaces the query part of the task URI. Setting the query value to an empty string clears the URI query segment.
            properties:
              - !ruby/object:Api::Type::String
                name: 'queryParams'
                description: The query parameters (e.g., qparam1=123&qparam2=456). Default is an empty string.
                default_from_api: true
          - !ruby/object:Api::Type::Enum
            name: 'uriOverrideEnforceMode'
            description: |
              URI Override Enforce Mode

              When specified, determines the Target UriOverride mode. If not specified, it defaults to ALWAYS.
            values:
              - ALWAYS
              - IF_NOT_EXISTS
            default_from_api: true
      - !ruby/object:Api::Type::Array
        name: 'headerOverrides'
        description: |
          HTTP target headers.

          This map contains the header field names and values.
          Headers will be set when running the CreateTask and/or BufferTask.

          These headers represent a subset of the headers that will be configured for the task's HTTP request.
          Some HTTP request headers will be ignored or replaced.

          Headers which can have multiple values (according to RFC2616) can be specified using comma-separated values.

          The size of the headers must be less than 80KB. Queue-level headers to override headers of all the tasks in the queue.
        item_type: !ruby/object:Api::Type::NestedObject
          properties:
            - !ruby/object:Api::Type::NestedObject
              name: 'header'
              description: |
                Header embodying a key and a value.
              required: true
              properties:
                - !ruby/object:Api::Type::String
                  name: 'key'
                  required: true
                  description: The Key of the header.
                - !ruby/object:Api::Type::String
                  name: 'value'
                  required: true
                  description: The Value of the header.
      - !ruby/object:Api::Type::NestedObject
        name: 'oauthToken'
        description: |
          If specified, an OAuth token is generated and attached as the Authorization header in the HTTP request.

          This type of authorization should generally be used only when calling Google APIs hosted on *.googleapis.com.
          Note that both the service account email and the scope MUST be specified when using the queue-level authorization override.
        conflicts:
          - 'oidcToken'
        properties:
          - !ruby/object:Api::Type::String
            name: 'serviceAccountEmail'
            description: |
              Service account email to be used for generating OAuth token.
              The service account must be within the same project as the queue.
              The caller must have iam.serviceAccounts.actAs permission for the service account.
            required: true
          - !ruby/object:Api::Type::String
            name: 'scope'
            description: |
              OAuth scope to be used for generating OAuth access token.
              If not specified, "https://www.googleapis.com/auth/cloud-platform" will be used.
            default_from_api: true
      - !ruby/object:Api::Type::NestedObject
        name: 'oidcToken'
        description: |
          If specified, an OIDC token is generated and attached as an Authorization header in the HTTP request.

          This type of authorization can be used for many scenarios, including calling Cloud Run, or endpoints where you intend to validate the token yourself.
          Note that both the service account email and the audience MUST be specified when using the queue-level authorization override.
        conflicts:
          - 'oauthToken'
        properties:
          - !ruby/object:Api::Type::String
            name: 'serviceAccountEmail'
            description: |
              Service account email to be used for generating OIDC token.
              The service account must be within the same project as the queue.
              The caller must have iam.serviceAccounts.actAs permission for the service account.
            required: true
          - !ruby/object:Api::Type::String
            name: 'audience'
            description: |
              Audience to be used when generating OIDC token. If not specified, the URI specified in target will be used.
            default_from_api: true
