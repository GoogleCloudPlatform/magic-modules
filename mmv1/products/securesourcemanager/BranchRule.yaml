# Copyright 2024 Google Inc.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

---
name: 'BranchRule'
description: 'BranchRule is the protection rule to enforce pre-defined rules on designated branches within a repository.'
references:
  guides:
    'Official Documentation': 'https://cloud.google.com/secure-source-manager/docs/overview'
docs:
id_format: 'projects/{{project}}/locations/{{location}}/repositories/{{repository_id}}/branchRules/{{branch_rule_id}}'
base_url: 'projects/{{project}}/locations/{{location}}/repositories/{{repository_id}}/branchRules?branch_rule_id={{branch_rule_id}}'
self_link: 'projects/{{project}}/locations/{{location}}/repositories/{{repository_id}}/branchRules/{{branch_rule_id}}'
import_format:
  - 'projects/{{project}}/locations/{{location}}/repositories/{{repository_id}}/branchRules/{{branch_rule_id}}'
  - '{{branch_rule_id}}'
timeouts:
  insert_minutes: 20
  update_minutes: 20
  delete_minutes: 20
autogen_async: true
update_verb: 'PATCH'
update_mask: true
async:
  actions: ['create', 'delete']
  type: 'OpAsync'
  operation:
    base_url: '{{op_id}}'
    wait_ms: 1000
  result:
    path: 'response'
    resource_inside_response: false
  error:
    path: 'error'
    message: 'message'
custom_code:
examples:
  - name: 'secure_source_manager_branch_rule_basic'
    primary_resource_id: 'basic'
    vars:
      branch_rule_id: 'my-basic-branchrule'
      repository_id: 'my-basic-repository'
      instance_id: 'my-basic-instance'
      prevent_destroy: 'true'
    test_vars_overrides:
      'prevent_destroy': 'false'
    oics_vars_overrides:
      'prevent_destroy': 'false'
  - name: 'secure_source_manager_branch_rule_with_fields'
    primary_resource_id: 'default'
    vars:
      branch_rule_id: 'my-initial-branchrule'
      repository_id: 'my-initial-repository'
      instance_id: 'my-initial-instance'
      prevent_destroy: 'true'
    test_vars_overrides:
      'prevent_destroy': 'false'
    oics_vars_overrides:
      'prevent_destroy': 'false'
parameters:
  - name: 'branch_rule_id'
    type: String
    description: |
      The ID for the BranchRule.
    url_param_only: true
    required: true
  - name: 'location'
    type: String
    description: |
      The location for the Repository.
    url_param_only: true
    required: true
  - name: 'repository_id'
    type: String
    description: |
      The ID for the Repository.
    url_param_only: true
    required: true
properties:
  - name: 'name'
    type: String
    description: |
      The resource name for the BranchRule.
    output: true
  - name: 'uid'
    type: String
    description: |
      Unique identifier of the BranchRule.
    output: true
  - name: 'createTime'
    type: Time
    description: |
      Time the BranchRule was created in UTC.
    output: true
  - name: 'updateTime'
    type: Time
    description: |
      Time the BranchRule was updated in UTC.
    output: true
  - name: 'includePattern'
    type: String
    description: |
      The BranchRule matches branches based on the specified regular expression. Use .* to match all branches.
    required: true
  - name: 'disabled'
    type: Boolean
    description: |
      Determines if the branch rule is disabled or not.
  - name: 'requirePullRequest'
    type: Boolean
    description: |
      Determines if the branch rule requires a pull request or not.
  - name: 'minimumReviewsCount'
    type: Integer
    description: |
      The minimum number of reviews required for the branch rule to be matched.
  - name: 'minimumApprovalsCount'
    type: Integer
    description: |
      The minimum number of approvals required for the branch rule to be matched.
  - name: 'requireCommentsResolved'
    type: Boolean
    description: |
      Determines if require comments resolved before merging to the branch.
  - name: 'allowStaleReviews'
    type: Boolean
    description: |
      Determines if allow stale reviews or approvals before merging to the branch.
  - name: 'requireLinearHistory'
    type: Boolean
    description: |
      Determines if require linear history before merging to the branch.
