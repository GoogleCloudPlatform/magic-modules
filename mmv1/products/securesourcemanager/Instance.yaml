# Copyright 2023 Google Inc.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

--- !ruby/object:Api::Resource
name: 'Instance'
kind: 'securesourcemanager#instance'
base_url: 'projects/{{project}}/locations/{{location}}/instances?instance_id={{instance_id}}'
self_link: 'projects/{{project}}/locations/{{location}}/instances/{{instance_id}}'
immutable: true
description: 'Instances are deployed to an available Google Cloud region and are accessible via their web interface.'
references: !ruby/object:Api::Resource::ReferenceLinks
  guides:
    'Official Documentation': 'https://cloud.google.com/secure-source-manager/overview/overview'
import_format: ['projects/{{project}}/locations/{{location}}/instances/{{instance_id}}', '{{instance_id}}']
autogen_async: true
async: !ruby/object:Api::OpAsync
  actions: ['create', 'delete']
  operation: !ruby/object:Api::OpAsync::Operation
    path: 'name'
    base_url: '{{op_id}}'
    wait_ms: 1000
    timeouts: !ruby/object:Api::Timeouts
      insert_minutes: 60
      update_minutes: 60
      delete_minutes: 60
  result: !ruby/object:Api::OpAsync::Result
    path: 'response'
  status: !ruby/object:Api::OpAsync::Status
    path: 'done'
    complete: true
    allowed:
      - true
      - false
  error: !ruby/object:Api::OpAsync::Error
    path: 'error'
    message: 'message'
iam_policy: !ruby/object:Api::Resource::IamPolicy
  parent_resource_attribute: 'instance_id'
  method_name_separator: ':'
  allowed_iam_role: 'roles/securesourcemanager.instanceManager'
  admin_iam_role: 'roles/securesourcemanager.instanceOwner'
  import_format:
    [
      'projects/{{project}}/locations/{{location}}/instances/{{instance_id}}',
      '{{instance_id}}',
    ]
examples:
  - !ruby/object:Provider::Terraform::Examples
    name: 'secure_source_manager_instance_basic'
    primary_resource_id: 'default'
    primary_resource_name: "fmt.Sprintf(\"tf-test-my-instance%s\",
      context[\"random_suffix\"\
      ])"
    vars:
      instance_id: 'my-instance'
parameters:
  - !ruby/object:Api::Type::String
    name: 'location'
    description: |
      The location for the Instance.
    required: true
    immutable: true
    url_param_only: true
  - !ruby/object:Api::Type::String
    name: 'instance_id'
    description: |
      The name for the Instance.
    required: true
    immutable: true
    url_param_only: true
properties:
  - !ruby/object:Api::Type::String
    name: 'name'
    description: |
      The resource name for the Instance.
    output: true
    immutable: true
  - !ruby/object:Api::Type::Time
    name: 'createTime'
    description: |
      Time the Instance was created in UTC.
    output: true
  - !ruby/object:Api::Type::Time
    name: 'updateTime'
    description: |
      Time the Instance was updated in UTC.
    output: true
  - !ruby/object:Api::Type::KeyValueLabels
    name: 'labels'
    description: |
      Labels as key value pairs.
  - !ruby/object:Api::Type::Enum
    name: 'state'
    description: |
      The current state of the Instance.
    output: true
    values:
      - :CREATING
      - :ACTIVE
      - :DELETING
      - :PAUSED
      - :UNKNOWN
