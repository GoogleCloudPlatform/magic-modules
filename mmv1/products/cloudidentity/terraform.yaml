# Copyright 2020 Google Inc.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

--- !ruby/object:Provider::Terraform::Config
overrides: !ruby/object:Overrides::ResourceOverrides
  Group: !ruby/object:Overrides::Terraform::ResourceOverride
    async: !ruby/object:Provider::Terraform::PollAsync
      check_response_func_existence: PollCheckForExistenceWith403
      target_occurrences: 10
      actions: ['create']
      operation: !ruby/object:Api::Async::Operation
        timeouts: !ruby/object:Api::Timeouts
          insert_minutes: 6
    docs: !ruby/object:Provider::Terraform::Docs
      warning: |
        If you are using User ADCs (Application Default Credentials) with this resource,
        you must specify a `billing_project` and set `user_project_override` to true 
        in the provider configuration. Otherwise the Cloud Identity API will return a 403 error. 
        Your account must have the `serviceusage.services.use` permission on the 
        `billing_project` you defined.
    import_format: ["{{name}}"]
    # Cloud Identity Group requires a customized sweeper
    skip_sweeper: true
    examples:
      - !ruby/object:Provider::Terraform::Examples
        name: "cloud_identity_groups_basic"
        primary_resource_id: "cloud_identity_group_basic"
        vars:
          id_group: "my-identity-group"
        test_env_vars:
          org_domain: :ORG_DOMAIN
          cust_id: :CUST_ID
    custom_code: !ruby/object:Provider::Terraform::CustomCode
      post_create: templates/terraform/post_create/set_computed_name.erb
      custom_import: templates/terraform/custom_import/set_id_name_with_slashes.go.erb
  GroupMembership: !ruby/object:Overrides::Terraform::ResourceOverride
    docs: !ruby/object:Provider::Terraform::Docs
      warning: |
        If you are using User ADCs (Application Default Credentials) with this resource,
        you must specify a `billing_project` and set `user_project_override` to true 
        in the provider configuration. Otherwise the Cloud Identity API will return a 403 error. 
        Your account must have the `serviceusage.services.use` permission on the 
        `billing_project` you defined.
    import_format: ["{{%name}}"]
    # These will be sweeped with the parent groups
    skip_sweeper: true
    examples:
      - !ruby/object:Provider::Terraform::Examples
        name: "cloud_identity_group_membership"
        primary_resource_id: "cloud_identity_group_membership_basic"
        vars:
          id_group: "my-identity-group"
        test_env_vars:
          org_domain: :ORG_DOMAIN
          cust_id: :CUST_ID
      - !ruby/object:Provider::Terraform::Examples
        name: "cloud_identity_group_membership_user"
        primary_resource_id: "cloud_identity_group_membership_basic"
        vars:
          id_group: "my-identity-group"
        test_env_vars:
          org_domain: :ORG_DOMAIN
          cust_id: :CUST_ID
          identity_user: :IDENTITY_USER
    properties:
      memberKey: !ruby/object:Overrides::Terraform::PropertyOverride
        default_from_api: true
      preferredMemberKey: !ruby/object:Overrides::Terraform::PropertyOverride
        default_from_api: true
      roles: !ruby/object:Overrides::Terraform::PropertyOverride
        is_set: true
    custom_code: !ruby/object:Provider::Terraform::CustomCode
      post_create: templates/terraform/post_create/set_computed_name.erb
      post_import: templates/terraform/post_import/cloud_identity_group_membership.go.erb
      update_encoder: templates/terraform/update_encoder/cloud_identity_group_membership.go.erb

# This is for copying files over
files: !ruby/object:Provider::Config::Files
  # These files have templating (ERB) code that will be run.
  # This is usually to add licensing info, autogeneration notices, etc.
  compile:
<%= lines(indent(compile('provider/terraform/product~compile.yaml'), 4)) -%>
