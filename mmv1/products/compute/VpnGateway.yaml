# Copyright 2023 Google Inc.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

--- !ruby/object:Api::Resource
name: 'HaVpnGateway'
kind: 'compute#vpnGateway'
base_url: projects/{{project}}/regions/{{region}}/vpnGateways
collection_url_key: 'items'
immutable: true
has_self_link: true
description: |
  Represents a VPN gateway running in GCP. This virtual device is managed
  by Google, but used only by you. This type of VPN Gateway allows for the creation
  of VPN solutions with higher availability than classic Target VPN Gateways.
references: !ruby/object:Api::Resource::ReferenceLinks
  guides:
    'Choosing a VPN': https://cloud.google.com/vpn/docs/how-to/choosing-a-vpn
    'Cloud VPN Overview': 'https://cloud.google.com/vpn/docs/concepts/overview'
  api: https://cloud.google.com/compute/docs/reference/rest/v1/vpnGateways
async: !ruby/object:Api::OpAsync
  operation: !ruby/object:Api::OpAsync::Operation
    kind: 'compute#operation'
    path: 'name'
    base_url: 'projects/{{project}}/regions/{{region}}/operations/{{op_id}}'
    wait_ms: 1000
  result: !ruby/object:Api::OpAsync::Result
    path: 'targetLink'
  status: !ruby/object:Api::OpAsync::Status
    path: 'status'
    complete: 'DONE'
    allowed:
      - 'PENDING'
      - 'RUNNING'
      - 'DONE'
  error: !ruby/object:Api::OpAsync::Error
    path: 'error/errors'
    message: 'message'
examples:
  - !ruby/object:Provider::Terraform::Examples
    name: 'ha_vpn_gateway_basic'
    primary_resource_id: 'ha_gateway1'
    vars:
      ha_vpn_gateway1_name: 'ha-vpn-1'
      network1_name: 'network1'
  - !ruby/object:Provider::Terraform::Examples
    name: 'ha_vpn_gateway_ipv6'
    primary_resource_id: 'ha_gateway1'
    vars:
      ha_vpn_gateway1_name: 'ha-vpn-1'
      network1_name: 'network1'
  - !ruby/object:Provider::Terraform::Examples
    name: 'ha_vpn_gateway_gcp_to_gcp'
    primary_resource_id:
      'ha_gateway1'
      # Multiple fine-grained resources
    skip_vcr: true
    skip_test: true
    skip_docs: true
    vars:
      ha_vpn_gateway1_name: 'ha-vpn-1'
      network1_name: 'network1'
      router1_name: 'ha-vpn-router1'
      ha_vpn_gateway2_name: 'ha-vpn-2'
      network2_name: 'network2'
      router2_name: 'ha-vpn-router2'
  - !ruby/object:Provider::Terraform::Examples
    name: 'compute_ha_vpn_gateway_encrypted_interconnect'
    primary_resource_id:
      'vpn-gateway'
      # TODO: https://github.com/hashicorp/terraform-provider-google/issues/11504
    skip_test: true
    vars:
      ha_vpn_gateway_name: 'test-ha-vpngw'
      interconnect_attachment1_name: 'test-interconnect-attachment1'
      interconnect_attachment2_name: 'test-interconnect-attachment2'
      address1_name: 'test-address1'
      address2_name: 'test-address2'
      router_name: 'test-router'
      network_name: 'test-network'
parameters:
  - !ruby/object:Api::Type::ResourceRef
    name: 'region'
    resource: 'Region'
    imports: 'name'
    description: |
      The region this gateway should sit in.
    required: false
    default_from_api: true
    custom_flatten: 'templates/terraform/custom_flatten/name_from_self_link.erb'
    custom_expand: 'templates/terraform/custom_expand/resourceref_with_validation.go.erb'
properties:
  - !ruby/object:Api::Type::String
    name: 'description'
    description: 'An optional description of this resource.'
    immutable: true
  - !ruby/object:Api::Type::String
    name: 'name'
    description: |
      Name of the resource. Provided by the client when the resource is
      created. The name must be 1-63 characters long, and comply with
      RFC1035.  Specifically, the name must be 1-63 characters long and
      match the regular expression `[a-z]([-a-z0-9]*[a-z0-9])?` which means
      the first character must be a lowercase letter, and all following
      characters must be a dash, lowercase letter, or digit, except the last
      character, which cannot be a dash.
    required: true
    immutable: true
    validation: !ruby/object:Provider::Terraform::Validation
      function: 'verify.ValidateGCEName'
  - !ruby/object:Api::Type::ResourceRef
    name: 'network'
    resource: 'Network'
    imports: 'selfLink'
    description: |
      The network this VPN gateway is accepting traffic for.
    required: true
    immutable: true
    custom_expand: 'templates/terraform/custom_expand/resourceref_with_validation.go.erb'
  - !ruby/object:Api::Type::Enum
    name: 'stackType'
    description: |
      The stack type for this VPN gateway to identify the IP protocols that are enabled.
      If not specified, IPV4_ONLY will be used.
    default_value: :IPV4_ONLY
    values:
      - :IPV4_ONLY
      - :IPV4_IPV6
    immutable: true
    custom_flatten: 'templates/terraform/custom_flatten/default_if_empty.erb'
  - !ruby/object:Api::Type::Array
    name: 'vpnInterfaces'
    description: |
      A list of interfaces on this VPN gateway.
    default_from_api: true
    item_type: !ruby/object:Api::Type::NestedObject
      properties:
        - !ruby/object:Api::Type::Integer
          name: 'id'
          description: 'The numeric ID of this VPN gateway interface.'
        - !ruby/object:Api::Type::String
          name: 'ipAddress'
          description: 'The external IP address for this VPN gateway interface.'
          output: true
        - !ruby/object:Api::Type::ResourceRef
          name: 'interconnectAttachment'
          resource: 'InterconnectAttachment'
          imports: 'selfLink'
          description: |
            URL of the interconnect attachment resource. When the value
            of this field is present, the VPN Gateway will be used for
            IPsec-encrypted Cloud Interconnect; all Egress or Ingress
            traffic for this VPN Gateway interface will go through the
            specified interconnect attachment resource.

            Not currently available publicly.
          custom_expand: 'templates/terraform/custom_expand/resourceref_with_validation.go.erb'
          immutable: true
