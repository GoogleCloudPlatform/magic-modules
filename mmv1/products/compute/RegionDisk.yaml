# Copyright 2023 Google Inc.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

--- !ruby/object:Api::Resource
name: 'RegionDisk'
kind: 'compute#disk'
immutable: true
base_url: projects/{{project}}/regions/{{region}}/disks
collection_url_key: 'items'
has_self_link: true
description: |
  Persistent disks are durable storage devices that function similarly to
  the physical disks in a desktop or a server. Compute Engine manages the
  hardware behind these devices to ensure data redundancy and optimize
  performance for you. Persistent disks are available as either standard
  hard disk drives (HDD) or solid-state drives (SSD).

  Persistent disks are located independently from your virtual machine
  instances, so you can detach or move persistent disks to keep your data
  even after you delete your instances. Persistent disk performance scales
  automatically with size, so you can resize your existing persistent disks
  or add more persistent disks to an instance to meet your performance and
  storage space requirements.

  Add a persistent disk to your instance when you need reliable and
  affordable storage with consistent performance characteristics.
references: !ruby/object:Api::Resource::ReferenceLinks
  guides:
    'Adding or Resizing Regional Persistent Disks': 'https://cloud.google.com/compute/docs/disks/regional-persistent-disk'
  api: 'https://cloud.google.com/compute/docs/reference/rest/v1/regionDisks'
async: !ruby/object:Api::OpAsync
  operation: !ruby/object:Api::OpAsync::Operation
    kind: 'compute#operation'
    path: 'name'
    base_url: 'projects/{{project}}/regions/{{region}}/operations/{{op_id}}'
    wait_ms: 1000
  result: !ruby/object:Api::OpAsync::Result
    path: 'targetLink'
  status: !ruby/object:Api::OpAsync::Status
    path: 'status'
    complete: 'DONE'
    allowed:
      - 'PENDING'
      - 'RUNNING'
      - 'DONE'
  error: !ruby/object:Api::OpAsync::Error
    path: 'error/errors'
    message: 'message'
custom_code: !ruby/object:Provider::Terraform::CustomCode
  pre_delete: templates/terraform/pre_delete/detach_disk.erb
  encoder: templates/terraform/encoders/disk.erb
  decoder: templates/terraform/decoders/disk.erb
custom_diff: [
  'customdiff.ForceNewIfChange("size", IsDiskShrinkage)',
  'hyperDiskIopsUpdateDiffSupress',
]
examples:
  - !ruby/object:Provider::Terraform::Examples
    name: 'region_disk_basic'
    primary_resource_id: 'regiondisk'
    primary_resource_name: "fmt.Sprintf(\"tf-test-my-region-disk%s\",
      context[\"random_suffix\"\
      ])"
    vars:
      region_disk_name: 'my-region-disk'
      disk_name: 'my-disk'
      snapshot_name: 'my-snapshot'
  - !ruby/object:Provider::Terraform::Examples
    name: 'region_disk_async'
    primary_resource_id: 'primary'
    primary_resource_name: "fmt.Sprintf(\"tf-test-my-region-disk%s\",
      context[\"random_suffix\"\
      ])"
    vars:
      region_disk_name: 'primary-region-disk'
      secondary_region_disk_name: 'secondary-region-disk'
  - !ruby/object:Provider::Terraform::Examples
    name: 'region_disk_features'
    primary_resource_id: 'regiondisk'
    primary_resource_name: "fmt.Sprintf(\"tf-test-my-region-disk%s\",
      context[\"random_suffix\"\
      ])"
    vars:
      region_disk_name: 'my-region-features-disk'
iam_policy: !ruby/object:Api::Resource::IamPolicy
  method_name_separator: '/'
  fetch_iam_policy_verb: :GET
  parent_resource_attribute: 'name'
  import_format:
    ['projects/{{project}}/regions/{{region}}/disks/{{name}}', '{{name}}']
  base_url: projects/{{project}}/regions/{{region}}/disks/{{name}}
parameters:
  - !ruby/object:Api::Type::ResourceRef
    name: 'region'
    resource: 'Region'
    imports: 'name'
    description: 'A reference to the region where the disk resides.'
    required: false
    default_from_api: true
    custom_flatten: 'templates/terraform/custom_flatten/name_from_self_link.erb'
    custom_expand: 'templates/terraform/custom_expand/resourceref_with_validation.go.erb'
  - !ruby/object:Api::Type::NestedObject
    name: 'diskEncryptionKey'
    description: |
      Encrypts the disk using a customer-supplied encryption key.

      After you encrypt a disk with a customer-supplied key, you must
      provide the same key if you use the disk later (e.g. to create a disk
      snapshot or an image, or to attach the disk to a virtual machine).

      Customer-supplied encryption keys do not protect access to metadata of
      the disk.

      If you do not provide an encryption key when creating the disk, then
      the disk will be encrypted using an automatically generated key and
      you do not need to provide a key to use the disk later.
    properties:
      - !ruby/object:Api::Type::String
        name: 'rawKey'
        description: |
          Specifies a 256-bit customer-supplied encryption key, encoded in
          RFC 4648 base64 to either encrypt or decrypt this resource.
        sensitive: true
      - !ruby/object:Api::Type::String
        name: 'sha256'
        description: |
          The RFC 4648 base64 encoded SHA-256 hash of the customer-supplied
          encryption key that protects this resource.
        output: true
        # TODO(chrisst) Change to ResourceRef once KMS is in Magic Modules
      - !ruby/object:Api::Type::String
        name: 'kmsKeyName'
        description: |
          The name of the encryption key that is stored in Google Cloud KMS.
    immutable: true
  - !ruby/object:Api::Type::ResourceRef
    name: 'snapshot'
    api_name: sourceSnapshot
    resource: 'Snapshot'
    imports: 'selfLink'
    description: |
      The source snapshot used to create this disk. You can provide this as
      a partial or full URL to the resource. For example, the following are
      valid values:

      * `https://www.googleapis.com/compute/v1/projects/project/global/snapshots/snapshot`
      * `projects/project/global/snapshots/snapshot`
      * `global/snapshots/snapshot`
      * `snapshot`
    custom_expand: 'templates/terraform/custom_expand/resourceref_with_validation.go.erb'
  - !ruby/object:Api::Type::NestedObject
    name: 'sourceSnapshotEncryptionKey'
    description: |
      The customer-supplied encryption key of the source snapshot. Required
      if the source snapshot is protected by a customer-supplied encryption
      key.
    properties:
      - !ruby/object:Api::Type::String
        name: 'rawKey'
        description: |
          Specifies a 256-bit customer-supplied encryption key, encoded in
          RFC 4648 base64 to either encrypt or decrypt this resource.
        # TODO(chrisst) Change to ResourceRef once KMS is in Magic Modules
      - !ruby/object:Api::Type::String
        name: 'kmsKeyName'
        min_version: beta
        description: |
          The name of the encryption key that is stored in Google Cloud KMS.
      - !ruby/object:Api::Type::String
        name: 'sha256'
        description: |
          The RFC 4648 base64 encoded SHA-256 hash of the customer-supplied
          encryption key that protects this resource.
        output: true
    immutable: true
  - !ruby/object:Api::Type::String
    name: 'sourceSnapshotId'
    description: |
      The unique ID of the snapshot used to create this disk. This value
      identifies the exact snapshot that was used to create this persistent
      disk. For example, if you created the persistent disk from a snapshot
      that was later deleted and recreated under the same name, the source
      snapshot ID would identify the exact version of the snapshot that was
      used.
    output: true
properties:
  - !ruby/object:Api::Type::Fingerprint
    name: 'labelFingerprint'
    description: |
      The fingerprint used for optimistic locking of this resource.  Used
      internally during updates.
    update_url: 'projects/{{project}}/regions/{{region}}/disks/{{name}}/setLabels'
    update_verb: :POST
  - !ruby/object:Api::Type::Time
    name: 'creationTimestamp'
    description: 'Creation timestamp in RFC3339 text format.'
    output: true
  - !ruby/object:Api::Type::String
    name: 'description'
    description: |
      An optional description of this resource. Provide this property when
      you create the resource.
  - !ruby/object:Api::Type::Time
    name: 'lastAttachTimestamp'
    description: 'Last attach timestamp in RFC3339 text format.'
    output: true
  - !ruby/object:Api::Type::Time
    name: 'lastDetachTimestamp'
    description: 'Last detach timestamp in RFC3339 text format.'
    output: true
  - !ruby/object:Api::Type::KeyValueLabels
    name: 'labels'
    description: |
      Labels to apply to this disk.  A list of key->value pairs.
    update_verb: :POST
    update_url: 'projects/{{project}}/regions/{{region}}/disks/{{name}}/setLabels'
  - !ruby/object:Api::Type::String
    name: 'name'
    description: |
      Name of the resource. Provided by the client when the resource is
      created. The name must be 1-63 characters long, and comply with
      RFC1035. Specifically, the name must be 1-63 characters long and match
      the regular expression `[a-z]([-a-z0-9]*[a-z0-9])?` which means the
      first character must be a lowercase letter, and all following
      characters must be a dash, lowercase letter, or digit, except the last
      character, which cannot be a dash.
    immutable: true
    required: true
  - !ruby/object:Api::Type::Integer
    name: 'size'
    api_name: sizeGb
    default_from_api: true
    description: |
      Size of the persistent disk, specified in GB. You can specify this
      field when creating a persistent disk using the sourceImage or
      sourceSnapshot parameter, or specify it alone to create an empty
      persistent disk.

      If you specify this field along with sourceImage or sourceSnapshot,
      the value of sizeGb must not be less than the size of the sourceImage
      or the size of the snapshot.
    update_verb: :POST
    update_url: 'projects/{{project}}/regions/{{region}}/disks/{{name}}/resize'
  - !ruby/object:Api::Type::Array
    name: 'users'
    description: |
      Links to the users of the disk (attached instances) in form:
      project/zones/zone/instances/instance
    item_type: !ruby/object:Api::Type::ResourceRef
      name: 'user'
      resource: 'Instance'
      imports: 'selfLink'
      description: 'A reference to a user of this disk'
    custom_expand: 'templates/terraform/custom_expand/array_resourceref_with_validation.go.erb'
    output: true
  - !ruby/object:Api::Type::Integer
    name: 'physicalBlockSizeBytes'
    description: |
      Physical block size of the persistent disk, in bytes. If not present
      in a request, a default value is used. Currently supported sizes
      are 4096 and 16384, other sizes may be added in the future.
      If an unsupported value is requested, the error message will list
      the supported values for the caller's project.
    default_from_api: true
  - !ruby/object:Api::Type::Array
    name: 'replicaZones'
    description: 'URLs of the zones where the disk should be replicated to.'
    min_size: 2
    max_size: 2
    required: true
    item_type: !ruby/object:Api::Type::ResourceRef
      name: 'zone'
      resource: 'Zone'
      imports: 'selfLink'
      description: |
        A reference to a zone where the disk should be replicated to.
    custom_expand: 'templates/terraform/custom_expand/array_resourceref_with_validation.go.erb'
  - !ruby/object:Api::Type::ResourceRef
    name: 'type'
    resource: 'RegionDiskType'
    imports: 'selfLink'
    description: |
      URL of the disk type resource describing which disk type to use to
      create the disk. Provide this when creating the disk.
    custom_flatten: 'templates/terraform/custom_flatten/name_from_self_link.erb'
    default_value: 'pd-standard'
    custom_expand: 'templates/terraform/custom_expand/resourceref_with_validation.go.erb'
  - !ruby/object:Api::Type::String
    name: 'interface'
    min_version: 'beta'
    # interface is removed using url_param_only to preserve schema definition
    # and prevent sending or reading in API requests
    url_param_only: true
    default_value: 'SCSI'
    deprecation_message: >-
      `interface` is deprecated and will be removed in a future major release.
      This field is no longer used and can be safely removed from your configurations;
      disk interfaces are automatically determined on attachment.
    description: |
      Specifies the disk interface to use for attaching this disk, which is either SCSI or NVME. The default is SCSI.
    diff_suppress_func: 'tpgresource.AlwaysDiffSuppress'
  - !ruby/object:Api::Type::String
    name: 'sourceDisk'
    description: |
      The source disk used to create this disk. You can provide this as a partial or full URL to the resource.
      For example, the following are valid values:

      * https://www.googleapis.com/compute/v1/projects/{project}/zones/{zone}/disks/{disk}
      * https://www.googleapis.com/compute/v1/projects/{project}/regions/{region}/disks/{disk}
      * projects/{project}/zones/{zone}/disks/{disk}
      * projects/{project}/regions/{region}/disks/{disk}
      * zones/{zone}/disks/{disk}
      * regions/{region}/disks/{disk}
    diff_suppress_func: 'sourceDiskDiffSupress'
  - !ruby/object:Api::Type::String
    name: 'sourceDiskId'
    description: |
      The ID value of the disk used to create this image. This value may
      be used to determine whether the image was taken from the current
      or a previous instance of a given disk name.
    output: true
  - !ruby/object:Api::Type::NestedObject
    name: 'asyncPrimaryDisk'
    properties:
      - !ruby/object:Api::Type::String
        name: 'disk'
        description: |
          Primary disk for asynchronous disk replication.
        required: true
    diff_suppress_func: 'tpgresource.CompareSelfLinkRelativePaths'
  - !ruby/object:Api::Type::Array
    name: 'guestOsFeatures'
    description: |
      A list of features to enable on the guest operating system.
      Applicable only for bootable disks.
    default_from_api: true
    is_set: true
    item_type: !ruby/object:Api::Type::NestedObject
      properties:
        - !ruby/object:Api::Type::Enum
          name: 'type'
          required: true
          description: |
            The type of supported feature. Read [Enabling guest operating system features](https://cloud.google.com/compute/docs/images/create-delete-deprecate-private-images#guest-os-features) to see a list of available options.
          values:
            - :MULTI_IP_SUBNET
            - :SECURE_BOOT
            - :SEV_CAPABLE
            - :UEFI_COMPATIBLE
            - :VIRTIO_SCSI_MULTIQUEUE
            - :WINDOWS
            - :GVNIC
            - :SEV_LIVE_MIGRATABLE
            - :SEV_SNP_CAPABLE
            - :SUSPEND_RESUME_COMPATIBLE
            - :TDX_CAPABLE
  - !ruby/object:Api::Type::Array
    name: 'licenses'
    description: Any applicable license URI.
    default_from_api: true
    immutable: true
    item_type: !ruby/object:Api::Type::ResourceRef
      name: 'license'
      description: 'An applicable license URI'
      resource: 'License'
      imports: 'selfLink'
    custom_expand: 'templates/terraform/custom_expand/array_resourceref_with_validation.go.erb'
