# Copyright 2024 Google Inc.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# Warning: This is a temporary file, and should not be edited directly
---
name: 'ManagedSslCertificate'
kind: 'compute#sslCertificate'
description: |
  An SslCertificate resource, used for HTTPS load balancing.  This resource
  represents a certificate for which the certificate secrets are created and
  managed by Google.

  For a resource where you provide the key, see the
  SSL Certificate resource.
references:
  guides:
    'Official Documentation': 'https://cloud.google.com/load-balancing/docs/ssl-certificates'
  api: 'https://cloud.google.com/compute/docs/reference/rest/v1/sslCertificates'
docs:
  warning: |
    This resource should be used with extreme caution!  Provisioning an SSL
    certificate is complex.  Ensure that you understand the lifecycle of a
    certificate before attempting complex tasks like cert rotation automatically.
    This resource will "return" as soon as the certificate object is created,
    but post-creation the certificate object will go through a "provisioning"
    process.  The provisioning process can complete only when the domain name
    for which the certificate is created points to a target pool which, itself,
    points at the certificate.  Depending on your DNS provider, this may take
    some time, and migrating from self-managed certificates to Google-managed
    certificates may entail some downtime while the certificate provisions.

    In conclusion: Be extremely cautious.
base_url: 'projects/{{project}}/global/sslCertificates'
has_self_link: true
immutable: true
timeouts:
  insert_minutes: 30
  update_minutes: 30
  delete_minutes: 30
async:
  type: 'OpAsync'
  operation:
    base_url: 'projects/{{project}}/global/operations/{{op_id}}'
    kind: 'compute#operation'
    path: 'name'
    wait_ms: 1000
    timeouts:
      insert_minutes: 30
      update_minutes: 30
      delete_minutes: 30
  result:
    path: 'targetLink'
    resource_inside_response: false
  error:
    path: 'error/errors'
    message: 'message'
collection_url_key: 'items'
custom_code:
examples:
  - name: 'managed_ssl_certificate_basic'
    primary_resource_id: 'default'
    vars:
      cert_name: 'test-cert'
      proxy_name: 'test-proxy'
      url_map_name: 'url-map'
      backend_service_name: 'backend-service'
      dns_zone_name: 'dnszone'
      forwarding_rule_name: 'forwarding-rule'
      http_health_check_name: 'http-health-check'
  - name: 'managed_ssl_certificate_recreation'
    primary_resource_id: 'cert'
    external_providers: ["random", "time"]
    skip_vcr: true
parameters:
properties:
  - name: 'creationTimestamp'
    type: Time
    description: 'Creation timestamp in RFC3339 text format.'
    output: true
  - name: 'description'
    type: String
    description: 'An optional description of this resource.'
  - name: 'certificate_id'
    type: Integer
    description: 'The unique identifier for the resource.'
    api_name: id
    default_from_api: true
    output: true
  - name: 'name'
    type: String
    description: |
      Name of the resource. Provided by the client when the resource is
      created. The name must be 1-63 characters long, and comply with
      RFC1035. Specifically, the name must be 1-63 characters long and match
      the regular expression `[a-z]([-a-z0-9]*[a-z0-9])?` which means the
      first character must be a lowercase letter, and all following
      characters must be a dash, lowercase letter, or digit, except the last
      character, which cannot be a dash.

      These are in the same namespace as the managed SSL certificates.
  - name: 'managed'
    type: NestedObject
    description: |
      Properties relevant to a managed certificate.  These will be used if the
      certificate is managed (as indicated by a value of `MANAGED` in `type`).
    properties:
      - name: 'domains'
        type: Array
        description: |
          Domains for which a managed SSL certificate will be valid.  Currently,
          there can be up to 100 domains in this list.
        required: true
        diff_suppress_func: 'tpgresource.AbsoluteDomainSuppress'
        item_type:
          type: String
        max_size: 100
  - name: 'type'
    type: Enum
    description: |
      Enum field whose value is always `MANAGED` - used to signal to the API
      which type this is.
    default_value: MANAGED
    enum_values:
      - 'MANAGED'
  - name: 'subjectAlternativeNames'
    type: Array
    description: |
      Domains associated with the certificate via Subject Alternative Name.
    output: true
    item_type:
      type: String
  - name: 'expireTime'
    type: Time
    description: |
      Expire time of the certificate in RFC3339 text format.
    output: true
