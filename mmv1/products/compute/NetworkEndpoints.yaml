# Copyright 2023 Google Inc.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

--- !ruby/object:Api::Resource
name: 'NetworkEndpoints'
kind: 'compute#networkEndpoints'
base_url: 'projects/{{project}}/zones/{{zone}}/networkEndpointGroups/{{network_endpoint_group}}'
description: |
  A set of network endpoints belonging to a network endpoint group (NEG). A
  single network endpoint represents a IP address and port combination that is
  part of a specific network endpoint group  (NEG). NEGs are zonal collections
  of these endpoints for GCP resources within a single subnet. **NOTE**:
  Network endpoints cannot be created outside of a network endpoint group.

  This resource is authoritative for a single NEG. Any endpoints not specified
  by this resource will be deleted when the resource configuration is applied.

  -> **NOTE** In case the Endpoint's Instance is recreated, it's needed to
  perform `apply` twice. To avoid situations like this, please use this resource
  with the lifecycle `replace_triggered_by` method, with the passed Instance's ID.
create_verb: :POST
create_url: projects/{{project}}/zones/{{zone}}/networkEndpointGroups/{{network_endpoint_group}}/attachNetworkEndpoints
update_verb: :POST
update_url: projects/{{project}}/zones/{{zone}}/networkEndpointGroups/{{network_endpoint_group}}/attachNetworkEndpoints
delete_verb: :POST
delete_url: projects/{{project}}/zones/{{zone}}/networkEndpointGroups/{{network_endpoint_group}}/detachNetworkEndpoints
read_verb: :POST
self_link: projects/{{project}}/zones/{{zone}}/networkEndpointGroups/{{network_endpoint_group}}/listNetworkEndpoints
identity:
  - networkEndpointGroup
references: !ruby/object:Api::Resource::ReferenceLinks
  guides:
    'Official Documentation': 'https://cloud.google.com/load-balancing/docs/negs/'
  api: 'https://cloud.google.com/compute/docs/reference/rest/beta/networkEndpointGroups'
async: !ruby/object:Api::OpAsync
  operation: !ruby/object:Api::OpAsync::Operation
    kind: 'compute#operation'
    path: 'name'
    base_url: 'projects/{{project}}/zones/{{zone}}/operations/{{op_id}}'
    wait_ms: 1000
  result: !ruby/object:Api::OpAsync::Result
    path: 'targetLink'
  status: !ruby/object:Api::OpAsync::Status
    path: 'status'
    complete: 'DONE'
    allowed:
      - 'PENDING'
      - 'RUNNING'
      - 'DONE'
  error: !ruby/object:Api::OpAsync::Error
    path: 'error/errors'
    message: 'message'
id_format: '{{project}}/{{zone}}/{{network_endpoint_group}}/endpoints'
import_format:
  - 'projects/{{project}}/zones/{{zone}}/networkEndpointGroups/{{network_endpoint_group}}'
mutex: networkEndpoint/{{project}}/{{zone}}/{{network_endpoint_group}}
exclude_tgc: true
examples:
  - !ruby/object:Provider::Terraform::Examples
    name: 'network_endpoints'
    primary_resource_id:
      'default-endpoints'
      # Fine-grained resource need different autogenerated tests, as
      # we need to check destroy during a test step where the parent resource
      # still exists, rather than during CheckDestroy (when read returns
      # nothing because the parent resource has then also been destroyed)
    skip_test: true
    vars:
      neg_name: 'my-lb-neg'
      instance_name: 'endpoint-instance'
      network_name: 'neg-network'
      subnetwork_name: 'neg-subnetwork'
custom_code: !ruby/object:Provider::Terraform::CustomCode
  constants: templates/terraform/constants/network_endpoints.go.erb
  pre_create: templates/terraform/pre_create/network_endpoints.go.erb
  pre_update: templates/terraform/pre_update/network_endpoints.go.erb
  pre_delete: templates/terraform/pre_delete/compute_network_endpoints.go.erb
  decoder: templates/terraform/decoders/network_endpoints.go.erb
  encoder: templates/terraform/encoders/compute_network_endpoints.go.erb
parameters:
  - !ruby/object:Api::Type::ResourceRef
    name: 'zone'
    resource: 'Zone'
    imports: 'name'
    description: |
      Zone where the containing network endpoint group is located.
    required: false
    url_param_only: true
    default_from_api: true
    ignore_read: true
  - !ruby/object:Api::Type::ResourceRef
    name: 'networkEndpointGroup'
    resource: 'NetworkEndpointGroup'
    imports: 'name'
    description: |
      The network endpoint group these endpoints are part of.
    required: true
    url_param_only: true
    ignore_read: true
    diff_suppress_func: tpgresource.CompareResourceNames
properties:
  - !ruby/object:Api::Type::Array
    name: 'networkEndpoints'
    is_set: true
    description: |
      The network endpoints to be added to the enclosing network endpoint group
      (NEG). Each endpoint specifies an IP address and port, along with
      additional information depending on the NEG type.
    item_type: !ruby/object:Api::Type::NestedObject
      properties:
        - !ruby/object:Api::Type::ResourceRef
          name: 'instance'
          resource: 'Instance'
          imports: 'name'
          description: |
            The name for a specific VM instance that the IP address belongs to.
            This is required for network endpoints of type GCE_VM_IP_PORT.
            The instance must be in the same zone as the network endpoint group.
          custom_expand: 'templates/terraform/custom_expand/resource_from_self_link.go.erb'
        - !ruby/object:Api::Type::Integer
          name: 'port'
          description: |
            Port number of network endpoint.
            **Note** `port` is required unless the Network Endpoint Group is created
            with the type of `GCE_VM_IP`
          custom_flatten: templates/terraform/custom_flatten/float64_to_int.go.erb
        - !ruby/object:Api::Type::String
          name: 'ipAddress'
          description: |
            IPv4 address of network endpoint. The IP address must belong
            to a VM in GCE (either the primary IP or as part of an aliased IP
            range).
          required: true
