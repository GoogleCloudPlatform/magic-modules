# Copyright 2024 Google Inc.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

---
name: 'RegionNetworkPolicyTrafficClassificationRule'
api_resource_type_kind: NetworkPolicy
kind: 'compute#networkPolicyTrafficClassificationRule'
description: |
  Represents a traffic classification rule that describes one or more match conditions along with the action to be taken when traffic matches this condition.
references:
  guides:
  api: 'https://cloud.google.com/compute/docs/reference/rest/beta/networkPolicies/addTrafficClassificationRule'
docs:
id_format: 'projects/{{project}}/regions/{{region}}/networkPolicies/{{network_policy}}/{{priority}}'
base_url: 'projects/{{project}}/regions/{{region}}/networkPolicies/{{network_policy}}'
self_link: 'projects/{{project}}/regions/{{region}}/networkPolicies/{{network_policy}}/getTrafficClassificationRule?priority={{priority}}'
create_url: 'projects/{{project}}/regions/{{region}}/networkPolicies/{{network_policy}}/addTrafficClassificationRule'
update_url: 'projects/{{project}}/regions/{{region}}/networkPolicies/{{network_policy}}/patchTrafficClassificationRule?priority={{priority}}'
update_verb: 'POST'
delete_url: 'projects/{{project}}/regions/{{region}}/networkPolicies/{{network_policy}}/removeTrafficClassificationRule?priority={{priority}}'
delete_verb: 'POST'
legacy_long_form_project: true
import_format:
  - 'projects/{{project}}/regions/{{region}}/networkPolicies/{{network_policy}}/{{priority}}'
  - '{{project}}/{{region}}/{{network_policy}}/{{priority}}'
  - '{{region}}/{{network_policy}}/{{priority}}'
  - '{{network_policy}}/{{priority}}'
timeouts:
  insert_minutes: 20
  update_minutes: 20
  delete_minutes: 20
async:
  actions: ['create', 'delete', 'update']
  type: 'OpAsync'
  operation:
    base_url: '{{op_id}}'
  result:
    resource_inside_response: false
custom_diff:
  - 'tpgresource.DefaultProviderRegion'
examples:
  # - name: 'region_network_firewall_policy_rule'
  #   primary_resource_id: 'primary'
  #   vars:
  #     address_group: 'address-group'
  #     fw_policy: 'fw-policy'
  #     network: 'network'
  #     tag_key: 'tag-key'
  #     tag_value: 'tag-value'
  #   test_env_vars:
  #     org_id: 'ORG_ID'
  #     project_name: 'PROJECT_NAME'
  #     region: 'REGION'
  #     service_acct: 'SERVICE_ACCT'
  # - name: 'region_network_firewall_policy_rule_network_scope_egress'
  #   primary_resource_id: 'primary'
  #   vars:
  #     fw_policy: 'fw-policy'
  #   test_env_vars:
  #     org_id: 'ORG_ID'
  #     project_name: 'PROJECT_NAME'
  #     region: 'REGION'
  #   min_version: beta
  # - name: 'region_network_firewall_policy_rule_network_scope_ingress'
  #   primary_resource_id: 'primary'
  #   vars:
  #     fw_policy: 'fw-policy'
  #     network: 'network'
  #   test_env_vars:
  #     org_id: 'ORG_ID'
  #     project_name: 'PROJECT_NAME'
  #     region: 'REGION'
  #   min_version: beta
parameters:
  - name: 'networkPolicy'
    type: ResourceRef
    description: |
      The firewall policy of the resource.
    url_param_only: true
    required: true
    immutable: true
    diff_suppress_func: 'tpgresource.CompareResourceNames'
    resource: 'RegionNetworkPolicy'
    imports: 'name'
  - name: 'region'
    type: String
    description: 'The location of this resource.'
    url_param_only: true
    immutable: true
    default_from_api: true
properties:
  - name: 'creationTimestamp'
    type: String
    description: |
      Creation timestamp in RFC3339 text format.
    output: true
  - name: 'kind'
    type: String
    description: |
      Type of the resource. Alwayscompute#networkPolicyTrafficClassificationRule for network policy traffic classification rules
    output: true
  - name: 'ruleName'
    type: String
    description: |
      An optional name for the rule. This field is not a unique identifier and can be updated.
  - name: 'description'
    type: String
    description: 'An optional description for this resource.'
  - name: 'priority'
    type: Integer
    immutable: true
    description: |
      An integer indicating the priority of a rule in the list. The priority must be a positive value between 1 and 2147482647.
      The priority values from 2147482648 to 2147483647 (1000) are reserved for system default network policy rules.
      Rules are evaluated from highest to lowest priority where 1 is the highest priority and 2147483647 is the lowest priority.
    required: true
  - name: 'match'
    type: NestedObject
    description: |
      A match condition that incoming traffic is evaluated against. If it evaluates to true, the corresponding 'action' is enforced.
    required: true
    properties:
      - name: 'srcIpRanges'
        type: Array
        send_empty_value: true
        description: |
          CIDR IP address range. Maximum number of source CIDR IP ranges allowed is 5000.
        item_type:
          type: String
      - name: 'destIpRanges'
        type: Array
        send_empty_value: true
        description: |
          CIDR IP address range. Maximum number of destination CIDR IP ranges allowed is 5000.
        item_type:
          type: String
      # - name: 'srcNetworkScope'
      #   type: Enum
      #   description: |
      #     Network scope of the traffic source.
      #   min_version: beta
      #   enum_values:
      #     - 'INTERNET'
      #     - 'INTRA_VPC'
      #     - 'NON_INTERNET'
      #     - 'VPC_NETWORKS'
      # - name: 'srcNetworks'
      #   type: Array
      #   description: |
      #     Networks of the traffic source. It can be either a full or partial url.
      #   min_version: beta
      #   item_type:
      #     type: String
      # - name: 'destNetworkScope'
      #   type: Enum
      #   description: |
      #     Network scope of the traffic destination.
      #   min_version: beta
      #   enum_values:
      #     - 'INTERNET'
      #     - 'INTRA_VPC'
      #     - 'NON_INTERNET'
      #     - 'VPC_NETWORKS'
      - name: 'layer4Configs'
        type: Array
        send_empty_value: true
        description: |
          Pairs of IP protocols and ports that the rule should match.
        required: true
        item_type:
          type: NestedObject
          properties:
            - name: 'ipProtocol'
              type: String
              description: |
                The IP protocol to which this rule applies. The protocol type is required when creating a traffic classification rule.
                This value can either be one of the following well known protocol strings (tcp, udp, icmp, esp, ah, ipip, sctp), or the IP protocol number.
              required: true
            - name: 'ports'
              type: Array
              description: |
                An optional list of ports to which this rule applies. This field is only applicable for UDP or TCP protocol. Each entry must be either an integer or a range. If not specified, this rule applies to connections through any port.
                Example inputs include: ["22"], ["80","443"], and ["12345-12349"].
              item_type:
                type: String
      # - name: 'srcSecureTags'
      #   type: Array
      #   send_empty_value: true
      #   description: |
      #     List of secure tag values, which should be matched at the source of the traffic. For INGRESS rule, if all the srcSecureTag are INEFFECTIVE, and there is no srcIpRange, this rule will be ignored. Maximum number of source tag values allowed is 256.
      #   item_type:
      #     type: NestedObject
      #     properties:
      #       - name: 'name'
      #         type: String
      #         description: |
      #           Name of the secure tag, created with TagManager's TagValue API.
      #         diff_suppress_func: 'tpgresource.CompareSelfLinkOrResourceName'
      #       - name: 'state'
      #         type: Enum
      #         description: |
      #           State of the secure tag, either EFFECTIVE or INEFFECTIVE. A secure tag is INEFFECTIVE when it is deleted or its network is deleted.
      #         output: true
      #         enum_values:
      #           - 'EFFECTIVE'
      #           - 'INEFFECTIVE'
      # - name: 'destAddressGroups'
      #   type: Array
      #   send_empty_value: true
      #   description: |
      #     Address groups which should be matched against the traffic destination. Maximum number of destination address groups is 10.
      #   item_type:
      #     type: String
      # - name: 'srcAddressGroups'
      #   type: Array
      #   send_empty_value: true
      #   description: |
      #     Address groups which should be matched against the traffic source. Maximum number of source address groups is 10.
      #   item_type:
      #     type: String
      # - name: 'srcFqdns'
      #   type: Array
      #   send_empty_value: true
      #   description: |
      #     Fully Qualified Domain Name (FQDN) which should be matched against traffic source. Maximum number of source fqdn allowed is 100.
      #   item_type:
      #     type: String
      # - name: 'destFqdns'
      #   type: Array
      #   send_empty_value: true
      #   description: |
      #     Fully Qualified Domain Name (FQDN) which should be matched against traffic destination. Maximum number of destination fqdn allowed is 100.
      #   item_type:
      #     type: String
      # - name: 'srcRegionCodes'
      #   type: Array
      #   send_empty_value: true
      #   description: |
      #     Region codes whose IP addresses will be used to match for source of traffic. Should be specified as 2 letter country code defined as per ISO 3166 alpha-2 country codes. ex."US" Maximum number of source region codes allowed is 5000.
      #   item_type:
      #     type: String
      # - name: 'destRegionCodes'
      #   type: Array
      #   send_empty_value: true
      #   description: |
      #     Region codes whose IP addresses will be used to match for destination of traffic. Should be specified as 2 letter country code defined as per ISO 3166 alpha-2 country codes. ex."US" Maximum number of dest region codes allowed is 5000.
      #   item_type:
      #     type: String
      # - name: 'destThreatIntelligences'
      #   type: Array
      #   send_empty_value: true
      #   description: |
      #     Names of Network Threat Intelligence lists. The IPs in these lists will be matched against traffic destination.
      #   item_type:
      #     type: String
      # - name: 'srcThreatIntelligences'
      #   type: Array
      #   send_empty_value: true
      #   description: |
      #     Names of Network Threat Intelligence lists. The IPs in these lists will be matched against traffic source.
      #   item_type:
      #     type: String
  - name: 'action'
    type: NestedObject
    description: 'The Action to perform when the client connection triggers the rule.'
    required: true
    properties:
      - name: 'trafficClass'
        type: Enum
        description: |
          The traffic class that should be applied to the matching packet.
        enum_values:
          - 'TC1'
          - 'TC2'
          - 'TC3'
          - 'TC4'
          - 'TC5'
          - 'TC6'
      - name: 'dscpMode'
        type: Enum
        description: |
          DSCP mode. When set to AUTO, the DSCP value will be picked automatically based on selected trafficClass. Otherwise,dscpValue needs to be explicitly specified.
        enum_values:
          - 'AUTO'
          - 'CUSTOM'
      - name: 'dscpValue'
        type: Integer
        description: |
          Custom DSCP value from 0-63 range.
  # - name: 'securityProfileGroup'
  #   type: String
  #   description: |
  #     A fully-qualified URL of a SecurityProfile resource instance.
  #     Example: https://networksecurity.googleapis.com/v1/projects/{project}/locations/{location}/securityProfileGroups/my-security-profile-group
  #     Must be specified if action = 'apply_security_profile_group' and cannot be specified for other actions.

  #     Security Profile Group and Firewall Policy Rule must be in the same scope.
  # - name: 'tlsInspect'
  #   type: Boolean
  #   description: |
  #     Boolean flag indicating if the traffic should be TLS decrypted.
  #     Can be set only if action = 'apply_security_profile_group' and cannot be set for other actions.
  # - name: 'direction'
  #   type: Enum
  #   description: |
  #     The direction in which this rule applies.
  #   required: true
  #   enum_values:
  #     - 'INGRESS'
  #     - 'EGRESS'
  # - name: 'enableLogging'
  #   type: Boolean
  #   send_empty_value: true
  #   description: |
  #     Denotes whether to enable logging for a particular rule.
  #     If logging is enabled, logs will be exported to the configured export destination in Stackdriver.
  #     Logs may be exported to BigQuery or Pub/Sub.
  #     Note: you cannot enable logging on "goto_next" rules.
  - name: 'ruleTupleCount'
    type: Integer
    description: |
      Calculation of the complexity of a single network policy rule.
    output: true
  - name: 'targetServiceAccounts'
    type: Array
    send_empty_value: true
    description: |
      A list of service accounts indicating the sets of instances that are applied with this rule.
    item_type:
      type: String
  - name: 'targetSecureTags'
    type: Array
    send_empty_value: true
    description: |
      A list of secure tags that controls which instances the traffic classification rule applies to.
      If targetSecureTag are specified, then the traffic classification rule applies only to instances in the VPC network that have one of those EFFECTIVE secure tags, if all the targetSecureTag are in INEFFECTIVE state, then this rule will be ignored.
      targetSecureTag may not be set at the same time as targetServiceAccounts. If neither targetServiceAccounts nor targetSecureTag are specified, the firewall rule applies to all instances on the specified network. Maximum number of target label tags allowed is 256.
    item_type:
      type: NestedObject
      properties:
        - name: 'name'
          type: String
          description: |
            Name of the secure tag, created with TagManager's TagValue API.
          diff_suppress_func: 'tpgresource.CompareSelfLinkOrResourceName'
        - name: 'state'
          type: Enum
          description: |
            State of the secure tag, either EFFECTIVE or INEFFECTIVE. A secure tag is INEFFECTIVE when it is deleted or its network is deleted.
          output: true
          enum_values:
            - 'EFFECTIVE'
            - 'INEFFECTIVE'
  - name: 'disabled'
    type: Boolean
    description: |
      Denotes whether the network policy rule is disabled.
      When set to true, the network policy rule is not enforced and traffic behaves as if it did not exist.
      If this is unspecified, the network policy rule will be enabled.
