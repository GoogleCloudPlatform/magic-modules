# Copyright 2023 Google Inc.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

--- !ruby/object:Api::Resource
# API resource name
name: 'NetworkAttachment'
# Resource description for the provider documentation.

kind: 'compute#networkAttachments' # TODO understand

description: |
  A network attachment is a resource that lets a producer Virtual Private Cloud (VPC) network initiate connections to a consumer VPC network through a Private Service Connect interface.

# URL for the resource's standard List method. https://google.aip.dev/132
# Terraform field names enclosed in double curly braces are replaced with
# the field values from the resource at runtime.
base_url: 'projects/{{project}}/regions/{{region}}/networkAttachments'

collection_url_key: 'items' # ? TODO understand

references: !ruby/object:Api::Resource::ReferenceLinks
  guides:
   # Link to quickstart in the API's Guides section. For example:
   # 'Create and connect to a database': 'https://cloud.google.com/alloydb/docs/quickstart/create-and-connect'
    'Official Documentation': 'https://cloud.google.com/vpc/docs/about-network-attachments'
  # Link to the REST API reference for the resource. For example,
  # https://cloud.google.com/alloydb/docs/reference/rest/v1/projects.locations.backups
  api: 'https://cloud.google.com/compute/docs/reference/rest/v1/networkAttachments'

# If true, code for handling long-running operations is generated along with
# the resource. If false, that code is not generated.
# autogen_async: true # TODO is this required?
# Sets parameters for handling operations returned by the API.
async: !ruby/object:Api::OpAsync
  # Overrides which API calls return operations. Default: ['create', 'update', 'delete']
  # actions: ['create', 'update', 'delete']
  operation: !ruby/object:Api::OpAsync::Operation
    kind: 'compute#operation' # TODO understand
    patch: 'name' # TODO understand
    base_url: '{{op_id}}'
    wait_ms: 1000

  # If true, the provider sets the resource's Terraform ID after the resoulimit -n 8192urce is created,
  # taking into account values that are set by the API at create time. This is only possible
  # when the completed operation's JSON includes the created resource in the "response" field.
  # If false (or unset), the provider sets the resource's Terraform ID before the resource is
  # created, based only on the resource configuration.
  result: !ruby/object:Api::OpAsync::Result
    path: 'targetLink'
    # resource_inside_response: true # TODO understand

  # TODO understand
  status: !ruby/object:Api::OpAsync::Status
    path: 'status'
    complete: 'DONE'
    allowed:
      - 'PENDING'
      - 'RUNNING'
      - 'DONE'

  # TODO understand
  error: !ruby/object:Api::OpAsync::Error
    path: 'error/errors'
    message: 'message'

examples:
  - !ruby/object:Provider::Terraform::Examples
    name: 'network_attachment_basic'
    primary_resource_id: 'default'
    vars:
      resource_name: 'basic-network-attachment'
      network_name: 'basic-network'
      subnetwork_name: 'basic-subnetwork'
#   - !ruby/object:Provider::Terraform::Examples
#     name: 'network_attachment_instance_usage'
#     primary_resource_id: 'default'
#     vars:
#       resource_name: 'basic-network-attachment'
#       network_name: 'basic-network'
#       subnetwork_name: 'basic-subnetwork'
#       instance_name: 'basic-instance'

# Marks the resource as beta-only. Ensure a beta version block is present in
# provider.yaml.
# min_version: beta

# Inserts styled markdown into the header of the resource's page in the
# provider documentation.
# docs:
#   warning: |
#     MULTILINE_WARNING_MARKDOWN
#   note: |
#     MULTILINE_NOTE_MARKDOWN


# URL for the resource's standard Get method. https://google.aip.dev/131
# Terraform field names enclosed in double curly braces are replaced with
# the field values from the resource at runtime.
# self_link: 'projects/{{project}}/locations/{{location}}/resourcenames/{{name}}' # TODO is this neccessary

# If true, the resource and all its fields are considered immutable - that is,
# only creatable, not updatable. Individual fields can override this if they
# have a custom update method in the API.
# immutable: true

# Overrides one or more timeouts, in minutes. All timeouts default to 20.
# timeouts: !ruby/object:Api::Timeouts
#   insert_minutes: 20
#   update_minutes: 20
#   delete_minutes: 20

# URL for the resource's standard Create method, including query parameters.
# https://google.aip.dev/133
# Terraform field names enclosed in double curly braces are replaced with
# the field values from the resource at runtime.
# create_url: 'projects/{{project}}/locations/{{location}}/resourcenames?resourceId={{name}}' # TODO is this necessary
# Overrides the HTTP verb used to create a new resource.
# Allowed values: :POST, :PUT, :PATCH. Default: :POST
# create_verb: :POST

# Overrides the URL for the resource's standard Update method. (If unset, the
# self_link URL is used by default.) https://google.aip.dev/134
# Terraform field names enclosed in double curly braces are replaced with
# the field values from the resource at runtime.
# update_url: 'projects/{{project}}/locations/{{location}}/resourcenames/{{name}}'
# The HTTP verb used to update a resource. Allowed values: :POST, :PUT, :PATCH. Default: :PUT.
# update_verb: :PATCH # TODO is this necessary
# If true, the resource sets an `updateMask` query parameter listing modified
# fields when updating the resource. If false, it does not.
# update_mask: true # TODO is this necessary

# Overrides the URL for the resource's standard Delete method. (If unset, the
# self_link URL is used by default.) https://google.aip.dev/135
# Terraform field names enclosed in double curly braces are replaced with
# the field values from the resource at runtime.
# delete_url: 'projects/{{project}}/locations/{{location}}/resourcenames/{{name}}'
# Overrides the HTTP verb used to delete a resource.
# Allowed values: :POST, :PUT, :PATCH, :DELETE. Default: :DELETE
# delete_verb: :DELETE

# All resources (of all kinds) that share a mutex value block rather than
# executing concurrent API requests.
# Terraform field names enclosed in double curly braces are replaced with
# the field values from the resource at runtime.
# mutex: RESOURCE_NAME/{{name}}

parameters:
  - !ruby/object:Api::Type::String
    name: 'name'
    description: |
      Name of the resource. Provided by the client when the resource is created. The name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression [a-z]([-a-z0-9]*[a-z0-9])? which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash.
    required: true
    immutable: true
  - !ruby/object:Api::Type::String
    name: 'region'
    description: |
      URL of the region where the network attachment resides. This field applies only to the region resource. You must specify this field as part of the HTTP request URL. It is not settable as a field in the request body.
    required: true
    immutable: true
    ignore_read: true

properties:
  # Supported types: String, Integer, Boolean, Double, Enum,
  # ResourceRef (link to a GCP resource), KeyValuePairs (string -> string map),
  # Array, and NestedObject
  # - !ruby/object:Api::Type::String
  #   name: 'API_FIELD_NAME'
  #   description: |
  #     MULTILINE_FIELD_DESCRIPTION
    # Marks the field (and any subfields) as beta-only. Ensure a beta version block
    # is present in provider.yaml. Do not use if an ancestor field (or the overall
    # resource) is already marked as beta-only.
    # min_version: beta

    # If true, the field (and any subfields) are considered immutable - that is,
    # only settable on create. If unset or false, the field is still considered
    # immutable if any ancestor field (or the overall resource) is immutable,
    # unless `update_url` is set.
    # immutable: true

    # If set, changes to the field's value trigger a separate call to a specific
    # API method for updating the field's value. The field is not considered
    # immutable even if an ancestor field (or the overall resource) is immutable.
    # Terraform field names enclosed in double curly braces are replaced with the
    # field values from the resource at runtime.
    # update_url: 'projects/{{project}}/locations/{{location}}/resourcenames/{{name}}/setFieldName'

    # If update_url is also set, overrides the verb used to update this specific
    # field. Allowed values: :POST, :PUT, :PATCH. Default: Resource's update_verb
    # (which defaults to :PUT if unset).
    # update_verb: :POST

    # If true, the field is required. If unset or false, the field is optional.
    # required: true

    # If true, the field is output-only - that is, it cannot be configured by the
    # user. If unset or false, the field is configurable.
    # output: true

    # If true, the provider sets the field's value in the resource state based only
    # on the user's configuration. If false or unset, the provider sets the field's
    # value in the resource state based on the API response. Only use this attribute
    # if the field cannot be read from GCP due to either API or provider constraints.
    # ignore_read: true

    # Sets a client-side default value for the field. This should be used if the
    # API has a default value that applies in all cases and is stable. Removing
    # or changing a default value is a breaking change. If unset, the field defaults
    # to an "empty" value (such as zero, false, or an empty string).
    # default_value: DEFAULT_VALUE

    # If true, and the field is either not set or set to an "empty" value (such as
    # zero, false, or empty strings), the provider accepts any value returned from
    # the API as the value for the field. If false, and the field is either not set
    # or set to an "empty" value, the provider treats the field's `default_value`
    # as the value for the field and shows a diff if the API returns any other
    # value for the field. This attribute is useful for complex or
    # frequently-changed API-side defaults, but provides less useful information at
    # plan time than `default_value` and causes the provider to ignore user
    # configurations that explicitly set the field to an "empty" value.
    # `default_from_api` and `send_empty_value` cannot both be true on the same field.
    # default_from_api: true

    # If true, the provider sends "empty" values (such as zero, false, or empty
    # strings) to the API if set explicitly in the user's configuration. If false,
    # "empty" values cause the field to be omitted entirely from the API request.
    # This attribute is useful for fields where the API would behave differently
    # for an "empty" value vs no value for a particular field - for example,
    # boolean fields that have an API-side default of true.
    # `send_empty_value` and `default_from_api` cannot both be true on the same field.
    # send_empty_value: true

    # Specifies a list of fields (excluding the current field) that cannot be
    # specified at the same time as the current field. Must be set separately on
    # all listed fields.
    # conflicts:
    #   - field_one
    #   - nested_object.0.nested_field

    # Specifies a list of fields (including the current field) that cannot be
    # specified at the same time (but at least one of which must be set). Must be
    # set separately on all listed fields.
    # exactly_one_of:
    #   - field_one
    #   - nested_object.0.nested_field

    # Enum only. Sets allowed values as ruby "literal constants" (prefixed with a
    # colon). If the allowed values change frequently, use a String field instead
    # to allow better forwards-compatibility, and link to API documentation
    # stating the current allowed values in the String field's description. Do not
    # include UNSPECIFIED values in this list.
    # values:
    #   - :VALUE_ONE
    #   - :VALUE_TWO

    # Array only. Sets the expected type of the items in the array. Primitives
    # should use the name of the primitive class as a string; other types should
    # define the attributes of the nested type.
    # item_type: Api::Type::String
    # item_type: !ruby/object:Api::Type::Enum
    #   name: 'required but unused'
    #   description: 'required but unused'
    #   values:
    #     - :VALUE_ONE
    #     - :VALUE_TWO

    # NestedObject only. Defines fields nested inside the current field.
    # properties:
    #   - !ruby/object:Api::Type::String
    #     name: 'FIELD_NAME'
    #     description: |
    #       MULTI_LINE_FIELD_DESCRIPTION
  - !ruby/object:Api::Type::String
    name: 'kind'
    description: 'Type of the resource.'
    output: true
    ignore_read: true
  - !ruby/object:Api::Type::String
    name: 'id'
    description: 'The unique identifier for the resource type. The server generates this identifier.'
    output: true
    ignore_read: true
  - !ruby/object:Api::Type::Time
    name: 'creationTimestamp'
    description: 'Creation timestamp in RFC3339 text format.'
    output: true
  - !ruby/object:Api::Type::String
    name: 'selfLink'
    description: 'Server-defined URL for the resource.'
    output: true
  - !ruby/object:Api::Type::String
    name: 'selfLinkWithId'
    description: |
      Server-defined URL for this resource's resource id.
    output: true
  - !ruby/object:Api::Type::Enum
    name: 'connectionPreference'
    description: |
      The connection preference of service attachment. The value can be set to ACCEPT_AUTOMATIC. An ACCEPT_AUTOMATIC service attachment is one that always accepts the connection from consumer forwarding rules.
    required: true
    values:
      - :ACCEPT_AUTOMATIC
      - :ACCEPT_MANUAL
      - :INVALID
  - !ruby/object:Api::Type::Array
    name: 'connectionEndpoints'
    output: true
    description: |
      An array of connections for all the producers connected to this network attachment.
    item_type: !ruby/object:Api::Type::NestedObject
      properties:
        - !ruby/object:Api::Type::String
          name: 'projectIdOrNum'
          output: true
          description: |
            The project id or number of the interface to which the IP was assigned.
        - !ruby/object:Api::Type::String
          name: 'status'
          output: true
          description: |
            The status of a connected endpoint to this network attachment.
        - !ruby/object:Api::Type::String
          name: 'subnetwork'
          output: true
          description: |
            The subnetwork used to assign the IP to the producer instance network interface.
        - !ruby/object:Api::Type::String
          name: 'ipAddress'
          output: true
          description: |
            The IPv4 address assigned to the producer instance network interface. This value will be a range in case of Serverless.
        - !ruby/object:Api::Type::String
          name: 'secondaryIpCidrRanges'
          output: true
          description: |
            Alias IP ranges from the same subnetwork.
  - !ruby/object:Api::Type::String
    name: 'description'
    description: |
      An optional description of this resource. Provide this property when you create the resource.
  - !ruby/object:Api::Type::Array
    name: 'subnetworks'
    ignore_read: true
    required: true
    description: |
      An array of URLs where each entry is the URL of a subnet provided by the service consumer to use for endpoints in the producers that connect to this network attachment.
    item_type: Api::Type::String
  - !ruby/object:Api::Type::Array
    name: 'producerRejectLists'
    description: |
      Projects that are not allowed to connect to this network attachment. The project can be specified using its id or number.
    item_type: Api::Type::String
  - !ruby/object:Api::Type::Array
    name: 'producerAcceptLists'
    description: |
      Projects that are allowed to connect to this network attachment. The project can be specified using its id or number.
    item_type: Api::Type::String
  - !ruby/object:Api::Type::Fingerprint
    name: 'fingerprint'
    description: |
      Fingerprint of this resource. A hash of the contents stored in this object. This
      field is used in optimistic locking.
  - !ruby/object:Api::Type::String
    name: 'network'
    output: true
    description: |
      The URL of the network which the Network Attachment belongs to. Practically it is inferred by fetching the network of the first subnetwork associated.
      Because it is required that all the subnetworks must be from the same network, it is assured that the Network Attachment belongs to the same network as all the subnetworks.
