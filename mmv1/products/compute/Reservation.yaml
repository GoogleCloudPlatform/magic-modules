<<<<<<< HEAD
# Copyright 2023 Google Inc.
=======
# Copyright 2024 Google Inc.
>>>>>>> 2fdda66097e2c96688e59f7c58c1f717c7785856
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

<<<<<<< HEAD
--- !ruby/object:Api::Resource
name: 'Reservation'
base_url: projects/{{project}}/zones/{{zone}}/reservations
update_verb: :PATCH
update_url: projects/{{project}}/zones/{{zone}}/reservations/{{name}}
update_mask: true
collection_url_key: 'items'
has_self_link: true
=======
---
name: 'Reservation'
>>>>>>> 2fdda66097e2c96688e59f7c58c1f717c7785856
description: |
  Represents a reservation resource. A reservation ensures that capacity is
  held in a specific zone even if the reserved VMs are not running.

  Reservations apply only to Compute Engine, Cloud Dataproc, and Google
  Kubernetes Engine VM usage.Reservations do not apply to `f1-micro` or
  `g1-small` machine types, preemptible VMs, sole tenant nodes, or other
  services not listed above
  like Cloud SQL and Dataflow.
<<<<<<< HEAD
references: !ruby/object:Api::Resource::ReferenceLinks
  guides:
    'Reserving zonal resources': 'https://cloud.google.com/compute/docs/instances/reserving-zonal-resources'
  api: 'https://cloud.google.com/compute/docs/reference/rest/v1/reservations'
async: !ruby/object:Api::OpAsync
  operation: !ruby/object:Api::OpAsync::Operation
    kind: 'compute#operation'
    path: 'name'
    base_url: '{{op_id}}'
    wait_ms: 1000
  result: !ruby/object:Api::OpAsync::Result
    path: 'targetLink'
  status: !ruby/object:Api::OpAsync::Status
    path: 'status'
    complete: 'DONE'
    allowed:
      - 'PENDING'
      - 'RUNNING'
      - 'DONE'
  error: !ruby/object:Api::OpAsync::Error
    path: 'error/errors'
    message: 'message'
examples:
  - !ruby/object:Provider::Terraform::Examples
    name: 'reservation_basic'
    primary_resource_id: 'gce_reservation'
    vars:
      reservation_name: 'gce-reservation'
  - !ruby/object:Provider::Terraform::Examples
    name: 'shared_reservation_basic'
    primary_resource_id: 'gce_reservation'
    test_env_vars:
      project: :PROJECT_NAME
      org_id: :ORG_ID
      billing_account: :BILLING_ACCT
    vars:
      reservation_name: 'gce-shared-reservation'
    skip_docs:
      true
      # Resource creation race
    skip_vcr: true
custom_code: !ruby/object:Provider::Terraform::CustomCode
  update_encoder: templates/terraform/update_encoder/reservation.go.erb
  pre_update: templates/terraform/pre_update/shared_reservation_update.go.erb
parameters:
  - !ruby/object:Api::Type::ResourceRef
    name: 'zone'
    resource: 'Zone'
    imports: 'name'
=======
references:
  guides:
    'Reserving zonal resources': 'https://cloud.google.com/compute/docs/instances/reserving-zonal-resources'
  api: 'https://cloud.google.com/compute/docs/reference/rest/v1/reservations'
docs:
base_url: 'projects/{{project}}/zones/{{zone}}/reservations'
has_self_link: true
update_url: 'projects/{{project}}/zones/{{zone}}/reservations/{{name}}'
update_verb: 'PATCH'
update_mask: true
timeouts:
  insert_minutes: 20
  update_minutes: 20
  delete_minutes: 20
async:
  actions: ['create', 'delete', 'update']
  type: 'OpAsync'
  operation:
    base_url: '{{op_id}}'
    kind: 'compute#operation'
    path: 'name'
    wait_ms: 1000
  result:
    path: 'targetLink'
    resource_inside_response: false
  error:
    path: 'error/errors'
    message: 'message'
collection_url_key: 'items'
custom_code:
  update_encoder: 'templates/terraform/update_encoder/reservation.go.tmpl'
  pre_update: 'templates/terraform/pre_update/shared_reservation_update.go.tmpl'
examples:
  - name: 'reservation_basic'
    primary_resource_id: 'gce_reservation'
    vars:
      reservation_name: 'gce-reservation'
  - name: 'shared_reservation_basic'
    primary_resource_id: 'gce_reservation'
    vars:
      reservation_name: 'gce-shared-reservation'
    test_env_vars:
      project: 'PROJECT_NAME'
      org_id: 'ORG_ID'
      billing_account: 'BILLING_ACCT'
    exclude_docs: true
      # Resource creation race
    skip_vcr: true
parameters:
  - name: 'zone'
    type: ResourceRef
>>>>>>> 2fdda66097e2c96688e59f7c58c1f717c7785856
    description: |
      The zone where the reservation is made.
    required: true
    immutable: true
<<<<<<< HEAD
    custom_expand: 'templates/terraform/custom_expand/resourceref_with_validation.go.erb'
properties:
  - !ruby/object:Api::Type::Time
    name: 'creationTimestamp'
    output: true
    description: |
      Creation timestamp in RFC3339 text format.
  - !ruby/object:Api::Type::String
    name: 'description'
    immutable: true
    description: |
      An optional description of this resource.
  - !ruby/object:Api::Type::String
    name: 'name'
    required: true
    immutable: true
=======
    custom_expand: 'templates/terraform/custom_expand/resourceref_with_validation.go.tmpl'
    resource: 'Zone'
    imports: 'name'
properties:
  - name: 'creationTimestamp'
    type: Time
    description: |
      Creation timestamp in RFC3339 text format.
    output: true
  - name: 'description'
    type: String
    description: |
      An optional description of this resource.
    immutable: true
  - name: 'name'
    type: String
>>>>>>> 2fdda66097e2c96688e59f7c58c1f717c7785856
    description: |
      Name of the resource. Provided by the client when the resource is
      created. The name must be 1-63 characters long, and comply with
      RFC1035. Specifically, the name must be 1-63 characters long and match
      the regular expression `[a-z]([-a-z0-9]*[a-z0-9])?` which means the
      first character must be a lowercase letter, and all following
      characters must be a dash, lowercase letter, or digit, except the last
      character, which cannot be a dash.
<<<<<<< HEAD
  - !ruby/object:Api::Type::String
    name: 'commitment'
    output: true
    description: |
      Full or partial URL to a parent commitment. This field displays for
      reservations that are tied to a commitment.
  - !ruby/object:Api::Type::Boolean
    name: 'specificReservationRequired'
    immutable: true
    # Not a hard API default, but this should help avoid a unset/true/false
    # trinary.
    default_value: false
=======
    required: true
    immutable: true
  - name: 'commitment'
    type: String
    description: |
      Full or partial URL to a parent commitment. This field displays for
      reservations that are tied to a commitment.
    output: true
  - name: 'specificReservationRequired'
    type: Boolean
>>>>>>> 2fdda66097e2c96688e59f7c58c1f717c7785856
    description: |
      When set to true, only VMs that target this reservation by name can
      consume this reservation. Otherwise, it can be consumed by VMs with
      affinity for any reservation. Defaults to false.
<<<<<<< HEAD
  - !ruby/object:Api::Type::String
    name: 'status'
    output: true
    description: |
      The status of the reservation.
  - !ruby/object:Api::Type::NestedObject
    name: 'shareSettings'
    description: |
      The share setting for reservations.
    default_from_api: true
    ignore_read: true
    properties:
      - !ruby/object:Api::Type::Enum
        name: 'shareType'
        values:
          - :LOCAL
          - :SPECIFIC_PROJECTS
        description: |
          Type of sharing for this shared-reservation
        default_from_api: true
        immutable: true
      - !ruby/object:Api::Type::Map
        name: 'projectMap'
        description: |
          A map of project number and project config. This is only valid when shareType's value is SPECIFIC_PROJECTS.
        key_name: id
        key_description: |
          The project id/number which is deleting or adding to the project list.
        value_type: !ruby/object:Api::Type::NestedObject
          name: projectConfig
          properties:
            - !ruby/object:Api::Type::String
              name: 'projectId'
              description: |
                The project id/number, should be same as the key of this project config in the project map.
  - !ruby/object:Api::Type::NestedObject
    name: 'specificReservation'
    required: true
    description: |
      Reservation for instances with specific machine shapes.
    update_verb: :POST
    update_url: 'projects/{{project}}/zones/{{zone}}/reservations/{{name}}/resize'
    properties:
      - !ruby/object:Api::Type::Integer
        name: 'count'
        required: true
        description: |
          The number of resources that are allocated.
        validation: !ruby/object:Provider::Terraform::Validation
          function: 'validation.IntAtLeast(1)'
      - !ruby/object:Api::Type::Integer
        name: 'inUseCount'
        output: true
        description: |
          How many instances are in use.
      - !ruby/object:Api::Type::NestedObject
        name: 'instanceProperties'
        required: true
        immutable: true
        description: |
          The instance properties for the reservation.
        properties:
          - !ruby/object:Api::Type::String
            name: 'machineType'
            required: true
            immutable: true
            description: |
              The name of the machine type to reserve.
          - !ruby/object:Api::Type::String
            name: 'minCpuPlatform'
            immutable: true
=======
    immutable: true
    # Not a hard API default, but this should help avoid a unset/true/false
    # trinary.
    default_value: false
  - name: 'status'
    type: String
    description: |
      The status of the reservation.
    output: true
  - name: 'shareSettings'
    type: NestedObject
    description: |
      The share setting for reservations.
    ignore_read: true
    default_from_api: true
    properties:
      - name: 'shareType'
        type: Enum
        description: |
          Type of sharing for this shared-reservation
        immutable: true
        default_from_api: true
        enum_values:
          - 'LOCAL'
          - 'SPECIFIC_PROJECTS'
      - name: 'projectMap'
        type: Map
        description: |
          A map of project number and project config. This is only valid when shareType's value is SPECIFIC_PROJECTS.
        key_name: 'id'
        key_description: |
          The project id/number which is deleting or adding to the project list.
        value_type:
          name: projectConfig
          type: NestedObject
          properties:
            - name: 'projectId'
              type: String
              description: |
                The project id/number, should be same as the key of this project config in the project map.
  - name: 'specificReservation'
    type: NestedObject
    description: |
      Reservation for instances with specific machine shapes.
    required: true
    update_url: 'projects/{{project}}/zones/{{zone}}/reservations/{{name}}/resize'
    update_verb: 'POST'
    properties:
      - name: 'count'
        type: Integer
        description: |
          The number of resources that are allocated.
        required: true
        validation:
          function: 'validation.IntAtLeast(1)'
      - name: 'inUseCount'
        type: Integer
        description: |
          How many instances are in use.
        output: true
      - name: 'instanceProperties'
        type: NestedObject
        description: |
          The instance properties for the reservation.
        required: true
        immutable: true
        properties:
          - name: 'machineType'
            type: String
            description: |
              The name of the machine type to reserve.
            required: true
            immutable: true
          - name: 'minCpuPlatform'
            type: String
>>>>>>> 2fdda66097e2c96688e59f7c58c1f717c7785856
            description: |
              The minimum CPU platform for the reservation. For example,
              `"Intel Skylake"`. See
              the CPU platform availability reference](https://cloud.google.com/compute/docs/instances/specify-min-cpu-platform#availablezones)
              for information on available CPU platforms.
<<<<<<< HEAD
            default_from_api: true
          - !ruby/object:Api::Type::Array
            name: 'guestAccelerators'
            description: |
              Guest accelerator type and count.
            immutable: true
            item_type: !ruby/object:Api::Type::NestedObject
              properties:
                - !ruby/object:Api::Type::String
                  name: 'acceleratorType'
                  required: true
                  immutable: true
=======
            immutable: true
            default_from_api: true
          - name: 'guestAccelerators'
            type: Array
            description: |
              Guest accelerator type and count.
            immutable: true
            item_type:
              type: NestedObject
              properties:
                - name: 'acceleratorType'
                  type: String
>>>>>>> 2fdda66097e2c96688e59f7c58c1f717c7785856
                  description: |
                    The full or partial URL of the accelerator type to
                    attach to this instance. For example:
                    `projects/my-project/zones/us-central1-c/acceleratorTypes/nvidia-tesla-p100`

                    If you are creating an instance template, specify only the accelerator name.
<<<<<<< HEAD
                - !ruby/object:Api::Type::Integer
                  name: 'acceleratorCount'
                  required: true
                  immutable: true
                  description: |
                    The number of the guest accelerator cards exposed to
                    this instance.
          - !ruby/object:Api::Type::Array
            name: 'localSsds'
            immutable: true
            description: |
              The amount of local ssd to reserve with each instance. This
              reserves disks of type `local-ssd`.
            item_type: !ruby/object:Api::Type::NestedObject
              properties:
                - !ruby/object:Api::Type::Enum
                  name: 'interface'
                  immutable: true
                  default_value: :SCSI
                  values:
                    - :SCSI
                    - :NVME
                  description: |
                    The disk interface to use for attaching this disk.
                - !ruby/object:Api::Type::Integer
                  name: 'diskSizeGb'
                  required: true
                  immutable: true
                  description: |
                    The size of the disk in base-2 GB.
=======
                  required: true
                  immutable: true
                - name: 'acceleratorCount'
                  type: Integer
                  description: |
                    The number of the guest accelerator cards exposed to
                    this instance.
                  required: true
                  immutable: true
          - name: 'localSsds'
            type: Array
            description: |
              The amount of local ssd to reserve with each instance. This
              reserves disks of type `local-ssd`.
            immutable: true
            item_type:
              type: NestedObject
              properties:
                - name: 'interface'
                  type: Enum
                  description: |
                    The disk interface to use for attaching this disk.
                  immutable: true
                  default_value: "SCSI"
                  enum_values:
                    - 'SCSI'
                    - 'NVME'
                - name: 'diskSizeGb'
                  type: Integer
                  description: |
                    The size of the disk in base-2 GB.
                  required: true
                  immutable: true
>>>>>>> 2fdda66097e2c96688e59f7c58c1f717c7785856
