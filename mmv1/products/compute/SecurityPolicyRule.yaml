# Copyright 2023 Google Inc.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

--- !ruby/object:Api::Resource
name: 'SecurityPolicyRule'
base_url: 'projects/{{project}}/global/securityPolicies/{{security_policy}}'
self_link: 'projects/{{project}}/global/securityPolicies/{{security_policy}}/getRule?priority={{priority}}'
create_url: 'projects/{{project}}/global/securityPolicies/{{security_policy}}/addRule?priority={{priority}}'
update_verb: :POST
update_mask: true
update_url: 'projects/{{project}}/global/securityPolicies/{{security_policy}}/patchRule?priority={{priority}}'
delete_verb: :POST
delete_url: 'projects/{{project}}/global/securityPolicies/{{security_policy}}/removeRule?priority={{priority}}'
description: |
  A rule for the SecurityPolicy.
references: !ruby/object:Api::Resource::ReferenceLinks
  guides:
    'Creating global security policy rules': 'https://cloud.google.com/armor/docs/configure-security-policies'
  api:
    'https://cloud.google.com/compute/docs/reference/rest/v1/securityPolicies/addRule'
id_format: 'projects/{{project}}/global/securityPolicies/{{security_policy}}/priority/{{priority}}'
import_format: ['projects/{{project}}/global/securityPolicies/{{security_policy}}/priority/{{priority}}']
async: !ruby/object:Api::OpAsync
  operation: !ruby/object:Api::OpAsync::Operation
    kind: 'compute#operation'
    path: 'name'
    base_url: 'projects/{{project}}/global/operations/{{op_id}}'
    wait_ms: 1000
  result: !ruby/object:Api::OpAsync::Result
    path: 'targetLink'
  status: !ruby/object:Api::OpAsync::Status
    path: 'status'
    complete: 'DONE'
    allowed:
      - 'PENDING'
      - 'RUNNING'
      - 'DONE'
  error: !ruby/object:Api::OpAsync::Error
    path: 'error/errors'
    message: 'message'
examples:
  - !ruby/object:Provider::Terraform::Examples
    name: 'security_policy_rule_basic'
    primary_resource_id: 'policy_rule'
    vars:
      sec_policy_name: 'policyruletest'
  - !ruby/object:Provider::Terraform::Examples
    name: 'security_policy_rule_default_rule'
    primary_resource_id: 'policy_rule'
    skip_test: true
    vars:
      sec_policy_name: 'policyruletest'
      project_id: :PROJECT_NAME
  - !ruby/object:Provider::Terraform::Examples
    name: 'security_policy_rule_multiple_rules'
    primary_resource_id: 'policy_rule_one'
    vars:
      sec_policy_name: 'policywithmultiplerules'
parameters:
  - !ruby/object:Api::Type::String
    name: 'security_policy'
    required: true
    immutable: true
    description: |
      The name of the security policy this rule belongs to.
    url_param_only: true
properties:
  - !ruby/object:Api::Type::String
    name: 'description'
    description: |
      An optional description of this resource. Provide this property when you create the resource.
  - !ruby/object:Api::Type::Integer
    name: 'priority'
    description: |
      An integer indicating the priority of a rule in the list.
      The priority must be a positive value between 0 and 2147483647.
      Rules are evaluated from highest to lowest priority where 0 is the highest priority and 2147483647 is the lowest priority.
    required: true
    immutable: true
  - !ruby/object:Api::Type::NestedObject
    name: 'match'
    description: |
      A match condition that incoming traffic is evaluated against.
      If it evaluates to true, the corresponding 'action' is enforced.
    properties:
      - !ruby/object:Api::Type::Enum
        name: 'versionedExpr'
        description: |
          Preconfigured versioned expression. If this field is specified, config must also be specified.
          Available preconfigured expressions along with their requirements are: SRC_IPS_V1 - must specify the corresponding srcIpRange field in config.
        values:
          - :SRC_IPS_V1
      - !ruby/object:Api::Type::NestedObject
        name: 'expr'
        description: |
          User defined CEVAL expression. A CEVAL expression is used to specify match criteria such as origin.ip, source.region_code and contents in the request header.
        properties:
          - !ruby/object:Api::Type::String
            name: 'expression'
            required: true
            description: |
              Textual representation of an expression in Common Expression Language syntax. The application context of the containing message determines which well-known feature set of CEL is supported.
          # >> These fields are not yet supported, following the global security policy resource.
          # - !ruby/object:Api::Type::String
          #   name: 'title'
          #   description: |
          #     Optional. Title for the expression, i.e. a short string describing its purpose. This can be used e.g. in UIs which allow to enter the expression.
          # - !ruby/object:Api::Type::String
          #   name: 'description'
          #   description: |
          #     Optional. Description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI.
          # - !ruby/object:Api::Type::String
          #   name: 'location'
          #   description: |
          #     Optional. String indicating the location of the expression for error reporting, e.g. a file name and a position in the file.
      - !ruby/object:Api::Type::NestedObject
        name: 'exprOptions'
        description: |
          The configuration options available when specifying a user defined CEVAL expression (i.e., 'expr').
        properties:
          - !ruby/object:Api::Type::NestedObject
            name: 'recaptchaOptions'
            required: true
            description: |
              reCAPTCHA configuration options to be applied for the rule. If the rule does not evaluate reCAPTCHA tokens, this field has no effect.
            properties:
              - !ruby/object:Api::Type::Array
                name: 'actionTokenSiteKeys'
                description: |
                  A list of site keys to be used during the validation of reCAPTCHA action-tokens. The provided site keys need to be created from reCAPTCHA API under the same project where the security policy is created.
                item_type: Api::Type::String
              - !ruby/object:Api::Type::Array
                name: 'sessionTokenSiteKeys'
                description: |
                  A list of site keys to be used during the validation of reCAPTCHA session-tokens. The provided site keys need to be created from reCAPTCHA API under the same project where the security policy is created.
                item_type: Api::Type::String
      - !ruby/object:Api::Type::NestedObject
        name: 'config'
        description: |
          The configuration options available when specifying versionedExpr.
          This field must be specified if versionedExpr is specified and cannot be specified if versionedExpr is not specified.
        properties:
          - !ruby/object:Api::Type::Array
            name: 'srcIpRanges'
            description: |
              CIDR IP address range. Maximum number of srcIpRanges allowed is 10.
            item_type: Api::Type::String
  - !ruby/object:Api::Type::NestedObject
    name: 'preconfiguredWafConfig'
    description: |
      Preconfigured WAF configuration to be applied for the rule.
      If the rule does not evaluate preconfigured WAF rules, i.e., if evaluatePreconfiguredWaf() is not used, this field will have no effect.
    properties:
      - !ruby/object:Api::Type::Array
        name: 'exclusion'
        api_name: 'exclusions'
        description: |
          An exclusion to apply during preconfigured WAF evaluation.
        item_type: !ruby/object:Api::Type::NestedObject
          properties:
            - !ruby/object:Api::Type::Array
              name: 'requestHeader'
              api_name: 'requestHeadersToExclude'
              description: |
                Request header whose value will be excluded from inspection during preconfigured WAF evaluation.
              item_type: !ruby/object:Api::Type::NestedObject
                properties:
                  - !ruby/object:Api::Type::String
                    name: 'operator'
                    api_name: 'op'
                    required: true
                    description: |
                      You can specify an exact match or a partial match by using a field operator and a field value.
                      Available options:
                      EQUALS: The operator matches if the field value equals the specified value.
                      STARTS_WITH: The operator matches if the field value starts with the specified value.
                      ENDS_WITH: The operator matches if the field value ends with the specified value.
                      CONTAINS: The operator matches if the field value contains the specified value.
                      EQUALS_ANY: The operator matches if the field value is any value.
                    validation: !ruby/object:Provider::Terraform::Validation
                      function: validation.StringInSlice([]string{"EQUALS", "STARTS_WITH", "ENDS_WITH", "CONTAINS", "EQUALS_ANY"}, false)
                  - !ruby/object:Api::Type::String
                    name: 'value'
                    api_name: 'val'
                    description: |
                      A request field matching the specified value will be excluded from inspection during preconfigured WAF evaluation.
                      The field value must be given if the field operator is not EQUALS_ANY, and cannot be given if the field operator is EQUALS_ANY.
            - !ruby/object:Api::Type::Array
              name: 'requestCookie'
              api_name: 'requestCookiesToExclude'
              description: |
                Request cookie whose value will be excluded from inspection during preconfigured WAF evaluation.
              item_type: !ruby/object:Api::Type::NestedObject
                properties:
                  - !ruby/object:Api::Type::String
                    name: 'operator'
                    api_name: 'op'
                    required: true
                    description: |
                      You can specify an exact match or a partial match by using a field operator and a field value.
                      Available options:
                      EQUALS: The operator matches if the field value equals the specified value.
                      STARTS_WITH: The operator matches if the field value starts with the specified value.
                      ENDS_WITH: The operator matches if the field value ends with the specified value.
                      CONTAINS: The operator matches if the field value contains the specified value.
                      EQUALS_ANY: The operator matches if the field value is any value.
                    validation: !ruby/object:Provider::Terraform::Validation
                      function: validation.StringInSlice([]string{"EQUALS", "STARTS_WITH", "ENDS_WITH", "CONTAINS", "EQUALS_ANY"}, false)
                  - !ruby/object:Api::Type::String
                    name: 'value'
                    api_name: 'val'
                    description: |
                      A request field matching the specified value will be excluded from inspection during preconfigured WAF evaluation.
                      The field value must be given if the field operator is not EQUALS_ANY, and cannot be given if the field operator is EQUALS_ANY.
            - !ruby/object:Api::Type::Array
              name: 'requestUri'
              api_name: 'requestUrisToExclude'
              description: |
                Request URI from the request line to be excluded from inspection during preconfigured WAF evaluation.
                When specifying this field, the query or fragment part should be excluded.
              item_type: !ruby/object:Api::Type::NestedObject
                properties:
                  - !ruby/object:Api::Type::String
                    name: 'operator'
                    api_name: 'op'
                    required: true
                    description: |
                      You can specify an exact match or a partial match by using a field operator and a field value.
                      Available options:
                      EQUALS: The operator matches if the field value equals the specified value.
                      STARTS_WITH: The operator matches if the field value starts with the specified value.
                      ENDS_WITH: The operator matches if the field value ends with the specified value.
                      CONTAINS: The operator matches if the field value contains the specified value.
                      EQUALS_ANY: The operator matches if the field value is any value.
                    validation: !ruby/object:Provider::Terraform::Validation
                      function: validation.StringInSlice([]string{"EQUALS", "STARTS_WITH", "ENDS_WITH", "CONTAINS", "EQUALS_ANY"}, false)
                  - !ruby/object:Api::Type::String
                    name: 'value'
                    api_name: 'val'
                    description: |
                      A request field matching the specified value will be excluded from inspection during preconfigured WAF evaluation.
                      The field value must be given if the field operator is not EQUALS_ANY, and cannot be given if the field operator is EQUALS_ANY.
            - !ruby/object:Api::Type::Array
              name: 'requestQueryParam'
              api_name: 'requestQueryParamsToExclude'
              description: |
                Request query parameter whose value will be excluded from inspection during preconfigured WAF evaluation.
                Note that the parameter can be in the query string or in the POST body.
              item_type: !ruby/object:Api::Type::NestedObject
                properties:
                  - !ruby/object:Api::Type::String
                    name: 'operator'
                    api_name: 'op'
                    required: true
                    description: |
                      You can specify an exact match or a partial match by using a field operator and a field value.
                      Available options:
                      EQUALS: The operator matches if the field value equals the specified value.
                      STARTS_WITH: The operator matches if the field value starts with the specified value.
                      ENDS_WITH: The operator matches if the field value ends with the specified value.
                      CONTAINS: The operator matches if the field value contains the specified value.
                      EQUALS_ANY: The operator matches if the field value is any value.
                    validation: !ruby/object:Provider::Terraform::Validation
                      function: validation.StringInSlice([]string{"EQUALS", "STARTS_WITH", "ENDS_WITH", "CONTAINS", "EQUALS_ANY"}, false)
                  - !ruby/object:Api::Type::String
                    name: 'value'
                    api_name: 'val'
                    description: |
                      A request field matching the specified value will be excluded from inspection during preconfigured WAF evaluation.
                      The field value must be given if the field operator is not EQUALS_ANY, and cannot be given if the field operator is EQUALS_ANY.
            - !ruby/object:Api::Type::String
              name: 'targetRuleSet'
              required: true
              description: |
                Target WAF rule set to apply the preconfigured WAF exclusion.
            - !ruby/object:Api::Type::Array
              name: 'targetRuleIds'
              description: |
                A list of target rule IDs under the WAF rule set to apply the preconfigured WAF exclusion.
                If omitted, it refers to all the rule IDs under the WAF rule set.
              item_type: Api::Type::String
  - !ruby/object:Api::Type::String
    name: 'action'
    description: |
      The Action to perform when the rule is matched. The following are the valid actions:

      * allow: allow access to target.

      * deny(STATUS): deny access to target, returns the HTTP response code specified. Valid values for STATUS are 403, 404, and 502.

      * rate_based_ban: limit client traffic to the configured threshold and ban the client if the traffic exceeds the threshold. Configure parameters for this action in RateLimitOptions. Requires rateLimitOptions to be set.

      * redirect: redirect to a different target. This can either be an internal reCAPTCHA redirect, or an external URL-based redirect via a 302 response. Parameters for this action can be configured via redirectOptions. This action is only supported in Global Security Policies of type CLOUD_ARMOR.

      * throttle: limit client traffic to the configured threshold. Configure parameters for this action in rateLimitOptions. Requires rateLimitOptions to be set for this.
    required: true
  - !ruby/object:Api::Type::NestedObject
    name: 'rateLimitOptions'
    description: |
      Must be specified if the action is "rate_based_ban" or "throttle". Cannot be specified for any other actions.
    update_mask_fields:
      - 'rateLimitOptions.rateLimitThreshold'
      - 'rateLimitOptions.conformAction'
      - 'rateLimitOptions.exceedRedirectOptions'
      - 'rateLimitOptions.exceedAction'
      - 'rateLimitOptions.enforceOnKey'
      - 'rateLimitOptions.enforceOnKeyName'
      - 'rateLimitOptions.enforceOnKeyConfigs'
      - 'rateLimitOptions.banThreshold'
      - 'rateLimitOptions.banDurationSec'
    properties:
      - !ruby/object:Api::Type::NestedObject
        name: 'rateLimitThreshold'
        description: |
          Threshold at which to begin ratelimiting.
        properties:
          - !ruby/object:Api::Type::Integer
            name: 'count'
            description: |
              Number of HTTP(S) requests for calculating the threshold.
          - !ruby/object:Api::Type::Integer
            name: 'intervalSec'
            description: |
              Interval over which the threshold is computed.
      - !ruby/object:Api::Type::String
        name: 'conformAction'
        description: |
          Action to take for requests that are under the configured rate limit threshold.
          Valid option is "allow" only.
      - !ruby/object:Api::Type::NestedObject
        name: 'exceedRedirectOptions'
        description: |
          Parameters defining the redirect action that is used as the exceed action. Cannot be specified if the exceed action is not redirect. This field is only supported in Global Security Policies of type CLOUD_ARMOR.
        properties:
          - !ruby/object:Api::Type::String
            name: 'type'
            description: |
              Type of the redirect action.
          - !ruby/object:Api::Type::String
            name: 'target'
            description: |
              Target for the redirect action. This is required if the type is EXTERNAL_302 and cannot be specified for GOOGLE_RECAPTCHA.
      - !ruby/object:Api::Type::String
        name: 'exceedAction'
        description: |
          Action to take for requests that are above the configured rate limit threshold, to either deny with a specified HTTP response code, or redirect to a different endpoint.
          Valid options are deny(STATUS), where valid values for STATUS are 403, 404, 429, and 502.
      - !ruby/object:Api::Type::Enum
        name: 'enforceOnKey'
        description: |
          Determines the key to enforce the rateLimitThreshold on. Possible values are:
          * ALL: A single rate limit threshold is applied to all the requests matching this rule. This is the default value if "enforceOnKey" is not configured.
          * IP: The source IP address of the request is the key. Each IP has this limit enforced separately.
          * HTTP_HEADER: The value of the HTTP header whose name is configured under "enforceOnKeyName". The key value is truncated to the first 128 bytes of the header value. If no such header is present in the request, the key type defaults to ALL.
          * XFF_IP: The first IP address (i.e. the originating client IP address) specified in the list of IPs under X-Forwarded-For HTTP header. If no such header is present or the value is not a valid IP, the key defaults to the source IP address of the request i.e. key type IP.
          * HTTP_COOKIE: The value of the HTTP cookie whose name is configured under "enforceOnKeyName". The key value is truncated to the first 128 bytes of the cookie value. If no such cookie is present in the request, the key type defaults to ALL.
          * HTTP_PATH: The URL path of the HTTP request. The key value is truncated to the first 128 bytes.
          * SNI: Server name indication in the TLS session of the HTTPS request. The key value is truncated to the first 128 bytes. The key type defaults to ALL on a HTTP session.
          * REGION_CODE: The country/region from which the request originates.
          * TLS_JA3_FINGERPRINT: JA3 TLS/SSL fingerprint if the client connects using HTTPS, HTTP/2 or HTTP/3. If not available, the key type defaults to ALL.
          * USER_IP: The IP address of the originating client, which is resolved based on "userIpRequestHeaders" configured with the security policy. If there is no "userIpRequestHeaders" configuration or an IP address cannot be resolved from it, the key type defaults to IP.
        values:
          - :ALL
          - :IP
          - :HTTP_HEADER
          - :XFF_IP
          - :HTTP_COOKIE
          - :HTTP_PATH
          - :SNI
          - :REGION_CODE
          - :TLS_JA3_FINGERPRINT
          - :USER_IP
      - !ruby/object:Api::Type::String
        name: 'enforceOnKeyName'
        description: |
          Rate limit key name applicable only for the following key types:
          HTTP_HEADER -- Name of the HTTP header whose value is taken as the key value.
          HTTP_COOKIE -- Name of the HTTP cookie whose value is taken as the key value.
      - !ruby/object:Api::Type::Array
        name: 'enforceOnKeyConfigs'
        description: |
          If specified, any combination of values of enforceOnKeyType/enforceOnKeyName is treated as the key on which ratelimit threshold/action is enforced.
          You can specify up to 3 enforceOnKeyConfigs.
          If enforceOnKeyConfigs is specified, enforceOnKey must not be specified.
        item_type: !ruby/object:Api::Type::NestedObject
          properties:
            - !ruby/object:Api::Type::Enum
              name: 'enforceOnKeyType'
              description: |
                Determines the key to enforce the rateLimitThreshold on. Possible values are:
                * ALL: A single rate limit threshold is applied to all the requests matching this rule. This is the default value if "enforceOnKeyConfigs" is not configured.
                * IP: The source IP address of the request is the key. Each IP has this limit enforced separately.
                * HTTP_HEADER: The value of the HTTP header whose name is configured under "enforceOnKeyName". The key value is truncated to the first 128 bytes of the header value. If no such header is present in the request, the key type defaults to ALL.
                * XFF_IP: The first IP address (i.e. the originating client IP address) specified in the list of IPs under X-Forwarded-For HTTP header. If no such header is present or the value is not a valid IP, the key defaults to the source IP address of the request i.e. key type IP.
                * HTTP_COOKIE: The value of the HTTP cookie whose name is configured under "enforceOnKeyName". The key value is truncated to the first 128 bytes of the cookie value. If no such cookie is present in the request, the key type defaults to ALL.
                * HTTP_PATH: The URL path of the HTTP request. The key value is truncated to the first 128 bytes.
                * SNI: Server name indication in the TLS session of the HTTPS request. The key value is truncated to the first 128 bytes. The key type defaults to ALL on a HTTP session.
                * REGION_CODE: The country/region from which the request originates.
                * TLS_JA3_FINGERPRINT: JA3 TLS/SSL fingerprint if the client connects using HTTPS, HTTP/2 or HTTP/3. If not available, the key type defaults to ALL.
                * USER_IP: The IP address of the originating client, which is resolved based on "userIpRequestHeaders" configured with the security policy. If there is no "userIpRequestHeaders" configuration or an IP address cannot be resolved from it, the key type defaults to IP.
              values:
                - :ALL
                - :IP
                - :HTTP_HEADER
                - :XFF_IP
                - :HTTP_COOKIE
                - :HTTP_PATH
                - :SNI
                - :REGION_CODE
                - :TLS_JA3_FINGERPRINT
                - :USER_IP
            - !ruby/object:Api::Type::String
              name: 'enforceOnKeyName'
              description: |
                Rate limit key name applicable only for the following key types:
                HTTP_HEADER -- Name of the HTTP header whose value is taken as the key value.
                HTTP_COOKIE -- Name of the HTTP cookie whose value is taken as the key value.
      - !ruby/object:Api::Type::NestedObject
        name: 'banThreshold'
        description: |
          Can only be specified if the action for the rule is "rate_based_ban".
          If specified, the key will be banned for the configured 'banDurationSec' when the number of requests that exceed the 'rateLimitThreshold' also exceed this 'banThreshold'.
        properties:
          - !ruby/object:Api::Type::Integer
            name: 'count'
            description: |
              Number of HTTP(S) requests for calculating the threshold.
          - !ruby/object:Api::Type::Integer
            name: 'intervalSec'
            description: |
              Interval over which the threshold is computed.
      - !ruby/object:Api::Type::Integer
        name: 'banDurationSec'
        description: |
          Can only be specified if the action for the rule is "rate_based_ban".
          If specified, determines the time (in seconds) the traffic will continue to be banned by the rate limit after the rate falls below the threshold.
  - !ruby/object:Api::Type::Boolean
    name: 'preview'
    description: |
      If set to true, the specified action is not enforced.
