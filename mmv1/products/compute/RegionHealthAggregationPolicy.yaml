# Copyright 2025 Google Inc.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

---
# API resource name
name: 'RegionHealthAggregationPolicy'
# Resource description for the provider documentation.
description: |
  The Health Aggregation Policy specifies how to aggregate the service's constituent source health status to determine an aggregated health status result for the service.  For example, you can specify a criteria such as “Consider the Health Source as `Healthy` if there are at least 5 healthy backend endpoints”. Or, you can specify a criteria like “Consider the Health Source as `Healthy` if minimum 60% of endpoints in the Backend are healthy”. The Health Aggregation Policy is applied to each Health Source (e.g. Backend Service) individually. 
references:
  guides:
    'Health checks overview': 'https://cloud.google.com/load-balancing/docs/health-check-concepts'
  api: 'https://cloud.google.com/compute/docs/reference/rest/v1/healthAggregationPolicies'
min_version: beta

# URL for the resource's standard List method. https://google.aip.dev/132
# Terraform field names enclosed in double curly braces are replaced with
# the field values from the resource at runtime.
base_url: 'projects/{{project}}/regions/{{region}}/healthAggregationPolicies'
# URL for the resource's standard Get method. https://google.aip.dev/131
# Terraform field names enclosed in double curly braces are replaced with
# the field values from the resource at runtime.
self_link: 'projects/{{project}}/regions/{{region}}/healthAggregationPolicies/{{name}}'

# URL for the resource's standard Create method, including query parameters.
# https://google.aip.dev/133
# Terraform field names enclosed in double curly braces are replaced with
# the field values from the resource at runtime.
create_url: 'projects/{{project}}/regions/{{region}}/healthAggregationPolicies'

# Overrides the URL for the resource's standard Update method. (If unset, the
# self_link URL is used by default.) https://google.aip.dev/134
# Terraform field names enclosed in double curly braces are replaced with
# the field values from the resource at runtime.
update_url: 'projects/{{project}}/regions/{{region}}/healthAggregationPolicies/{{name}}'
# The HTTP verb used to update a resource. Allowed values: :POST, :PUT, :PATCH. Default: :PUT.
update_verb: 'PATCH'
# If true, the resource sets an `updateMask` query parameter listing modified
# fields when updating the resource. If false, it does not.
update_mask: true

# If true, code for handling long-running operations is generated along with
# the resource. If false, that code is not generated.
autogen_async: true
# Sets parameters for handling operations returned by the API.
async:
  # Overrides which API calls return operations. Default: ['create',
  # 'update', 'delete']
  # actions: ['create', 'update', 'delete']
  operation:
    base_url: 'projects/{{project}}/regions/{{region}}/operations/{{op_id}}'

parameters:
  - name: 'region'
    type: String
    required: true
    immutable: true
    url_param_only: true
    description: |
      URL of the region where the health aggregation policy resides.
  - name: 'name'
    type: String
    required: true
    immutable: true
    description: |
      Name of the resource. Provided by the client when the resource is created.
      The name must be 1-63 characters long, and comply with RFC1035.
      Specifically, the name must be 1-63 characters long and match the regular
      expression `[a-z]([-a-z0-9]*[a-z0-9])?` which means the first
      character must be a lowercase letter, and all following characters must
      be a dash, lowercase letter, or digit, except the last character, which
      cannot be a dash.

properties:
  - name: 'description'
    type: String
    description: |
      An optional description of this resource. Provide this property when you
      create the resource.
  - name: 'policyType'
    type: Enum
    description: |
      Specifies the type of the healthAggregationPolicy. The only allowed value
      for global resources is `DNS_PUBLIC_IP_POLICY`. The only allowed
      value for regional resources is `BACKEND_SERVICE_POLICY`. Must
      be specified when the healthAggregationPolicy is created, and cannot be
      mutated.
    enum_values:
      - 'DNS_PUBLIC_IP_POLICY'
      - 'BACKEND_SERVICE_POLICY'
    default_value: 'BACKEND_SERVICE_POLICY'
  - name: 'healthyPercentThreshold'
    type: Integer
    description: |
      Can only be set if the `policyType` field is
      `BACKEND_SERVICE_POLICY`. Specifies the threshold (as a
      percentage) of healthy endpoints required in order to consider the
      aggregated health result HEALTHY. Defaults to `60`. Must be in
      range [0, 100]. Not applicable if the `policyType` field is
      `DNB_PUBLIC_IP_POLICY`. Can be mutated. This field is optional,
      and will be set to the default if unspecified. Note that both this
      threshold and `minHealthyThreshold` must be satisfied in order
      for HEALTHY to be the aggregated result. "Endpoints" refers to network
      endpoints within a Network Endpoint Group or instances within an Instance
      Group.
    default_value: 60
  - name: 'minHealthyThreshold'
    type: Integer
    description: |
      Can only be set if the `policyType` field is
      `BACKEND_SERVICE_POLICY`. Specifies the minimum number of
      healthy endpoints required in order to consider the aggregated health
      result HEALTHY. Defaults to `1`. Must be positive. Not
      applicable if the `policyType` field is
      `DNB_PUBLIC_IP_POLICY`. Can be mutated. This field is optional,
      and will be set to the default if unspecified. Note that both this
      threshold and `healthyPercentThreshold` must be satisfied in
      order for HEALTHY to be the aggregated result. "Endpoints" refers to
      network endpoints within a Network Endpoint Group or instances within an
      Instance Group.
    default_value: 1
  - name: 'id'
    type: String
    description: 'The unique identifier for the resource. This identifier is defined by the server.'
    output: true
  - name: 'creationTimestamp'
    type: String
    description: 'Creation timestamp in RFC3339 text format.'
    output: true
  - name: 'selfLinkWithId'
    type: String
    description: 'Server-defined URL with id for the resource.'
    output: true
  - name: 'fingerprint'
    type: Fingerprint
    description: |
      Fingerprint of this resource. A hash of the contents stored in this object.
      This field is used in optimistic locking. This field will be ignored when
      inserting a `HealthAggregationPolicy`. An up-to-date fingerprint
      must be provided in order to patch the RegionHealthAggregationPolicy; Otherwise,
      the request will fail with error `412 conditionNotMet`. To see
      the latest fingerprint, make a `get()` request to retrieve the
      RegionHealthAggregationPolicy.
    output: true

examples:
  - name: "compute_region_health_aggregation_policy_basic"
    primary_resource_id: "example_test_health_aggregation_policy"
    vars:
      name: "test-health-aggregation-policy"
      description: "Example health aggregation policy basic"
    min_version: 'alpha'
    test_env_vars:
      project: 'PROJECT_NAME'
