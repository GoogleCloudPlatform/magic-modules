# Copyright 2023 Google Inc.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

--- !ruby/object:Api::Resource
name: 'RouterBgpPeer'
base_url: projects/{{project}}/regions/{{region}}/routers/{{router}}
self_link: projects/{{project}}/regions/{{region}}/routers/{{router}}
create_verb: :PATCH
update_verb: :PATCH
delete_verb: :PATCH
identity:
  - name
nested_query: !ruby/object:Api::Resource::NestedQuery
  modify_by_patch: true
  keys:
    - bgpPeers
description: |
  BGP information that must be configured into the routing stack to
  establish BGP peering. This information must specify the peer ASN
  and either the interface name, IP address, or peer IP address.
  Please refer to RFC4273.
references: !ruby/object:Api::Resource::ReferenceLinks
  guides:
    'Google Cloud Router': 'https://cloud.google.com/router/docs/'
  api: 'https://cloud.google.com/compute/docs/reference/rest/v1/routers'
async: !ruby/object:Api::OpAsync
  operation: !ruby/object:Api::OpAsync::Operation
    kind: 'compute#operation'
    path: 'name'
    base_url: 'projects/{{project}}/regions/{{regions}}/operations/{{op_id}}'
    wait_ms: 1000
  result: !ruby/object:Api::OpAsync::Result
    path: 'targetLink'
  status: !ruby/object:Api::OpAsync::Status
    path: 'status'
    complete: 'DONE'
    allowed:
      - 'PENDING'
      - 'RUNNING'
      - 'DONE'
  error: !ruby/object:Api::OpAsync::Error
    path: 'error/errors'
    message: 'message'
legacy_name: 'google_compute_router_peer'
exclude_validator: true
id_format: 'projects/{{project}}/regions/{{region}}/routers/{{router}}/{{name}}'
mutex: router/{{region}}/{{router}}
custom_code: !ruby/object:Provider::Terraform::CustomCode
  constants: templates/terraform/constants/router_bgp_peer.erb
examples:
  # These examples are not used to autogenerate tests, as fine-grained
  # resources do not fit the normal test flow - we need to test deletion
  # in a test step while parent resource still exists vs in CheckDestroy
  # when all resources have been deleted.
  - !ruby/object:Provider::Terraform::Examples
    name: 'router_peer_basic'
    primary_resource_id: 'peer'
    skip_test: true
    vars:
      router_name: 'my-router'
      peer_name: 'my-router-peer'
  - !ruby/object:Provider::Terraform::Examples
    name: 'router_peer_disabled'
    primary_resource_id: 'peer'
    skip_test: true
    vars:
      router_name: 'my-router'
      peer_name: 'my-router-peer'
  - !ruby/object:Provider::Terraform::Examples
    name: 'router_peer_bfd'
    primary_resource_id: 'peer'
    skip_test: true
    vars:
      router_name: 'my-router'
      peer_name: 'my-router-peer'
  - !ruby/object:Provider::Terraform::Examples
    name: 'router_peer_router_appliance'
    primary_resource_id: 'peer'
    vars:
      router_name: 'my-router'
      peer_name: 'my-router-peer'
parameters:
  - !ruby/object:Api::Type::ResourceRef
    name: 'router'
    resource: 'Router'
    imports: 'name'
    description: |
      The name of the Cloud Router in which this BgpPeer will be configured.
    required: true
    immutable: true
    url_param_only: true
  - !ruby/object:Api::Type::ResourceRef
    name: region
    resource: Region
    imports: name
    description: |
      Region where the router and BgpPeer reside.
      If it is not provided, the provider region is used.
    immutable: true
    required: false
    url_param_only: true
    default_from_api: true
    custom_flatten: 'templates/terraform/custom_flatten/name_from_self_link.erb'
properties:
  - !ruby/object:Api::Type::String
    name: 'name'
    description: |
      Name of this BGP peer. The name must be 1-63 characters long,
      and comply with RFC1035. Specifically, the name must be 1-63 characters
      long and match the regular expression `[a-z]([-a-z0-9]*[a-z0-9])?` which
      means the first character must be a lowercase letter, and all
      following characters must be a dash, lowercase letter, or digit,
      except the last character, which cannot be a dash.
    required: true
    immutable: true
    validation: !ruby/object:Provider::Terraform::Validation
      function: 'verify.ValidateRFC1035Name(2, 63)'
  - !ruby/object:Api::Type::String
    name: 'interface'
    api_name: 'interfaceName'
    description: |
      Name of the interface the BGP peer is associated with.
    required: true
    immutable: true
  - !ruby/object:Api::Type::String
    name: 'ipAddress'
    description: |
      IP address of the interface inside Google Cloud Platform.
      Only IPv4 is supported.
    default_from_api: true
  - !ruby/object:Api::Type::String
    name: 'peerIpAddress'
    description: |
      IP address of the BGP interface outside Google Cloud Platform.
      Only IPv4 is supported. Required if `ip_address` is set.
    default_from_api: true
  - !ruby/object:Api::Type::Integer
    name: 'peerAsn'
    description: |
      Peer BGP Autonomous System Number (ASN).
      Each BGP interface may use a different value.
    required: true
  - !ruby/object:Api::Type::Integer
    name: 'advertisedRoutePriority'
    description: |
      The priority of routes advertised to this BGP peer.
      Where there is more than one matching route of maximum
      length, the routes with the lowest priority value win.
    send_empty_value: true
  - !ruby/object:Api::Type::Enum
    name: advertiseMode
    description: |
      User-specified flag to indicate which mode to use for advertisement.
      Valid values of this enum field are: `DEFAULT`, `CUSTOM`
    values:
      - :DEFAULT
      - :CUSTOM
    default_value: :DEFAULT
    custom_flatten: 'templates/terraform/custom_flatten/default_if_empty.erb'
  - !ruby/object:Api::Type::Array
    name: advertisedGroups
    description: |
      User-specified list of prefix groups to advertise in custom
      mode, which can take one of the following options:

      * `ALL_SUBNETS`: Advertises all available subnets, including peer VPC subnets.
      * `ALL_VPC_SUBNETS`: Advertises the router's own VPC subnets.
      * `ALL_PEER_VPC_SUBNETS`: Advertises peer subnets of the router's VPC network.


      Note that this field can only be populated if advertiseMode is `CUSTOM`
      and overrides the list defined for the router (in the "bgp" message).
      These groups are advertised in addition to any specified prefixes.
      Leave this field blank to advertise no custom groups.
    send_empty_value: true
    item_type: Api::Type::String
  - !ruby/object:Api::Type::Array
    name: advertisedIpRanges
    description: |
      User-specified list of individual IP ranges to advertise in
      custom mode. This field can only be populated if advertiseMode
      is `CUSTOM` and is advertised to all peers of the router. These IP
      ranges will be advertised in addition to any specified groups.
      Leave this field blank to advertise no custom IP ranges.
    send_empty_value: true
    item_type: !ruby/object:Api::Type::NestedObject
      properties:
        - !ruby/object:Api::Type::String
          name: range
          required: true
          description: |
            The IP range to advertise. The value must be a
            CIDR-formatted string.
        - !ruby/object:Api::Type::String
          name: description
          description: |
            User-specified description for the IP range.
          send_empty_value: true
  - !ruby/object:Api::Type::String
    name: 'managementType'
    description: |
      The resource that configures and manages this BGP peer.

      * `MANAGED_BY_USER` is the default value and can be managed by
      you or other users
      * `MANAGED_BY_ATTACHMENT` is a BGP peer that is configured and
      managed by Cloud Interconnect, specifically by an
      InterconnectAttachment of type PARTNER. Google automatically
      creates, updates, and deletes this type of BGP peer when the
      PARTNER InterconnectAttachment is created, updated,
      or deleted.
    output: true
  - !ruby/object:Api::Type::NestedObject
    name: bfd
    description: |
      BFD configuration for the BGP peering.
    default_from_api: true
    properties:
      - !ruby/object:Api::Type::Enum
        name: sessionInitializationMode
        description: |
          The BFD session initialization mode for this BGP peer.
          If set to `ACTIVE`, the Cloud Router will initiate the BFD session
          for this BGP peer. If set to `PASSIVE`, the Cloud Router will wait
          for the peer router to initiate the BFD session for this BGP peer.
          If set to `DISABLED`, BFD is disabled for this BGP peer.
        values:
          - :ACTIVE
          - :DISABLED
          - :PASSIVE
        required: true
      - !ruby/object:Api::Type::Integer
        name: minTransmitInterval
        description: |
          The minimum interval, in milliseconds, between BFD control packets
          transmitted to the peer router. The actual value is negotiated
          between the two routers and is equal to the greater of this value
          and the corresponding receive interval of the other router. If set,
          this value must be between 1000 and 30000.
        default_value: 1000
      - !ruby/object:Api::Type::Integer
        name: minReceiveInterval
        description: |
          The minimum interval, in milliseconds, between BFD control packets
          received from the peer router. The actual value is negotiated
          between the two routers and is equal to the greater of this value
          and the transmit interval of the other router. If set, this value
          must be between 1000 and 30000.
        default_value: 1000
      - !ruby/object:Api::Type::Integer
        name: multiplier
        description: |
          The number of consecutive BFD packets that must be missed before
          BFD declares that a peer is unavailable. If set, the value must
          be a value between 5 and 16.
        default_value: 5
  - !ruby/object:Api::Type::Boolean
    name: 'enable'
    description: |
      The status of the BGP peer connection. If set to false, any active session
      with the peer is terminated and all associated routing information is removed.
      If set to true, the peer connection can be established with routing information.
      The default is true.
    default_value: true
    custom_expand: 'templates/terraform/custom_expand/bool_to_upper_string.erb'
    custom_flatten: 'templates/terraform/custom_flatten/string_to_bool_default_true.erb'
    send_empty_value: true
  - !ruby/object:Api::Type::ResourceRef
    name: 'routerApplianceInstance'
    resource: 'Instance'
    imports: 'selfLink'
    description: |
      The URI of the VM instance that is used as third-party router appliances
      such as Next Gen Firewalls, Virtual Routers, or Router Appliances.
      The VM instance must be located in zones contained in the same region as
      this Cloud Router. The VM instance is the peer side of the BGP session.
    custom_expand: 'templates/terraform/custom_expand/resourceref_with_validation.go.erb'
  - !ruby/object:Api::Type::Boolean
    name: 'enableIpv6'
    description: |
      Enable IPv6 traffic over BGP Peer. If not specified, it is disabled by default.
    default_value: false
    send_empty_value: true
  - !ruby/object:Api::Type::String
    name: 'ipv6NexthopAddress'
    description: |
      IPv6 address of the interface inside Google Cloud Platform.
      The address must be in the range 2600:2d00:0:2::/64 or 2600:2d00:0:3::/64.
      If you do not specify the next hop addresses, Google Cloud automatically
      assigns unused addresses from the 2600:2d00:0:2::/64 or 2600:2d00:0:3::/64 range for you.
    default_from_api: true
    validation: !ruby/object:Provider::Terraform::Validation
      function: 'verify.ValidateIpAddress'
    diff_suppress_func: ipv6RepresentationDiffSuppress
  - !ruby/object:Api::Type::String
    name: 'peerIpv6NexthopAddress'
    description: |
      IPv6 address of the BGP interface outside Google Cloud Platform.
      The address must be in the range 2600:2d00:0:2::/64 or 2600:2d00:0:3::/64.
      If you do not specify the next hop addresses, Google Cloud automatically
      assigns unused addresses from the 2600:2d00:0:2::/64 or 2600:2d00:0:3::/64 range for you.
    default_from_api: true
    validation: !ruby/object:Provider::Terraform::Validation
      function: 'verify.ValidateIpAddress'
    diff_suppress_func: ipv6RepresentationDiffSuppress
