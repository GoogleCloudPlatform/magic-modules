# Copyright 2023 Google Inc.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

--- !ruby/object:Api::Resource
name: 'InterconnectAttachment'
kind: 'compute#interconnectAttachment'
base_url: 'projects/{{project}}/regions/{{region}}/interconnectAttachments'
collection_url_key: 'items'
update_verb: :PATCH
has_self_link: true
description: |
  Represents an InterconnectAttachment (VLAN attachment) resource. For more
  information, see Creating VLAN Attachments.
async: !ruby/object:Api::OpAsync
  operation: !ruby/object:Api::OpAsync::Operation
    kind: 'compute#operation'
    path: 'name'
    base_url: 'projects/{{project}}/regions/{{region}}/operations/{{op_id}}'
    wait_ms: 1000
  result: !ruby/object:Api::OpAsync::Result
    path: 'targetLink'
  status: !ruby/object:Api::OpAsync::Status
    path: 'status'
    complete: 'DONE'
    allowed:
      - 'PENDING'
      - 'RUNNING'
      - 'DONE'
  error: !ruby/object:Api::OpAsync::Error
    path: 'error/errors'
    message: 'message'
examples:
  - !ruby/object:Provider::Terraform::Examples
    name: 'interconnect_attachment_basic'
    primary_resource_id: 'on_prem'
    vars:
      interconnect_attachment_name: 'on-prem-attachment'
      router_name: 'router-1'
      network_name: 'network-1'
  - !ruby/object:Provider::Terraform::Examples
    name: 'compute_interconnect_attachment_ipsec_encryption'
    primary_resource_id: 'ipsec-encrypted-interconnect-attachment'
    vars:
      interconnect_attachment_name: 'test-interconnect-attachment'
      address_name: 'test-address'
      router_name: 'test-router'
      network_name: 'test-network'
custom_code: !ruby/object:Provider::Terraform::CustomCode
  constants: templates/terraform/constants/interconnect_attachment.go.erb
  post_create: templates/terraform/post_create/interconnect_attachment.go.erb
  pre_delete: templates/terraform/pre_delete/interconnect_attachment.go.erb
parameters:
  - !ruby/object:Api::Type::ResourceRef
    name: 'region'
    resource: 'Region'
    imports: 'selfLink'
    required: false
    description: |
      Region where the regional interconnect attachment resides.
    default_from_api: true
    custom_expand: 'templates/terraform/custom_expand/resourceref_with_validation.go.erb'
properties:
  - !ruby/object:Api::Type::Boolean
    name: 'adminEnabled'
    send_empty_value: true
    default_value: true
    description: |
      Whether the VLAN attachment is enabled or disabled.  When using
      PARTNER type this will Pre-Activate the interconnect attachment
  - !ruby/object:Api::Type::String
    name: 'cloudRouterIpAddress'
    description: |
      IPv4 address + prefix length to be configured on Cloud Router
      Interface for this interconnect attachment.
    output: true
  - !ruby/object:Api::Type::String
    name: 'customerRouterIpAddress'
    description: |
      IPv4 address + prefix length to be configured on the customer
      router subinterface for this interconnect attachment.
    output: true
  - !ruby/object:Api::Type::String
    name: 'interconnect'
    immutable: true
    description: |
      URL of the underlying Interconnect object that this attachment's
      traffic will traverse through. Required if type is DEDICATED, must not
      be set if type is PARTNER.
    diff_suppress_func: 'tpgresource.CompareSelfLinkOrResourceName'
  - !ruby/object:Api::Type::String
    name: 'description'
    description: |
      An optional description of this resource.
  - !ruby/object:Api::Type::String
    name: 'mtu'
    description: |
      Maximum Transmission Unit (MTU), in bytes, of packets passing through
      this interconnect attachment. Currently, only 1440 and 1500 are allowed. If not specified, the value will default to 1440.
    custom_flatten: templates/terraform/custom_flatten/float64_to_int_to_string.go.erb
    default_from_api: true
  - !ruby/object:Api::Type::Enum
    name: 'bandwidth'
    description: |
      Provisioned bandwidth capacity for the interconnect attachment.
      For attachments of type DEDICATED, the user can set the bandwidth.
      For attachments of type PARTNER, the Google Partner that is operating the interconnect must set the bandwidth.
      Output only for PARTNER type, mutable for PARTNER_PROVIDER and DEDICATED,
      Defaults to BPS_10G
    values:
      - :BPS_50M
      - :BPS_100M
      - :BPS_200M
      - :BPS_300M
      - :BPS_400M
      - :BPS_500M
      - :BPS_1G
      - :BPS_2G
      - :BPS_5G
      - :BPS_10G
      - :BPS_20G
      - :BPS_50G
    default_from_api: true
  - !ruby/object:Api::Type::String
    name: 'edgeAvailabilityDomain'
    immutable: true
    description: |
      Desired availability domain for the attachment. Only available for type
      PARTNER, at creation time. For improved reliability, customers should
      configure a pair of attachments with one per availability domain. The
      selected availability domain will be provided to the Partner via the
      pairing key so that the provisioned circuit will lie in the specified
      domain. If not specified, the value will default to AVAILABILITY_DOMAIN_ANY.
    default_from_api: true
  - !ruby/object:Api::Type::String
    name: 'pairingKey'
    description: |
      [Output only for type PARTNER. Not present for DEDICATED]. The opaque
      identifier of an PARTNER attachment used to initiate provisioning with
      a selected partner. Of the form "XXXXX/region/domain"
    output: true
  - !ruby/object:Api::Type::String
    name: 'partnerAsn'
    description: |
      [Output only for type PARTNER. Not present for DEDICATED]. Optional
      BGP ASN for the router that should be supplied by a layer 3 Partner if
      they configured BGP on behalf of the customer.
    output: true
  - !ruby/object:Api::Type::NestedObject
    name: 'privateInterconnectInfo'
    description: |
      Information specific to an InterconnectAttachment. This property
      is populated if the interconnect that this is attached to is of type DEDICATED.
    output: true
    properties:
      - !ruby/object:Api::Type::Integer
        name: tag8021q
        description: |
          802.1q encapsulation tag to be used for traffic between
          Google and the customer, going to and from this network and region.
        output: true
  - !ruby/object:Api::Type::Enum
    name: 'type'
    immutable: true
    description: |
      The type of InterconnectAttachment you wish to create. Defaults to
      DEDICATED.
    values:
      - :DEDICATED
      - :PARTNER
      - :PARTNER_PROVIDER
    default_from_api: true
  - !ruby/object:Api::Type::Enum
    name: 'state'
    description: |
      [Output Only] The current state of this attachment's functionality.
    values:
      - :ACTIVE
      - :DEFUNCT
      - :PARTNER_REQUEST_RECEIVED
      - :PENDING_CUSTOMER
      - :PENDING_PARTNER
      - :STATE_UNSPECIFIED
    output: true
  - !ruby/object:Api::Type::String
    name: 'googleReferenceId'
    description: |
      Google reference ID, to be used when raising support tickets with
      Google or otherwise to debug backend connectivity issues.
    output: true
  - !ruby/object:Api::Type::ResourceRef
    name: 'router'
    resource: 'Router'
    imports: 'selfLink'
    description: |
      URL of the cloud router to be used for dynamic routing. This router must be in
      the same region as this InterconnectAttachment. The InterconnectAttachment will
      automatically connect the Interconnect to the network & region within which the
      Cloud Router is configured.
    required: true
    immutable: true
    diff_suppress_func: 'tpgresource.CompareSelfLinkOrResourceName'
    custom_expand: 'templates/terraform/custom_expand/resourceref_with_validation.go.erb'
  - !ruby/object:Api::Type::Time
    name: 'creationTimestamp'
    description: |
      Creation timestamp in RFC3339 text format.
    output: true
  - !ruby/object:Api::Type::String
    name: 'name'
    description: |
      Name of the resource. Provided by the client when the resource is created. The
      name must be 1-63 characters long, and comply with RFC1035. Specifically, the
      name must be 1-63 characters long and match the regular expression
      `[a-z]([-a-z0-9]*[a-z0-9])?` which means the first character must be a
      lowercase letter, and all following characters must be a dash, lowercase
      letter, or digit, except the last character, which cannot be a dash.
    required: true
    immutable: true
    validation: !ruby/object:Provider::Terraform::Validation
      regex: '^[a-z]([-a-z0-9]*[a-z0-9])?$'
  - !ruby/object:Api::Type::Array
    name: candidateSubnets
    immutable: true
    description: |
      Up to 16 candidate prefixes that can be used to restrict the allocation
      of cloudRouterIpAddress and customerRouterIpAddress for this attachment.
      All prefixes must be within link-local address space (169.254.0.0/16)
      and must be /29 or shorter (/28, /27, etc). Google will attempt to select
      an unused /29 from the supplied candidate prefix(es). The request will
      fail if all possible /29s are in use on Google's edge. If not supplied,
      Google will randomly select an unused /29 from all of link-local space.
    ignore_read: true
    item_type: Api::Type::String
  - !ruby/object:Api::Type::Integer
    name: vlanTag8021q
    immutable: true
    description: |
      The IEEE 802.1Q VLAN tag for this attachment, in the range 2-4094. When
      using PARTNER type this will be managed upstream.
    default_from_api: true
  - !ruby/object:Api::Type::Array
    name: 'ipsecInternalAddresses'
    description: |
      URL of addresses that have been reserved for the interconnect attachment,
      Used only for interconnect attachment that has the encryption option as
      IPSEC.

      The addresses must be RFC 1918 IP address ranges. When creating HA VPN
      gateway over the interconnect attachment, if the attachment is configured
      to use an RFC 1918 IP address, then the VPN gateway's IP address will be
      allocated from the IP address range specified here.

      For example, if the HA VPN gateway's interface 0 is paired to this
      interconnect attachment, then an RFC 1918 IP address for the VPN gateway
      interface 0 will be allocated from the IP address specified for this
      interconnect attachment.

      If this field is not specified for interconnect attachment that has
      encryption option as IPSEC, later on when creating HA VPN gateway on this
      interconnect attachment, the HA VPN gateway's IP address will be
      allocated from regional external IP address pool.
    immutable: true
    item_type: !ruby/object:Api::Type::ResourceRef
      name: 'ipsecInternalAddress'
      resource: 'Address'
      imports: 'selfLink'
      description: |
        URL of an address that has been reserved for the interconnect
        attachment.
    custom_expand: 'templates/terraform/custom_expand/array_resourceref_with_validation.go.erb'
  - !ruby/object:Api::Type::Enum
    name: 'encryption'
    description: |
      Indicates the user-supplied encryption option of this interconnect
      attachment. Can only be specified at attachment creation for PARTNER or
      DEDICATED attachments.

      * NONE - This is the default value, which means that the VLAN attachment
      carries unencrypted traffic. VMs are able to send traffic to, or receive
      traffic from, such a VLAN attachment.

      * IPSEC - The VLAN attachment carries only encrypted traffic that is
      encrypted by an IPsec device, such as an HA VPN gateway or third-party
      IPsec VPN. VMs cannot directly send traffic to, or receive traffic from,
      such a VLAN attachment. To use HA VPN over Cloud Interconnect, the VLAN
      attachment must be created with this option.
    immutable: true
    values:
      - :NONE
      - :IPSEC
    default_value: :NONE
    custom_flatten: templates/terraform/custom_flatten/default_if_empty.erb
  - !ruby/object:Api::Type::Enum
    name: 'stackType'
    description: |
      The stack type for this interconnect attachment to identify whether the IPv6
      feature is enabled or not. If not specified, IPV4_ONLY will be used.

      This field can be both set at interconnect attachments creation and update
      interconnect attachment operations.
    values:
      - :IPV4_IPV6
      - :IPV4_ONLY
    default_from_api: true
