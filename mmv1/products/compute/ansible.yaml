# Copyright 2017 Google Inc.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

--- !ruby/object:Provider::Ansible::Config
# This is where custom code would be defined eventually.
datasources: !ruby/object:Overrides::ResourceOverrides
  BackendBucketSignedUrlKey: !ruby/object:Overrides::Ansible::ResourceOverride
    exclude: true
  BackendServiceSignedUrlKey: !ruby/object:Overrides::Ansible::ResourceOverride
    exclude: true
  ManagedSslCertificate: !ruby/object:Overrides::Ansible::ResourceOverride
    exclude: true
  RegionDiskResourcePolicyAttachment: !ruby/object:Overrides::Ansible::ResourceOverride
    exclude: true
  DiskResourcePolicyAttachment: !ruby/object:Overrides::Ansible::ResourceOverride
    exclude: true
  # Readonly resources.
  DiskType: !ruby/object:Overrides::Ansible::ResourceOverride
    exclude: true
  InstanceGroupNamedPort: !ruby/object:Overrides::Ansible::ResourceOverride
    exclude: true
  License: !ruby/object:Overrides::Ansible::ResourceOverride
    exclude: true
  MachineImage: !ruby/object:Overrides::Ansible::ResourceOverride
    exclude: true
  MachineType: !ruby/object:Overrides::Ansible::ResourceOverride
    exclude: true
  NetworkEndpoint: !ruby/object:Overrides::Ansible::ResourceOverride
    exclude: true
  GlobalNetworkEndpoint: !ruby/object:Overrides::Ansible::ResourceOverride
    exclude: true
  GlobalNetworkEndpointGroup: !ruby/object:Overrides::Ansible::ResourceOverride
    exclude: true
  ProjectInfo: !ruby/object:Overrides::Ansible::ResourceOverride
    exclude: true
  Region: !ruby/object:Overrides::Ansible::ResourceOverride
    exclude: true
  RegionDiskType: !ruby/object:Overrides::Ansible::ResourceOverride
    exclude: true
  RegionSslCertificate: !ruby/object:Overrides::Ansible::ResourceOverride
    exclude: true
  RouterBgpPeer: !ruby/object:Overrides::Ansible::ResourceOverride
    exclude: true
  RouterNat: !ruby/object:Overrides::Ansible::ResourceOverride
    exclude: true
  SecurityPolicy: !ruby/object:Overrides::Ansible::ResourceOverride
    exclude: true
  Zone: !ruby/object:Overrides::Ansible::ResourceOverride
    exclude: true
  PerInstanceConfig: !ruby/object:Overrides::Ansible::ResourceOverride
    exclude: true
  RegionPerInstanceConfig: !ruby/object:Overrides::Ansible::ResourceOverride
    exclude: true
overrides: !ruby/object:Overrides::ResourceOverrides
  Autoscaler: !ruby/object:Overrides::Ansible::ResourceOverride
    properties:
      autoscalingPolicy.minNumReplicas: !ruby/object:Overrides::Ansible::PropertyOverride
        aliases: ['minReplicas']
      autoscalingPolicy.maxNumReplicas: !ruby/object:Overrides::Ansible::PropertyOverride
        aliases: ['maxReplicas']
      autoscalingPolicy.coolDownPeriodSec: !ruby/object:Overrides::Ansible::PropertyOverride
        aliases: ['cooldownPeriod']
      autoscalingPolicy.cpuUtilization.utilizationTarget: !ruby/object:Overrides::Ansible::PropertyOverride
        aliases: ['target']
      autoscalingPolicy.customMetricUtilizations: !ruby/object:Overrides::Ansible::PropertyOverride
        aliases: ['metric']
      autoscalingPolicy.customMetricUtilizations.metric: !ruby/object:Overrides::Ansible::PropertyOverride
        aliases: ['name']
      autoscalingPolicy.customMetricUtilizations.utilizationTarget: !ruby/object:Overrides::Ansible::PropertyOverride
        aliases: ['target']
      autoscalingPolicy.customMetricUtilizations.utilizationTargetType: !ruby/object:Overrides::Ansible::PropertyOverride
        aliases: ['type']
      autoscalingPolicy.loadBalancingUtilization.utilizationTarget: !ruby/object:Overrides::Ansible::PropertyOverride
        aliases: ['target']
  BackendService: !ruby/object:Overrides::Ansible::ResourceOverride
    properties:
      iap.oauth2ClientSecret: !ruby/object:Overrides::Ansible::PropertyOverride
        no_log: true
      iap.oauth2ClientSecretSha256: !ruby/object:Overrides::Ansible::PropertyOverride
        no_log: true
      timeoutSec: !ruby/object:Overrides::Ansible::PropertyOverride
        aliases:
          - timeout_seconds
  RegionDiskResourcePolicyAttachment: !ruby/object:Overrides::Ansible::ResourceOverride
    exclude: true
  DiskResourcePolicyAttachment: !ruby/object:Overrides::Ansible::ResourceOverride
    exclude: true
  Disk: !ruby/object:Overrides::Ansible::ResourceOverride
    properties:
      sourceImageEncryptionKey: !ruby/object:Overrides::Ansible::PropertyOverride
        no_log: true
      diskEncryptionKey: !ruby/object:Overrides::Ansible::PropertyOverride
        no_log: true
      sourceSnapshotEncryptionKey: !ruby/object:Overrides::Ansible::PropertyOverride
        no_log: true
      sourceSnapshot: !ruby/object:Overrides::Ansible::PropertyOverride
        no_log: true
        input: true
        description: |
          The source snapshot used to create this disk. You can provide this as
          a partial or full URL to the resource.
  Firewall: !ruby/object:Overrides::Ansible::ResourceOverride
    imports:
      - re
    provider_helpers:
      - 'products/compute/helpers/python/provider_firewall.py'
    transport: !ruby/object:Overrides::Ansible::Transport
      encoder: encode_request
    tests: !ruby/object:Provider::Ansible::Tests
      tests:
        - !ruby/object:Provider::Ansible::Test
          name: 'update'
          path: products/compute/tests/ansible/firewall_update.yaml
    properties:
      network: !ruby/object:Overrides::Ansible::PropertyOverride
        default_value:
          selfLink: global/networks/default
  ForwardingRule: !ruby/object:Overrides::Ansible::ResourceOverride
    properties:
      IPAddress:  !ruby/object:Overrides::Ansible::PropertyOverride
        description: |
          The IP address that this forwarding rule is serving on behalf of.

          Addresses are restricted based on the forwarding rule's load balancing
          scheme (EXTERNAL or INTERNAL) and scope (global or regional).

          When the load balancing scheme is EXTERNAL, for global forwarding
          rules, the address must be a global IP, and for regional forwarding
          rules, the address must live in the same region as the forwarding
          rule. If this field is empty, an ephemeral IPv4 address from the same
          scope (global or regional) will be assigned. A regional forwarding
          rule supports IPv4 only. A global forwarding rule supports either IPv4
          or IPv6.

          When the load balancing scheme is INTERNAL, this can only be an RFC
          1918 IP address belonging to the network/subnet configured for the
          forwarding rule. By default, if this field is empty, an ephemeral
          internal IP address will be automatically allocated from the IP range
          of the subnet or network configured for this forwarding rule.

          An address can be specified either by a literal IP address or a URL
          reference to an existing Address resource. The following examples are
          all valid:

          * 100.1.2.3
          * https://www.googleapis.com/compute/v1/projects/project/regions/region/addresses/address
          * projects/project/regions/region/addresses/address
          * regions/region/addresses/address
          * global/addresses/address
          * address
  GlobalAddress: !ruby/object:Overrides::Ansible::ResourceOverride
    properties:
      address:  !ruby/object:Overrides::Ansible::PropertyOverride
        description: |
          The static external IP address represented by this resource.
  GlobalForwardingRule: !ruby/object:Overrides::Ansible::ResourceOverride
    properties:
      IPAddress:  !ruby/object:Overrides::Ansible::PropertyOverride
        description: |
          The IP address that this forwarding rule is serving on behalf of.

          Addresses are restricted based on the forwarding rule's load balancing
          scheme (EXTERNAL or INTERNAL) and scope (global or regional).

          When the load balancing scheme is EXTERNAL, for global forwarding
          rules, the address must be a global IP, and for regional forwarding
          rules, the address must live in the same region as the forwarding
          rule. If this field is empty, an ephemeral IPv4 address from the same
          scope (global or regional) will be assigned. A regional forwarding
          rule supports IPv4 only. A global forwarding rule supports either IPv4
          or IPv6.

          When the load balancing scheme is INTERNAL, this can only be an RFC
          1918 IP address belonging to the network/subnet configured for the
          forwarding rule. By default, if this field is empty, an ephemeral
          internal IP address will be automatically allocated from the IP range
          of the subnet or network configured for this forwarding rule.

          An address can be specified either by a literal IP address or a URL
          reference to an existing Address resource. The following examples are
          all valid:

          * 100.1.2.3
          * https://www.googleapis.com/compute/v1/projects/project/regions/region/addresses/address
          * projects/project/regions/region/addresses/address
          * regions/region/addresses/address
          * global/addresses/address
          * address
  HealthCheck: !ruby/object:Overrides::Ansible::ResourceOverride
    properties:
      timeoutSec: !ruby/object:Overrides::Ansible::PropertyOverride
        aliases:
          - timeout_seconds
  HttpHealthCheck: !ruby/object:Overrides::Ansible::ResourceOverride
    properties:
      timeoutSec: !ruby/object:Overrides::Ansible::PropertyOverride
        aliases:
          - timeout_seconds
      checkIntervalSec: !ruby/object:Overrides::Ansible::PropertyOverride
        aliases:
          - check_interval_seconds
  HttpsHealthCheck: !ruby/object:Overrides::Ansible::ResourceOverride
    properties:
      timeoutSec: !ruby/object:Overrides::Ansible::PropertyOverride
        aliases:
          - timeout_seconds
  Image: !ruby/object:Overrides::Ansible::ResourceOverride
    properties:
      imageEncryptionKey: !ruby/object:Overrides::Ansible::PropertyOverride
        no_log: true
      sourceDiskEncryptionKey: !ruby/object:Overrides::Ansible::PropertyOverride
        no_log: true
      guestOsFeatures.type: !ruby/object:Overrides::Ansible::PropertyOverride
        # Changing this description because of line length issues.
        description: The type of supported feature.
  InstanceGroup: !ruby/object:Overrides::Ansible::ResourceOverride
    properties:
      instances: !ruby/object:Overrides::Ansible::PropertyOverride
        exclude: false
    custom_code: !ruby/object:Provider::Ansible::CustomCode
      update: |
        instance = InstanceLogic(module)
        instance.run()
      post_action: |
        if fetch:
            instance = InstanceLogic(module)
            instance.run()
            fetch.update({'instances': instance.list_instances()})
    provider_helpers:
      - 'products/compute/helpers/python/instancegroup_instances.py'
  Instance: !ruby/object:Overrides::Ansible::ResourceOverride
    transport: !ruby/object:Overrides::Ansible::Transport
      encoder: encode_request
      decoder: decode_response
    hidden:
      - deletion_protection_update
      - shielded_instance_config_update
    custom_code: !ruby/object:Provider::Ansible::CustomCode
      post_action: |
        if fetch:
            instance = InstancePower(module, fetch.get('status'))
            instance.run()
            if module.params.get('status'):
                fetch.update({'status': module.params['status']})
    provider_helpers:
      - 'products/compute/helpers/python/provider_instance.py'
      - 'products/compute/helpers/python/instance_metadata.py'
      - 'products/compute/helpers/python/instance_start.py'
      - 'products/compute/helpers/python/instance_update_methods.py'
    properties:
      disks.licenses: !ruby/object:Overrides::Ansible::PropertyOverride
        exclude: true
      canIpForward: !ruby/object:Overrides::Ansible::PropertyOverride
        aliases: ["ip_forward"]
      disks.initializeParams.sourceImage: !ruby/object:Overrides::Ansible::PropertyOverride
        aliases: ["image", "image_family"]
      networkInterfaces.network: !ruby/object:Overrides::Ansible::PropertyOverride
        description: |
          Specifies the title of an existing network. Not setting the network
          title will select the default network interface, which could have
          SSH already configured
  InstanceTemplate: !ruby/object:Overrides::Ansible::ResourceOverride
    properties:
      diskEncryptionKey: !ruby/object:Overrides::Ansible::PropertyOverride
        no_log: true
      initializeParams.sourceImageEncryptionKey: !ruby/object:Overrides::Ansible::PropertyOverride
        no_log: true
    transport: !ruby/object:Overrides::Ansible::Transport
      encoder: encode_request
      decoder: decode_response
    provider_helpers:
      - 'products/compute/helpers/python/provider_instance_template.py'
      - 'products/compute/helpers/python/instance_metadata.py'
  InterconnectAttachment: !ruby/object:Overrides::Ansible::ResourceOverride
    tests: !ruby/object:Provider::Ansible::Tests
      has_autogenerated_test: false
  RegionDisk: !ruby/object:Overrides::Ansible::ResourceOverride
    properties:
      sourceSnapshotEncryptionKey: !ruby/object:Overrides::Ansible::PropertyOverride
        no_log: true
      diskEncryptionKey: !ruby/object:Overrides::Ansible::PropertyOverride
        no_log: true
      sourceSnapshot: !ruby/object:Overrides::Ansible::PropertyOverride
        description: |
          The source snapshot used to create this disk. You can provide this as
          a partial or full URL to the resource.
  RegionUrlMap: !ruby/object:Overrides::Ansible::ResourceOverride
    properties:
      pathMatchers.defaultUrlRedirect.stripQuery: !ruby/object:Overrides::Ansible::PropertyOverride
        default_value: false
      defaultUrlRedirect.stripQuery: !ruby/object:Overrides::Ansible::PropertyOverride
        default_value: false
      pathMatchers.pathRules.urlRedirect.stripQuery: !ruby/object:Overrides::Ansible::PropertyOverride
        default_value: false
  Reservation: !ruby/object:Overrides::Ansible::ResourceOverride
    properties:
      specificReservation.instanceProperties.minCpuPlatform: !ruby/object:Overrides::Ansible::PropertyOverride
        # Changing description becaues of line length limitations
        description: |
          The minimum CPU platform for the reservation. For example,
          `"Intel Skylake"`. See
          https://cloud.google.com/compute/docs/instances/specify-min-cpu-platform#availablezones
          for information on available CPU platforms.
  Route: !ruby/object:Overrides::Ansible::ResourceOverride
    properties:
      nextHopGateway: !ruby/object:Overrides::Ansible::PropertyOverride
        description: |
          URL to a gateway that should handle matching packets.

          Currently, you can only specify the internet gateway, using a full or
          partial valid URL:

          * https://www.googleapis.com/compute/v1/projects/project/global/gateways/default-internet-gateway
          * projects/project/global/gateways/default-internet-gateway
          * global/gateways/default-internet-gateway
  Snapshot: !ruby/object:Overrides::Ansible::ResourceOverride
    properties:
      snapshotEncryptionKey: !ruby/object:Overrides::Ansible::PropertyOverride
        no_log: true
      sourceDiskEncryptionKey: !ruby/object:Overrides::Ansible::PropertyOverride
        no_log: true
  Subnetwork: !ruby/object:Overrides::Ansible::ResourceOverride
    properties:
      logConfig: !ruby/object:Overrides::Ansible::PropertyOverride
        exclude: true
  SslCertificate: !ruby/object:Overrides::Ansible::ResourceOverride
    properties:
      privateKey: !ruby/object:Overrides::Ansible::PropertyOverride
        no_log: true
  TargetPool: !ruby/object:Overrides::Ansible::ResourceOverride
    transport: !ruby/object:Overrides::Ansible::Transport
      encoder: encode_request
      decoder: decode_response
    provider_helpers:
      - 'products/compute/helpers/python/provider_target_pool.py'
  TargetVpnGateway: !ruby/object:Overrides::Ansible::ResourceOverride
    exclude: false
  VpnTunnel: !ruby/object:Overrides::Ansible::ResourceOverride
    properties:
      sharedSecret: !ruby/object:Overrides::Ansible::PropertyOverride
        no_log: true
  # Not yet implemented.
  # Ansible tasks must alter infrastructure.
  # This means that virtual objects are a poor fit.
  BackendBucketSignedUrlKey: !ruby/object:Overrides::Ansible::ResourceOverride
    exclude: true
  BackendServiceSignedUrlKey: !ruby/object:Overrides::Ansible::ResourceOverride
    exclude: true
  DiskType: !ruby/object:Overrides::Ansible::ResourceOverride
    exclude: true
  InstanceGroupNamedPort: !ruby/object:Overrides::Ansible::ResourceOverride
    exclude: true
  License: !ruby/object:Overrides::Ansible::ResourceOverride
    exclude: true
  MachineType: !ruby/object:Overrides::Ansible::ResourceOverride
    exclude: true
  MachineImage: !ruby/object:Overrides::Ansible::ResourceOverride
    exclude: true
  NetworkEndpoint: !ruby/object:Overrides::Ansible::ResourceOverride
    exclude: true
  GlobalNetworkEndpoint: !ruby/object:Overrides::Ansible::ResourceOverride
    exclude: true
  GlobalNetworkEndpointGroup: !ruby/object:Overrides::Ansible::ResourceOverride
    exclude: true
  NetworkPeeringRoutesConfig: !ruby/object:Overrides::Ansible::ResourceOverride
    exclude: true
  ProjectInfo: !ruby/object:Overrides::Ansible::ResourceOverride
    exclude: true
  Region: !ruby/object:Overrides::Ansible::ResourceOverride
    exclude: true
  RegionDiskType: !ruby/object:Overrides::Ansible::ResourceOverride
    exclude: true
  RegionNetworkEndpointGroup: !ruby/object:Overrides::Ansible::ResourceOverride
    exclude: true
  RegionSslCertificate: !ruby/object:Overrides::Ansible::ResourceOverride
    exclude: true
  RouterBgpPeer: !ruby/object:Overrides::Ansible::ResourceOverride
    exclude: true
  RouterNat: !ruby/object:Overrides::Ansible::ResourceOverride
    exclude: true
  SecurityPolicy: !ruby/object:Overrides::Ansible::ResourceOverride
    exclude: true
  UrlMap: !ruby/object:Overrides::Ansible::ResourceOverride
    properties:
      pathMatchers.defaultUrlRedirect.stripQuery: !ruby/object:Overrides::Ansible::PropertyOverride
        default_value: false
      defaultUrlRedirect.stripQuery: !ruby/object:Overrides::Ansible::PropertyOverride
        default_value: false
      pathMatchers.pathRules.urlRedirect.stripQuery: !ruby/object:Overrides::Ansible::PropertyOverride
        default_value: false
  Zone: !ruby/object:Overrides::Ansible::ResourceOverride
    exclude: true
  PerInstanceConfig: !ruby/object:Overrides::Ansible::ResourceOverride
    exclude: true
  RegionPerInstanceConfig: !ruby/object:Overrides::Ansible::ResourceOverride
    exclude: true
  TargetGrpcProxy: !ruby/object:Overrides::Ansible::ResourceOverride
    exclude: true
  ExternalVpnGateway: !ruby/object:Overrides::Ansible::ResourceOverride
    exclude: true
  VpnGateway: !ruby/object:Overrides::Ansible::ResourceOverride
    exclude: true
  ManagedSslCertificate: !ruby/object:Overrides::Ansible::ResourceOverride
    exclude: true
  PacketMirroring: !ruby/object:Overrides::Ansible::ResourceOverride
    exclude: true
files: !ruby/object:Provider::Config::Files
  resource:
<%= lines(indent(compile('provider/ansible/resource~compile.yaml'), 4)) -%>
