# Copyright 2023 Google Inc.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

--- !ruby/object:Api::Resource
name: 'ResourcePolicy'
kind: 'compute#resourcePolicy'
base_url: projects/{{project}}/regions/{{region}}/resourcePolicies
immutable: true
has_self_link: true
collection_url_key: 'items'
description: |
  A policy that can be attached to a resource to specify or schedule actions on that resource.
references: !ruby/object:Api::Resource::ReferenceLinks
  api: 'https://cloud.google.com/compute/docs/reference/rest/v1/resourcePolicies'
async: !ruby/object:Api::OpAsync
  operation: !ruby/object:Api::OpAsync::Operation
    kind: 'compute#operation'
    path: 'name'
    base_url: 'projects/{{project}}/regions/{{region}}/operations/{{op_id}}'
    wait_ms: 1000
  result: !ruby/object:Api::OpAsync::Result
    path: 'targetLink'
  status: !ruby/object:Api::OpAsync::Status
    path: 'status'
    complete: 'DONE'
    allowed:
      - 'PENDING'
      - 'RUNNING'
      - 'DONE'
  error: !ruby/object:Api::OpAsync::Error
    path: 'error/errors'
    message: 'message'
examples:
  - !ruby/object:Provider::Terraform::Examples
    name: 'resource_policy_basic'
    primary_resource_id: 'foo'
    vars:
      name: 'gce-policy'
  - !ruby/object:Provider::Terraform::Examples
    name: 'resource_policy_full'
    primary_resource_id: 'bar'
    vars:
      name: 'gce-policy'
  - !ruby/object:Provider::Terraform::Examples
    name: 'resource_policy_placement_policy'
    primary_resource_id: 'baz'
    vars:
      name: 'gce-policy'
  - !ruby/object:Provider::Terraform::Examples
    name: 'resource_policy_placement_policy_max_distance'
    min_version: 'beta'
    primary_resource_id: 'baz'
    vars:
      name: 'gce-policy'
  - !ruby/object:Provider::Terraform::Examples
    name: 'resource_policy_instance_schedule_policy'
    primary_resource_id: 'hourly'
    vars:
      name: 'gce-policy'
  - !ruby/object:Provider::Terraform::Examples
    name: 'resource_policy_snapshot_schedule_chain_name'
    primary_resource_id: 'hourly'
    vars:
      name: 'gce-policy'
  - !ruby/object:Provider::Terraform::Examples
    name: 'resource_policy_consistency_group'
    primary_resource_id: 'cgroup'
    vars:
      name: 'gce-policy'
parameters:
  - !ruby/object:Api::Type::ResourceRef
    name: region
    resource: Region
    imports: name
    description: Region where resource policy resides.
    immutable: true
    required: false
    ignore_read: true
    default_from_api: true
    custom_expand: 'templates/terraform/custom_expand/resourceref_with_validation.go.erb'
properties:
  - !ruby/object:Api::Type::String
    name: 'name'
    required: true
    description: |
      The name of the resource, provided by the client when initially creating
      the resource. The resource name must be 1-63 characters long, and comply
      with RFC1035. Specifically, the name must be 1-63 characters long and
      match the regular expression `[a-z]([-a-z0-9]*[a-z0-9])`? which means the
      first character must be a lowercase letter, and all following characters
      must be a dash, lowercase letter, or digit, except the last character,
      which cannot be a dash.
  - !ruby/object:Api::Type::String
    name: 'description'
    description: |
      An optional description of this resource. Provide this property when you create the resource.
  - !ruby/object:Api::Type::NestedObject
    name: 'snapshotSchedulePolicy'
    conflicts:
      - 'group_placement_policy'
      - 'instance_schedule_policy'
      - 'disk_consistency_group_policy'
    description: |
      Policy for creating snapshots of persistent disks.
    properties:
      - !ruby/object:Api::Type::NestedObject
        name: 'schedule'
        description: |
          Contains one of an `hourlySchedule`, `dailySchedule`, or `weeklySchedule`.
        required: true
        properties:
          - !ruby/object:Api::Type::NestedObject
            name: 'hourlySchedule'
            description: |
              The policy will execute every nth hour starting at the specified time.
            exactly_one_of:
              - snapshot_schedule_policy.0.schedule.0.hourly_schedule
              - snapshot_schedule_policy.0.schedule.0.daily_schedule
              - snapshot_schedule_policy.0.schedule.0.weekly_schedule
            properties:
              - !ruby/object:Api::Type::Integer
                name: 'hoursInCycle'
                description: |
                  The number of hours between snapshots.
                required: true
              - !ruby/object:Api::Type::String
                name: 'startTime'
                description: |
                  Time within the window to start the operations.
                  It must be in an hourly format "HH:MM",
                  where HH : [00-23] and MM : [00] GMT.
                  eg: 21:00
                required: true
                validation: !ruby/object:Provider::Terraform::Validation
                  function: 'verify.ValidateHourlyOnly'
          - !ruby/object:Api::Type::NestedObject
            name: 'dailySchedule'
            description: |
              The policy will execute every nth day at the specified time.
            exactly_one_of:
              - snapshot_schedule_policy.0.schedule.0.hourly_schedule
              - snapshot_schedule_policy.0.schedule.0.daily_schedule
              - snapshot_schedule_policy.0.schedule.0.weekly_schedule
            properties:
              - !ruby/object:Api::Type::Integer
                name: 'daysInCycle'
                description: |
                  Defines a schedule with units measured in days. The value determines how many days pass between the start of each cycle. Days in cycle for snapshot schedule policy must be 1.
                required: true
              - !ruby/object:Api::Type::String
                name: 'startTime'
                description: |
                  This must be in UTC format that resolves to one of
                  00:00, 04:00, 08:00, 12:00, 16:00, or 20:00. For example,
                  both 13:00-5 and 08:00 are valid.
                required: true
                validation: !ruby/object:Provider::Terraform::Validation
                  function: 'verify.ValidateHourlyOnly'
          - !ruby/object:Api::Type::NestedObject
            name: 'weeklySchedule'
            description: |
              Allows specifying a snapshot time for each day of the week.
            exactly_one_of:
              - snapshot_schedule_policy.0.schedule.0.hourly_schedule
              - snapshot_schedule_policy.0.schedule.0.daily_schedule
              - snapshot_schedule_policy.0.schedule.0.weekly_schedule
            properties:
              - !ruby/object:Api::Type::Array
                name: 'dayOfWeeks'
                description: |
                  May contain up to seven (one for each day of the week) snapshot times.
                required: true
                min_size: 1
                max_size: 7
                is_set: true
                item_type: !ruby/object:Api::Type::NestedObject
                  properties:
                    - !ruby/object:Api::Type::String
                      name: 'startTime'
                      description: |
                        Time within the window to start the operations.
                        It must be in format "HH:MM", where HH : [00-23] and MM : [00-00] GMT.
                      required: true
                    - !ruby/object:Api::Type::Enum
                      name: 'day'
                      description: |
                        The day of the week to create the snapshot. e.g. MONDAY
                      required: true
                      values:
                        - :MONDAY
                        - :TUESDAY
                        - :WEDNESDAY
                        - :THURSDAY
                        - :FRIDAY
                        - :SATURDAY
                        - :SUNDAY
      - !ruby/object:Api::Type::NestedObject
        name: 'retentionPolicy'
        description: |
          Retention policy applied to snapshots created by this resource policy.
        properties:
          - !ruby/object:Api::Type::Integer
            name: 'maxRetentionDays'
            description: |
              Maximum age of the snapshot that is allowed to be kept.
            required: true
          - !ruby/object:Api::Type::Enum
            name: 'onSourceDiskDelete'
            description: |
              Specifies the behavior to apply to scheduled snapshots when
              the source disk is deleted.
            default_value: :KEEP_AUTO_SNAPSHOTS
            values:
              - :KEEP_AUTO_SNAPSHOTS
              - :APPLY_RETENTION_POLICY
      - !ruby/object:Api::Type::NestedObject
        name: 'snapshotProperties'
        description: |
          Properties with which the snapshots are created, such as labels.
        properties:
          - !ruby/object:Api::Type::KeyValuePairs
            name: 'labels'
            at_least_one_of:
              - snapshot_schedule_policy.0.snapshot_properties.0.labels
              - snapshot_schedule_policy.0.snapshot_properties.0.storage_locations
              - snapshot_schedule_policy.0.snapshot_properties.0.guest_flush
            description: |
              A set of key-value pairs.
          - !ruby/object:Api::Type::Array
            name: 'storageLocations'
            at_least_one_of:
              - snapshot_schedule_policy.0.snapshot_properties.0.labels
              - snapshot_schedule_policy.0.snapshot_properties.0.storage_locations
              - snapshot_schedule_policy.0.snapshot_properties.0.guest_flush
            max_size: 1
            description: |
              Cloud Storage bucket location to store the auto snapshot
              (regional or multi-regional)
            is_set: true
            item_type: Api::Type::String
          - !ruby/object:Api::Type::Boolean
            name: 'guestFlush'
            send_empty_value: true
            at_least_one_of:
              - snapshot_schedule_policy.0.snapshot_properties.0.labels
              - snapshot_schedule_policy.0.snapshot_properties.0.storage_locations
              - snapshot_schedule_policy.0.snapshot_properties.0.guest_flush
            description: |
              Whether to perform a 'guest aware' snapshot.
          - !ruby/object:Api::Type::String
            name: 'chainName'
            description: |
              Creates the new snapshot in the snapshot chain labeled with the
              specified name. The chain name must be 1-63 characters long and comply
              with RFC1035.
  - !ruby/object:Api::Type::NestedObject
    name: 'groupPlacementPolicy'
    conflicts:
      - 'instance_schedule_policy'
      - 'snapshot_schedule_policy'
      - 'disk_consistency_group_policy'
    description: |
      Resource policy for instances used for placement configuration.
    properties:
      - !ruby/object:Api::Type::Integer
        name: 'vmCount'
        description: |
          Number of VMs in this placement group. Google does not recommend that you use this field
          unless you use a compact policy and you want your policy to work only if it contains this
          exact number of VMs.
      - !ruby/object:Api::Type::Integer
        name: 'availabilityDomainCount'
        description: |
          The number of availability domains instances will be spread across. If two instances are in different
          availability domain, they will not be put in the same low latency network
      - !ruby/object:Api::Type::Enum
        name: 'collocation'
        description: |
          Collocation specifies whether to place VMs inside the same availability domain on the same low-latency network.
          Specify `COLLOCATED` to enable collocation. Can only be specified with `vm_count`. If compute instances are created
          with a COLLOCATED policy, then exactly `vm_count` instances must be created at the same time with the resource policy
          attached.
        values:
          - :COLLOCATED
      - !ruby/object:Api::Type::Integer
        name: 'maxDistance'
        min_version: 'beta'
        description: |
          Specifies the number of max logical switches.
  - !ruby/object:Api::Type::NestedObject
    name: 'instanceSchedulePolicy'
    conflicts:
      - 'snapshot_schedule_policy'
      - 'group_placement_policy'
      - 'disk_consistency_group_policy'
    description: |
      Resource policy for scheduling instance operations.
    properties:
      - !ruby/object:Api::Type::NestedObject
        name: 'vmStartSchedule'
        at_least_one_of:
          - instance_schedule_policy.0.vm_start_schedule
          - instance_schedule_policy.0.vm_stop_schedule
        description: |
          Specifies the schedule for starting instances.
        properties:
          - !ruby/object:Api::Type::String
            name: 'schedule'
            description: |
              Specifies the frequency for the operation, using the unix-cron format.
            required: true
      - !ruby/object:Api::Type::NestedObject
        name: 'vmStopSchedule'
        at_least_one_of:
          - instance_schedule_policy.0.vm_start_schedule
          - instance_schedule_policy.0.vm_stop_schedule
        description: |
          Specifies the schedule for stopping instances.
        properties:
          - !ruby/object:Api::Type::String
            name: 'schedule'
            description: |
              Specifies the frequency for the operation, using the unix-cron format.
            required: true
      - !ruby/object:Api::Type::String
        name: 'timeZone'
        description: |
          Specifies the time zone to be used in interpreting the schedule. The value of this field must be a time zone name
          from the tz database: http://en.wikipedia.org/wiki/Tz_database.
        required: true
      - !ruby/object:Api::Type::String
        name: 'startTime'
        description: |
          The start time of the schedule. The timestamp is an RFC3339 string.
      - !ruby/object:Api::Type::String
        name: 'expirationTime'
        description: |
          The expiration time of the schedule. The timestamp is an RFC3339 string.
  - !ruby/object:Api::Type::NestedObject
    name: 'diskConsistencyGroupPolicy'
    conflicts:
      - 'snapshot_schedule_policy'
      - 'group_placement_policy'
      - 'instance_schedule_policy'
    description: |
      Replication consistency group for asynchronous disk replication.
    send_empty_value: true
    properties:
      - !ruby/object:Api::Type::Boolean
        name: 'enabled'
        immutable: true
        required: true
        description: |
          Enable disk consistency on the resource policy.
    custom_expand: 'templates/terraform/custom_expand/disk_consistency_group_policy.erb'
    custom_flatten: 'templates/terraform/custom_flatten/disk_consistency_group_policy.erb'
