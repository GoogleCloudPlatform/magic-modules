# Copyright 2024 Google Inc.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# Warning: This is a temporary file, and should not be edited directly
---
name: 'NodeTemplate'
kind: 'compute#nodeTemplate'
description: |
  Represents a NodeTemplate resource. Node templates specify properties
  for creating sole-tenant nodes, such as node type, vCPU and memory
  requirements, node affinity labels, and region.
references:
  guides:
    'Sole-Tenant Nodes': 'https://cloud.google.com/compute/docs/nodes/'
  api: 'https://cloud.google.com/compute/docs/reference/rest/v1/nodeTemplates'
docs:
base_url: 'projects/{{project}}/regions/{{region}}/nodeTemplates'
has_self_link: true
immutable: true
timeouts:
  insert_minutes: 20
  update_minutes: 20
  delete_minutes: 20
async:
  type: 'OpAsync'
  operation:
    base_url: 'projects/{{project}}/regions/{{region}}/operations/{{op_id}}'
    kind: 'compute#operation'
    path: 'name'
    wait_ms: 1000
  result:
    path: 'targetLink'
    resource_inside_response: false
  error:
    path: 'error/errors'
    message: 'message'
collection_url_key: 'items'
custom_code:
examples:
  - name: 'node_template_basic'
    primary_resource_id: 'template'
    vars:
      template_name: 'soletenant-tmpl'
  - name: 'node_template_server_binding'
    primary_resource_id: 'template'
    vars:
      template_name: 'soletenant-with-licenses'
parameters:
  - name: 'region'
    type: ResourceRef
    description: |
      Region where nodes using the node template will be created.
      If it is not provided, the provider region is used.
    required: false
    default_from_api: true
    custom_flatten: 'templates/terraform/custom_flatten/go/name_from_self_link.tmpl'
    custom_expand: 'templates/terraform/custom_expand/go/resourceref_with_validation.go.tmpl'
    resource: 'Region'
    imports: 'selfLink'
properties:
  - name: 'creationTimestamp'
    type: Time
    description: 'Creation timestamp in RFC3339 text format.'
    output: true
  - name: 'description'
    type: String
    description: 'An optional textual description of the resource.'
  - name: 'name'
    type: String
    description: 'Name of the resource.'
  - name: 'nodeAffinityLabels'
    type: KeyValuePairs
    description: |
      Labels to use for node affinity, which will be used in
      instance scheduling.
  - name: 'nodeType'
    type: String
    description: |
      Node type to use for nodes group that are created from this template.
      Only one of nodeTypeFlexibility and nodeType can be specified.
    conflicts:
      - node_type_flexibility
  - name: 'nodeTypeFlexibility'
    type: NestedObject
    description: |
      Flexible properties for the desired node type. Node groups that
      use this node template will create nodes of a type that matches
      these properties. Only one of nodeTypeFlexibility and nodeType can
      be specified.
    conflicts:
      - node_type
    properties:
      - name: 'cpus'
        type: String
        description: |
          Number of virtual CPUs to use.
        at_least_one_of:
          - 'node_type_flexibility.0.cpus'
          - 'node_type_flexibility.0.memory'
      - name: 'memory'
        type: String
        description: |
          Physical memory available to the node, defined in MB.
        at_least_one_of:
          - 'node_type_flexibility.0.cpus'
          - 'node_type_flexibility.0.memory'
      - name: 'localSsd'
        type: String
        description: |
          Use local SSD
        output: true
  - name: 'serverBinding'
    type: NestedObject
    description: |
      The server binding policy for nodes using this template. Determines
      where the nodes should restart following a maintenance event.
    default_from_api: true
    properties:
      - name: 'type'
        type: Enum
        description: |
          Type of server binding policy. If `RESTART_NODE_ON_ANY_SERVER`,
          nodes using this template will restart on any physical server
          following a maintenance event.

          If `RESTART_NODE_ON_MINIMAL_SERVER`, nodes using this template
          will restart on the same physical server following a maintenance
          event, instead of being live migrated to or restarted on a new
          physical server. This option may be useful if you are using
          software licenses tied to the underlying server characteristics
          such as physical sockets or cores, to avoid the need for
          additional licenses when maintenance occurs. However, VMs on such
          nodes will experience outages while maintenance is applied.
        required: true
        enum_values:
          - 'RESTART_NODE_ON_ANY_SERVER'
          - 'RESTART_NODE_ON_MINIMAL_SERVERS'
  - name: 'cpuOvercommitType'
    type: Enum
    description: |
      CPU overcommit.
    default_value: NONE
    enum_values:
      - 'ENABLED'
      - 'NONE'
