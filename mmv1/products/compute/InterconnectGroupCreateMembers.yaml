# Copyright 2024 Google Inc.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

---
name: 'InterconnectGroupCreateMembers'
description: |
  Create Interconnects with redundancy by creating them in a specified
  interconnect group.
references:
  guides:
    'Create a Dedicated Interconnect': 'https://cloud.google.com/network-connectivity/docs/interconnect/concepts/dedicated-overview'
  api: 'https://cloud.google.com/compute/docs/reference/rest/v1/interconnects'
docs:
base_url: 'projects/{{project}}/global/interconnectGroups/{{name}}'
self_link: 'projects/{{project}}/global/interconnectGroups/{{name}}/createMembers'
update_verb: 'POST'
timeouts:
  insert_minutes: 20
  update_minutes: 20
  delete_minutes: 20
async:
  actions: ['update']
  type: 'OpAsync'
  operation:
    base_url: '{{op_id}}'
  result:
    resource_inside_response: false
examples:
  - name: 'interconnect_group_create_members_basic'
    primary_resource_id: 'example-interconnect'
    vars:
      interconnect_name: 'example-interconnect'
      customer_name: 'example_customer'
      deletion_protection: 'true'
    test_vars_overrides:
      'deletion_protection': 'false'
parameters:
properties:
  - name: 'intentMismatchBehavior'
    type: Enum
    description: |
      How to behave when configured.topologyCapability.supportedSLA would not
      equal intent.topologyCapability after this call.
    enum_values:
      - 'UNSPECIFIED'
      - 'REJECT'
      - 'CREATE'
  - name: 'templateInterconnect'
    type: NestedObject
    description: |
      Parameters for the Interconnects to create
    properties:
      - name: 'facility'
        type: String
        description: |
          A zone-free location to use for all Interconnects created in this call,
          like "iad-1234".
      - name: 'description'
        type: String
        description: |
          An optional description of this resource. Provide this property when you create the resource.
      - name: 'name'
        type: String
        description: |
          Name of the resource. Provided by the client when the resource is created. The name must be
          1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters
          long and match the regular expression `[a-z]([-a-z0-9]*[a-z0-9])?` which means the first
          character must be a lowercase letter, and all following characters must be a dash,
          lowercase letter, or digit, except the last character, which cannot be a dash.
        required: true
        immutable: true
        validation:
          regex: '^[a-z]([-a-z0-9]*[a-z0-9])?$'
      - name: 'location'
        type: ResourceRef
        description: |
          URL of the InterconnectLocation object that represents where this connection is to be provisioned.
          Specifies the location inside Google's Networks, should not be passed in case of cross-cloud interconnect.
        immutable: true
        resource: 'InterconnectLocations'
        imports: 'selfLink'
      - name: 'linkType'
        type: Enum
        description: |
          Type of link requested. Note that this field indicates the speed of each of the links in the
          bundle, not the speed of the entire bundle. Can take one of the following values:
            - LINK_TYPE_ETHERNET_10G_LR: A 10G Ethernet with LR optics.
            - LINK_TYPE_ETHERNET_100G_LR: A 100G Ethernet with LR optics.
            - LINK_TYPE_ETHERNET_400G_LR4: A 400G Ethernet with LR4 optics
        required: true
        immutable: true
        enum_values:
          - 'LINK_TYPE_ETHERNET_10G_LR'
          - 'LINK_TYPE_ETHERNET_100G_LR'
          - 'LINK_TYPE_ETHERNET_400G_LR4'
      - name: 'requestedLinkCount'
        type: Integer
        description: |
          Target number of physical links in the link bundle, as requested by the customer.
        required: true
        immutable: true
      - name: 'interconnectType'
        type: Enum
        description: |
          Type of interconnect. Note that a value IT_PRIVATE has been deprecated in favor of DEDICATED.
          Can take one of the following values:
            - PARTNER: A partner-managed interconnection shared between customers though a partner.
            - DEDICATED: A dedicated physical interconnection with the customer.
        required: true
        immutable: true
        diff_suppress_func: 'InterconnectTypeDiffSuppress'
        enum_values:
          - 'DEDICATED'
          - 'PARTNER'
          - 'IT_PRIVATE'
      - name: 'adminEnabled'
        type: Boolean
        description: |
          Administrative status of the interconnect. When this is set to true, the Interconnect is
          functional and can carry traffic. When set to false, no packets can be carried over the
          interconnect and no BGP routes are exchanged over it. By default, the status is set to true.
        send_empty_value: true
        default_value: true
      - name: 'nocContactEmail'
        type: String
        description: |
          Email address to contact the customer NOC for operations and maintenance notifications
          regarding this Interconnect. If specified, this will be used for notifications in addition to
          all other forms described, such as Cloud Monitoring logs alerting and Cloud Notifications.
          This field is required for users who sign up for Cloud Interconnect using workforce identity
          federation.
      - name: 'customerName'
        type: String
        description: |
          Customer name, to put in the Letter of Authorization as the party authorized to request a
          crossconnect. This field is required for Dedicated and Partner Interconnect, should not be specified
          for cross-cloud interconnect.
        immutable: true
        enum_values:
          - 'OS_ACTIVE'
          - 'OS_UNPROVISIONED'
          - 'OS_UNDER_MAINTENANCE'
      - name: 'labels'
        type: KeyValueLabels
        update_url: 'projects/{{project}}/global/interconnects/{{name}}/setLabels'
        update_verb: 'POST'
        description: |
          Labels for this resource. These can only be added or modified by the setLabels
          method. Each label key/value pair must comply with RFC1035. Label values may be empty.
      - name: 'macsec'
        type: NestedObject
        description: |
          Configuration that enables Media Access Control security (MACsec) on the Cloud
          Interconnect connection between Google and your on-premises router.
        properties:
          - name: 'preSharedKeys'
            type: Array
            description: |
              A keychain placeholder describing a set of named key objects along with their
              start times. A MACsec CKN/CAK is generated for each key in the key chain.
              Google router automatically picks the key with the most recent startTime when establishing
              or re-establishing a MACsec secure link.
            required: true
            item_type:
              type: NestedObject
              properties:
                - name: 'name'
                  type: String
                  description: |
                    A name for this pre-shared key. The name must be 1-63 characters long, and
                    comply with RFC1035. Specifically, the name must be 1-63 characters long and match
                    the regular expression `[a-z]([-a-z0-9]*[a-z0-9])?` which means the first character
                    must be a lowercase letter, and all following characters must be a dash, lowercase
                    letter, or digit, except the last character, which cannot be a dash.
                  required: true
                  validation:
                    regex: '^[a-z]([-a-z0-9]*[a-z0-9])?$'
                - name: 'startTime'
                  type: String
                  description: |
                    A RFC3339 timestamp on or after which the key is valid. startTime can be in the
                    future. If the keychain has a single key, startTime can be omitted. If the keychain
                    has multiple keys, startTime is mandatory for each key. The start times of keys must
                    be in increasing order. The start times of two consecutive keys must be at least 6
                    hours apart.
                - name: 'failOpen'
                  type: Boolean
                  description: |
                    If set to true, the Interconnect connection is configured with a should-secure
                    MACsec security policy, that allows the Google router to fallback to cleartext
                    traffic if the MKA session cannot be established. By default, the Interconnect
                    connection is configured with a must-secure security policy that drops all traffic
                    if the MKA session cannot be established with your router.
                  deprecation_message: '`failOpen` is deprecated and will be removed in a future major release. Use other `failOpen` instead.'
          - name: 'failOpen'
            type: Boolean
            description: |
              If set to true, the Interconnect connection is configured with a should-secure
              MACsec security policy, that allows the Google router to fallback to cleartext
              traffic if the MKA session cannot be established. By default, the Interconnect
              connection is configured with a must-secure security policy that drops all traffic
              if the MKA session cannot be established with your router.
      - name: 'macsecEnabled'
        type: Boolean
        description: |
          Enable or disable MACsec on this Interconnect connection.
          MACsec enablement fails if the MACsec object is not specified.
      - name: 'remoteLocation'
        type: String
        description: |
          Indicates that this is a Cross-Cloud Interconnect. This field specifies the location outside
          of Google's network that the interconnect is connected to.
        immutable: true
      - name: 'requestedFeatures'
        type: Array
        description: |
          interconnects.list of features requested for this Interconnect connection. Options: IF_MACSEC (
          If specified then the connection is created on MACsec capable hardware ports. If not
          specified, the default value is false, which allocates non-MACsec capable ports first if
          available). Note that MACSEC is still technically allowed for compatibility reasons, but it
          does not work with the API, and will be removed in an upcoming major version.
        immutable: true
        item_type:
          type: Enum
          description: |
            interconnects.list of features requested for this Interconnect connection
          enum_values:
            - 'MACSEC'
            - 'IF_MACSEC'
  - name: 'interconnects'
    type: Array
    description: |
      Parameters for the Interconnects to create
    item_type:
      type: NestedObject
      properties:
      - name: 'facility'
        type: String
        description: |
          A zone-free location to use for all Interconnects created in this call,
          like "iad-1234".
      - name: 'description'
        type: String
        description: |
          An optional description of this resource. Provide this property when you create the resource.
      - name: 'name'
        type: String
        description: |
          Name of the resource. Provided by the client when the resource is created. The name must be
          1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters
          long and match the regular expression `[a-z]([-a-z0-9]*[a-z0-9])?` which means the first
          character must be a lowercase letter, and all following characters must be a dash,
          lowercase letter, or digit, except the last character, which cannot be a dash.
        required: true
        immutable: true
        validation:
          regex: '^[a-z]([-a-z0-9]*[a-z0-9])?$'
      - name: 'location'
        type: ResourceRef
        description: |
          URL of the InterconnectLocation object that represents where this connection is to be provisioned.
          Specifies the location inside Google's Networks, should not be passed in case of cross-cloud interconnect.
        immutable: true
        resource: 'InterconnectLocations'
        imports: 'selfLink'
      - name: 'linkType'
        type: Enum
        description: |
          Type of link requested. Note that this field indicates the speed of each of the links in the
          bundle, not the speed of the entire bundle. Can take one of the following values:
            - LINK_TYPE_ETHERNET_10G_LR: A 10G Ethernet with LR optics.
            - LINK_TYPE_ETHERNET_100G_LR: A 100G Ethernet with LR optics.
            - LINK_TYPE_ETHERNET_400G_LR4: A 400G Ethernet with LR4 optics
        immutable: true
        enum_values:
          - 'LINK_TYPE_ETHERNET_10G_LR'
          - 'LINK_TYPE_ETHERNET_100G_LR'
          - 'LINK_TYPE_ETHERNET_400G_LR4'
      - name: 'requestedLinkCount'
        type: Integer
        description: |
          Target number of physical links in the link bundle, as requested by the customer.
        immutable: true
      - name: 'interconnectType'
        type: Enum
        description: |
          Type of interconnect. Note that a value IT_PRIVATE has been deprecated in favor of DEDICATED.
          Can take one of the following values:
            - PARTNER: A partner-managed interconnection shared between customers though a partner.
            - DEDICATED: A dedicated physical interconnection with the customer.
        immutable: true
        diff_suppress_func: 'InterconnectTypeDiffSuppress'
        enum_values:
          - 'DEDICATED'
          - 'PARTNER'
          - 'IT_PRIVATE'
      - name: 'adminEnabled'
        type: Boolean
        description: |
          Administrative status of the interconnect. When this is set to true, the Interconnect is
          functional and can carry traffic. When set to false, no packets can be carried over the
          interconnect and no BGP routes are exchanged over it. By default, the status is set to true.
        send_empty_value: true
        default_value: true
      - name: 'nocContactEmail'
        type: String
        description: |
          Email address to contact the customer NOC for operations and maintenance notifications
          regarding this Interconnect. If specified, this will be used for notifications in addition to
          all other forms described, such as Cloud Monitoring logs alerting and Cloud Notifications.
          This field is required for users who sign up for Cloud Interconnect using workforce identity
          federation.
      - name: 'customerName'
        type: String
        description: |
          Customer name, to put in the Letter of Authorization as the party authorized to request a
          crossconnect. This field is required for Dedicated and Partner Interconnect, should not be specified
          for cross-cloud interconnect.
        immutable: true
      - name: 'labels'
        type: KeyValueLabels
        update_url: 'projects/{{project}}/global/interconnects/{{name}}/setLabels'
        update_verb: 'POST'
        description: |
          Labels for this resource. These can only be added or modified by the setLabels
          method. Each label key/value pair must comply with RFC1035. Label values may be empty.
        enum_values:
          - 'ACTIVE'
          - 'UNPROVISIONED'
          - 'UNDER_MAINTENANCE'
      - name: 'macsec'
        type: NestedObject
        description: |
          Configuration that enables Media Access Control security (MACsec) on the Cloud
          Interconnect connection between Google and your on-premises router.
        properties:
          - name: 'preSharedKeys'
            type: Array
            description: |
              A keychain placeholder describing a set of named key objects along with their
              start times. A MACsec CKN/CAK is generated for each key in the key chain.
              Google router automatically picks the key with the most recent startTime when establishing
              or re-establishing a MACsec secure link.
            item_type:
              type: NestedObject
              properties:
                - name: 'name'
                  type: String
                  description: |
                    A name for this pre-shared key. The name must be 1-63 characters long, and
                    comply with RFC1035. Specifically, the name must be 1-63 characters long and match
                    the regular expression `[a-z]([-a-z0-9]*[a-z0-9])?` which means the first character
                    must be a lowercase letter, and all following characters must be a dash, lowercase
                    letter, or digit, except the last character, which cannot be a dash.
                  validation:
                    regex: '^[a-z]([-a-z0-9]*[a-z0-9])?$'
                - name: 'startTime'
                  type: String
                  description: |
                    A RFC3339 timestamp on or after which the key is valid. startTime can be in the
                    future. If the keychain has a single key, startTime can be omitted. If the keychain
                    has multiple keys, startTime is mandatory for each key. The start times of keys must
                    be in increasing order. The start times of two consecutive keys must be at least 6
                    hours apart.
                - name: 'failOpen'
                  type: Boolean
                  description: |
                    If set to true, the Interconnect connection is configured with a should-secure
                    MACsec security policy, that allows the Google router to fallback to cleartext
                    traffic if the MKA session cannot be established. By default, the Interconnect
                    connection is configured with a must-secure security policy that drops all traffic
                    if the MKA session cannot be established with your router.
                  deprecation_message: '`failOpen` is deprecated and will be removed in a future major release. Use other `failOpen` instead.'
          - name: 'failOpen'
            type: Boolean
            description: |
              If set to true, the Interconnect connection is configured with a should-secure
              MACsec security policy, that allows the Google router to fallback to cleartext
              traffic if the MKA session cannot be established. By default, the Interconnect
              connection is configured with a must-secure security policy that drops all traffic
              if the MKA session cannot be established with your router.
      - name: 'macsecEnabled'
        type: Boolean
        description: |
          Enable or disable MACsec on this Interconnect connection.
          MACsec enablement fails if the MACsec object is not specified.
      - name: 'remoteLocation'
        type: String
        description: |
          Indicates that this is a Cross-Cloud Interconnect. This field specifies the location outside
          of Google's network that the interconnect is connected to.
        immutable: true
      - name: 'requestedFeatures'
        type: Array
        description: |
          interconnects.list of features requested for this Interconnect connection. Options: IF_MACSEC (
          If specified then the connection is created on MACsec capable hardware ports. If not
          specified, the default value is false, which allocates non-MACsec capable ports first if
          available). Note that MACSEC is still technically allowed for compatibility reasons, but it
          does not work with the API, and will be removed in an upcoming major version.
        immutable: true
        item_type:
          type: Enum
          description: |
            interconnects.list of features requested for this Interconnect connection
          enum_values:
            - 'MACSEC'
            - 'IF_MACSEC'
