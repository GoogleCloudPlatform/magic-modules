# Copyright 2024 Google Inc.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# Warning: This is a temporary file, and should not be edited directly
---
name: 'HttpsHealthCheck'
kind: 'compute#httpsHealthCheck'
description: |
  An HttpsHealthCheck resource. This resource defines a template for how
  individual VMs should be checked for health, via HTTPS.

  ~> **Note:** google_compute_https_health_check is a legacy health check.
  The newer [google_compute_health_check](/docs/providers/google/r/compute_health_check.html)
  should be preferred for all uses except
  [Network Load Balancers](https://cloud.google.com/compute/docs/load-balancing/network/)
  which still require the legacy version.
references:
  guides:
    'Adding Health Checks': 'https://cloud.google.com/compute/docs/load-balancing/health-checks#legacy_health_checks'
  api: 'https://cloud.google.com/compute/docs/reference/v1/httpsHealthChecks'
docs:
base_url: 'projects/{{project}}/global/httpsHealthChecks'
has_self_link: true
timeouts:
  insert_minutes: 20
  update_minutes: 20
  delete_minutes: 20
async:
  type: 'OpAsync'
  operation:
    base_url: 'projects/{{project}}/global/operations/{{op_id}}'
    kind: 'compute#operation'
    path: 'name'
    wait_ms: 1000
  result:
    path: 'targetLink'
    resource_inside_response: false
  error:
    path: 'error/errors'
    message: 'message'
collection_url_key: 'items'
custom_code:
examples:
  - name: 'https_health_check_basic'
    primary_resource_id: 'default'
    vars:
      https_health_check_name: 'authentication-health-check'
parameters:
properties:
  - name: 'checkIntervalSec'
    type: Integer
    description: |
      How often (in seconds) to send a health check. The default value is 5
      seconds.
    default_value: 5
  - name: 'creationTimestamp'
    type: Time
    description: 'Creation timestamp in RFC3339 text format.'
    output: true
  - name: 'description'
    type: String
    description: |
      An optional description of this resource. Provide this property when
      you create the resource.
  - name: 'healthyThreshold'
    type: Integer
    description: |
      A so-far unhealthy instance will be marked healthy after this many
      consecutive successes. The default value is 2.
    default_value: 2
  - name: 'host'
    type: String
    description: |
      The value of the host header in the HTTPS health check request. If
      left empty (default value), the public IP on behalf of which this
      health check is performed will be used.
  - name: 'name'
    type: String
    description: |
      Name of the resource. Provided by the client when the resource is
      created. The name must be 1-63 characters long, and comply with
      RFC1035.  Specifically, the name must be 1-63 characters long and
      match the regular expression `[a-z]([-a-z0-9]*[a-z0-9])?` which means
      the first character must be a lowercase letter, and all following
      characters must be a dash, lowercase letter, or digit, except the
      last character, which cannot be a dash.
    required: true
    immutable: true
  - name: 'port'
    type: Integer
    description: |
      The TCP port number for the HTTPS health check request.
      The default value is 443.
    default_value: 443
  - name: 'requestPath'
    type: String
    description: |
      The request path of the HTTPS health check request.
      The default value is /.
    default_value: /
  - name: 'timeoutSec'
    type: Integer
    description: |
      How long (in seconds) to wait before claiming failure.
      The default value is 5 seconds.  It is invalid for timeoutSec to have
      greater value than checkIntervalSec.
    default_value: 5
  - name: 'unhealthyThreshold'
    type: Integer
    description: |
      A so-far healthy instance will be marked unhealthy after this many
      consecutive failures. The default value is 2.
    default_value: 2
