# Copyright 2023 Google Inc.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

--- !ruby/object:Api::Resource
name: 'NetworkEndpointGroup'
kind: 'compute#networkEndpointGroup'
base_url: 'projects/{{project}}/zones/{{zone}}/networkEndpointGroups'
immutable: true
has_self_link: true
collection_url_key: 'items'
references: !ruby/object:Api::Resource::ReferenceLinks
  guides:
    'Official Documentation': 'https://cloud.google.com/load-balancing/docs/negs/'
  api: 'https://cloud.google.com/compute/docs/reference/rest/beta/networkEndpointGroups'
description: |
  Network endpoint groups (NEGs) are zonal resources that represent
  collections of IP address and port combinations for GCP resources within a
  single subnet. Each IP address and port combination is called a network
  endpoint.

  Network endpoint groups can be used as backends in backend services for
  HTTP(S), TCP proxy, and SSL proxy load balancers. You cannot use NEGs as a
  backend with internal load balancers. Because NEG backends allow you to
  specify IP addresses and ports, you can distribute traffic in a granular
  fashion among applications or containers running within VM instances.

  Recreating a network endpoint group that's in use by another resource will give a
  `resourceInUseByAnotherResource` error. Use `lifecycle.create_before_destroy`
  to avoid this type of error.
async: !ruby/object:Api::OpAsync
  operation: !ruby/object:Api::OpAsync::Operation
    kind: 'compute#operation'
    path: 'name'
    base_url: 'projects/{{project}}/zones/{{zone}}/operations/{{op_id}}'
    wait_ms: 1000
  result: !ruby/object:Api::OpAsync::Result
    path: 'targetLink'
  status: !ruby/object:Api::OpAsync::Status
    path: 'status'
    complete: 'DONE'
    allowed:
      - 'PENDING'
      - 'RUNNING'
      - 'DONE'
  error: !ruby/object:Api::OpAsync::Error
    path: 'error/errors'
    message: 'message'
examples:
  - !ruby/object:Provider::Terraform::Examples
    name: 'network_endpoint_group'
    primary_resource_id: 'neg'
    vars:
      neg_name: 'my-lb-neg'
      network_name: 'neg-network'
      subnetwork_name: 'neg-subnetwork'
  - !ruby/object:Provider::Terraform::Examples
    name: 'network_endpoint_group_non_gcp'
    primary_resource_id: 'neg'
    vars:
      neg_name: 'my-lb-neg'
      network_name: 'neg-network'
parameters:
  - !ruby/object:Api::Type::ResourceRef
    name: 'zone'
    resource: 'Zone'
    imports: 'name'
    description: |
      Zone where the network endpoint group is located.
    required: false
    default_from_api: true
    ignore_read: true
    custom_expand: 'templates/terraform/custom_expand/resourceref_with_validation.go.erb'
properties:
  - !ruby/object:Api::Type::String
    name: 'name'
    description: |
      Name of the resource; provided by the client when the resource is
      created. The name must be 1-63 characters long, and comply with
      RFC1035. Specifically, the name must be 1-63 characters long and match
      the regular expression `[a-z]([-a-z0-9]*[a-z0-9])?` which means the
      first character must be a lowercase letter, and all following
      characters must be a dash, lowercase letter, or digit, except the last
      character, which cannot be a dash.
    required: true
    validation: !ruby/object:Provider::Terraform::Validation
      function: 'verify.ValidateGCEName'
  - !ruby/object:Api::Type::String
    name: 'description'
    description: |
      An optional description of this resource. Provide this property when
      you create the resource.
  - !ruby/object:Api::Type::Enum
    name: 'networkEndpointType'
    description: |
      Type of network endpoints in this network endpoint group.
      NON_GCP_PRIVATE_IP_PORT is used for hybrid connectivity network
      endpoint groups (see https://cloud.google.com/load-balancing/docs/hybrid).
      Note that NON_GCP_PRIVATE_IP_PORT can only be used with Backend Services
      that 1) have the following load balancing schemes: EXTERNAL, EXTERNAL_MANAGED,
      INTERNAL_MANAGED, and INTERNAL_SELF_MANAGED and 2) support the RATE or
      CONNECTION balancing modes.

      Possible values include: GCE_VM_IP, GCE_VM_IP_PORT, NON_GCP_PRIVATE_IP_PORT, INTERNET_IP_PORT, INTERNET_FQDN_PORT, SERVERLESS, and PRIVATE_SERVICE_CONNECT.
    values:
      - :GCE_VM_IP
      - :GCE_VM_IP_PORT
      - :NON_GCP_PRIVATE_IP_PORT
      - :INTERNET_IP_PORT
      - :INTERNET_FQDN_PORT
      - :SERVERLESS
      - :PRIVATE_SERVICE_CONNECT
    default_value: :GCE_VM_IP_PORT
  - !ruby/object:Api::Type::Integer
    name: 'size'
    description: Number of network endpoints in the network endpoint group.
    output: true
  - !ruby/object:Api::Type::ResourceRef
    name: 'network'
    resource: 'Network'
    imports: 'selfLink'
    description: |
      The network to which all network endpoints in the NEG belong.
      Uses "default" project network if unspecified.
    required: true
    custom_expand: 'templates/terraform/custom_expand/resourceref_with_validation.go.erb'
  - !ruby/object:Api::Type::ResourceRef
    name: 'subnetwork'
    resource: 'Subnetwork'
    imports: 'selfLink'
    description: |
      Optional subnetwork to which all network endpoints in the NEG belong.
    diff_suppress_func: 'tpgresource.CompareOptionalSubnet'
    custom_expand: 'templates/terraform/custom_expand/resourceref_with_validation.go.erb'
  - !ruby/object:Api::Type::Integer
    name: 'defaultPort'
    description: |
      The default port used if the port number is not specified in the
      network endpoint.
