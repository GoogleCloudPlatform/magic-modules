# Copyright 2023 Google Inc.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

--- !ruby/object:Api::Resource
name: 'VpnTunnel'
kind: 'compute#vpnTunnel'
description: 'VPN tunnel resource.'
immutable: true
base_url: projects/{{project}}/regions/{{region}}/vpnTunnels
collection_url_key: 'items'
has_self_link: true
references: !ruby/object:Api::Resource::ReferenceLinks
  guides:
    'Cloud VPN Overview': 'https://cloud.google.com/vpn/docs/concepts/overview'
    'Networks and Tunnel Routing': 'https://cloud.google.com/vpn/docs/concepts/choosing-networks-routing'
  api: 'https://cloud.google.com/compute/docs/reference/rest/v1/vpnTunnels'
async: !ruby/object:Api::OpAsync
  operation: !ruby/object:Api::OpAsync::Operation
    kind: 'compute#operation'
    path: 'name'
    base_url: 'projects/{{project}}/regions/{{region}}/operations/{{op_id}}'
    wait_ms: 1000
  result: !ruby/object:Api::OpAsync::Result
    path: 'targetLink'
  status: !ruby/object:Api::OpAsync::Status
    path: 'status'
    complete: 'DONE'
    allowed:
      - 'PENDING'
      - 'RUNNING'
      - 'DONE'
  error: !ruby/object:Api::OpAsync::Error
    path: 'error/errors'
    message: 'message'
examples:
  - !ruby/object:Provider::Terraform::Examples
    name: 'vpn_tunnel_basic'
    primary_resource_id: 'tunnel1'
    vars:
      vpn_tunnel_name: 'tunnel-1'
      target_vpn_gateway_name: 'vpn-1'
      network_name: 'network-1'
      address_name: 'vpn-static-ip'
      esp_forwarding_rule_name: 'fr-esp'
      udp500_forwarding_rule_name: 'fr-udp500'
      udp4500_forwarding_rule_name: 'fr-udp4500'
      route_name:
        'route1'
custom_code: !ruby/object:Provider::Terraform::CustomCode
  constants: templates/terraform/constants/vpn_tunnel.erb
  encoder: templates/terraform/encoders/vpn_tunnel.go.erb
  post_create: templates/terraform/post_create/labels.erb
parameters:
  - !ruby/object:Api::Type::ResourceRef
    name: 'region'
    resource: 'Region'
    imports: 'name'
    description:
      'The region where the tunnel is located. If unset, is set to the region of
      `target_vpn_gateway`.'
    required: false
    default_from_api: true
    custom_flatten: 'templates/terraform/custom_flatten/name_from_self_link.erb'
    custom_expand: 'templates/terraform/custom_expand/resourceref_with_validation.go.erb'
properties:
  - !ruby/object:Api::Type::String
    name: 'tunnel_id'
    api_name: 'id'
    description:
      'The unique identifier for the resource. This identifier is defined by the
      server.'
    output: true
  - !ruby/object:Api::Type::Time
    name: 'creationTimestamp'
    description: 'Creation timestamp in RFC3339 text format.'
    output: true
  - !ruby/object:Api::Type::String
    name: 'name'
    description: |
      Name of the resource. The name must be 1-63 characters long, and
      comply with RFC1035. Specifically, the name must be 1-63
      characters long and match the regular expression
      `[a-z]([-a-z0-9]*[a-z0-9])?` which means the first character
      must be a lowercase letter, and all following characters must
      be a dash, lowercase letter, or digit,
      except the last character, which cannot be a dash.
    required: true
  - !ruby/object:Api::Type::String
    name: 'description'
    description: |
      An optional description of this resource.
    immutable: true
  - !ruby/object:Api::Type::ResourceRef
    name: 'targetVpnGateway'
    description: |
      URL of the Target VPN gateway with which this VPN tunnel is
      associated.
    resource: 'VpnGateway'
    imports: 'selfLink'
    immutable: true
    custom_expand: 'templates/terraform/custom_expand/resourceref_with_validation.go.erb'
  - !ruby/object:Api::Type::ResourceRef
    name: 'vpnGateway'
    description: |
      URL of the VPN gateway with which this VPN tunnel is associated.
      This must be used if a High Availability VPN gateway resource is created.
      This field must reference a `google_compute_ha_vpn_gateway` resource.
    resource: 'HaVpnGateway'
    imports: 'selfLink'
    immutable: true
    custom_expand: 'templates/terraform/custom_expand/resourceref_with_validation.go.erb'
  - !ruby/object:Api::Type::Integer
    name: 'vpnGatewayInterface'
    description: |
      The interface ID of the VPN gateway with which this VPN tunnel is associated.
    immutable: true
    send_empty_value: true
  - !ruby/object:Api::Type::ResourceRef
    name: 'peerExternalGateway'
    resource: 'ExternalVpnGateway'
    imports: 'selfLink'
    immutable: true
    conflicts:
      - peer_gcp_gateway
    description: |
      URL of the peer side external VPN gateway to which this VPN tunnel is connected.
    custom_expand: 'templates/terraform/custom_expand/resourceref_with_validation.go.erb'
  - !ruby/object:Api::Type::Integer
    name: 'peerExternalGatewayInterface'
    description: |
      The interface ID of the external VPN gateway to which this VPN tunnel is connected.
    send_empty_value: true
  - !ruby/object:Api::Type::ResourceRef
    name: 'peerGcpGateway'
    conflicts:
      - peer_external_gateway
    description: |
      URL of the peer side HA GCP VPN gateway to which this VPN tunnel is connected.
      If provided, the VPN tunnel will automatically use the same vpn_gateway_interface
      ID in the peer GCP VPN gateway.
      This field must reference a `google_compute_ha_vpn_gateway` resource.
    resource: 'HaVpnGateway'
    imports: 'selfLink'
    custom_expand: 'templates/terraform/custom_expand/resourceref_with_validation.go.erb'
  - !ruby/object:Api::Type::ResourceRef
    name: 'router'
    description: |
      URL of router resource to be used for dynamic routing.
    resource: 'Router'
    imports: 'selfLink'
    immutable: true
    custom_expand: 'templates/terraform/custom_expand/compute_full_url.erb'
  - !ruby/object:Api::Type::String
    name: 'peerIp'
    description: |
      IP address of the peer VPN gateway. Only IPv4 is supported.
    validation: !ruby/object:Provider::Terraform::Validation
      function: 'validatePeerAddr'
    default_from_api: true
  - !ruby/object:Api::Type::String
    name: 'sharedSecret'
    description: |
      Shared secret used to set the secure session between the Cloud VPN
      gateway and the peer VPN gateway.
    required: true
    sensitive: true
    ignore_read: true
  - !ruby/object:Api::Type::String
    name: 'sharedSecretHash'
    description: |
      Hash of the shared secret.
    output: true
  - !ruby/object:Api::Type::Integer
    name: 'ikeVersion'
    description: |
      IKE protocol version to use when establishing the VPN tunnel with
      peer VPN gateway.
      Acceptable IKE versions are 1 or 2. Default version is 2.
    default_value: 2
  - !ruby/object:Api::Type::Array
    name: 'localTrafficSelector'
    description: |
      Local traffic selector to use when establishing the VPN tunnel with
      peer VPN gateway. The value should be a CIDR formatted string,
      for example `192.168.0.0/16`. The ranges should be disjoint.
      Only IPv4 is supported.
    is_set: true
    default_from_api: true
    item_type: Api::Type::String
  - !ruby/object:Api::Type::Array
    name: 'remoteTrafficSelector'
    description: |
      Remote traffic selector to use when establishing the VPN tunnel with
      peer VPN gateway. The value should be a CIDR formatted string,
      for example `192.168.0.0/16`. The ranges should be disjoint.
      Only IPv4 is supported.
    is_set: true
    default_from_api: true
    item_type: Api::Type::String
  - !ruby/object:Api::Type::KeyValueLabels
    name: 'labels'
    description: Labels to apply to this VpnTunnel.
    update_verb: :POST
    update_url: 'projects/{{project}}/regions/{{region}}/vpnTunnels/{{name}}/setLabels'
  - !ruby/object:Api::Type::Fingerprint
    name: 'labelFingerprint'
    description: |
      The fingerprint used for optimistic locking of this resource.  Used
      internally during updates.
    update_url: 'projects/{{project}}/regions/{{region}}/vpnTunnels/{{name}}/setLabels'
    update_verb: :POST
  - !ruby/object:Api::Type::String
    name: 'detailedStatus'
    output: true
    description: 'Detailed status message for the VPN tunnel.'
