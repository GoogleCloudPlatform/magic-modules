# Copyright 2023 Google Inc.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

--- !ruby/object:Api::Resource
name: 'PerInstanceConfig'
base_url: 'projects/{{project}}/zones/{{zone}}/instanceGroupManagers/{{instance_group_manager}}'
description: |
  A config defined for a single managed instance that belongs to an instance group manager. It preserves the instance name
  across instance group manager operations and can define stateful disks or metadata that are unique to the instance.
create_verb: :POST
create_url: projects/{{project}}/zones/{{zone}}/instanceGroupManagers/{{instance_group_manager}}/createInstances
update_verb: :POST
update_url: projects/{{project}}/zones/{{zone}}/instanceGroupManagers/{{instance_group_manager}}/updatePerInstanceConfigs
delete_verb: :POST
delete_url: projects/{{project}}/zones/{{zone}}/instanceGroupManagers/{{instance_group_manager}}/deletePerInstanceConfigs
read_verb: :POST
self_link: projects/{{project}}/zones/{{zone}}/instanceGroupManagers/{{instance_group_manager}}/listPerInstanceConfigs
identity:
  - name
nested_query: !ruby/object:Api::Resource::NestedQuery
  keys:
    - items
references: !ruby/object:Api::Resource::ReferenceLinks
  guides:
    'Official Documentation': 'https://cloud.google.com/compute/docs/instance-groups/stateful-migs#per-instance_configs'
  api: 'https://cloud.google.com/compute/docs/reference/rest/v1/instanceGroupManagers'
async: !ruby/object:Api::OpAsync
  operation: !ruby/object:Api::OpAsync::Operation
    kind: 'compute#operation'
    path: 'name'
    base_url: 'projects/{{project}}/zones/{{zone}}/operations/{{op_id}}'
    wait_ms: 1000
  result: !ruby/object:Api::OpAsync::Result
    path: 'targetLink'
  status: !ruby/object:Api::OpAsync::Status
    path: 'status'
    complete: 'DONE'
    allowed:
      - 'PENDING'
      - 'RUNNING'
      - 'DONE'
  error: !ruby/object:Api::OpAsync::Error
    path: 'error/errors'
    message: 'message'
id_format: '{{project}}/{{zone}}/{{instance_group_manager}}/{{name}}'
mutex: instanceGroupManager/{{project}}/{{zone}}/{{instance_group_manager}}
exclude_tgc: true
examples:
  - !ruby/object:Provider::Terraform::Examples
    name: 'stateful_igm'
    primary_resource_id:
      'stateful-instance'
      # Fine-grained resource need different autogenerated tests, as
      # we need to check destroy during a test step where the parent resource
      # still exists, rather than during CheckDestroy (when read returns
      # nothing because the parent resource has then also been destroyed)
    skip_test: true
    vars:
      template_name: 'my-template'
      igm_name: 'my-igm'
      disk_name: 'my-disk-name'
virtual_fields:
  - !ruby/object:Api::Type::Enum
    name: 'minimal_action'
    description: |
      The minimal action to perform on the instance during an update.
      Default is `NONE`. Possible values are:
      * REPLACE
      * RESTART
      * REFRESH
      * NONE
    values:
      - :REPLACE
      - :RESTART
      - :REFRESH
      - :NONE
    default_value: :NONE
  - !ruby/object:Api::Type::Enum
    name: 'most_disruptive_allowed_action'
    description: |
      The most disruptive action to perform on the instance during an update.
      Default is `REPLACE`. Possible values are:
      * REPLACE
      * RESTART
      * REFRESH
      * NONE
    values:
      - :REPLACE
      - :RESTART
      - :REFRESH
      - :NONE
    default_value: :REPLACE
  - !ruby/object:Api::Type::Boolean
    name: 'remove_instance_on_destroy'
    conflicts:
      - remove_instance_state_on_destroy
    description: |
      When true, deleting this config will immediately remove the underlying instance.
      When false, deleting this config will use the behavior as determined by remove_instance_on_destroy.
    default_value: false
  - !ruby/object:Api::Type::Boolean
    name: 'remove_instance_state_on_destroy'
    conflicts:
      - remove_instance_on_destroy
    description: |
      When true, deleting this config will immediately remove any specified state from the underlying instance.
      When false, deleting this config will *not* immediately remove any state from the underlying instance.
      State will be removed on the next instance recreation or update.
    default_value: false
custom_code: !ruby/object:Provider::Terraform::CustomCode
  encoder: templates/terraform/encoders/compute_per_instance_config.go.erb
  update_encoder: templates/terraform/update_encoder/compute_per_instance_config.go.erb
  post_update: templates/terraform/post_update/compute_per_instance_config.go.erb
  custom_delete: templates/terraform/custom_delete/per_instance_config.go.erb
parameters:
  - !ruby/object:Api::Type::ResourceRef
    name: 'zone'
    resource: 'Zone'
    imports: 'name'
    description: |
      Zone where the containing instance group manager is located
    required: false
    url_param_only: true
    immutable: true
    ignore_read: true
    default_from_api: true
  - !ruby/object:Api::Type::ResourceRef
    name: 'instanceGroupManager'
    resource: 'InstanceGroupManager'
    imports: 'name'
    description: |
      The instance group manager this instance config is part of.
    required: true
    url_param_only: true
    immutable: true
properties:
  - !ruby/object:Api::Type::String
    name: 'name'
    description: |
      The name for this per-instance config and its corresponding instance.
    required: true
    immutable: true
  - !ruby/object:Api::Type::NestedObject
    name: 'preservedState'
    description: 'The preserved state for this instance.'
    properties:
      - !ruby/object:Api::Type::KeyValuePairs
        name: 'metadata'
        description: |
          Preserved metadata defined for this instance. This is a list of key->value pairs.
      - !ruby/object:Api::Type::Array
        name: 'disk'
        api_name: disks
        description: |
          Stateful disks for the instance.
        is_set: true
        custom_flatten: templates/terraform/custom_flatten/preserved_state_disks.go.erb
        custom_expand: templates/terraform/custom_expand/preserved_state_disks.go.erb
        item_type: !ruby/object:Api::Type::NestedObject
          properties:
            - !ruby/object:Api::Type::String
              name: deviceName
              required: true
              description: |
                A unique device name that is reflected into the /dev/ tree of a Linux operating system running within the instance.
            - !ruby/object:Api::Type::String
              name: source
              required: true
              description: |
                The URI of an existing persistent disk to attach under the specified device-name in the format
                `projects/project-id/zones/zone/disks/disk-name`.
            - !ruby/object:Api::Type::Enum
              name: mode
              description: |
                The mode of the disk.
              values:
                - :READ_ONLY
                - :READ_WRITE
              default_value: :READ_WRITE
            - !ruby/object:Api::Type::Enum
              name: deleteRule
              description: |
                A value that prescribes what should happen to the stateful disk when the VM instance is deleted.
                The available options are `NEVER` and `ON_PERMANENT_INSTANCE_DELETION`.
                `NEVER` - detach the disk when the VM is deleted, but do not delete the disk.
                `ON_PERMANENT_INSTANCE_DELETION` will delete the stateful disk when the VM is permanently
                deleted from the instance group.
              values:
                - :NEVER
                - :ON_PERMANENT_INSTANCE_DELETION
              default_value: :NEVER
      - !ruby/object:Api::Type::Map
        name: 'internalIp'
        api_name: internalIPs
        key_name: 'interface_name'
        description: |
          Preserved internal IPs defined for this instance. This map is keyed with the name of the network interface.
        value_type: !ruby/object:Api::Type::NestedObject
          properties:
            - !ruby/object:Api::Type::Enum
              name: autoDelete
              description: |
                These stateful IPs will never be released during autohealing, update or VM instance recreate operations. This flag is used to configure if the IP reservation should be deleted after it is no longer used by the group, e.g. when the given instance or the whole group is deleted.
              values:
                - :NEVER
                - :ON_PERMANENT_INSTANCE_DELETION
              default_value: :NEVER
            - !ruby/object:Api::Type::NestedObject
              name: 'ipAddress'
              description: |
                Ip address representation
              properties:
                - !ruby/object:Api::Type::ResourceRef
                  name: 'address'
                  resource: 'Address'
                  imports: 'selfLink'
                  description: |
                    The URL of the reservation for this IP address.
                  custom_expand: 'templates/terraform/custom_expand/resourceref_with_validation.go.erb'
      - !ruby/object:Api::Type::Map
        name: 'externalIp'
        api_name: externalIPs
        key_name: 'interface_name'
        description: |
          Preserved external IPs defined for this instance. This map is keyed with the name of the network interface.
        value_type: !ruby/object:Api::Type::NestedObject
          properties:
            - !ruby/object:Api::Type::Enum
              name: autoDelete
              description: |
                These stateful IPs will never be released during autohealing, update or VM instance recreate operations. This flag is used to configure if the IP reservation should be deleted after it is no longer used by the group, e.g. when the given instance or the whole group is deleted.
              values:
                - :NEVER
                - :ON_PERMANENT_INSTANCE_DELETION
              default_value: :NEVER
            - !ruby/object:Api::Type::NestedObject
              name: 'ipAddress'
              description: |
                Ip address representation
              properties:
                - !ruby/object:Api::Type::ResourceRef
                  name: 'address'
                  resource: 'Address'
                  imports: 'selfLink'
                  description: |
                    The URL of the reservation for this IP address.
                  custom_expand: 'templates/terraform/custom_expand/resourceref_with_validation.go.erb'
