<<<<<<< HEAD
# Copyright 2023 Google Inc.
=======
# Copyright 2024 Google Inc.
>>>>>>> 2fdda66097e2c96688e59f7c58c1f717c7785856
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

<<<<<<< HEAD
--- !ruby/object:Api::Resource
name: 'Workstation'
self_link: 'projects/{{project}}/locations/{{location}}/workstationClusters/{{workstation_cluster_id}}/workstationConfigs/{{workstation_config_id}}/workstations/{{workstation_id}}'
base_url: 'projects/{{project}}/locations/{{location}}/workstationClusters/{{workstation_cluster_id}}/workstationConfigs/{{workstation_config_id}}/workstations'
create_url: 'projects/{{project}}/locations/{{location}}/workstationClusters/{{workstation_cluster_id}}/workstationConfigs/{{workstation_config_id}}/workstations?workstationId={{workstation_id}}'
update_verb: :PATCH
update_mask: true
min_version: beta
description:
  'A single instance of a developer workstation with its own persistent storage.'
references: !ruby/object:Api::Resource::ReferenceLinks
  guides:
    'Workstations': 'https://cloud.google.com/workstations/docs/'
  api: 'https://cloud.google.com/workstations/docs/reference/rest/v1beta/projects.locations.workstationClusters.workstationConfigs.workstations'
iam_policy: !ruby/object:Api::Resource::IamPolicy
  method_name_separator: ':'
  fetch_iam_policy_verb: :GET
  parent_resource_attribute: workstation_id
  import_format:
    [
      'projects/{{project}}/locations/{{location}}/workstationClusters/{{workstation_cluster_id}}/workstationConfigs/{{workstation_config_id}}/workstations/{{workstation_id}}',
      '{{workstation_id}}',
    ]
  min_version: beta
async: !ruby/object:Api::OpAsync
  operation: !ruby/object:Api::OpAsync::Operation
    path: 'name'
    base_url: '{{op_id}}'
    wait_ms: 1000
    timeouts: !ruby/object:Api::Timeouts
      insert_minutes: 30
      update_minutes: 30
      delete_minutes: 30
  result: !ruby/object:Api::OpAsync::Result
    path: 'response'
  status: !ruby/object:Api::OpAsync::Status
    path: 'done'
    complete: true
    allowed:
      - true
      - false
  error: !ruby/object:Api::OpAsync::Error
    path: 'error'
    message: 'message'
import_format:
  [
    'projects/{{project}}/locations/{{location}}/workstationClusters/{{workstation_cluster_id}}/workstationConfigs/{{workstation_config_id}}/workstations/{{workstation_id}}',
  ]
autogen_async: true
examples:
  - !ruby/object:Provider::Terraform::Examples
    name: 'workstation_basic'
    min_version: beta
    primary_resource_id: 'default'
    primary_resource_name:
      'fmt.Sprintf("tf-test-workstation-cluster%s", context["random_suffix"]),
      fmt.Sprintf("tf-test-workstation-config%s", context["random_suffix"]),
      fmt.Sprintf("tf-test-work-station%s", context["random_suffix"])'
=======
---
name: 'Workstation'
description:
  'A single instance of a developer workstation with its own persistent storage.'
min_version: 'beta'
references:
  guides:
    'Workstations': 'https://cloud.google.com/workstations/docs/'
  api: 'https://cloud.google.com/workstations/docs/reference/rest/v1beta/projects.locations.workstationClusters.workstationConfigs.workstations'
docs:
base_url: 'projects/{{project}}/locations/{{location}}/workstationClusters/{{workstation_cluster_id}}/workstationConfigs/{{workstation_config_id}}/workstations'
self_link: 'projects/{{project}}/locations/{{location}}/workstationClusters/{{workstation_cluster_id}}/workstationConfigs/{{workstation_config_id}}/workstations/{{workstation_id}}'
create_url: 'projects/{{project}}/locations/{{location}}/workstationClusters/{{workstation_cluster_id}}/workstationConfigs/{{workstation_config_id}}/workstations?workstationId={{workstation_id}}'
update_verb: 'PATCH'
update_mask: true
import_format:
  - 'projects/{{project}}/locations/{{location}}/workstationClusters/{{workstation_cluster_id}}/workstationConfigs/{{workstation_config_id}}/workstations/{{workstation_id}}'
timeouts:
  insert_minutes: 30
  update_minutes: 30
  delete_minutes: 30
autogen_async: true
async:
  actions: ['create', 'delete', 'update']
  type: 'OpAsync'
  operation:
    base_url: '{{op_id}}'
    path: 'name'
    wait_ms: 1000
    timeouts:
      insert_minutes: 30
      update_minutes: 30
      delete_minutes: 30
  result:
    path: 'response'
    resource_inside_response: false
  error:
    path: 'error'
    message: 'message'
iam_policy:
  method_name_separator: ':'
  parent_resource_attribute: 'workstation_id'
  example_config_body: 'templates/terraform/iam/iam_attributes.go.tmpl'
  import_format:
    - 'projects/{{project}}/locations/{{location}}/workstationClusters/{{workstation_cluster_id}}/workstationConfigs/{{workstation_config_id}}/workstations/{{workstation_id}}'
    - '{{workstation_id}}'
  min_version: 'beta'
custom_code:
examples:
  - name: 'workstation_basic'
    primary_resource_id: 'default'
    primary_resource_name: 'fmt.Sprintf("tf-test-workstation-cluster%s", context["random_suffix"]), fmt.Sprintf("tf-test-workstation-config%s", context["random_suffix"]), fmt.Sprintf("tf-test-work-station%s", context["random_suffix"])'
    min_version: 'beta'
>>>>>>> 2fdda66097e2c96688e59f7c58c1f717c7785856
    vars:
      workstation_cluster_name: 'workstation-cluster'
      workstation_config_name: 'workstation-config'
      workstation_name: 'work-station'
parameters:
<<<<<<< HEAD
  - !ruby/object:Api::Type::String
    name: 'workstationId'
    required: true
    immutable: true
    url_param_only: true
    description: |
      ID to use for the workstation.
  - !ruby/object:Api::Type::String
    name: 'workstationConfigId'
    required: true
    immutable: true
    url_param_only: true
    description: |
      The ID of the parent workstation cluster config.
  - !ruby/object:Api::Type::String
    name: 'workstationClusterId'
    required: true
    immutable: true
    url_param_only: true
    description: |
      The ID of the parent workstation cluster.
  - !ruby/object:Api::Type::String
    name: 'location'
    immutable: true
    required: true
    url_param_only: true
    description: |
      The location where the workstation parent resources reside.
properties:
  - !ruby/object:Api::Type::String
    name: 'name'
    output: true
    description: |
      Full name of this resource.
  - !ruby/object:Api::Type::String
    name: 'uid'
    output: true
    description: |
      A system-assigned unique identified for this resource.
  - !ruby/object:Api::Type::String
    name: 'displayName'
    description: |
      Human-readable name for this resource.
  - !ruby/object:Api::Type::KeyValueLabels
    name: 'labels'
    description:
      'Client-specified labels that are applied to the resource and that are
      also propagated to the underlying Compute Engine resources.'
  - !ruby/object:Api::Type::KeyValueAnnotations
    name: 'annotations'
    description: 'Client-specified annotations. This is distinct from labels.'
  - !ruby/object:Api::Type::KeyValuePairs
    name: 'env'
    description: |
      'Client-specified environment variables passed to the workstation container's entrypoint.'
  - !ruby/object:Api::Type::Time
    name: 'createTime'
    description: |
      Time when this resource was created.
    output: true
  - !ruby/object:Api::Type::String
    name: 'host'
=======
  - name: 'workstationId'
    type: String
    description: |
      ID to use for the workstation.
    min_version: 'beta'
    url_param_only: true
    required: true
    immutable: true
  - name: 'workstationConfigId'
    type: String
    description: |
      The ID of the parent workstation cluster config.
    min_version: 'beta'
    url_param_only: true
    required: true
    immutable: true
  - name: 'workstationClusterId'
    type: String
    description: |
      The ID of the parent workstation cluster.
    min_version: 'beta'
    url_param_only: true
    required: true
    immutable: true
  - name: 'location'
    type: String
    description: |
      The location where the workstation parent resources reside.
    min_version: 'beta'
    url_param_only: true
    required: true
    immutable: true
properties:
  - name: 'name'
    type: String
    description: |
      Full name of this resource.
    min_version: 'beta'
    output: true
  - name: 'uid'
    type: String
    description: |
      A system-assigned unique identified for this resource.
    min_version: 'beta'
    output: true
  - name: 'displayName'
    type: String
    description: |
      Human-readable name for this resource.
    min_version: 'beta'
  - name: 'labels'
    type: KeyValueLabels
    description:
      'Client-specified labels that are applied to the resource and that are
      also propagated to the underlying Compute Engine resources.'
    min_version: 'beta'
  - name: 'annotations'
    type: KeyValueAnnotations
    description: 'Client-specified annotations. This is distinct from labels.'
    min_version: 'beta'
  - name: 'env'
    type: KeyValuePairs
    description: |
      'Client-specified environment variables passed to the workstation container's entrypoint.'
    min_version: 'beta'
  - name: 'createTime'
    type: Time
    description: |
      Time when this resource was created.
    min_version: 'beta'
    output: true
  - name: 'host'
    type: String
>>>>>>> 2fdda66097e2c96688e59f7c58c1f717c7785856
    description: |
      Host to which clients can send HTTPS traffic that will be received by the workstation.
      Authorized traffic will be received to the workstation as HTTP on port 80.
      To send traffic to a different port, clients may prefix the host with the destination port in the format "{port}-{host}".
<<<<<<< HEAD
    output: true
  - !ruby/object:Api::Type::Enum
    name: 'state'
    output: true
    description: |
      Current state of the workstation.
    values:
      - :STATE_STARTING
      - :STATE_RUNNING
      - :STATE_STOPPING
      - :STATE_STOPPED
=======
    min_version: 'beta'
    output: true
  - name: 'state'
    type: Enum
    description: |
      Current state of the workstation.
    min_version: 'beta'
    output: true
    enum_values:
      - 'STATE_STARTING'
      - 'STATE_RUNNING'
      - 'STATE_STOPPING'
      - 'STATE_STOPPED'
>>>>>>> 2fdda66097e2c96688e59f7c58c1f717c7785856
