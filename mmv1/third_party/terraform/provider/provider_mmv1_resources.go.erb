<% autogen_exception -%>
package provider

import (
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/schema"

	<% get_mmv1_services_in_version(products, version).each do |service|  -%>
	  "github.com/hashicorp/terraform-provider-google/google/services/<%= service -%>"
	<% end -%>

	"github.com/hashicorp/terraform-provider-google/google/services/composer"
	"github.com/hashicorp/terraform-provider-google/google/services/container"
	"github.com/hashicorp/terraform-provider-google/google/services/containeraws"
	"github.com/hashicorp/terraform-provider-google/google/services/containerazure"
	"github.com/hashicorp/terraform-provider-google/google/services/dataflow"
	"github.com/hashicorp/terraform-provider-google/google/services/servicenetworking"
	"github.com/hashicorp/terraform-provider-google/google/tpgiamresource"
)

// Datasources
var handwrittenDatasources = map[string]*schema.Resource{
	// ####### START handwritten datasources ###########
	"google_access_approval_folder_service_account":    accessapproval.DataSourceAccessApprovalFolderServiceAccount(),
	"google_access_approval_organization_service_account": accessapproval.DataSourceAccessApprovalOrganizationServiceAccount(),
	"google_access_approval_project_service_account":   accessapproval.DataSourceAccessApprovalProjectServiceAccount(),
	"google_active_folder":                             resourcemanager.DataSourceGoogleActiveFolder(),
	"google_alloydb_locations":                         alloydb.DataSourceAlloydbLocations(),
	"google_alloydb_supported_database_flags":          alloydb.DataSourceAlloydbSupportedDatabaseFlags(),
	"google_artifact_registry_repository":              artifactregistry.DataSourceArtifactRegistryRepository(),
	"google_apphub_discovered_workload":		    apphub.DataSourceApphubDiscoveredWorkload(),
	"google_app_engine_default_service_account":        appengine.DataSourceGoogleAppEngineDefaultServiceAccount(),
	"google_apphub_application":						apphub.DataSourceGoogleApphubApplication(),
	"google_apphub_discovered_service":		    apphub.DataSourceApphubDiscoveredService(),
	<% unless version == 'ga' -%>
	"google_backup_dr_management_server":				backupdr.DataSourceGoogleCloudBackupDRService(),
	<% end -%>
	"google_beyondcorp_app_connection":                 beyondcorp.DataSourceGoogleBeyondcorpAppConnection(),
	"google_beyondcorp_app_connector":                  beyondcorp.DataSourceGoogleBeyondcorpAppConnector(),
	"google_beyondcorp_app_gateway":                    beyondcorp.DataSourceGoogleBeyondcorpAppGateway(),
	"google_billing_account":                           billing.DataSourceGoogleBillingAccount(),
	"google_bigquery_dataset":          								bigquery.DataSourceGoogleBigqueryDataset(),
	"google_bigquery_default_service_account":          bigquery.DataSourceGoogleBigqueryDefaultServiceAccount(),
	"google_certificate_manager_certificate_map":       certificatemanager.DataSourceGoogleCertificateManagerCertificateMap(),
	"google_cloudbuild_trigger":                        cloudbuild.DataSourceGoogleCloudBuildTrigger(),
	"google_cloudfunctions_function":                   cloudfunctions.DataSourceGoogleCloudFunctionsFunction(),
	"google_cloudfunctions2_function":                  cloudfunctions2.DataSourceGoogleCloudFunctions2Function(),
	<% unless version == 'ga' -%>
	"google_cloud_asset_resources_search_all":          cloudasset.DataSourceGoogleCloudAssetResourcesSearchAll(),
	<% end -%>
	"google_cloud_identity_groups":                     cloudidentity.DataSourceGoogleCloudIdentityGroups(),
	"google_cloud_identity_group_memberships":          cloudidentity.DataSourceGoogleCloudIdentityGroupMemberships(),
	"google_cloud_identity_group_lookup":               cloudidentity.DataSourceGoogleCloudIdentityGroupLookup(),
	"google_cloud_quotas_quota_info":                   cloudquotas.DataSourceGoogleCloudQuotasQuotaInfo(),
	"google_cloud_quotas_quota_infos":                  cloudquotas.DataSourceGoogleCloudQuotasQuotaInfos(),
	"google_cloud_run_locations":                       cloudrun.DataSourceGoogleCloudRunLocations(),
	"google_cloud_run_service":                         cloudrun.DataSourceGoogleCloudRunService(),
	"google_cloud_run_v2_job":                          cloudrunv2.DataSourceGoogleCloudRunV2Job(),
	"google_cloud_run_v2_service":                      cloudrunv2.DataSourceGoogleCloudRunV2Service(),
	"google_composer_environment":                      composer.DataSourceGoogleComposerEnvironment(),
	"google_composer_image_versions":                   composer.DataSourceGoogleComposerImageVersions(),
	"google_compute_address":                           compute.DataSourceGoogleComputeAddress(),
	"google_compute_addresses":                         compute.DataSourceGoogleComputeAddresses(),
	"google_compute_backend_service":                   compute.DataSourceGoogleComputeBackendService(),
	"google_compute_backend_bucket":                    compute.DataSourceGoogleComputeBackendBucket(),
	"google_compute_default_service_account":           compute.DataSourceGoogleComputeDefaultServiceAccount(),
	"google_compute_disk":                              compute.DataSourceGoogleComputeDisk(),
	"google_compute_forwarding_rule":                   compute.DataSourceGoogleComputeForwardingRule(),
	"google_compute_forwarding_rules":                  compute.DataSourceGoogleComputeForwardingRules(),
	"google_compute_global_address":                    compute.DataSourceGoogleComputeGlobalAddress(),
	"google_compute_global_forwarding_rule":            compute.DataSourceGoogleComputeGlobalForwardingRule(),
	"google_compute_ha_vpn_gateway":                    compute.DataSourceGoogleComputeHaVpnGateway(),
	"google_compute_health_check":                      compute.DataSourceGoogleComputeHealthCheck(),
	"google_compute_image":                             compute.DataSourceGoogleComputeImage(),
	"google_compute_instance":                          compute.DataSourceGoogleComputeInstance(),
	"google_compute_instance_group":                    compute.DataSourceGoogleComputeInstanceGroup(),
	"google_compute_instance_group_manager":            compute.DataSourceGoogleComputeInstanceGroupManager(),
	"google_compute_instance_serial_port":              compute.DataSourceGoogleComputeInstanceSerialPort(),
	"google_compute_instance_template":                 compute.DataSourceGoogleComputeInstanceTemplate(),
	"google_compute_lb_ip_ranges":                      compute.DataSourceGoogleComputeLbIpRanges(),
	"google_compute_machine_types":                     compute.DataSourceGoogleComputeMachineTypes(),
	"google_compute_network":                           compute.DataSourceGoogleComputeNetwork(),
	"google_compute_networks":                          compute.DataSourceGoogleComputeNetworks(),
	"google_compute_network_endpoint_group":            compute.DataSourceGoogleComputeNetworkEndpointGroup(),
	"google_compute_network_peering":                   compute.DataSourceComputeNetworkPeering(),
	"google_compute_node_types":                        compute.DataSourceGoogleComputeNodeTypes(),
	"google_compute_regions":                           compute.DataSourceGoogleComputeRegions(),
	"google_compute_region_disk":                       compute.DataSourceGoogleComputeRegionDisk(),
	"google_compute_region_instance_group":             compute.DataSourceGoogleComputeRegionInstanceGroup(),
	"google_compute_region_instance_template":          compute.DataSourceGoogleComputeRegionInstanceTemplate(),
	"google_compute_region_network_endpoint_group":     compute.DataSourceGoogleComputeRegionNetworkEndpointGroup(),
	"google_compute_region_ssl_certificate":            compute.DataSourceGoogleRegionComputeSslCertificate(),
	"google_compute_reservation":                       compute.DataSourceGoogleComputeReservation(),
	"google_compute_resource_policy":                   compute.DataSourceGoogleComputeResourcePolicy(),
	"google_compute_router":                            compute.DataSourceGoogleComputeRouter(),
	"google_compute_router_nat":                        compute.DataSourceGoogleComputeRouterNat(),
	"google_compute_router_status":                     compute.DataSourceGoogleComputeRouterStatus(),
	"google_compute_snapshot":                          compute.DataSourceGoogleComputeSnapshot(),
	"google_compute_ssl_certificate":                   compute.DataSourceGoogleComputeSslCertificate(),
	"google_compute_ssl_policy":                        compute.DataSourceGoogleComputeSslPolicy(),
	"google_compute_subnetwork":                        compute.DataSourceGoogleComputeSubnetwork(),
	"google_compute_vpn_gateway":                       compute.DataSourceGoogleComputeVpnGateway(),
	"google_compute_zones":                             compute.DataSourceGoogleComputeZones(),
	"google_container_azure_versions":                  containerazure.DataSourceGoogleContainerAzureVersions(),
	"google_container_aws_versions":                    containeraws.DataSourceGoogleContainerAwsVersions(),
	"google_container_attached_versions":               containerattached.DataSourceGoogleContainerAttachedVersions(),
	"google_container_attached_install_manifest":       containerattached.DataSourceGoogleContainerAttachedInstallManifest(),
	"google_container_cluster":                         container.DataSourceGoogleContainerCluster(),
	"google_container_engine_versions":                 container.DataSourceGoogleContainerEngineVersions(),
	"google_container_registry_image":                  containeranalysis.DataSourceGoogleContainerImage(),
	"google_container_registry_repository":             containeranalysis.DataSourceGoogleContainerRepo(),
	"google_dataproc_metastore_service":                dataprocmetastore.DataSourceDataprocMetastoreService(),
	"google_datastream_static_ips":                     datastream.DataSourceGoogleDatastreamStaticIps(),
	"google_dns_keys":                                  dns.DataSourceDNSKeys(),
	"google_dns_managed_zone":                          dns.DataSourceDnsManagedZone(),
	"google_dns_managed_zones":                         dns.DataSourceDnsManagedZones(),
	"google_dns_record_set":                            dns.DataSourceDnsRecordSet(),
	"google_filestore_instance":                        filestore.DataSourceGoogleFilestoreInstance(),
	"google_iam_policy":                                resourcemanager.DataSourceGoogleIamPolicy(),
	"google_iam_role":                                  resourcemanager.DataSourceGoogleIamRole(),
	"google_iam_testable_permissions":                  resourcemanager.DataSourceGoogleIamTestablePermissions(),
	<% unless version == 'ga' -%>
	"google_iam_workload_identity_pool":                iambeta.DataSourceIAMBetaWorkloadIdentityPool(),
	"google_iam_workload_identity_pool_provider":       iambeta.DataSourceIAMBetaWorkloadIdentityPoolProvider(),
	<% end -%>
	"google_iap_client":                                iap.DataSourceGoogleIapClient(),
	"google_kms_crypto_key":                            kms.DataSourceGoogleKmsCryptoKey(),
	"google_kms_crypto_key_version":                    kms.DataSourceGoogleKmsCryptoKeyVersion(),
	"google_kms_key_ring":                              kms.DataSourceGoogleKmsKeyRing(),
	"google_kms_secret":                                kms.DataSourceGoogleKmsSecret(),
	"google_kms_secret_ciphertext":                     kms.DataSourceGoogleKmsSecretCiphertext(),
	<% unless version == 'ga' -%>
	"google_kms_secret_asymmetric":                     kms.DataSourceGoogleKmsSecretAsymmetric(),
	"google_firebase_android_app":                      firebase.DataSourceGoogleFirebaseAndroidApp(),
	"google_firebase_apple_app":                        firebase.DataSourceGoogleFirebaseAppleApp(),
	"google_firebase_hosting_channel":                  firebasehosting.DataSourceGoogleFirebaseHostingChannel(),
	"google_firebase_web_app":                          firebase.DataSourceGoogleFirebaseWebApp(),
	<% end -%>
	"google_folder":                                    resourcemanager.DataSourceGoogleFolder(),
	"google_folders":                                   resourcemanager.DataSourceGoogleFolders(),
	"google_folder_organization_policy":                resourcemanager.DataSourceGoogleFolderOrganizationPolicy(),
	"google_logging_folder_settings":                   logging.DataSourceGoogleLoggingFolderSettings(),
	"google_logging_organization_settings":             logging.DataSourceGoogleLoggingOrganizationSettings(),
	"google_logging_project_cmek_settings":             logging.DataSourceGoogleLoggingProjectCmekSettings(),
	"google_logging_project_settings":                  logging.DataSourceGoogleLoggingProjectSettings(),
	"google_logging_sink":                              logging.DataSourceGoogleLoggingSink(),
	"google_monitoring_notification_channel":           monitoring.DataSourceMonitoringNotificationChannel(),
	"google_monitoring_cluster_istio_service":          monitoring.DataSourceMonitoringServiceClusterIstio(),
	"google_monitoring_istio_canonical_service":        monitoring.DataSourceMonitoringIstioCanonicalService(),
	"google_monitoring_mesh_istio_service":             monitoring.DataSourceMonitoringServiceMeshIstio(),
	"google_monitoring_app_engine_service":             monitoring.DataSourceMonitoringServiceAppEngine(),
	"google_monitoring_uptime_check_ips":               monitoring.DataSourceGoogleMonitoringUptimeCheckIps(),
	"google_netblock_ip_ranges":                        resourcemanager.DataSourceGoogleNetblockIpRanges(),
	"google_organization":                              resourcemanager.DataSourceGoogleOrganization(),
	"google_privateca_certificate_authority":           privateca.DataSourcePrivatecaCertificateAuthority(),
	"google_project":                                   resourcemanager.DataSourceGoogleProject(),
	"google_projects":                                  resourcemanager.DataSourceGoogleProjects(),
	"google_project_organization_policy":               resourcemanager.DataSourceGoogleProjectOrganizationPolicy(),
	"google_project_service":                           resourcemanager.DataSourceGoogleProjectService(),
	"google_pubsub_subscription":                       pubsub.DataSourceGooglePubsubSubscription(),
	"google_pubsub_topic":                              pubsub.DataSourceGooglePubsubTopic(),
	<% unless version == 'ga' -%>
	"google_runtimeconfig_config":                      runtimeconfig.DataSourceGoogleRuntimeconfigConfig(),
	"google_runtimeconfig_variable":                    runtimeconfig.DataSourceGoogleRuntimeconfigVariable(),
	<% end -%>
	"google_secret_manager_secret":                     secretmanager.DataSourceSecretManagerSecret(),
	"google_secret_manager_secrets":                    secretmanager.DataSourceSecretManagerSecrets(),
	"google_secret_manager_secret_version":             secretmanager.DataSourceSecretManagerSecretVersion(),
	"google_secret_manager_secret_version_access":      secretmanager.DataSourceSecretManagerSecretVersionAccess(),
	"google_service_account":                           resourcemanager.DataSourceGoogleServiceAccount(),
	"google_service_account_access_token":              resourcemanager.DataSourceGoogleServiceAccountAccessToken(),
	"google_service_account_id_token":                  resourcemanager.DataSourceGoogleServiceAccountIdToken(),
	"google_service_account_jwt":                       resourcemanager.DataSourceGoogleServiceAccountJwt(),
	"google_service_account_key":                       resourcemanager.DataSourceGoogleServiceAccountKey(),
	"google_sourcerepo_repository":                     sourcerepo.DataSourceGoogleSourceRepoRepository(),
	"google_spanner_instance":                          spanner.DataSourceSpannerInstance(),
	"google_sql_ca_certs":                              sql.DataSourceGoogleSQLCaCerts(),
	"google_sql_tiers":                                 sql.DataSourceGoogleSQLTiers(),
	"google_sql_database_instance_latest_recovery_time": sql.DataSourceSqlDatabaseInstanceLatestRecoveryTime(),
	"google_sql_backup_run":                            sql.DataSourceSqlBackupRun(),
	"google_sql_databases":                             sql.DataSourceSqlDatabases(),
	"google_sql_database":                              sql.DataSourceSqlDatabase(),
	"google_sql_database_instance":                     sql.DataSourceSqlDatabaseInstance(),
	"google_sql_database_instances":                    sql.DataSourceSqlDatabaseInstances(),
	"google_service_networking_peered_dns_domain":      servicenetworking.DataSourceGoogleServiceNetworkingPeeredDNSDomain(),
	"google_storage_bucket":                            storage.DataSourceGoogleStorageBucket(),
	"google_storage_buckets":                           storage.DataSourceGoogleStorageBuckets(),
	"google_storage_bucket_object":                     storage.DataSourceGoogleStorageBucketObject(),
	"google_storage_bucket_objects":                    storage.DataSourceGoogleStorageBucketObjects(),
	"google_storage_bucket_object_content":             storage.DataSourceGoogleStorageBucketObjectContent(),
	"google_storage_object_signed_url":                 storage.DataSourceGoogleSignedUrl(),
	"google_storage_project_service_account":           storage.DataSourceGoogleStorageProjectServiceAccount(),
	"google_storage_transfer_project_service_account":  storagetransfer.DataSourceGoogleStorageTransferProjectServiceAccount(),
	"google_tags_tag_key":                              tags.DataSourceGoogleTagsTagKey(),
	"google_tags_tag_keys":                             tags.DataSourceGoogleTagsTagKeys(),
	"google_tags_tag_value":                            tags.DataSourceGoogleTagsTagValue(),
	"google_tags_tag_values":							tags.DataSourceGoogleTagsTagValues(),
	"google_tpu_tensorflow_versions":                   tpu.DataSourceTpuTensorflowVersions(),
	<% unless version == 'ga' -%>
	"google_tpu_v2_runtime_versions":                   tpuv2.DataSourceTpuV2RuntimeVersions(),
	"google_tpu_v2_accelerator_types":                  tpuv2.DataSourceTpuV2AcceleratorTypes(),
	<% end -%>
	"google_vpc_access_connector":                      vpcaccess.DataSourceVPCAccessConnector(),
	"google_redis_instance":                            redis.DataSourceGoogleRedisInstance(),
	"google_vertex_ai_index":                           vertexai.DataSourceVertexAIIndex(),
	"google_vmwareengine_cluster":                      vmwareengine.DataSourceVmwareengineCluster(),
	"google_vmwareengine_external_access_rule":         vmwareengine.DataSourceVmwareengineExternalAccessRule(),
	"google_vmwareengine_external_address":             vmwareengine.DataSourceVmwareengineExternalAddress(),
	"google_vmwareengine_network":                      vmwareengine.DataSourceVmwareengineNetwork(),
	"google_vmwareengine_network_peering":              vmwareengine.DataSourceVmwareengineNetworkPeering(),
	"google_vmwareengine_network_policy":               vmwareengine.DataSourceVmwareengineNetworkPolicy(),
	"google_vmwareengine_nsx_credentials":              vmwareengine.DataSourceVmwareengineNsxCredentials(),
	"google_vmwareengine_private_cloud":                vmwareengine.DataSourceVmwareenginePrivateCloud(),
	"google_vmwareengine_subnet":                       vmwareengine.DataSourceVmwareengineSubnet(),
	"google_vmwareengine_vcenter_credentials":          vmwareengine.DataSourceVmwareengineVcenterCredentials(),

	// ####### END handwritten datasources ###########
}

var generatedIAMDatasources = map[string]*schema.Resource{
	// ####### START generated IAM datasources ###########
	<%
	resources_for_version.each do |object|
		unless object[:iam_class_name].nil?
	-%>
	"<%= object[:terraform_name] -%>_iam_policy":               tpgiamresource.DataSourceIamPolicy(<%= object[:iam_class_name] -%>IamSchema, <%= object[:iam_class_name] -%>IamUpdaterProducer),
	<%
		end
	end
	-%>
	// ####### END generated IAM datasources ###########
}

var handwrittenIAMDatasources = map[string]*schema.Resource{
	// ####### START non-generated IAM datasources ###########
	"google_bigtable_instance_iam_policy":          tpgiamresource.DataSourceIamPolicy(bigtable.IamBigtableInstanceSchema, bigtable.NewBigtableInstanceUpdater),
	"google_bigtable_table_iam_policy":             tpgiamresource.DataSourceIamPolicy(bigtable.IamBigtableTableSchema, bigtable.NewBigtableTableUpdater),
	"google_bigquery_dataset_iam_policy":           tpgiamresource.DataSourceIamPolicy(bigquery.IamBigqueryDatasetSchema, bigquery.NewBigqueryDatasetIamUpdater),
	"google_billing_account_iam_policy":            tpgiamresource.DataSourceIamPolicy(billing.IamBillingAccountSchema, billing.NewBillingAccountIamUpdater),
	"google_dataproc_cluster_iam_policy":           tpgiamresource.DataSourceIamPolicy(dataproc.IamDataprocClusterSchema, dataproc.NewDataprocClusterUpdater),
	"google_dataproc_job_iam_policy":               tpgiamresource.DataSourceIamPolicy(dataproc.IamDataprocJobSchema, dataproc.NewDataprocJobUpdater),
	"google_folder_iam_policy":                     tpgiamresource.DataSourceIamPolicy(resourcemanager.IamFolderSchema, resourcemanager.NewFolderIamUpdater),
	"google_healthcare_dataset_iam_policy":         tpgiamresource.DataSourceIamPolicy(healthcare.IamHealthcareDatasetSchema, healthcare.NewHealthcareDatasetIamUpdater),
	"google_healthcare_dicom_store_iam_policy":     tpgiamresource.DataSourceIamPolicy(healthcare.IamHealthcareDicomStoreSchema, healthcare.NewHealthcareDicomStoreIamUpdater),
	"google_healthcare_fhir_store_iam_policy":      tpgiamresource.DataSourceIamPolicy(healthcare.IamHealthcareFhirStoreSchema, healthcare.NewHealthcareFhirStoreIamUpdater),
	"google_healthcare_hl7_v2_store_iam_policy":    tpgiamresource.DataSourceIamPolicy(healthcare.IamHealthcareHl7V2StoreSchema, healthcare.NewHealthcareHl7V2StoreIamUpdater),
	"google_kms_key_ring_iam_policy":               tpgiamresource.DataSourceIamPolicy(kms.IamKmsKeyRingSchema, kms.NewKmsKeyRingIamUpdater),
	"google_kms_crypto_key_iam_policy":             tpgiamresource.DataSourceIamPolicy(kms.IamKmsCryptoKeySchema, kms.NewKmsCryptoKeyIamUpdater),
	"google_spanner_instance_iam_policy":           tpgiamresource.DataSourceIamPolicy(spanner.IamSpannerInstanceSchema, spanner.NewSpannerInstanceIamUpdater),
	"google_spanner_database_iam_policy":           tpgiamresource.DataSourceIamPolicy(spanner.IamSpannerDatabaseSchema, spanner.NewSpannerDatabaseIamUpdater),
	"google_organization_iam_policy":               tpgiamresource.DataSourceIamPolicy(resourcemanager.IamOrganizationSchema, resourcemanager.NewOrganizationIamUpdater),
	"google_project_iam_policy":                    tpgiamresource.DataSourceIamPolicy(resourcemanager.IamProjectSchema, resourcemanager.NewProjectIamUpdater),
	"google_pubsub_subscription_iam_policy":        tpgiamresource.DataSourceIamPolicy(pubsub.IamPubsubSubscriptionSchema, pubsub.NewPubsubSubscriptionIamUpdater),
	"google_service_account_iam_policy":            tpgiamresource.DataSourceIamPolicy(resourcemanager.IamServiceAccountSchema, resourcemanager.NewServiceAccountIamUpdater),
	// ####### END non-generated IAM datasources ###########
}

// Resources
// Generated resources: <%= resource_count %>
// Generated IAM resources: <%= iam_resource_count %>
// Total generated resources: <%= resource_count + iam_resource_count %>
var generatedResources = map[string]*schema.Resource{
	<% resources_for_version.each do |object| -%>
	<% 	unless object[:resource_name].nil? -%>
		"<%= object[:terraform_name] -%>": <%= object[:resource_name] -%>(),
	<%  end -%>
	<%
	    unless object[:iam_class_name].nil?
	-%>
		"<%= object[:terraform_name] -%>_iam_binding":              tpgiamresource.ResourceIamBinding(<%= object[:iam_class_name] -%>IamSchema, <%= object[:iam_class_name] -%>IamUpdaterProducer, <%= object[:iam_class_name] -%>IdParseFunc),
		"<%= object[:terraform_name] -%>_iam_member":               tpgiamresource.ResourceIamMember(<%= object[:iam_class_name] -%>IamSchema, <%= object[:iam_class_name] -%>IamUpdaterProducer, <%= object[:iam_class_name] -%>IdParseFunc),
		"<%= object[:terraform_name] -%>_iam_policy":               tpgiamresource.ResourceIamPolicy(<%= object[:iam_class_name] -%>IamSchema, <%= object[:iam_class_name] -%>IamUpdaterProducer, <%= object[:iam_class_name] -%>IdParseFunc),
	<%
	    end # unless object[:iam_class_name].nil?
	-%>
	<%
	end     # resources_for_version.each do
	-%>
}

var handwrittenResources = map[string]*schema.Resource{
	// ####### START handwritten resources ###########
	"google_app_engine_application":                appengine.ResourceAppEngineApplication(),
	"google_apigee_sharedflow":                     apigee.ResourceApigeeSharedFlow(),
	"google_apigee_sharedflow_deployment":          apigee.ResourceApigeeSharedFlowDeployment(),
	"google_apigee_flowhook":                       apigee.ResourceApigeeFlowhook(),
	"google_apigee_keystores_aliases_pkcs12":       apigee.ResourceApigeeKeystoresAliasesPkcs12(),
	"google_apigee_keystores_aliases_key_cert_file": apigee.ResourceApigeeKeystoresAliasesKeyCertFile(),
	"google_bigquery_table":                        bigquery.ResourceBigQueryTable(),
	"google_bigtable_gc_policy":                    bigtable.ResourceBigtableGCPolicy(),
	"google_bigtable_instance":                     bigtable.ResourceBigtableInstance(),
	"google_bigtable_table":                        bigtable.ResourceBigtableTable(),
	"google_bigtable_authorized_view":              bigtable.ResourceBigtableAuthorizedView(),
	"google_billing_subaccount":                    resourcemanager.ResourceBillingSubaccount(),
	"google_cloudfunctions_function":               cloudfunctions.ResourceCloudFunctionsFunction(),
	"google_composer_environment":                  composer.ResourceComposerEnvironment(),
	<% unless version == 'ga' -%>
	"google_composer_user_workloads_secret":        composer.ResourceComposerUserWorkloadsSecret(),
	<% end -%>
	"google_compute_attached_disk":                 compute.ResourceComputeAttachedDisk(),
	"google_compute_instance":                      compute.ResourceComputeInstance(),
	"google_compute_disk_async_replication":        compute.ResourceComputeDiskAsyncReplication(),
	"google_compute_router_peer":			compute.ResourceComputeRouterBgpPeer(),
	<% unless version == 'ga' -%>
	"google_compute_instance_from_machine_image":   compute.ResourceComputeInstanceFromMachineImage(),
	<% end -%>
	"google_compute_instance_from_template":        compute.ResourceComputeInstanceFromTemplate(),
	"google_compute_instance_group":                compute.ResourceComputeInstanceGroup(),
	"google_compute_instance_group_manager":        compute.ResourceComputeInstanceGroupManager(),
	"google_compute_instance_template":             compute.ResourceComputeInstanceTemplate(),
	"google_compute_network_peering":               compute.ResourceComputeNetworkPeering(),
	"google_compute_project_default_network_tier":  compute.ResourceComputeProjectDefaultNetworkTier(),
	"google_compute_project_metadata":              compute.ResourceComputeProjectMetadata(),
	"google_compute_project_metadata_item":         compute.ResourceComputeProjectMetadataItem(),
	"google_compute_region_instance_group_manager": compute.ResourceComputeRegionInstanceGroupManager(),
	"google_compute_region_instance_template":      compute.ResourceComputeRegionInstanceTemplate(),
	"google_compute_router_interface":              compute.ResourceComputeRouterInterface(),
	"google_compute_security_policy":               compute.ResourceComputeSecurityPolicy(),
	"google_compute_shared_vpc_host_project":       compute.ResourceComputeSharedVpcHostProject(),
	"google_compute_shared_vpc_service_project":    compute.ResourceComputeSharedVpcServiceProject(),
	"google_compute_target_pool":                   compute.ResourceComputeTargetPool(),
	"google_container_cluster":                     container.ResourceContainerCluster(),
	"google_container_node_pool":                   container.ResourceContainerNodePool(),
	"google_container_registry":                    containeranalysis.ResourceContainerRegistry(),
	"google_dataflow_job":                          dataflow.ResourceDataflowJob(),
	<% unless version == 'ga' -%>
	"google_dataflow_flex_template_job":            dataflow.ResourceDataflowFlexTemplateJob(),
	<% end -%>
	"google_dataproc_cluster":                      dataproc.ResourceDataprocCluster(),
	"google_dataproc_job":                          dataproc.ResourceDataprocJob(),
	"google_dns_record_set":                        dns.ResourceDnsRecordSet(),
	"google_endpoints_service":                     servicemanagement.ResourceEndpointsService(),
	"google_folder":                                resourcemanager.ResourceGoogleFolder(),
	"google_folder_organization_policy":            resourcemanager.ResourceGoogleFolderOrganizationPolicy(),
	"google_logging_billing_account_sink":          logging.ResourceLoggingBillingAccountSink(),
	"google_logging_billing_account_exclusion":     logging.ResourceLoggingExclusion(logging.BillingAccountLoggingExclusionSchema, logging.NewBillingAccountLoggingExclusionUpdater, logging.BillingAccountLoggingExclusionIdParseFunc),
	"google_logging_billing_account_bucket_config": logging.ResourceLoggingBillingAccountBucketConfig(),
	"google_logging_organization_sink":             logging.ResourceLoggingOrganizationSink(),
	"google_logging_organization_exclusion":        logging.ResourceLoggingExclusion(logging.OrganizationLoggingExclusionSchema, logging.NewOrganizationLoggingExclusionUpdater, logging.OrganizationLoggingExclusionIdParseFunc),
	"google_logging_organization_bucket_config":    logging.ResourceLoggingOrganizationBucketConfig(),
	"google_logging_folder_sink":                   logging.ResourceLoggingFolderSink(),
	"google_logging_folder_exclusion":              logging.ResourceLoggingExclusion(logging.FolderLoggingExclusionSchema, logging.NewFolderLoggingExclusionUpdater, logging.FolderLoggingExclusionIdParseFunc),
	"google_logging_folder_bucket_config":          logging.ResourceLoggingFolderBucketConfig(),
	"google_logging_project_sink":                  logging.ResourceLoggingProjectSink(),
	"google_logging_project_exclusion":             logging.ResourceLoggingExclusion(logging.ProjectLoggingExclusionSchema, logging.NewProjectLoggingExclusionUpdater, logging.ProjectLoggingExclusionIdParseFunc),
	"google_logging_project_bucket_config":         logging.ResourceLoggingProjectBucketConfig(),
	"google_monitoring_dashboard":                  monitoring.ResourceMonitoringDashboard(),
	"google_os_config_os_policy_assignment":        osconfig.ResourceOSConfigOSPolicyAssignment(),
	<% unless version == 'ga' -%>
	"google_project_service_identity":              resourcemanager.ResourceProjectServiceIdentity(),
	<% end -%>
	"google_service_networking_connection":         servicenetworking.ResourceServiceNetworkingConnection(),
	"google_sql_database_instance":                 sql.ResourceSqlDatabaseInstance(),
	"google_sql_ssl_cert":                          sql.ResourceSqlSslCert(),
	"google_sql_user":                              sql.ResourceSqlUser(),
	"google_organization_iam_custom_role":          resourcemanager.ResourceGoogleOrganizationIamCustomRole(),
	"google_organization_policy":                   resourcemanager.ResourceGoogleOrganizationPolicy(),
	"google_project":                               resourcemanager.ResourceGoogleProject(),
	"google_project_default_service_accounts":      resourcemanager.ResourceGoogleProjectDefaultServiceAccounts(),
	"google_project_service":                       resourcemanager.ResourceGoogleProjectService(),
	"google_project_iam_custom_role":               resourcemanager.ResourceGoogleProjectIamCustomRole(),
	"google_project_iam_member_remove":             resourcemanager.ResourceGoogleProjectIamMemberRemove(),
	"google_project_organization_policy":           resourcemanager.ResourceGoogleProjectOrganizationPolicy(),
	"google_project_usage_export_bucket":           compute.ResourceProjectUsageBucket(),
	<% unless version == 'ga' -%>
	"google_runtimeconfig_config":                  runtimeconfig.ResourceRuntimeconfigConfig(),
	"google_runtimeconfig_variable":                runtimeconfig.ResourceRuntimeconfigVariable(),
	<% end -%>
	"google_service_account":                       resourcemanager.ResourceGoogleServiceAccount(),
	"google_service_account_key":                   resourcemanager.ResourceGoogleServiceAccountKey(),
	"google_service_networking_peered_dns_domain":  servicenetworking.ResourceGoogleServiceNetworkingPeeredDNSDomain(),
	"google_storage_bucket":                        storage.ResourceStorageBucket(),
	"google_storage_bucket_acl":                    storage.ResourceStorageBucketAcl(),
	"google_storage_bucket_object":                 storage.ResourceStorageBucketObject(),
	"google_storage_object_acl":                    storage.ResourceStorageObjectAcl(),
	"google_storage_default_object_acl":            storage.ResourceStorageDefaultObjectAcl(),
	"google_storage_notification":                  storage.ResourceStorageNotification(),
	"google_storage_transfer_job":                  storagetransfer.ResourceStorageTransferJob(),
	"google_tags_location_tag_binding":             tags.ResourceTagsLocationTagBinding(),
	// ####### END handwritten resources ###########
}

var handwrittenIAMResources = map[string]*schema.Resource{
	// ####### START non-generated IAM resources ###########
	"google_bigtable_instance_iam_binding":         tpgiamresource.ResourceIamBinding(bigtable.IamBigtableInstanceSchema, bigtable.NewBigtableInstanceUpdater, bigtable.BigtableInstanceIdParseFunc),
	"google_bigtable_instance_iam_member":          tpgiamresource.ResourceIamMember(bigtable.IamBigtableInstanceSchema, bigtable.NewBigtableInstanceUpdater, bigtable.BigtableInstanceIdParseFunc),
	"google_bigtable_instance_iam_policy":          tpgiamresource.ResourceIamPolicy(bigtable.IamBigtableInstanceSchema, bigtable.NewBigtableInstanceUpdater, bigtable.BigtableInstanceIdParseFunc),
	"google_bigtable_table_iam_binding":            tpgiamresource.ResourceIamBinding(bigtable.IamBigtableTableSchema, bigtable.NewBigtableTableUpdater, bigtable.BigtableTableIdParseFunc),
	"google_bigtable_table_iam_member":             tpgiamresource.ResourceIamMember(bigtable.IamBigtableTableSchema, bigtable.NewBigtableTableUpdater, bigtable.BigtableTableIdParseFunc),
	"google_bigtable_table_iam_policy":             tpgiamresource.ResourceIamPolicy(bigtable.IamBigtableTableSchema, bigtable.NewBigtableTableUpdater, bigtable.BigtableTableIdParseFunc),
	"google_bigquery_dataset_iam_binding":          tpgiamresource.ResourceIamBinding(bigquery.IamBigqueryDatasetSchema, bigquery.NewBigqueryDatasetIamUpdater, bigquery.BigqueryDatasetIdParseFunc),
	"google_bigquery_dataset_iam_member":           tpgiamresource.ResourceIamMember(bigquery.IamBigqueryDatasetSchema, bigquery.NewBigqueryDatasetIamUpdater, bigquery.BigqueryDatasetIdParseFunc),
	"google_bigquery_dataset_iam_policy":           tpgiamresource.ResourceIamPolicy(bigquery.IamBigqueryDatasetSchema, bigquery.NewBigqueryDatasetIamUpdater, bigquery.BigqueryDatasetIdParseFunc),
	"google_billing_account_iam_binding":           tpgiamresource.ResourceIamBinding(billing.IamBillingAccountSchema, billing.NewBillingAccountIamUpdater, billing.BillingAccountIdParseFunc),
	"google_billing_account_iam_member":            tpgiamresource.ResourceIamMember(billing.IamBillingAccountSchema, billing.NewBillingAccountIamUpdater, billing.BillingAccountIdParseFunc),
	"google_billing_account_iam_policy":            tpgiamresource.ResourceIamPolicy(billing.IamBillingAccountSchema, billing.NewBillingAccountIamUpdater, billing.BillingAccountIdParseFunc),
	"google_dataproc_cluster_iam_binding":          tpgiamresource.ResourceIamBinding(dataproc.IamDataprocClusterSchema, dataproc.NewDataprocClusterUpdater, dataproc.DataprocClusterIdParseFunc),
	"google_dataproc_cluster_iam_member":           tpgiamresource.ResourceIamMember(dataproc.IamDataprocClusterSchema, dataproc.NewDataprocClusterUpdater, dataproc.DataprocClusterIdParseFunc),
	"google_dataproc_cluster_iam_policy":           tpgiamresource.ResourceIamPolicy(dataproc.IamDataprocClusterSchema, dataproc.NewDataprocClusterUpdater, dataproc.DataprocClusterIdParseFunc),
	"google_dataproc_job_iam_binding":              tpgiamresource.ResourceIamBinding(dataproc.IamDataprocJobSchema, dataproc.NewDataprocJobUpdater, dataproc.DataprocJobIdParseFunc),
	"google_dataproc_job_iam_member":               tpgiamresource.ResourceIamMember(dataproc.IamDataprocJobSchema, dataproc.NewDataprocJobUpdater, dataproc.DataprocJobIdParseFunc),
	"google_dataproc_job_iam_policy":               tpgiamresource.ResourceIamPolicy(dataproc.IamDataprocJobSchema, dataproc.NewDataprocJobUpdater, dataproc.DataprocJobIdParseFunc),
	"google_folder_iam_binding":                    tpgiamresource.ResourceIamBinding(resourcemanager.IamFolderSchema, resourcemanager.NewFolderIamUpdater, resourcemanager.FolderIdParseFunc),
	"google_folder_iam_member":                     tpgiamresource.ResourceIamMember(resourcemanager.IamFolderSchema, resourcemanager.NewFolderIamUpdater, resourcemanager.FolderIdParseFunc),
	"google_folder_iam_policy":                     tpgiamresource.ResourceIamPolicy(resourcemanager.IamFolderSchema, resourcemanager.NewFolderIamUpdater, resourcemanager.FolderIdParseFunc),
	"google_folder_iam_audit_config":               tpgiamresource.ResourceIamAuditConfig(resourcemanager.IamFolderSchema, resourcemanager.NewFolderIamUpdater, resourcemanager.FolderIdParseFunc),
	"google_healthcare_dataset_iam_binding":        tpgiamresource.ResourceIamBinding(healthcare.IamHealthcareDatasetSchema, healthcare.NewHealthcareDatasetIamUpdater, healthcare.DatasetIdParseFunc, tpgiamresource.IamWithBatching),
	"google_healthcare_dataset_iam_member":         tpgiamresource.ResourceIamMember(healthcare.IamHealthcareDatasetSchema, healthcare.NewHealthcareDatasetIamUpdater, healthcare.DatasetIdParseFunc, tpgiamresource.IamWithBatching),
	"google_healthcare_dataset_iam_policy":         tpgiamresource.ResourceIamPolicy(healthcare.IamHealthcareDatasetSchema, healthcare.NewHealthcareDatasetIamUpdater, healthcare.DatasetIdParseFunc),
	"google_healthcare_dicom_store_iam_binding":    tpgiamresource.ResourceIamBinding(healthcare.IamHealthcareDicomStoreSchema, healthcare.NewHealthcareDicomStoreIamUpdater, healthcare.DicomStoreIdParseFunc, tpgiamresource.IamWithBatching),
	"google_healthcare_dicom_store_iam_member":     tpgiamresource.ResourceIamMember(healthcare.IamHealthcareDicomStoreSchema, healthcare.NewHealthcareDicomStoreIamUpdater, healthcare.DicomStoreIdParseFunc, tpgiamresource.IamWithBatching),
	"google_healthcare_dicom_store_iam_policy":     tpgiamresource.ResourceIamPolicy(healthcare.IamHealthcareDicomStoreSchema, healthcare.NewHealthcareDicomStoreIamUpdater, healthcare.DicomStoreIdParseFunc),
	"google_healthcare_fhir_store_iam_binding":     tpgiamresource.ResourceIamBinding(healthcare.IamHealthcareFhirStoreSchema, healthcare.NewHealthcareFhirStoreIamUpdater, healthcare.FhirStoreIdParseFunc, tpgiamresource.IamWithBatching),
	"google_healthcare_fhir_store_iam_member":      tpgiamresource.ResourceIamMember(healthcare.IamHealthcareFhirStoreSchema, healthcare.NewHealthcareFhirStoreIamUpdater, healthcare.FhirStoreIdParseFunc, tpgiamresource.IamWithBatching),
	"google_healthcare_fhir_store_iam_policy":      tpgiamresource.ResourceIamPolicy(healthcare.IamHealthcareFhirStoreSchema, healthcare.NewHealthcareFhirStoreIamUpdater, healthcare.FhirStoreIdParseFunc),
	"google_healthcare_hl7_v2_store_iam_binding":   tpgiamresource.ResourceIamBinding(healthcare.IamHealthcareHl7V2StoreSchema, healthcare.NewHealthcareHl7V2StoreIamUpdater, healthcare.Hl7V2StoreIdParseFunc, tpgiamresource.IamWithBatching),
	"google_healthcare_hl7_v2_store_iam_member":    tpgiamresource.ResourceIamMember(healthcare.IamHealthcareHl7V2StoreSchema, healthcare.NewHealthcareHl7V2StoreIamUpdater, healthcare.Hl7V2StoreIdParseFunc, tpgiamresource.IamWithBatching),
	"google_healthcare_hl7_v2_store_iam_policy":    tpgiamresource.ResourceIamPolicy(healthcare.IamHealthcareHl7V2StoreSchema, healthcare.NewHealthcareHl7V2StoreIamUpdater, healthcare.Hl7V2StoreIdParseFunc),
	"google_kms_key_ring_iam_binding":              tpgiamresource.ResourceIamBinding(kms.IamKmsKeyRingSchema, kms.NewKmsKeyRingIamUpdater, kms.KeyRingIdParseFunc),
	"google_kms_key_ring_iam_member":               tpgiamresource.ResourceIamMember(kms.IamKmsKeyRingSchema, kms.NewKmsKeyRingIamUpdater, kms.KeyRingIdParseFunc),
	"google_kms_key_ring_iam_policy":               tpgiamresource.ResourceIamPolicy(kms.IamKmsKeyRingSchema, kms.NewKmsKeyRingIamUpdater, kms.KeyRingIdParseFunc),
	"google_kms_crypto_key_iam_binding":            tpgiamresource.ResourceIamBinding(kms.IamKmsCryptoKeySchema, kms.NewKmsCryptoKeyIamUpdater, kms.CryptoIdParseFunc),
	"google_kms_crypto_key_iam_member":             tpgiamresource.ResourceIamMember(kms.IamKmsCryptoKeySchema, kms.NewKmsCryptoKeyIamUpdater, kms.CryptoIdParseFunc),
	"google_kms_crypto_key_iam_policy":             tpgiamresource.ResourceIamPolicy(kms.IamKmsCryptoKeySchema, kms.NewKmsCryptoKeyIamUpdater, kms.CryptoIdParseFunc),
	"google_spanner_instance_iam_binding":          tpgiamresource.ResourceIamBinding(spanner.IamSpannerInstanceSchema, spanner.NewSpannerInstanceIamUpdater, spanner.SpannerInstanceIdParseFunc),
	"google_spanner_instance_iam_member":           tpgiamresource.ResourceIamMember(spanner.IamSpannerInstanceSchema, spanner.NewSpannerInstanceIamUpdater, spanner.SpannerInstanceIdParseFunc),
	"google_spanner_instance_iam_policy":           tpgiamresource.ResourceIamPolicy(spanner.IamSpannerInstanceSchema, spanner.NewSpannerInstanceIamUpdater, spanner.SpannerInstanceIdParseFunc),
	"google_spanner_database_iam_binding":          tpgiamresource.ResourceIamBinding(spanner.IamSpannerDatabaseSchema, spanner.NewSpannerDatabaseIamUpdater, spanner.SpannerDatabaseIdParseFunc),
	"google_spanner_database_iam_member":           tpgiamresource.ResourceIamMember(spanner.IamSpannerDatabaseSchema, spanner.NewSpannerDatabaseIamUpdater, spanner.SpannerDatabaseIdParseFunc),
	"google_spanner_database_iam_policy":           tpgiamresource.ResourceIamPolicy(spanner.IamSpannerDatabaseSchema, spanner.NewSpannerDatabaseIamUpdater, spanner.SpannerDatabaseIdParseFunc),
	"google_organization_iam_binding":              tpgiamresource.ResourceIamBinding(resourcemanager.IamOrganizationSchema, resourcemanager.NewOrganizationIamUpdater, resourcemanager.OrgIdParseFunc),
	"google_organization_iam_member":               tpgiamresource.ResourceIamMember(resourcemanager.IamOrganizationSchema, resourcemanager.NewOrganizationIamUpdater, resourcemanager.OrgIdParseFunc),
	"google_organization_iam_policy":               tpgiamresource.ResourceIamPolicy(resourcemanager.IamOrganizationSchema, resourcemanager.NewOrganizationIamUpdater, resourcemanager.OrgIdParseFunc),
	"google_organization_iam_audit_config":         tpgiamresource.ResourceIamAuditConfig(resourcemanager.IamOrganizationSchema, resourcemanager.NewOrganizationIamUpdater, resourcemanager.OrgIdParseFunc),
	"google_project_iam_policy":                    tpgiamresource.ResourceIamPolicy(resourcemanager.IamProjectSchema, resourcemanager.NewProjectIamUpdater, resourcemanager.ProjectIdParseFunc),
	"google_project_iam_binding":                   tpgiamresource.ResourceIamBinding(resourcemanager.IamProjectSchema, resourcemanager.NewProjectIamUpdater, resourcemanager.ProjectIdParseFunc, tpgiamresource.IamWithBatching),
	"google_project_iam_member":                    tpgiamresource.ResourceIamMember(resourcemanager.IamProjectSchema, resourcemanager.NewProjectIamUpdater, resourcemanager.ProjectIdParseFunc, tpgiamresource.IamWithBatching),
	"google_project_iam_audit_config":              tpgiamresource.ResourceIamAuditConfig(resourcemanager.IamProjectSchema, resourcemanager.NewProjectIamUpdater, resourcemanager.ProjectIdParseFunc, tpgiamresource.IamWithBatching),
	"google_pubsub_subscription_iam_binding":       tpgiamresource.ResourceIamBinding(pubsub.IamPubsubSubscriptionSchema, pubsub.NewPubsubSubscriptionIamUpdater, pubsub.PubsubSubscriptionIdParseFunc),
	"google_pubsub_subscription_iam_member":        tpgiamresource.ResourceIamMember(pubsub.IamPubsubSubscriptionSchema, pubsub.NewPubsubSubscriptionIamUpdater, pubsub.PubsubSubscriptionIdParseFunc),
	"google_pubsub_subscription_iam_policy":        tpgiamresource.ResourceIamPolicy(pubsub.IamPubsubSubscriptionSchema, pubsub.NewPubsubSubscriptionIamUpdater, pubsub.PubsubSubscriptionIdParseFunc),
	"google_service_account_iam_binding":           tpgiamresource.ResourceIamBinding(resourcemanager.IamServiceAccountSchema, resourcemanager.NewServiceAccountIamUpdater, resourcemanager.ServiceAccountIdParseFunc),
	"google_service_account_iam_member":            tpgiamresource.ResourceIamMember(resourcemanager.IamServiceAccountSchema, resourcemanager.NewServiceAccountIamUpdater, resourcemanager.ServiceAccountIdParseFunc),
	"google_service_account_iam_policy":            tpgiamresource.ResourceIamPolicy(resourcemanager.IamServiceAccountSchema, resourcemanager.NewServiceAccountIamUpdater, resourcemanager.ServiceAccountIdParseFunc),
	// ####### END non-generated IAM resources ###########
}
