<% autogen_exception -%>
package google

import (
	"testing"

	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/resource"
)

<% unless version == 'ga' -%>
func TestAccComputeRegionNetworkEndpointGroup_negWithServerlessDeployment(t *testing.T) {
	t.Parallel()

	context := map[string]interface{}{
		"random_suffix": randString(t, 10),
	}

	vcrTest(t, resource.TestCase{
		PreCheck:     func() { testAccPreCheck(t) },
		Providers:    testAccProviders,
		CheckDestroy: testAccCheckComputeRegionNetworkEndpointGroupDestroyProducer(t),
		Steps: []resource.TestStep{
			{
				Config: testAccComputeRegionNetworkEndpointGroup_negWithServerlessDeployment(context),
			},
			{
				ResourceName:            "google_compute_region_network_endpoint_group.cloudrun_serverless_neg",
				ImportState:             true,
				ImportStateVerify:       true,
				ImportStateVerifyIgnore: []string{"region"},
			},
		},
	})
}
<% end -%>

<% unless version == 'ga' -%>
func testAccComputeRegionNetworkEndpointGroup_negWithServerlessDeployment(context map[string]interface{}) string {
	return Nprintf(`
resource "google_compute_region_network_endpoint_group" "cloudrun_serverless_neg" {
  name                  = "tf-test-cloudrun-serverless-neg%{random_suffix}"
  network_endpoint_type = "SERVERLESS"
  region                = "us-central1"
  serverless_deployment {
    platform = "run.googleapis.com"
    resource = google_cloud_run_service.cloudrun_serverless_neg.name
	url_mask = "/"
  }
}

resource "google_cloud_run_service" "cloudrun_serverless_neg" {
  name     = "tf-test-cloudrun-serverless-neg%{random_suffix}"
  location = "us-central1"

  template {
    spec {
      containers {
        image = "us-docker.pkg.dev/cloudrun/container/hello"
      }
    }
  }

  traffic {
    percent         = 100
    latest_revision = true
  }
}
`, context)
}
<% end -%>