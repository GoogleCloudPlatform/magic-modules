<% autogen_exception -%>
package google

<% unless version == 'ga' %>

import (
	"fmt"
	"testing"

	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/resource"
)

func TestAccNotebooksRuntime_create_container(t *testing.T) {
	t.Parallel()

	prefix := fmt.Sprintf("%d", randInt(t))
	name := fmt.Sprintf("tf-%s", prefix)

	vcrTest(t, resource.TestCase{
		Providers: testAccProviders,
		Steps: []resource.TestStep{
			{
				Config: testAccNotebooksRuntime_create_container(name),
			},
			{
				ResourceName:       "google_notebooks_runtime.runtime_container",
				ImportState:        true,
				ImportStateVerify:  true,
				ExpectNonEmptyPlan: true,
				ImportStateVerifyIgnore: []string{"virtual_machine", "container_images", "metadata"},
			},
      # {
			# 	ResourceName:       "google_notebooks_runtime_iam_binding.runtime_container",
			# 	ImportState:        true,
			# 	ImportStateVerify:  true,
			# 	ExpectNonEmptyPlan: true,
			# 	ImportStateVerifyIgnore: []string{"virtual_machine", "container_images", "metadata"},
			# },
		},
	})
}

func testAccNotebooksRuntime_create_container(name string) string {
	return fmt.Sprintf(`

resource "google_notebooks_runtime" "runtime_container" {
  name = "%s"
  location = "us-central1"
  access_config {
    access_type = "SINGLE_USER"
    runtime_owner = "admin@hashicorptest.com"
  }
  virtual_machine {
    virtual_machine_config {
      machine_type = "n1-standard-4"
      data_disk {
        initialize_params {
          disk_size_gb = "100"
          disk_type = "PD_STANDARD"
        }
      }
      container_images {
        repository = "gcr.io/deeplearning-platform-release/base-cpu"
        tag = "latest"
      }
      container_images {
        repository = "gcr.io/deeplearning-platform-release/beam-notebooks"
        tag = "latest"
      }
    }
  }
}
`, name)
}

<% end -%>
