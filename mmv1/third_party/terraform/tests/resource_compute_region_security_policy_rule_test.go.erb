<% autogen_exception -%>
package google
<% unless version == 'ga' -%>

import (
	"testing"
	"github.com/hashicorp/terraform-provider-google/google/acctest"

	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/resource"
)

func TestAccComputeRegionSecurityPolicyRule_regionSecurityPolicyRuleBasicUpdateExample(t *testing.T) {
	t.Parallel()

	context := map[string]interface{}{
		"random_suffix": RandString(t, 10),
	}

	VcrTest(t, resource.TestCase{
		PreCheck:                 func() { acctest.AccTestPreCheck(t) },
		ProtoV5ProviderFactories: ProtoV5ProviderFactories(t),
		CheckDestroy:             testAccCheckComputeRegionSecurityPolicyRuleDestroyProducer(t),
		Steps: []resource.TestStep{
			{
				Config: testAccComputeRegionSecurityPolicyRule_regionSecurityPolicyRulePreUpdateExample(context),
			},
      {
        ResourceName:      "google_compute_region_security_policy_rule.policy_rule",
        ImportState:       true,
        ImportStateVerify: true,
      },
      {
        Config: testAccComputeRegionSecurityPolicyRule_regionSecurityPolicyRulePostUpdateExample(context),
      },
      {
        ResourceName:      "google_compute_region_security_policy_rule.policy_rule",
        ImportState:       true,
        ImportStateVerify: true,
      },
		},
	})
}

func testAccComputeRegionSecurityPolicyRule_regionSecurityPolicyRulePreUpdateExample(context map[string]interface{}) string {
	return Nprintf(`
resource "google_compute_region_security_policy" "default" {
  region      = "asia-southeast1"
  name        = "tf-test%{random_suffix}"
  description = "basic region security policy"
  type        = "CLOUD_ARMOR"
}

resource "google_compute_region_security_policy_rule" "policy_rule" {
  security_policy = google_compute_region_security_policy.default.name
  region          = "asia-southeast1"
  description     = "basic rule pre update"
  action          = "allow"
  priority        = 100
  preview         = false
  rule_number     = "154"
  match {
    versioned_expr = "SRC_IPS_V1"
    config {
      src_ip_ranges = ["192.168.0.0/16", "10.0.0.0/8"]
    }
  }
}
`, context)
}

func testAccComputeRegionSecurityPolicyRule_regionSecurityPolicyRulePostUpdateExample(context map[string]interface{}) string {
	return Nprintf(`
  resource "google_compute_region_security_policy" "default" {
    region      = "asia-southeast1"
    name        = "tf-test%{random_suffix}"
    description = "basic region security policy"
    type        = "CLOUD_ARMOR"
  }
  
  resource "google_compute_region_security_policy_rule" "policy_rule" {
    security_policy = google_compute_region_security_policy.default.name
    region          = "asia-southeast1"
    description     = "basic rule post update"
    action          = "deny(403)"
    priority        = 100
    preview         = true
    rule_number     = "154"
    match {
      versioned_expr = "SRC_IPS_V1"
      config {
        src_ip_ranges = ["172.16.0.0/12"]
      }
    }
  }
`, context)
}
<% end -%>
