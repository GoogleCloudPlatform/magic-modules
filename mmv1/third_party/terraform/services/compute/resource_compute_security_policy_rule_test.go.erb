<% autogen_exception -%>
package compute_test
<% unless version == 'ga' -%>

import (
	"testing"
	"github.com/hashicorp/terraform-provider-google/google/acctest"

	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/resource"
)

func TestAccComputeSecurityPolicyRule_basicUpdate(t *testing.T) {
	t.Parallel()

	context := map[string]interface{}{
		"random_suffix": acctest.RandString(t, 10),
	}

	acctest.VcrTest(t, resource.TestCase{
		PreCheck:                 func() { acctest.AccTestPreCheck(t) },
		ProtoV5ProviderFactories: acctest.ProtoV5ProviderFactories(t),
		CheckDestroy:             testAccCheckComputeSecurityPolicyRuleDestroyProducer(t),
		Steps: []resource.TestStep{
			{
				Config: testAccComputeSecurityPolicyRule_preUpdate(context),
			},
      {
        ResourceName:      "google_compute_security_policy_rule.policy_rule",
        ImportState:       true,
        ImportStateVerify: true,
      },
      {
        Config: testAccComputeSecurityPolicyRule_postUpdate(context),
      },
      {
        ResourceName:      "google_compute_security_policy_rule.policy_rule",
        ImportState:       true,
        ImportStateVerify: true,
      },
		},
	})
}

func testAccComputeSecurityPolicyRule_preUpdate(context map[string]interface{}) string {
	return acctest.Nprintf(`
resource "google_compute_security_policy" "default" {
  name        = "tf-test%{random_suffix}"
  description = "basic global security policy"
  type        = "CLOUD_ARMOR"
}

resource "google_compute_security_policy_rule" "policy_rule" {
  security_policy = google_compute_security_policy.default.name
  description     = "basic rule pre update"
  action          = "allow"
  priority        = 100
  preview         = false
  match {
    versioned_expr = "SRC_IPS_V1"
    config {
      src_ip_ranges = ["192.168.0.0/16", "10.0.0.0/8"]
    }
  }
}
`, context)
}

func testAccComputeSecurityPolicyRule_postUpdate(context map[string]interface{}) string {
	return acctest.Nprintf(`
resource "google_compute_security_policy" "default" {
  name        = "tf-test%{random_suffix}"
  description = "basic global security policy"
  type        = "CLOUD_ARMOR"
}

resource "google_compute_security_policy_rule" "policy_rule" {
  security_policy = google_compute_security_policy.default.name
  description     = "basic rule post update"
  action          = "deny(403)"
  priority        = 100
  preview         = true
  match {
    versioned_expr = "SRC_IPS_V1"
    config {
      src_ip_ranges = ["172.16.0.0/12"]
    }
  }
}
`, context)
}
<% end -%>
