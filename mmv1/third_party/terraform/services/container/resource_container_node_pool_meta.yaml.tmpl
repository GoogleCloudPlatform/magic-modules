resource: 'google_container_node_pool'
generation_type: 'handwritten'
api_service_name: 'container.googleapis.com'
{{- if ne $.TargetVersionName "ga" }}
api_version: 'v1beta1'
{{- else }}
api_version: 'v1'
{{- end }}
api_resource_type_kind: 'NodePool'
fields:
  - api_field: 'autoscaling.locationPolicy'
  - api_field: 'autoscaling.maxNodeCount'
  - api_field: 'autoscaling.minNodeCount'
  - api_field: 'autoscaling.totalMaxNodeCount'
  - api_field: 'autoscaling.totalMinNodeCount'
  - field: 'cluster'
  - api_field: 'initialNodeCount'
  - api_field: 'instanceGroupUrls'
  - field: 'location'
  - field: 'managed_instance_group_urls'
    provider_only: true
  - api_field: 'management.autoRepair'
  - api_field: 'management.autoUpgrade'
  - field: 'max_pods_per_node'
    api_field: 'maxPodsConstraint.maxPodsPerNode'
  - api_field: 'name'
  - field: 'name_prefix'
    provider_only: true
  - api_field: 'networkConfig.additionalNodeNetworkConfigs.network'
  - api_field: 'networkConfig.additionalNodeNetworkConfigs.subnetwork'
  - field: 'network_config.additional_pod_network_configs.max_pods_per_node'
    api_field: 'networkConfig.additionalPodNetworkConfigs.maxPodsPerNode.maxPodsPerNode'
  - api_field: 'networkConfig.additionalPodNetworkConfigs.secondaryPodRange'
  - api_field: 'networkConfig.additionalPodNetworkConfigs.subnetwork'
  - api_field: 'networkConfig.createPodRange'
  - api_field: 'networkConfig.enablePrivateNodes'
  - api_field: 'networkConfig.networkPerformanceConfig.totalEgressBandwidthTier'
  - field: 'network_config.pod_cidr_overprovision_config.disabled'
    api_field: 'networkConfig.podCidrOverprovisionConfig.disable'
  - api_field: 'networkConfig.podIpv4CidrBlock'
  - api_field: 'networkConfig.podRange'
  - api_field: 'networkConfig.subnetwork'
  - field: 'node_config.advanced_machine_features.enable_nested_virtualization'
    api_field: 'config.advancedMachineFeatures.enableNestedVirtualization'
  - field: 'node_config.advanced_machine_features.performance_monitoring_unit'
    api_field: 'config.advancedMachineFeatures.performanceMonitoringUnit'
  - field: 'node_config.advanced_machine_features.threads_per_core'
    api_field: 'config.advancedMachineFeatures.threadsPerCore'
  - field: 'node_config.boot_disk_kms_key'
    api_field: 'config.bootDiskKmsKey'
  - field: 'node_config.boot_disk.disk_type'
    api_field: 'config.bootDisk.diskType'
  - field: 'node_config.boot_disk.provisioned_iops'
    api_field: 'config.bootDisk.provisionedIops'
  - field: 'node_config.boot_disk.provisioned_throughput'
    api_field: 'config.bootDisk.provisionedThroughput'
  - field: 'node_config.boot_disk.size_gb'
    api_field: 'config.bootDisk.sizeGb'
  - field: 'node_config.confidential_nodes.enabled'
    api_field: 'config.confidentialNodes.enabled'
  - field: 'node_config.confidential_nodes.confidential_instance_type'
    api_field: 'config.confidentialNodes.confidentialInstanceType'
  - field: 'node_config.containerd_config.private_registry_access_config.certificate_authority_domain_config.fqdns'
    api_field: 'config.containerdConfig.privateRegistryAccessConfig.certificateAuthorityDomainConfig.fqdns'
  - field: 'node_config.containerd_config.private_registry_access_config.certificate_authority_domain_config.gcp_secret_manager_certificate_config.secret_uri'
    api_field: 'config.containerdConfig.privateRegistryAccessConfig.certificateAuthorityDomainConfig.gcpSecretManagerCertificateConfig.secretUri'
  - field: 'node_config.containerd_config.private_registry_access_config.enabled'
    api_field: 'config.containerdConfig.privateRegistryAccessConfig.enabled'
  - field: 'node_config.disk_size_gb'
    api_field: 'config.diskSizeGb'
  - field: 'node_config.disk_type'
    api_field: 'config.diskType'
  - field: 'node_config.effective_taints.effect'
    provider_only: true
  - field: 'node_config.effective_taints.key'
    provider_only: true
  - field: 'node_config.effective_taints.value'
    provider_only: true
  - field: 'node_config.enable_confidential_storage'
    api_field: 'config.enableConfidentialStorage'
{{- if ne $.TargetVersionName "ga" }}
  - field: 'node_config.ephemeral_storage_config.local_ssd_count'
    api_field: 'config.ephemeralStorageConfig.localSsdCount'
{{- end }}
  - field: 'node_config.ephemeral_storage_local_ssd_config.data_cache_count'
    api_field: 'config.ephemeralStorageLocalSsdConfig.dataCacheCount'
  - field: 'node_config.ephemeral_storage_local_ssd_config.local_ssd_count'
    api_field: 'config.ephemeralStorageLocalSsdConfig.localSsdCount'
  - field: 'node_config.fast_socket.enabled'
    api_field: 'config.fastSocket.enabled'
  - field: node_config.flex_start
    api_field: 'config.flexStart'
  - field: 'node_config.gcfs_config.enabled'
    api_field: 'config.gcfsConfig.enabled'
  - field: 'node_config.guest_accelerator.count'
    api_field: 'config.accelerators.acceleratorCount'
  - field: 'node_config.guest_accelerator.gpu_driver_installation_config.gpu_driver_version'
    api_field: 'config.accelerators.gpuDriverInstallationConfig.gpuDriverVersion'
  - field: 'node_config.guest_accelerator.gpu_partition_size'
    api_field: 'config.accelerators.gpuPartitionSize'
  - field: 'node_config.guest_accelerator.gpu_sharing_config.gpu_sharing_strategy'
    api_field: 'config.accelerators.gpuSharingConfig.gpuSharingStrategy'
  - field: 'node_config.guest_accelerator.gpu_sharing_config.max_shared_clients_per_gpu'
    api_field: 'config.accelerators.gpuSharingConfig.maxSharedClientsPerGpu'
  - field: 'node_config.guest_accelerator.type'
    api_field: 'config.accelerators.acceleratorType'
  - field: 'node_config.gvnic.enabled'
    api_field: 'config.gvnic.enabled'
  - field: 'node_config.host_maintenance_policy.maintenance_interval'
    api_field: 'config.hostMaintenancePolicy.maintenanceInterval'
  - field: 'node_config.image_type'
    api_field: 'config.imageType'
  - field: 'node_config.kubelet_config.allowed_unsafe_sysctls'
    api_field: 'config.kubeletConfig.allowedUnsafeSysctls'
  - field: 'node_config.kubelet_config.container_log_max_files'
    api_field: 'config.kubeletConfig.containerLogMaxFiles'
  - field: 'node_config.kubelet_config.container_log_max_size'
    api_field: 'config.kubeletConfig.containerLogMaxSize'
  - field: 'node_config.kubelet_config.cpu_cfs_quota'
    api_field: 'config.kubeletConfig.cpuCfsQuota'
  - field: 'node_config.kubelet_config.cpu_cfs_quota_period'
    api_field: 'config.kubeletConfig.cpuCfsQuotaPeriod'
  - field: 'node_config.kubelet_config.cpu_manager_policy'
    api_field: 'config.kubeletConfig.cpuManagerPolicy'
  - field: 'node_config.kubelet_config.eviction_max_pod_grace_period_seconds'
    api_field: 'config.kubeletConfig.evictionMaxPodGracePeriodSeconds'
  - field: 'node_config.kubelet_config.eviction_minimum_reclaim.imagefs_available'
    api_field: 'config.kubeletConfig.evictionMinimumReclaim.imagefsAvailable'
  - field: 'node_config.kubelet_config.eviction_minimum_reclaim.imagefs_inodes_free'
    api_field: 'config.kubeletConfig.evictionMinimumReclaim.imagefsInodesFree'
  - field: 'node_config.kubelet_config.eviction_minimum_reclaim.memory_available'
    api_field: 'config.kubeletConfig.evictionMinimumReclaim.memoryAvailable'
  - field: 'node_config.kubelet_config.eviction_minimum_reclaim.nodefs_available'
    api_field: 'config.kubeletConfig.evictionMinimumReclaim.nodefsAvailable'
  - field: 'node_config.kubelet_config.eviction_minimum_reclaim.nodefs_inodes_free'
    api_field: 'config.kubeletConfig.evictionMinimumReclaim.nodefsInodesFree'
  - field: 'node_config.kubelet_config.eviction_minimum_reclaim.pid_available'
    api_field: 'config.kubeletConfig.evictionMinimumReclaim.pidAvailable'
  - field: 'node_config.kubelet_config.eviction_soft.imagefs_available'
    api_field: 'config.kubeletConfig.evictionSoft.imagefsAvailable'
  - field: 'node_config.kubelet_config.eviction_soft.imagefs_inodes_free'
    api_field: 'config.kubeletConfig.evictionSoft.imagefsInodesFree'
  - field: 'node_config.kubelet_config.eviction_soft.memory_available'
    api_field: 'config.kubeletConfig.evictionSoft.memoryAvailable'
  - field: 'node_config.kubelet_config.eviction_soft.nodefs_available'
    api_field: 'config.kubeletConfig.evictionSoft.nodefsAvailable'
  - field: 'node_config.kubelet_config.eviction_soft.nodefs_inodes_free'
    api_field: 'config.kubeletConfig.evictionSoft.nodefsInodesFree'
  - field: 'node_config.kubelet_config.eviction_soft.pid_available'
    api_field: 'config.kubeletConfig.evictionSoft.pidAvailable'
  - field: 'node_config.kubelet_config.eviction_soft_grace_period.imagefs_available'
    api_field: 'config.kubeletConfig.evictionSoftGracePeriod.imagefsAvailable'
  - field: 'node_config.kubelet_config.eviction_soft_grace_period.imagefs_inodes_free'
    api_field: 'config.kubeletConfig.evictionSoftGracePeriod.imagefsInodesFree'
  - field: 'node_config.kubelet_config.eviction_soft_grace_period.memory_available'
    api_field: 'config.kubeletConfig.evictionSoftGracePeriod.memoryAvailable'
  - field: 'node_config.kubelet_config.eviction_soft_grace_period.nodefs_available'
    api_field: 'config.kubeletConfig.evictionSoftGracePeriod.nodefsAvailable'
  - field: 'node_config.kubelet_config.eviction_soft_grace_period.nodefs_inodes_free'
    api_field: 'config.kubeletConfig.evictionSoftGracePeriod.nodefsInodesFree'
  - field: 'node_config.kubelet_config.eviction_soft_grace_period.pid_available'
    api_field: 'config.kubeletConfig.evictionSoftGracePeriod.pidAvailable'
  - field: 'node_config.kubelet_config.image_gc_high_threshold_percent'
    api_field: 'config.kubeletConfig.imageGcHighThresholdPercent'
  - field: 'node_config.kubelet_config.image_gc_low_threshold_percent'
    api_field: 'config.kubeletConfig.imageGcLowThresholdPercent'
  - field: 'node_config.kubelet_config.image_maximum_gc_age'
    api_field: 'config.kubeletConfig.imageMaximumGcAge'
  - field: 'node_config.kubelet_config.image_minimum_gc_age'
    api_field: 'config.kubeletConfig.imageMinimumGcAge'
  - field: 'node_config.kubelet_config.insecure_kubelet_readonly_port_enabled'
    api_field: 'config.kubeletConfig.insecureKubeletReadonlyPortEnabled'
  - field: 'node_config.kubelet_config.max_parallel_image_pulls'
    api_field: 'config.kubeletConfig.maxParallelImagePulls'
  - field: 'node_config.kubelet_config.memory_manager.policy'
    api_field: 'config.kubeletConfig.memoryManager.policy'
  - field: 'node_config.kubelet_config.pod_pids_limit'
    api_field: 'config.kubeletConfig.podPidsLimit'
  - field: 'node_config.kubelet_config.single_process_oom_kill'
    api_field: 'config.kubeletConfig.singleProcessOomKill'
  - field: 'node_config.kubelet_config.topology_manager.policy'
    api_field: 'config.kubeletConfig.topologyManager.policy'
  - field: 'node_config.kubelet_config.topology_manager.scope'
    api_field: 'config.kubeletConfig.topologyManager.scope'
  - field: 'node_config.labels'
    api_field: 'config.labels'
  - field: 'node_config.linux_node_config.cgroup_mode'
    api_field: 'config.linuxNodeConfig.cgroupMode'
  - field: 'node_config.linux_node_config.hugepages_config.hugepage_size_1g'
    api_field: 'config.linuxNodeConfig.hugepages.hugepageSize1g'
  - field: 'node_config.linux_node_config.hugepages_config.hugepage_size_2m'
    api_field: 'config.linuxNodeConfig.hugepages.hugepageSize2m'
  - field: 'node_config.linux_node_config.sysctls'
    api_field: 'config.linuxNodeConfig.sysctls'
  - field: 'node_config.linux_node_config.transparent_hugepage_defrag'
    api_field: 'config.linuxNodeConfig.transparentHugepageDefrag'
  - field: 'node_config.linux_node_config.transparent_hugepage_enabled'
    api_field: 'config.linuxNodeConfig.transparentHugepageEnabled'
  - field: 'node_config.local_nvme_ssd_block_config.local_ssd_count'
    api_field: 'config.localNvmeSsdBlockConfig.localSsdCount'
  - field: 'node_config.local_ssd_count'
    api_field: 'config.localSsdCount'
  - field: 'node_config.local_ssd_encryption_mode'
    api_field: 'config.localSsdEncryptionMode'
  - field: 'node_config.logging_variant'
    api_field: 'config.loggingConfig.variantConfig.variant'
  - field: 'node_config.machine_type'
    api_field: 'config.machineType'
  - field: 'node_config.max_run_duration'
    api_field: 'config.maxRunDuration'
  - field: 'node_config.metadata'
    api_field: 'config.metadata'
  - field: 'node_config.min_cpu_platform'
    api_field: 'config.minCpuPlatform'
  - field: 'node_config.node_group'
    api_field: 'config.nodeGroup'
  - field: 'node_config.oauth_scopes'
    api_field: 'config.oauthScopes'
  - field: 'node_config.preemptible'
    api_field: 'config.preemptible'
  - field: 'node_config.reservation_affinity.consume_reservation_type'
    api_field: 'config.reservationAffinity.consumeReservationType'
  - field: 'node_config.reservation_affinity.key'
    api_field: 'config.reservationAffinity.key'
  - field: 'node_config.reservation_affinity.values'
    api_field: 'config.reservationAffinity.values'
  - field: 'node_config.resource_labels'
    api_field: 'config.resourceLabels'
  - field: 'node_config.resource_manager_tags'
    api_field: 'config.resourceManagerTags.tags'
{{- if ne $.TargetVersionName "ga" }}
  - field: 'node_config.sandbox_config.sandbox_type'
    api_field: 'config.sandboxConfig.sandboxType'
{{- end }}
  - field: 'node_config.secondary_boot_disks.disk_image'
    api_field: 'config.secondaryBootDisks.diskImage'
  - field: 'node_config.secondary_boot_disks.mode'
    api_field: 'config.secondaryBootDisks.mode'
  - field: 'node_config.service_account'
    api_field: 'config.serviceAccount'
  - field: 'node_config.shielded_instance_config.enable_integrity_monitoring'
    api_field: 'config.shieldedInstanceConfig.enableIntegrityMonitoring'
  - field: 'node_config.shielded_instance_config.enable_secure_boot'
    api_field: 'config.shieldedInstanceConfig.enableSecureBoot'
  - field: 'node_config.sole_tenant_config.min_node_cpus'
    api_field: 'config.soleTenantConfig.minNodeCpus'
  - field: 'node_config.sole_tenant_config.node_affinity.key'
    api_field: 'config.soleTenantConfig.nodeAffinities.key'
  - field: 'node_config.sole_tenant_config.node_affinity.operator'
    api_field: 'config.soleTenantConfig.nodeAffinities.operator'
  - field: 'node_config.sole_tenant_config.node_affinity.values'
    api_field: 'config.soleTenantConfig.nodeAffinities.values'
  - field: 'node_config.spot'
    api_field: 'config.spot'
  - field: 'node_config.storage_pools'
    api_field: 'config.storagePools'
  - field: 'node_config.tags'
    api_field: 'config.tags'
  - field: 'node_config.taint.effect'
    api_field: 'config.taints.effect'
  - field: 'node_config.taint.key'
    api_field: 'config.taints.key'
  - field: 'node_config.taint.value'
    api_field: 'config.taints.value'
  - field: 'node_config.windows_node_config.osversion'
    api_field: 'config.windowsNodeConfig.osVersion'
  - field: 'node_config.workload_metadata_config.mode'
    api_field: 'config.workloadMetadataConfig.mode'
  - field: 'node_count'
    provider_only: true
  - field: 'node_locations'
    api_field: 'locations'
  - field: 'operation'
  - api_field: 'placementPolicy.policyName'
  - api_field: 'placementPolicy.tpuTopology'
  - api_field: 'placementPolicy.type'
  - field: 'project'
  - api_field: 'queuedProvisioning.enabled'
  - api_field: 'upgradeSettings.blueGreenSettings.nodePoolSoakDuration'
  - api_field: 'upgradeSettings.blueGreenSettings.standardRolloutPolicy.batchNodeCount'
  - api_field: 'upgradeSettings.blueGreenSettings.standardRolloutPolicy.batchPercentage'
  - api_field: 'upgradeSettings.blueGreenSettings.standardRolloutPolicy.batchSoakDuration'
  - api_field: 'upgradeSettings.maxSurge'
  - api_field: 'upgradeSettings.maxUnavailable'
  - api_field: 'upgradeSettings.strategy'
  - api_field: 'version'
