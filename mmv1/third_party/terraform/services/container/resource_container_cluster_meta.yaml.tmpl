resource: 'google_container_cluster'
generation_type: 'handwritten'
api_service_name: 'container.googleapis.com'
{{- if ne $.TargetVersionName "ga" }}
api_version: 'v1beta1'
{{- else }}
api_version: 'v1'
{{- end }}
api_resource_type_kind: 'Cluster'
api_variant_patterns:
  - 'projects/{project}/locations/{location}/clusters/{cluster}'
fields:
  - field: 'addons_config.cloudrun_config.disabled'
    api_field: 'addonsConfig.cloudRunConfig.disabled'
  - field: 'addons_config.cloudrun_config.load_balancer_type'
    api_field: 'addonsConfig.cloudRunConfig.loadBalancerType'
  - api_field: 'addonsConfig.configConnectorConfig.enabled'
  - api_field: 'addonsConfig.dnsCacheConfig.enabled'
  - api_field: 'addonsConfig.gcePersistentDiskCsiDriverConfig.enabled'
  - api_field: 'addonsConfig.gcpFilestoreCsiDriverConfig.enabled'
  - api_field: 'addonsConfig.gcsFuseCsiDriverConfig.enabled'
  - api_field: 'addonsConfig.gkeBackupAgentConfig.enabled'
  - api_field: 'addonsConfig.horizontalPodAutoscaling.disabled'
  - api_field: 'addonsConfig.httpLoadBalancing.disabled'
{{- if ne $.TargetVersionName "ga" }}
  - api_field: 'addonsConfig.istioConfig.auth'
{{- end }}
{{- if ne $.TargetVersionName "ga" }}
  - api_field: 'addonsConfig.istioConfig.disabled'
{{- end }}
{{- if ne $.TargetVersionName "ga" }}
  - api_field: 'addonsConfig.kalmConfig.enabled'
{{- end }}
  - api_field: 'addonsConfig.lustreCsiDriverConfig.enableLegacyLustrePort'
  - api_field: 'addonsConfig.lustreCsiDriverConfig.enabled'
  - api_field: 'addonsConfig.networkPolicyConfig.disabled'
  - api_field: 'addonsConfig.parallelstoreCsiDriverConfig.enabled'
  - api_field: 'addonsConfig.rayOperatorConfig.enabled'
  - api_field: 'addonsConfig.rayOperatorConfig.rayClusterLoggingConfig.enabled'
  - api_field: 'addonsConfig.rayOperatorConfig.rayClusterMonitoringConfig.enabled'
  - api_field: 'addonsConfig.statefulHaConfig.enabled'
  - api_field: 'anonymousAuthenticationConfig.mode'
  - field: 'allow_net_admin'
    api_field: 'autopilot.workloadPolicyConfig.allowNetAdmin'
  - api_field: 'authenticatorGroupsConfig.securityGroup'
  - api_field: 'binaryAuthorization.enabled'
  - api_field: 'binaryAuthorization.evaluationMode'
  - field: 'cluster_autoscaling.auto_provisioning_defaults.boot_disk_kms_key'
    api_field: 'autoscaling.autoprovisioningNodePoolDefaults.bootDiskKmsKey'
  - field: 'cluster_autoscaling.auto_provisioning_defaults.disk_size'
    api_field: 'autoscaling.autoprovisioningNodePoolDefaults.diskSizeGb'
  - field: 'cluster_autoscaling.auto_provisioning_defaults.disk_type'
    api_field: 'autoscaling.autoprovisioningNodePoolDefaults.diskType'
  - field: 'cluster_autoscaling.auto_provisioning_defaults.image_type'
    api_field: 'autoscaling.autoprovisioningNodePoolDefaults.imageType'
  - field: 'cluster_autoscaling.auto_provisioning_defaults.management.auto_repair'
    api_field: 'autoscaling.autoprovisioningNodePoolDefaults.management.autoRepair'
  - field: 'cluster_autoscaling.auto_provisioning_defaults.management.auto_upgrade'
    api_field: 'autoscaling.autoprovisioningNodePoolDefaults.management.autoUpgrade'
  - field: 'cluster_autoscaling.auto_provisioning_defaults.management.upgrade_options.auto_upgrade_start_time'
    api_field: 'autoscaling.autoprovisioningNodePoolDefaults.management.upgradeOptions.autoUpgradeStartTime'
  - field: 'cluster_autoscaling.auto_provisioning_defaults.management.upgrade_options.description'
    api_field: 'autoscaling.autoprovisioningNodePoolDefaults.management.upgradeOptions.description'
  - field: 'cluster_autoscaling.auto_provisioning_defaults.min_cpu_platform'
    api_field: 'autoscaling.autoprovisioningNodePoolDefaults.minCpuPlatform'
  - field: 'cluster_autoscaling.auto_provisioning_defaults.oauth_scopes'
    api_field: 'autoscaling.autoprovisioningNodePoolDefaults.oauthScopes'
  - field: 'cluster_autoscaling.auto_provisioning_defaults.service_account'
    api_field: 'autoscaling.autoprovisioningNodePoolDefaults.serviceAccount'
  - field: 'cluster_autoscaling.auto_provisioning_defaults.shielded_instance_config.enable_integrity_monitoring'
    api_field: 'autoscaling.autoprovisioningNodePoolDefaults.shieldedInstanceConfig.enableIntegrityMonitoring'
  - field: 'cluster_autoscaling.auto_provisioning_defaults.shielded_instance_config.enable_secure_boot'
    api_field: 'autoscaling.autoprovisioningNodePoolDefaults.shieldedInstanceConfig.enableSecureBoot'
  - field: 'cluster_autoscaling.auto_provisioning_defaults.upgrade_settings.blue_green_settings.node_pool_soak_duration'
    api_field: 'autoscaling.autoprovisioningNodePoolDefaults.upgradeSettings.blueGreenSettings.nodePoolSoakDuration'
  - field: 'cluster_autoscaling.auto_provisioning_defaults.upgrade_settings.blue_green_settings.standard_rollout_policy.batch_node_count'
    api_field: 'autoscaling.autoprovisioningNodePoolDefaults.upgradeSettings.blueGreenSettings.standardRolloutPolicy.batchNodeCount'
  - field: 'cluster_autoscaling.auto_provisioning_defaults.upgrade_settings.blue_green_settings.standard_rollout_policy.batch_percentage'
    api_field: 'autoscaling.autoprovisioningNodePoolDefaults.upgradeSettings.blueGreenSettings.standardRolloutPolicy.batchPercentage'
  - field: 'cluster_autoscaling.auto_provisioning_defaults.upgrade_settings.blue_green_settings.standard_rollout_policy.batch_soak_duration'
    api_field: 'autoscaling.autoprovisioningNodePoolDefaults.upgradeSettings.blueGreenSettings.standardRolloutPolicy.batchSoakDuration'
  - field: 'cluster_autoscaling.auto_provisioning_defaults.upgrade_settings.max_surge'
    api_field: 'autoscaling.autoprovisioningNodePoolDefaults.upgradeSettings.maxSurge'
  - field: 'cluster_autoscaling.auto_provisioning_defaults.upgrade_settings.max_unavailable'
    api_field: 'autoscaling.autoprovisioningNodePoolDefaults.upgradeSettings.maxUnavailable'
  - field: 'cluster_autoscaling.auto_provisioning_defaults.upgrade_settings.strategy'
    api_field: 'autoscaling.autoprovisioningNodePoolDefaults.upgradeSettings.strategy'
  - field: 'cluster_autoscaling.auto_provisioning_locations'
    api_field: 'autoscaling.autoprovisioningLocations'
  - field: 'cluster_autoscaling.autoscaling_profile'
    api_field: 'autoscaling.autoscalingProfile'
  - field: 'cluster_autoscaling.default_compute_class_enabled'
    api_field: 'autoscaling.defaultComputeClassConfig.enabled'
  - field: 'cluster_autoscaling.enabled'
    api_field: 'autoscaling.enableNodeAutoprovisioning'
  - field: 'cluster_autoscaling.resource_limits.maximum'
    api_field: 'autoscaling.resourceLimits.maximum'
  - field: 'cluster_autoscaling.resource_limits.minimum'
    api_field: 'autoscaling.resourceLimits.minimum'
  - field: 'cluster_autoscaling.resource_limits.resource_type'
    api_field: 'autoscaling.resourceLimits.resourceType'
  - api_field: 'clusterIpv4Cidr'
{{- if ne $.TargetVersionName "ga" }}
  - api_field: 'clusterTelemetry.type'
{{- end }}
  - api_field: 'confidentialNodes.enabled'
  - api_field: 'confidentialNodes.confidentialInstanceType'
  - api_field: 'controlPlaneEndpointsConfig.dnsEndpointConfig.allowExternalTraffic'
  - api_field: 'controlPlaneEndpointsConfig.dnsEndpointConfig.enableK8sCertsViaDns'
  - api_field: 'controlPlaneEndpointsConfig.dnsEndpointConfig.enableK8sTokensViaDns'
  - api_field: 'controlPlaneEndpointsConfig.dnsEndpointConfig.endpoint'
  - api_field: 'controlPlaneEndpointsConfig.ipEndpointsConfig.enabled'
  - api_field: 'costManagementConfig.enabled'
  - api_field: 'databaseEncryption.keyName'
  - api_field: 'databaseEncryption.state'
  - field: 'datapath_provider'
    api_field: 'networkConfig.datapathProvider'
  - field: 'default_max_pods_per_node'
    api_field: 'defaultMaxPodsConstraint.maxPodsPerNode'
  - field: 'default_snat_status.disabled'
    api_field: 'networkConfig.defaultSnatStatus.disabled'
  - field: 'deletion_protection'
    provider_only: true
  - api_field: 'description'
  - field: 'dns_config.additive_vpc_scope_dns_domain'
    api_field: 'networkConfig.dnsConfig.additiveVpcScopeDnsDomain'
  - field: 'dns_config.cluster_dns'
    api_field: 'networkConfig.dnsConfig.clusterDns'
  - field: 'dns_config.cluster_dns_domain'
    api_field: 'networkConfig.dnsConfig.clusterDnsDomain'
  - field: 'dns_config.cluster_dns_scope'
    api_field: 'networkConfig.dnsConfig.clusterDnsScope'
  - field: 'effective_labels'
    provider_only: true
  - field: 'enable_autopilot'
    api_field: 'autopilot.enabled'
  - field: 'enable_cilium_clusterwide_network_policy'
    api_field: 'networkConfig.enableCiliumClusterwideNetworkPolicy'
  - field: 'enable_fqdn_network_policy'
    api_field: 'networkConfig.enableFqdnNetworkPolicy'
  - field: 'enable_intranode_visibility'
    api_field: 'networkConfig.enableIntraNodeVisibility'
  - api_field: 'enableK8sBetaApis.enabledApis'
  - api_field: 'enableKubernetesAlpha'
  - field: 'enable_l4_ilb_subsetting'
    api_field: 'networkConfig.enableL4ilbSubsetting'
  - field: 'disable_l4_lb_firewall_reconciliation'
    api_field: 'networkConfig.disableL4LbFirewallReconciliation'
  - field: 'enable_legacy_abac'
    api_field: 'legacyAbac.enabled'
  - field: 'enable_multi_networking'
    api_field: 'networkConfig.enableMultiNetworking'
  - field: 'enable_shielded_nodes'
    api_field: 'shieldedNodes.enabled'
  - api_field: 'enableTpu'
  - api_field: 'endpoint'
  - api_field: 'enterpriseConfig.clusterTier'
  - api_field: 'enterpriseConfig.desiredTier'
  - api_field: 'fleet.membership'
  - field: 'fleet.membership_id'
    provider_only: true
  - field: 'fleet.membership_location'
    provider_only: true
  - api_field: 'fleet.membershipType'
  - api_field: 'fleet.preRegistered'
  - api_field: 'fleet.project'
  - field: 'gateway_api_config.channel'
    api_field: 'networkConfig.gatewayApiConfig.channel'
  - api_field: 'gkeAutoUpgradeConfig.patchMode'
  - api_field: 'identityServiceConfig.enabled'
  - field: 'in_transit_encryption_config'
    api_field: 'networkConfig.inTransitEncryptionConfig'
  - api_field: 'initialNodeCount'
  - api_field: 'ipAllocationPolicy.additionalPodRangesConfig.podRangeNames'
  - field: 'ip_allocation_policy.additional_ip_ranges_config.subnetwork'
  - field: 'ip_allocation_policy.additional_ip_ranges_config.pod_ipv4_range_names'
  - api_field: 'ipAllocationPolicy.autoIpamConfig.enabled'
  - api_field: 'ipAllocationPolicy.clusterIpv4CidrBlock'
  - api_field: 'ipAllocationPolicy.clusterSecondaryRangeName'
  - api_field: 'ipAllocationPolicy.networkTierConfig.networkTier'
  - field: 'ip_allocation_policy.pod_cidr_overprovision_config.disabled'
    api_field: 'ipAllocationPolicy.podCidrOverprovisionConfig.disable'
  - api_field: 'ipAllocationPolicy.servicesIpv4CidrBlock'
  - api_field: 'ipAllocationPolicy.servicesSecondaryRangeName'
  - api_field: 'ipAllocationPolicy.stackType'
  - api_field: 'labelFingerprint'
  - api_field: 'location'
  - field: 'logging_config.enable_components'
    api_field: 'loggingConfig.componentConfig.enableComponents'
  - api_field: 'loggingService'
  - field: 'maintenance_policy.daily_maintenance_window.duration'
    api_field: 'maintenancePolicy.window.dailyMaintenanceWindow.duration'
  - field: 'maintenance_policy.daily_maintenance_window.start_time'
    api_field: 'maintenancePolicy.window.dailyMaintenanceWindow.startTime'
  - field: 'maintenance_policy.maintenance_exclusion.end_time'
    api_field: 'maintenance_policy.window.maintenance_exclusion.end_time'
  - field: 'maintenance_policy.maintenance_exclusion.exclusion_name'
    api_field: 'maintenance_policy.window.maintenance_exclusion.exclusion_name'
  - field: 'maintenance_policy.maintenance_exclusion.exclusion_options.scope'
    api_field: 'maintenance_policy.window.maintenance_exclusion.exclusion_options.scope'
  - field: 'maintenance_policy.maintenance_exclusion.start_time'
    api_field: 'maintenance_policy.window.maintenance_exclusion.start_time'
  - field: 'maintenance_policy.recurring_window.end_time'
    api_field: 'maintenancePolicy.window.recurringWindow.window.endTime'
  - field: 'maintenance_policy.recurring_window.recurrence'
    api_field: 'maintenancePolicy.window.recurringWindow.recurrence'
  - field: 'maintenance_policy.recurring_window.start_time'
    api_field: 'maintenancePolicy.window.recurringWindow.window.startTime'
  - api_field: 'masterAuth.clientCertificate'
  - api_field: 'masterAuth.clientCertificateConfig.issueClientCertificate'
  - api_field: 'masterAuth.clientKey'
  - api_field: 'masterAuth.clusterCaCertificate'
  - api_field: 'masterAuthorizedNetworksConfig.cidrBlocks.cidrBlock'
  - api_field: 'masterAuthorizedNetworksConfig.cidrBlocks.displayName'
  - api_field: 'masterAuthorizedNetworksConfig.gcpPublicCidrsAccessEnabled'
  - api_field: 'masterAuthorizedNetworksConfig.privateEndpointEnforcementEnabled'
  - field: 'master_version'
    api_field: 'currentMasterVersion'
  - api_field: 'meshCertificates.enableCertificates'
  - field: 'min_master_version'
    api_field: 'initialClusterVersion'
  - api_field: 'monitoringConfig.advancedDatapathObservabilityConfig.enableMetrics'
  - api_field: 'monitoringConfig.advancedDatapathObservabilityConfig.enableRelay'
  - field: 'monitoring_config.enable_components'
    api_field: 'monitoringConfig.componentConfig.enableComponents'
  - field: 'monitoring_config.managed_prometheus.auto_monitoring_config.scope'
    api_field: 'monitoringConfig.managedPrometheusConfig.autoMonitoringConfig.scope'
  - field: 'monitoring_config.managed_prometheus.enabled'
    api_field: 'monitoringConfig.managedPrometheusConfig.enabled'
  - api_field: 'monitoringService'
  - api_field: 'name'
  - api_field: 'network'
  - field: 'network_performance_config.total_egress_bandwidth_tier'
    api_field: 'networkConfig.networkPerformanceConfig.totalEgressBandwidthTier'
  - api_field: 'networkPolicy.enabled'
  - api_field: 'networkPolicy.provider'
  - field: 'networking_mode'
    api_field: 'ipAllocationPolicy.useIpAliases'
  - api_field: 'nodeConfig.advancedMachineFeatures.enableNestedVirtualization'
  - api_field: 'nodeConfig.advancedMachineFeatures.performanceMonitoringUnit'
  - api_field: 'nodeConfig.advancedMachineFeatures.threadsPerCore'
  - api_field: 'nodeConfig.bootDiskKmsKey'
  - api_field: 'nodeConfig.bootDisk.diskType'
  - api_field: 'nodeConfig.bootDisk.provisionedIops'
  - api_field: 'nodeConfig.bootDisk.provisionedThroughput'
  - api_field: 'nodeConfig.bootDisk.sizeGb'
  - api_field: 'nodeConfig.confidentialNodes.enabled'
  - api_field: 'nodeConfig.confidentialNodes.confidentialInstanceType'
  - api_field: 'nodeConfig.containerdConfig.privateRegistryAccessConfig.certificateAuthorityDomainConfig.fqdns'
  - api_field: 'nodeConfig.containerdConfig.privateRegistryAccessConfig.certificateAuthorityDomainConfig.gcpSecretManagerCertificateConfig.secretUri'
  - api_field: 'nodeConfig.containerdConfig.privateRegistryAccessConfig.enabled'
  - api_field: 'nodeConfig.diskSizeGb'
  - api_field: 'nodeConfig.diskType'
  - field: 'node_config.effective_taints.effect'
    provider_only: true
  - field: 'node_config.effective_taints.key'
    provider_only: true
  - field: 'node_config.effective_taints.value'
    provider_only: true
  - api_field: 'nodeConfig.enableConfidentialStorage'
{{- if ne $.TargetVersionName "ga" }}
  - api_field: 'nodeConfig.ephemeralStorageConfig.localSsdCount'
{{- end }}
  - api_field: 'nodeConfig.ephemeralStorageLocalSsdConfig.dataCacheCount'
  - api_field: 'nodeConfig.ephemeralStorageLocalSsdConfig.localSsdCount'
  - api_field: 'nodeConfig.fastSocket.enabled'
  - api_field: 'nodeConfig.flexStart'
  - api_field: 'nodeConfig.gcfsConfig.enabled'
  - field: 'node_config.guest_accelerator.count'
    api_field: 'nodeConfig.accelerators.acceleratorCount'
  - field: 'node_config.guest_accelerator.gpu_driver_installation_config.gpu_driver_version'
    api_field: 'nodeConfig.accelerators.gpuDriverInstallationConfig.gpuDriverVersion'
  - field: 'node_config.guest_accelerator.gpu_partition_size'
    api_field: 'nodeConfig.accelerators.gpuPartitionSize'
  - field: 'node_config.guest_accelerator.gpu_sharing_config.gpu_sharing_strategy'
    api_field: 'nodeConfig.accelerators.gpuSharingConfig.gpuSharingStrategy'
  - field: 'node_config.guest_accelerator.gpu_sharing_config.max_shared_clients_per_gpu'
    api_field: 'nodeConfig.accelerators.gpuSharingConfig.maxSharedClientsPerGpu'
  - field: 'node_config.guest_accelerator.type'
    api_field: 'nodeConfig.accelerators.acceleratorType'
  - api_field: 'nodeConfig.gvnic.enabled'
  - api_field: 'nodeConfig.hostMaintenancePolicy.maintenanceInterval'
  - api_field: 'nodeConfig.imageType'
  - api_field: 'nodeConfig.kubeletConfig.allowedUnsafeSysctls'
  - api_field: 'nodeConfig.kubeletConfig.containerLogMaxFiles'
  - api_field: 'nodeConfig.kubeletConfig.containerLogMaxSize'
  - api_field: 'nodeConfig.kubeletConfig.cpuCfsQuota'
  - api_field: 'nodeConfig.kubeletConfig.cpuCfsQuotaPeriod'
  - api_field: 'nodeConfig.kubeletConfig.cpuManagerPolicy'
  - api_field: 'nodeConfig.kubeletConfig.evictionMaxPodGracePeriodSeconds'
  - api_field: 'nodeConfig.kubeletConfig.evictionMinimumReclaim.imagefsAvailable'
  - api_field: 'nodeConfig.kubeletConfig.evictionMinimumReclaim.imagefsInodesFree'
  - api_field: 'nodeConfig.kubeletConfig.evictionMinimumReclaim.memoryAvailable'
  - api_field: 'nodeConfig.kubeletConfig.evictionMinimumReclaim.nodefsAvailable'
  - api_field: 'nodeConfig.kubeletConfig.evictionMinimumReclaim.nodefsInodesFree'
  - api_field: 'nodeConfig.kubeletConfig.evictionMinimumReclaim.pidAvailable'
  - api_field: 'nodeConfig.kubeletConfig.evictionSoft.imagefsAvailable'
  - api_field: 'nodeConfig.kubeletConfig.evictionSoft.imagefsInodesFree'
  - api_field: 'nodeConfig.kubeletConfig.evictionSoft.memoryAvailable'
  - api_field: 'nodeConfig.kubeletConfig.evictionSoft.nodefsAvailable'
  - api_field: 'nodeConfig.kubeletConfig.evictionSoft.nodefsInodesFree'
  - api_field: 'nodeConfig.kubeletConfig.evictionSoft.pidAvailable'
  - api_field: 'nodeConfig.kubeletConfig.evictionSoftGracePeriod.imagefsAvailable'
  - api_field: 'nodeConfig.kubeletConfig.evictionSoftGracePeriod.imagefsInodesFree'
  - api_field: 'nodeConfig.kubeletConfig.evictionSoftGracePeriod.memoryAvailable'
  - api_field: 'nodeConfig.kubeletConfig.evictionSoftGracePeriod.nodefsAvailable'
  - api_field: 'nodeConfig.kubeletConfig.evictionSoftGracePeriod.nodefsInodesFree'
  - api_field: 'nodeConfig.kubeletConfig.evictionSoftGracePeriod.pidAvailable'
  - api_field: 'nodeConfig.kubeletConfig.imageGcHighThresholdPercent'
  - api_field: 'nodeConfig.kubeletConfig.imageGcLowThresholdPercent'
  - api_field: 'nodeConfig.kubeletConfig.imageMaximumGcAge'
  - api_field: 'nodeConfig.kubeletConfig.imageMinimumGcAge'
  - api_field: 'nodeConfig.kubeletConfig.insecureKubeletReadonlyPortEnabled'
  - api_field: 'nodeConfig.kubeletConfig.maxParallelImagePulls'
  - api_field: 'nodeConfig.kubeletConfig.memoryManager.policy'
  - api_field: 'nodeConfig.kubeletConfig.podPidsLimit'
  - api_field: 'nodeConfig.kubeletConfig.singleProcessOomKill'
  - api_field: 'nodeConfig.kubeletConfig.topologyManager.policy'
  - api_field: 'nodeConfig.kubeletConfig.topologyManager.scope'
  - api_field: 'nodeConfig.labels'
  - api_field: 'nodeConfig.linuxNodeConfig.cgroupMode'
  - field: 'node_config.linux_node_config.hugepages_config.hugepage_size_1g'
    api_field: 'nodeConfig.linuxNodeConfig.hugepages.hugepageSize1g'
  - field: 'node_config.linux_node_config.hugepages_config.hugepage_size_2m'
    api_field: 'nodeConfig.linuxNodeConfig.hugepages.hugepageSize2m'
  - api_field: 'nodeConfig.linuxNodeConfig.sysctls'
  - api_field: 'nodeConfig.linuxNodeConfig.transparentHugepageDefrag'
  - api_field: 'nodeConfig.linuxNodeConfig.transparentHugepageEnabled'
  - api_field: 'nodeConfig.localNvmeSsdBlockConfig.localSsdCount'
  - api_field: 'nodeConfig.localSsdCount'
  - api_field: 'nodeConfig.localSsdEncryptionMode'
  - field: 'node_config.logging_variant'
    api_field: 'nodeConfig.loggingConfig.variantConfig.variant'
  - api_field: 'nodeConfig.machineType'
  - api_field: 'nodeConfig.maxRunDuration'
  - api_field: 'nodeConfig.metadata'
  - api_field: 'nodeConfig.minCpuPlatform'
  - api_field: 'nodeConfig.nodeGroup'
  - api_field: 'nodeConfig.oauthScopes'
  - api_field: 'nodeConfig.preemptible'
  - api_field: 'nodeConfig.reservationAffinity.consumeReservationType'
  - api_field: 'nodeConfig.reservationAffinity.key'
  - api_field: 'nodeConfig.reservationAffinity.values'
  - api_field: 'nodeConfig.resourceLabels'
  - field: 'node_config.resource_manager_tags'
    api_field: 'nodeConfig.resourceManagerTags.tags'
{{- if ne $.TargetVersionName "ga" }}
  - api_field: 'nodeConfig.sandboxConfig.sandboxType'
{{- end }}
  - api_field: 'nodeConfig.secondaryBootDisks.diskImage'
  - api_field: 'nodeConfig.secondaryBootDisks.mode'
  - api_field: 'nodeConfig.serviceAccount'
  - api_field: 'nodeConfig.shieldedInstanceConfig.enableIntegrityMonitoring'
  - api_field: 'nodeConfig.shieldedInstanceConfig.enableSecureBoot'
  - api_field: 'nodeConfig.soleTenantConfig.minNodeCpus'
  - field: 'node_config.sole_tenant_config.node_affinity.key'
    api_field: 'nodeConfig.soleTenantConfig.nodeAffinities.key'
  - field: 'node_config.sole_tenant_config.node_affinity.operator'
    api_field: 'nodeConfig.soleTenantConfig.nodeAffinities.operator'
  - field: 'node_config.sole_tenant_config.node_affinity.values'
    api_field: 'nodeConfig.soleTenantConfig.nodeAffinities.values'
  - api_field: 'nodeConfig.spot'
  - api_field: 'nodeConfig.storagePools'
  - api_field: 'nodeConfig.tags'
  - field: 'node_config.taint.effect'
    api_field: 'nodeConfig.taints.effect'
  - field: 'node_config.taint.key'
    api_field: 'nodeConfig.taints.key'
  - field: 'node_config.taint.value'
    api_field: 'nodeConfig.taints.value'
  - api_field: 'nodeConfig.windowsNodeConfig.osVersion'
    field: 'node_config.windows_node_config.osversion'
  - api_field: 'nodeConfig.workloadMetadataConfig.mode'
  - field: 'node_locations'
    api_field: 'locations'
  - field: 'node_pool.autoscaling.location_policy'
    api_field: 'nodePools.autoscaling.locationPolicy'
  - field: 'node_pool.autoscaling.max_node_count'
    api_field: 'nodePools.autoscaling.maxNodeCount'
  - field: 'node_pool.autoscaling.min_node_count'
    api_field: 'nodePools.autoscaling.minNodeCount'
  - field: 'node_pool.autoscaling.total_max_node_count'
    api_field: 'nodePools.autoscaling.totalMaxNodeCount'
  - field: 'node_pool.autoscaling.total_min_node_count'
    api_field: 'nodePools.autoscaling.totalMinNodeCount'
  - field: 'node_pool.initial_node_count'
    api_field: 'nodePools.initialNodeCount'
  - field: 'node_pool.instance_group_urls'
    api_field: 'nodePools.instanceGroupUrls'
  - field: 'node_pool.managed_instance_group_urls'
    provider_only: true
  - field: 'node_pool.management.auto_repair'
    api_field: 'nodePools.management.autoRepair'
  - field: 'node_pool.management.auto_upgrade'
    api_field: 'nodePools.management.autoUpgrade'
  - field: 'node_pool.max_pods_per_node'
    api_field: 'nodePools.maxPodsConstraint.maxPodsPerNode'
  - field: 'node_pool.name'
    api_field: 'nodePools.name'
  - field: 'node_pool.name_prefix'
    provider_only: true
  - field: 'node_pool.network_config.additional_node_network_configs.network'
    api_field: 'nodePools.networkConfig.additionalNodeNetworkConfigs.network'
  - field: 'node_pool.network_config.additional_node_network_configs.subnetwork'
    api_field: 'nodePools.networkConfig.additionalNodeNetworkConfigs.subnetwork'
  - field: 'node_pool.network_config.additional_pod_network_configs.max_pods_per_node'
    api_field: 'nodePools.networkConfig.additionalPodNetworkConfigs.maxPodsPerNode.maxPodsPerNode'
  - field: 'node_pool.network_config.additional_pod_network_configs.secondary_pod_range'
    api_field: 'nodePools.networkConfig.additionalPodNetworkConfigs.secondaryPodRange'
  - field: 'node_pool.network_config.additional_pod_network_configs.subnetwork'
    api_field: 'nodePools.networkConfig.additionalPodNetworkConfigs.subnetwork'
  - field: 'node_pool.network_config.create_pod_range'
    api_field: 'nodePools.networkConfig.createPodRange'
  - field: 'node_pool.network_config.enable_private_nodes'
    api_field: 'nodePools.networkConfig.enablePrivateNodes'
  - field: 'node_pool.network_config.network_performance_config.total_egress_bandwidth_tier'
    api_field: 'nodePools.networkConfig.networkPerformanceConfig.totalEgressBandwidthTier'
  - field: 'node_pool.network_config.pod_cidr_overprovision_config.disabled'
    api_field: 'nodePools.networkConfig.podCidrOverprovisionConfig.disable'
  - field: 'node_pool.network_config.pod_ipv4_cidr_block'
    api_field: 'nodePools.networkConfig.podIpv4CidrBlock'
  - field: 'node_pool.network_config.pod_range'
    api_field: 'nodePools.networkConfig.podRange'
  - field: 'node_pool.network_config.subnetwork'
    api_field: 'nodePools.networkConfig.subnetwork'
  - field: 'node_pool.node_config.advanced_machine_features.enable_nested_virtualization'
    api_field: 'nodePools.config.advancedMachineFeatures.enableNestedVirtualization'
  - field: 'node_pool.node_config.advanced_machine_features.performance_monitoring_unit'
    api_field: 'nodePools.config.advancedMachineFeatures.performanceMonitoringUnit'
  - field: 'node_pool.node_config.advanced_machine_features.threads_per_core'
    api_field: 'nodePools.config.advancedMachineFeatures.threadsPerCore'
  - field: 'node_pool.node_config.boot_disk_kms_key'
    api_field: 'nodePools.config.bootDiskKmsKey'
  - field: 'node_pool.node_config.boot_disk.disk_type'
    api_field: 'nodePools.config.bootDisk.diskType'
  - field: 'node_pool.node_config.boot_disk.provisioned_iops'
    api_field: 'nodePools.config.bootDisk.provisionedIops'
  - field: 'node_pool.node_config.boot_disk.provisioned_throughput'
    api_field: 'nodePools.config.bootDisk.provisionedThroughput'
  - field: 'node_pool.node_config.boot_disk.size_gb'
    api_field: 'nodePools.config.bootDisk.sizeGb'
  - field: 'node_pool.node_config.confidential_nodes.enabled'
    api_field: 'nodePools.config.confidentialNodes.enabled'
  - field: 'node_pool.node_config.confidential_nodes.confidential_instance_type'
    api_field: 'nodePools.config.confidentialNodes.confidentialInstanceType'
  - field: 'node_pool.node_config.containerd_config.private_registry_access_config.certificate_authority_domain_config.fqdns'
    api_field: 'nodePools.config.containerdConfig.privateRegistryAccessConfig.certificateAuthorityDomainConfig.fqdns'
  - field: 'node_pool.node_config.containerd_config.private_registry_access_config.certificate_authority_domain_config.gcp_secret_manager_certificate_config.secret_uri'
    api_field: 'nodePools.config.containerdConfig.privateRegistryAccessConfig.certificateAuthorityDomainConfig.gcpSecretManagerCertificateConfig.secretUri'
  - field: 'node_pool.node_config.containerd_config.private_registry_access_config.enabled'
    api_field: 'nodePools.config.containerdConfig.privateRegistryAccessConfig.enabled'
  - field: 'node_pool.node_config.disk_size_gb'
    api_field: 'nodePools.config.diskSizeGb'
  - field: 'node_pool.node_config.disk_type'
    api_field: 'nodePools.config.diskType'
  - field: 'node_pool.node_config.effective_taints.effect'
    provider_only: true
  - field: 'node_pool.node_config.effective_taints.key'
    provider_only: true
  - field: 'node_pool.node_config.effective_taints.value'
    provider_only: true
  - field: 'node_pool.node_config.enable_confidential_storage'
    api_field: 'nodePools.config.enableConfidentialStorage'
{{- if ne $.TargetVersionName "ga" }}
  - field: 'node_pool.node_config.ephemeral_storage_config.local_ssd_count'
    api_field: 'nodePools.config.ephemeralStorageConfig.localSsdCount'
{{- end }}
  - field: 'node_pool.node_config.ephemeral_storage_local_ssd_config.data_cache_count'
    api_field: 'nodePools.config.ephemeralStorageLocalSsdConfig.dataCacheCount'
  - field: 'node_pool.node_config.ephemeral_storage_local_ssd_config.local_ssd_count'
    api_field: 'nodePools.config.ephemeralStorageLocalSsdConfig.localSsdCount'
  - field: 'node_pool.node_config.fast_socket.enabled'
    api_field: 'nodePools.config.fastSocket.enabled'
  - field: 'node_pool.node_config.flex_start'
    api_field: 'nodePools.config.flexStart'
  - field: 'node_pool.node_config.gcfs_config.enabled'
    api_field: 'nodePools.config.gcfsConfig.enabled'
  - field: 'node_pool.node_config.guest_accelerator.count'
    api_field: 'nodePools.config.accelerators.acceleratorCount'
  - field: 'node_pool.node_config.guest_accelerator.gpu_driver_installation_config.gpu_driver_version'
    api_field: 'nodePools.config.accelerators.gpuDriverInstallationConfig.gpuDriverVersion'
  - field: 'node_pool.node_config.guest_accelerator.gpu_partition_size'
    api_field: 'nodePools.config.accelerators.gpuPartitionSize'
  - field: 'node_pool.node_config.guest_accelerator.gpu_sharing_config.gpu_sharing_strategy'
    api_field: 'nodePools.config.accelerators.gpuSharingConfig.gpuSharingStrategy'
  - field: 'node_pool.node_config.guest_accelerator.gpu_sharing_config.max_shared_clients_per_gpu'
    api_field: 'nodePools.config.accelerators.gpuSharingConfig.maxSharedClientsPerGpu'
  - field: 'node_pool.node_config.guest_accelerator.type'
    api_field: 'nodePools.config.accelerators.acceleratorType'
  - field: 'node_pool.node_config.gvnic.enabled'
    api_field: 'nodePools.config.gvnic.enabled'
  - field: 'node_pool.node_config.host_maintenance_policy.maintenance_interval'
    api_field: 'nodePools.config.hostMaintenancePolicy.maintenanceInterval'
  - field: 'node_pool.node_config.image_type'
    api_field: 'nodePools.config.imageType'
  - field: 'node_pool.node_config.kubelet_config.allowed_unsafe_sysctls'
    api_field: 'nodePools.config.kubeletConfig.allowedUnsafeSysctls'
  - field: 'node_pool.node_config.kubelet_config.container_log_max_files'
    api_field: 'nodePools.config.kubeletConfig.containerLogMaxFiles'
  - field: 'node_pool.node_config.kubelet_config.container_log_max_size'
    api_field: 'nodePools.config.kubeletConfig.containerLogMaxSize'
  - field: 'node_pool.node_config.kubelet_config.cpu_cfs_quota'
    api_field: 'nodePools.config.kubeletConfig.cpuCfsQuota'
  - field: 'node_pool.node_config.kubelet_config.cpu_cfs_quota_period'
    api_field: 'nodePools.config.kubeletConfig.cpuCfsQuotaPeriod'
  - field: 'node_pool.node_config.kubelet_config.cpu_manager_policy'
    api_field: 'nodePools.config.kubeletConfig.cpuManagerPolicy'
  - field: 'node_pool.node_config.kubelet_config.eviction_max_pod_grace_period_seconds'
    api_field: 'nodePools.config.kubeletConfig.evictionMaxPodGracePeriodSeconds'
  - field: 'node_pool.node_config.kubelet_config.eviction_minimum_reclaim.imagefs_available'
    api_field: 'nodePools.config.kubeletConfig.evictionMinimumReclaim.imagefsAvailable'
  - field: 'node_pool.node_config.kubelet_config.eviction_minimum_reclaim.imagefs_inodes_free'
    api_field: 'nodePools.config.kubeletConfig.evictionMinimumReclaim.imagefsInodesFree'
  - field: 'node_pool.node_config.kubelet_config.eviction_minimum_reclaim.memory_available'
    api_field: 'nodePools.config.kubeletConfig.evictionMinimumReclaim.memoryAvailable'
  - field: 'node_pool.node_config.kubelet_config.eviction_minimum_reclaim.nodefs_available'
    api_field: 'nodePools.config.kubeletConfig.evictionMinimumReclaim.nodefsAvailable'
  - field: 'node_pool.node_config.kubelet_config.eviction_minimum_reclaim.nodefs_inodes_free'
    api_field: 'nodePools.config.kubeletConfig.evictionMinimumReclaim.nodefsInodesFree'
  - field: 'node_pool.node_config.kubelet_config.eviction_minimum_reclaim.pid_available'
    api_field: 'nodePools.config.kubeletConfig.evictionMinimumReclaim.pidAvailable'
  - field: 'node_pool.node_config.kubelet_config.eviction_soft.imagefs_available'
    api_field: 'nodePools.config.kubeletConfig.evictionSoft.imagefsAvailable'
  - field: 'node_pool.node_config.kubelet_config.eviction_soft.imagefs_inodes_free'
    api_field: 'nodePools.config.kubeletConfig.evictionSoft.imagefsInodesFree'
  - field: 'node_pool.node_config.kubelet_config.eviction_soft.memory_available'
    api_field: 'nodePools.config.kubeletConfig.evictionSoft.memoryAvailable'
  - field: 'node_pool.node_config.kubelet_config.eviction_soft.nodefs_available'
    api_field: 'nodePools.config.kubeletConfig.evictionSoft.nodefsAvailable'
  - field: 'node_pool.node_config.kubelet_config.eviction_soft.nodefs_inodes_free'
    api_field: 'nodePools.config.kubeletConfig.evictionSoft.nodefsInodesFree'
  - field: 'node_pool.node_config.kubelet_config.eviction_soft.pid_available'
    api_field: 'nodePools.config.kubeletConfig.evictionSoft.pidAvailable'
  - field: 'node_pool.node_config.kubelet_config.eviction_soft_grace_period.imagefs_available'
    api_field: 'nodePools.config.kubeletConfig.evictionSoftGracePeriod.imagefsAvailable'
  - field: 'node_pool.node_config.kubelet_config.eviction_soft_grace_period.imagefs_inodes_free'
    api_field: 'nodePools.config.kubeletConfig.evictionSoftGracePeriod.imagefsInodesFree'
  - field: 'node_pool.node_config.kubelet_config.eviction_soft_grace_period.memory_available'
    api_field: 'nodePools.config.kubeletConfig.evictionSoftGracePeriod.memoryAvailable'
  - field: 'node_pool.node_config.kubelet_config.eviction_soft_grace_period.nodefs_available'
    api_field: 'nodePools.config.kubeletConfig.evictionSoftGracePeriod.nodefsAvailable'
  - field: 'node_pool.node_config.kubelet_config.eviction_soft_grace_period.nodefs_inodes_free'
    api_field: 'nodePools.config.kubeletConfig.evictionSoftGracePeriod.nodefsInodesFree'
  - field: 'node_pool.node_config.kubelet_config.eviction_soft_grace_period.pid_available'
    api_field: 'nodePools.config.kubeletConfig.evictionSoftGracePeriod.pidAvailable'
  - field: 'node_pool.node_config.kubelet_config.image_gc_high_threshold_percent'
    api_field: 'nodePools.config.kubeletConfig.imageGcHighThresholdPercent'
  - field: 'node_pool.node_config.kubelet_config.image_gc_low_threshold_percent'
    api_field: 'nodePools.config.kubeletConfig.imageGcLowThresholdPercent'
  - field: 'node_pool.node_config.kubelet_config.image_maximum_gc_age'
    api_field: 'nodePools.config.kubeletConfig.imageMaximumGcAge'
  - field: 'node_pool.node_config.kubelet_config.image_minimum_gc_age'
    api_field: 'nodePools.config.kubeletConfig.imageMinimumGcAge'
  - field: 'node_pool.node_config.kubelet_config.insecure_kubelet_readonly_port_enabled'
    api_field: 'nodePools.config.kubeletConfig.insecureKubeletReadonlyPortEnabled'
  - field: 'node_pool.node_config.kubelet_config.max_parallel_image_pulls'
    api_field: 'nodePools.config.kubeletConfig.maxParallelImagePulls'
  - field: 'node_pool.node_config.kubelet_config.memory_manager.policy'
    api_field: 'nodePools.config.kubeletConfig.memoryManager.policy'
  - field: 'node_pool.node_config.kubelet_config.pod_pids_limit'
    api_field: 'nodePools.config.kubeletConfig.podPidsLimit'
  - field: 'node_pool.node_config.kubelet_config.single_process_oom_kill'
    api_field: 'nodePools.config.kubeletConfig.singleProcessOomKill'
  - field: 'node_pool.node_config.kubelet_config.topology_manager.policy'
    api_field: 'nodePools.config.kubeletConfig.topologyManager.policy'
  - field: 'node_pool.node_config.kubelet_config.topology_manager.scope'
    api_field: 'nodePools.config.kubeletConfig.topologyManager.scope'
  - field: 'node_pool.node_config.labels'
    api_field: 'nodePools.config.labels'
  - field: 'node_pool.node_config.linux_node_config.cgroup_mode'
    api_field: 'nodePools.config.linuxNodeConfig.cgroupMode'
  - field: 'node_pool.node_config.linux_node_config.hugepages_config.hugepage_size_1g'
    api_field: 'nodePools.config.linuxNodeConfig.hugepages.hugepageSize1g'
  - field: 'node_pool.node_config.linux_node_config.hugepages_config.hugepage_size_2m'
    api_field: 'nodePools.config.linuxNodeConfig.hugepages.hugepageSize2m'
  - field: 'node_pool.node_config.linux_node_config.sysctls'
    api_field: 'nodePools.config.linuxNodeConfig.sysctls'
  - field: 'node_pool.node_config.linux_node_config.transparent_hugepage_defrag'
    api_field: 'nodePools.config.linuxNodeConfig.transparentHugepageDefrag'
  - field: 'node_pool.node_config.linux_node_config.transparent_hugepage_enabled'
    api_field: 'nodePools.config.linuxNodeConfig.transparentHugepageEnabled'
  - field: 'node_pool.node_config.local_nvme_ssd_block_config.local_ssd_count'
    api_field: 'nodePools.config.localNvmeSsdBlockConfig.localSsdCount'
  - field: 'node_pool.node_config.local_ssd_count'
    api_field: 'nodePools.config.localSsdCount'
  - field: 'node_pool.node_config.local_ssd_encryption_mode'
    api_field: 'nodePools.config.localSsdEncryptionMode'
  - field: 'node_pool.node_config.logging_variant'
    api_field: 'nodePools.config.loggingConfig.variantConfig.variant'
  - field: 'node_pool.node_config.machine_type'
    api_field: 'nodePools.config.machineType'
  - field: 'node_pool.node_config.max_run_duration'
    api_field: 'nodePools.config.maxRunDuration'
  - field: 'node_pool.node_config.metadata'
    api_field: 'nodePools.config.metadata'
  - field: 'node_pool.node_config.min_cpu_platform'
    api_field: 'nodePools.config.minCpuPlatform'
  - field: 'node_pool.node_config.node_group'
    api_field: 'nodePools.config.nodeGroup'
  - field: 'node_pool.node_config.oauth_scopes'
    api_field: 'nodePools.config.oauthScopes'
  - field: 'node_pool.node_config.preemptible'
    api_field: 'nodePools.config.preemptible'
  - field: 'node_pool.node_config.reservation_affinity.consume_reservation_type'
    api_field: 'nodePools.config.reservationAffinity.consumeReservationType'
  - field: 'node_pool.node_config.reservation_affinity.key'
    api_field: 'nodePools.config.reservationAffinity.key'
  - field: 'node_pool.node_config.reservation_affinity.values'
    api_field: 'nodePools.config.reservationAffinity.values'
  - field: 'node_pool.node_config.resource_labels'
    api_field: 'nodePools.config.resourceLabels'
  - field: 'node_pool.node_config.resource_manager_tags'
    api_field: 'nodePools.config.resourceManagerTags.tags'
{{- if ne $.TargetVersionName "ga" }}
  - field: 'node_pool.node_config.sandbox_config.sandbox_type'
    api_field: 'nodePools.config.sandboxConfig.sandboxType'
{{- end }}
  - field: 'node_pool.node_config.secondary_boot_disks.disk_image'
    api_field: 'nodePools.config.secondaryBootDisks.diskImage'
  - field: 'node_pool.node_config.secondary_boot_disks.mode'
    api_field: 'nodePools.config.secondaryBootDisks.mode'
  - field: 'node_pool.node_config.service_account'
    api_field: 'nodePools.config.serviceAccount'
  - field: 'node_pool.node_config.shielded_instance_config.enable_integrity_monitoring'
    api_field: 'nodePools.config.shieldedInstanceConfig.enableIntegrityMonitoring'
  - field: 'node_pool.node_config.shielded_instance_config.enable_secure_boot'
    api_field: 'nodePools.config.shieldedInstanceConfig.enableSecureBoot'
  - field: 'node_pool.node_config.sole_tenant_config.min_node_cpus'
    api_field: 'nodePools.config.soleTenantConfig.minNodeCpus'
  - field: 'node_pool.node_config.sole_tenant_config.node_affinity.key'
    api_field: 'nodePools.config.soleTenantConfig.nodeAffinities.key'
  - field: 'node_pool.node_config.sole_tenant_config.node_affinity.operator'
    api_field: 'nodePools.config.soleTenantConfig.nodeAffinities.operator'
  - field: 'node_pool.node_config.sole_tenant_config.node_affinity.values'
    api_field: 'nodePools.config.soleTenantConfig.nodeAffinities.values'
  - field: 'node_pool.node_config.spot'
    api_field: 'nodePools.config.spot'
  - field: 'node_pool.node_config.storage_pools'
    api_field: 'nodePools.config.storagePools'
  - field: 'node_pool.node_config.tags'
    api_field: 'nodePools.config.tags'
  - field: 'node_pool.node_config.taint.effect'
    api_field: 'nodePools.config.taints.effect'
  - field: 'node_pool.node_config.taint.key'
    api_field: 'nodePools.config.taints.key'
  - field: 'node_pool.node_config.taint.value'
    api_field: 'nodePools.config.taints.value'
  - field: 'node_pool.node_config.windows_node_config.osversion'
    api_field: 'nodePools.config.windowsNodeConfig.osVersion'
  - field: 'node_pool.node_config.workload_metadata_config.mode'
    api_field: 'nodePools.config.workloadMetadataConfig.mode'
  - field: 'node_pool.node_count'
    provider_only: true
  - field: 'node_pool.node_locations'
    api_field: 'nodePools.locations'
  - field: 'node_pool.placement_policy.policy_name'
    api_field: 'nodePools.placementPolicy.policyName'
  - field: 'node_pool.placement_policy.tpu_topology'
    api_field: 'nodePools.placementPolicy.tpuTopology'
  - field: 'node_pool.placement_policy.type'
    api_field: 'nodePools.placementPolicy.type'
  - field: 'node_pool.queued_provisioning.enabled'
    api_field: 'nodePools.queuedProvisioning.enabled'
  - field: 'node_pool.upgrade_settings.blue_green_settings.node_pool_soak_duration'
    api_field: 'nodePools.upgradeSettings.blueGreenSettings.nodePoolSoakDuration'
  - field: 'node_pool.upgrade_settings.blue_green_settings.standard_rollout_policy.batch_node_count'
    api_field: 'nodePools.upgradeSettings.blueGreenSettings.standardRolloutPolicy.batchNodeCount'
  - field: 'node_pool.upgrade_settings.blue_green_settings.standard_rollout_policy.batch_percentage'
    api_field: 'nodePools.upgradeSettings.blueGreenSettings.standardRolloutPolicy.batchPercentage'
  - field: 'node_pool.upgrade_settings.blue_green_settings.standard_rollout_policy.batch_soak_duration'
    api_field: 'nodePools.upgradeSettings.blueGreenSettings.standardRolloutPolicy.batchSoakDuration'
  - field: 'node_pool.upgrade_settings.max_surge'
    api_field: 'nodePools.upgradeSettings.maxSurge'
  - field: 'node_pool.upgrade_settings.max_unavailable'
    api_field: 'nodePools.upgradeSettings.maxUnavailable'
  - field: 'node_pool.upgrade_settings.strategy'
    api_field: 'nodePools.upgradeSettings.strategy'
  - field: 'node_pool.version'
    api_field: 'nodePools.version'
  - api_field: 'nodePoolAutoConfig.linuxNodeConfig.cgroupMode'
  - api_field: 'nodePoolAutoConfig.networkTags.tags'
  - api_field: 'nodePoolAutoConfig.nodeKubeletConfig.insecureKubeletReadonlyPortEnabled'
  - field: 'node_pool_auto_config.resource_manager_tags'
    api_field: 'nodePoolAutoConfig.resourceManagerTags.tags'
  - api_field: 'nodePoolDefaults.nodeConfigDefaults.containerdConfig.privateRegistryAccessConfig.certificateAuthorityDomainConfig.fqdns'
  - api_field: 'nodePoolDefaults.nodeConfigDefaults.containerdConfig.privateRegistryAccessConfig.certificateAuthorityDomainConfig.gcpSecretManagerCertificateConfig.secretUri'
  - api_field: 'nodePoolDefaults.nodeConfigDefaults.containerdConfig.privateRegistryAccessConfig.enabled'
  - api_field: 'nodePoolDefaults.nodeConfigDefaults.gcfsConfig.enabled'
  - field: 'node_pool_defaults.node_config_defaults.insecure_kubelet_readonly_port_enabled'
    api_field: 'nodePoolDefaults.nodeConfigDefaults.nodeKubeletConfig.insecureKubeletReadonlyPortEnabled'
  - field: 'node_pool_defaults.node_config_defaults.logging_variant'
    api_field: 'nodePoolDefaults.nodeConfigDefaults.loggingConfig.variantConfig.variant'
  - field: 'node_version'
    api_field: 'currentNodeVersion'
  - api_field: 'notificationConfig.pubsub.enabled'
  - api_field: 'notificationConfig.pubsub.filter.eventType'
  - api_field: 'notificationConfig.pubsub.topic'
  - field: 'operation'
    provider_only: true
  - api_field: 'podAutoscaling.hpaProfile'
{{- if ne $.TargetVersionName "ga" }}
  - api_field: 'podSecurityPolicyConfig.enabled'
{{- end }}
  - api_field: 'privateClusterConfig.enablePrivateEndpoint'
  - api_field: 'privateClusterConfig.enablePrivateNodes'
  - api_field: 'privateClusterConfig.masterGlobalAccessConfig.enabled'
  - api_field: 'privateClusterConfig.masterIpv4CidrBlock'
  - api_field: 'privateClusterConfig.peeringName'
  - api_field: 'privateClusterConfig.privateEndpoint'
  - api_field: 'privateClusterConfig.privateEndpointSubnetwork'
  - api_field: 'privateClusterConfig.publicEndpoint'
  - field: 'private_ipv6_google_access'
    api_field: 'networkConfig.privateIpv6GoogleAccess'
  - field: 'project'
{{- if ne $.TargetVersionName "ga" }}
  - api_field: 'protectConfig.workloadConfig.auditMode'
{{- end }}
{{- if ne $.TargetVersionName "ga" }}
  - api_field: 'protectConfig.workloadVulnerabilityMode'
{{- end }}
  - api_field: 'rbacBindingConfig.enableInsecureBindingSystemAuthenticated'
  - api_field: 'rbacBindingConfig.enableInsecureBindingSystemUnauthenticated'
  - api_field: 'releaseChannel.channel'
  - field: 'remove_default_node_pool'
    provider_only: true
  - api_field: 'resourceLabels'
  - api_field: 'resourceUsageExportConfig.bigqueryDestination.datasetId'
  - api_field: 'resourceUsageExportConfig.enableNetworkEgressMetering'
  - field: 'resource_usage_export_config.enable_resource_consumption_metering'
    api_field: 'resourceUsageExportConfig.consumptionMeteringConfig.enabled'
  - api_field: 'secretManagerConfig.enabled'
  - api_field: 'secretManagerConfig.rotationConfig.enabled'
  - api_field: 'secretManagerConfig.rotationConfig.rotationInterval'
  - api_field: 'securityPostureConfig.mode'
  - api_field: 'securityPostureConfig.vulnerabilityMode'
  - api_field: 'selfLink'
  - field: 'service_external_ips_config.enabled'
    api_field: 'networkConfig.serviceExternalIpsConfig.enabled'
  - api_field: 'servicesIpv4Cidr'
  - api_field: 'subnetwork'
  - field: 'terraform_labels'
    provider_only: true
{{- if ne $.TargetVersionName "ga" }}
  - api_field: 'tpuConfig.enabled'
{{- end }}
{{- if ne $.TargetVersionName "ga" }}
  - api_field: 'tpuConfig.ipv4CidrBlock'
{{- end }}
{{- if ne $.TargetVersionName "ga" }}
  - api_field: 'tpuConfig.useServiceNetworking'
{{- end }}
  - api_field: 'tpuIpv4CidrBlock'
  - api_field: 'userManagedKeysConfig.aggregationCa'
  - api_field: 'userManagedKeysConfig.clusterCa'
  - api_field: 'userManagedKeysConfig.controlPlaneDiskEncryptionKey'
  - api_field: 'userManagedKeysConfig.etcdApiCa'
  - api_field: 'userManagedKeysConfig.etcdPeerCa'
  - api_field: 'userManagedKeysConfig.gkeopsEtcdBackupEncryptionKey'
  - api_field: 'userManagedKeysConfig.serviceAccountSigningKeys'
  - api_field: 'userManagedKeysConfig.serviceAccountVerificationKeys'
  - api_field: 'verticalPodAutoscaling.enabled'
{{- if ne $.TargetVersionName "ga" }}
  - api_field: 'workloadAltsConfig.enableAlts'
{{- end }}
  - api_field: 'workloadIdentityConfig.workloadPool'
