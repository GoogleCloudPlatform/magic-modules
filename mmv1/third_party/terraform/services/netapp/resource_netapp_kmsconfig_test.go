// Copyright (c) HashiCorp, Inc.
// SPDX-License-Identifier: MPL-2.0

// ----------------------------------------------------------------------------
//
//     ***     AUTO GENERATED CODE    ***    Type: MMv1     ***
//
// ----------------------------------------------------------------------------
//
//     This file is automatically generated by Magic Modules and manual
//     changes will be clobbered when the file is regenerated.
//
//     Please read more about how to change this file in
//     .github/CONTRIBUTING.md.
//
// ----------------------------------------------------------------------------

package netapp_test

import (
	// "fmt"
	// "strings"
	"testing"

	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/resource"
	// "github.com/hashicorp/terraform-plugin-sdk/v2/terraform"

	"github.com/hashicorp/terraform-provider-google/google/acctest"
	// "github.com/hashicorp/terraform-provider-google/google/tpgresource"
	// transport_tpg "github.com/hashicorp/terraform-provider-google/google/transport"
)

func TestAccNetappkmsconfig_kmsConfigCreateExample_Update(t *testing.T) {
	t.Parallel()

	context := map[string]interface{}{
		"random_suffix": acctest.RandString(t, 10),
	}

	acctest.VcrTest(t, resource.TestCase{
		PreCheck:                 func() { acctest.AccTestPreCheck(t) },
		ProtoV5ProviderFactories: acctest.ProtoV5ProviderFactories(t),
		Steps: []resource.TestStep{
			{
				Config: testAccNetappkmsconfig_kmsConfigCreateExample(context),
			},
			{
				ResourceName:            "google_netapp_kmsconfig.kmsConfig",
				ImportState:             true,
				ImportStateVerify:       true,
				ImportStateVerifyIgnore: []string{"location", "kms_name"},
			},
			{
				Config: testAccNetappkmsconfig_kmsConfigCreateExample_Update(context),
			},
			{
				ResourceName:            "google_netapp_kmsconfig.kmsConfig",
				ImportState:             true,
				ImportStateVerify:       true,
				ImportStateVerifyIgnore: []string{"location", "kms_name"},
			},
		},
	})
}

func testAccNetappkmsconfig_kmsConfigCreateExample_Full(context map[string]interface{}) string {
	return acctest.Nprintf(`
resource "google_netapp_kmsconfig" "kmsConfig" {
  kms_name = "tf-test-kms-test%{random_suffix}"
  description=""
  crypto_key_name="projects/cxo-automation-gcp/locations/us-central1/keyRings/kmsRing2/cryptoKeys/kmsCrypto111"
  location="us-central1"
}
`, context)
}

func testAccNetappkmsconfig_kmsConfigCreateExample_Update(context map[string]interface{}) string {
	return acctest.Nprintf(`
resource "google_netapp_kmsconfig" "kmsConfig" {
  kms_name = "tf-test-kms-test%{random_suffix}"
  crypto_key_name="projects/cxo-automation-gcp/locations/us-central1/keyRings/kmsRing2/cryptoKeys/kmsCrypto111"
  description="test description"
  location="us-central1"
}
`, context)
}

