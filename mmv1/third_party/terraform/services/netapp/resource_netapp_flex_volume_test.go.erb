<% autogen_exception -%>
package netapp_test
<% unless version == 'ga' -%>

import (
	"testing"

	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/resource"
	"github.com/hashicorp/terraform-provider-google/google/acctest"
)

func TestAccNetappVolume_FlexRegionalNetappVolumeBasicExample_update(t *testing.T) {
	context := map[string]interface{}{
		"network_name":  acctest.BootstrapSharedServiceNetworkingConnection(t, "gcnv-network-config-1", acctest.ServiceNetworkWithParentService("netapp.servicenetworking.goog")),
		"random_suffix": acctest.RandString(t, 10),
	}

	acctest.VcrTest(t, resource.TestCase{
		PreCheck:                 func() { acctest.AccTestPreCheck(t) },
		ProtoV5ProviderFactories: acctest.ProtoV5ProviderBetaFactories(t),
		CheckDestroy:             testAccCheckNetappVolumeDestroyProducer(t),
		ExternalProviders: map[string]resource.ExternalProvider{
			"time": {},
		},
		Steps: []resource.TestStep{
			{
				Config: testAccNetappVolume_FlexRegionalVolumeBasicExample_basic(context),
			},
			{
				ResourceName:            "google_netapp_volume.test_volume",
				ImportState:             true,
				ImportStateVerify:       true,
				ImportStateVerifyIgnore: []string{"restore_parameters", "location", "name", "deletion_policy", "labels", "terraform_labels"},
			},
			{
				Config: testAccNetappVolume_FlexRegionalVolumeBasicExample_update(context),
			},
			{
				ResourceName:            "google_netapp_volume.test_volume",
				ImportState:             true,
				ImportStateVerify:       true,
				ImportStateVerifyIgnore: []string{"restore_parameters", "location", "name", "deletion_policy", "labels", "terraform_labels"},
			},
		},
	})
}

func testAccNetappVolume_FlexRegionalVolumeBasicExample_basic(context map[string]interface{}) string {
	return acctest.Nprintf(`
resource "google_netapp_storage_pool" "default" {
    provider = google-beta
    name = "tf-test-test-pool%{random_suffix}"
    location = "us-east1"
    service_level = "FLEX"
    capacity_gib = "2048"
    network = data.google_compute_network.default.id
    zone = "us-east1-c"
    replica_zone = "us-east1-b"
}

resource "google_netapp_volume" "test_volume" {
    provider = google-beta
    location = "us-east1"
    name = "tf-test-test-volume%{random_suffix}"
    capacity_gib = "100"
    share_name = "tf-test-test-volume%{random_suffix}"
    storage_pool = google_netapp_storage_pool.default.name
    protocols = ["NFSV3"]
}

data "google_compute_network" "default" {
    provider = google-beta
    name = "%{network_name}"
}
`, context)
}

func testAccNetappVolume_FlexRegionalVolumeBasicExample_update(context map[string]interface{}) string {
	return acctest.Nprintf(`
resource "google_netapp_storage_pool" "default" {
    provider = google-beta
    name = "tf-test-test-pool%{random_suffix}"
    location = "us-east1"
    service_level = "FLEX"
    capacity_gib = "2048"
    network = data.google_compute_network.default.id
    zone = "us-east1-c"
    replica_zone = "us-east1-b"
}

resource "google_netapp_volume" "test_volume" {
    provider = google-beta
    location = "us-east1"
    name = "tf-test-test-volume%{random_suffix}"
    capacity_gib = "200"
    share_name = "tf-test-test-volume%{random_suffix}"
    storage_pool = google_netapp_storage_pool.default.name
    protocols = ["NFSV3"]
}

data "google_compute_network" "default" {
    provider = google-beta
    name = "%{network_name}"
}
  `, context)
}
<% end -%>
