package firestore_test

import (
  "testing"

  "github.com/hashicorp/terraform-plugin-testing/helper/resource"
	"github.com/hashicorp/terraform-provider-google/google/acctest"
	"github.com/hashicorp/terraform-provider-google/google/envvar"
  "github.com/hashicorp/terraform-provider-google/google/services/firestore"
)

func TestAccFirestoreDatabase_tags(t *testing.T) {
  t.Parallel()

  // Bootstrap shared tag key and value
  tagKey := acctest.BootstrapSharedTestOrganizationTagKey(t, "firestore-databases-tagkey", nil)
  context := map[string]interface{}{
		"org":           envvar.GetTestOrgFromEnv(t),
		"tagKey":        tagKey,
		"tagValue":      acctest.BootstrapSharedTestOrganizationTagValue(t, "firestore-databases-tagvalue", tagKey),
		"random_suffix": acctest.RandString(t, 10),
	}

  acctest.VcrTest(t, resource.TestCase{
    PreCheck:                 func() { acctest.AccTestPreCheck(t) },
    ProtoV5ProviderFactories: acctest.ProtoV5ProviderFactories(t),
    CheckDestroy:             testAccCheckFirestoreDatabaseDestroyProducer(t), // Assuming you have this function
    Steps: []resource.TestStep{
      {
        Config: testAccFirestoreDatabaseWithTags(context),
      },
      {
        ResourceName:            "google_firestore_database.database",
        ImportState:             true,
        ImportStateVerify:       true,
        ImportStateVerifyIgnore: []string{"project", "etag", "deletion_policy"},
      },
    },
  })
}

func testAccFirestoreDatabaseWithTags(context map[string]interface{}) string {
  return acctest.Nprintf(`
    resource "google_firestore_database" "database" {
      name                              = "tf-test-database-%{random_suffix}"
      location_id                       = "nam5"
      type                              = "FIRESTORE_NATIVE"
      delete_protection_state           = "DELETE_PROTECTION_DISABLED"
      deletion_policy                   = "DELETE"
      tags = {
	      "%{org}/%{tagKey}" = "%{tagValue}"
      }
    }
  `, context)
}
