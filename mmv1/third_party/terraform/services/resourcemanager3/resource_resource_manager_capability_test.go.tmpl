package resourcemanager3_test
{{- if ne $.TargetVersionName "ga" }}

import (
	"testing"

	"github.com/hashicorp/terraform-plugin-testing/helper/resource"

	"github.com/hashicorp/terraform-provider-google/google/acctest"
	"github.com/hashicorp/terraform-provider-google/google/envvar"
)

func TestAccResourceManagerCapability_resourceManagerCapabilityExample_basic(t *testing.T) {
	t.Parallel()

	context := map[string]interface{}{
		"org_id":          envvar.GetTestOrgFromEnv(t),
		"random_suffix": acctest.RandString(t, 10),
	}

	acctest.VcrTest(t, resource.TestCase{
		PreCheck:                 func() { acctest.AccTestPreCheck(t) },
		ProtoV5ProviderFactories: acctest.ProtoV5ProviderBetaFactories(t),
		ExternalProviders: map[string]resource.ExternalProvider{
			"time": {},
		},
		Steps: []resource.TestStep{
			{
				Config: testAccResourceManagerCapability_resourceManagerCapabilityExample_basic(context),
			},
			{
				ResourceName:      "google_resource_manager_capability.capability",
				ImportState:       true,
				ImportStateVerify: true,
				ImportStateVerifyIgnore: []string{"capability_name", "parent"},
			},
		},
	})
}

func testAccResourceManagerCapability_resourceManagerCapabilityExample_basic(context map[string]interface{}) string {
	return acctest.Nprintf(`
resource "google_folder" "folder" {
  provider         = google-beta
  display_name     = "my-folder%{random_suffix}"
  parent           = "organizations/%{org_id}"
  deletion_protection = false
}
resource "time_sleep" "wait_60s" {
  depends_on = [google_folder.folder]
  create_duration = "60s"
}
resource "google_resource_manager_capability" "capability" {
  provider         = google-beta
  value            = true
  parent           = "${google_folder.folder.name}"
  capability_name  = "app-management"
  depends_on = [time_sleep.wait_60s]
}
`, context)
}
{{- else }}
// Capability is only in beta version.
{{- end }}
