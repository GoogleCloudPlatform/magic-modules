package gkebackup_test

import (
	"testing"

	"github.com/hashicorp/terraform-provider-google/google/acctest"
	"github.com/hashicorp/terraform-provider-google/google/envvar"

	"github.com/hashicorp/terraform-plugin-testing/helper/resource"
)

func TestAccGKEBackupRestoreChannel_update(t *testing.T) {
	t.Parallel()

	context := map[string]interface{}{
		"project":       envvar.GetTestProjectFromEnv(),
		"random_suffix": acctest.RandString(t, 10),
	}

	acctest.VcrTest(t, resource.TestCase{
		PreCheck:                 func() { acctest.AccTestPreCheck(t) },
		ProtoV5ProviderFactories: acctest.ProtoV5ProviderBetaFactories(t),
		CheckDestroy:             testAccCheckGKEBackupRestoreChannelDestroyProducer(t),
		Steps: []resource.TestStep{
			{
				Config: testAccGKEBackupRestoreChannel_basic(context),
			},
			{
				ResourceName:            "google_gke_backup_restore_channel.restorechannel",
				ImportState:             true,
				ImportStateVerify:       true,
				ImportStateVerifyIgnore: []string{"labels", "location", "terraform_labels"},
			},
		},
	})
}

func testAccGKEBackupRestoreChannel_basic(context map[string]interface{}) string {
	return acctest.Nprintf(`
resource "google_gke_backup_restore_channel" "restorechannel" {
  name = "tf-test-testrestorechannel%{random_suffix}"
  location = "us-central1"
  destination_project = "projects/24240755850"
  description = "some-description"
  labels = {
    "some-key-1": "some-value-1"
  }
}
`, context)
}
