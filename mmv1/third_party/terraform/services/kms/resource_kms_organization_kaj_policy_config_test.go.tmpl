package kms_test

{{- if ne $.TargetVersionName "ga" }}
import (
	"testing"

	"github.com/hashicorp/terraform-plugin-testing/helper/resource"
	"github.com/hashicorp/terraform-plugin-testing/plancheck"

	"github.com/hashicorp/terraform-provider-google/google/acctest"
	"github.com/hashicorp/terraform-provider-google/google/envvar"
)

func TestAccKMSOrganizationKajPolicyConfig_update(t *testing.T) {
	t.Parallel()

	context := map[string]interface{}{
		"org_id":        envvar.GetTestOrgTargetFromEnv(t),
		"random_suffix": acctest.RandString(t, 10),
	}

	acctest.VcrTest(t, resource.TestCase{
		PreCheck:                 func() { acctest.AccTestPreCheck(t) },
		ProtoV5ProviderFactories: acctest.ProtoV5ProviderBetaFactories(t),
		ExternalProviders: map[string]resource.ExternalProvider{
                        "time": {},
                },
		Steps: []resource.TestStep{
			{
				Config: testAccKMSOrganizationKajPolicyConfig_basic(context),
			},
			{
				ResourceName:            "google_kms_organization_kaj_policy_config.example",
				ImportState:             true,
				ImportStateVerify:       true,
				ImportStateVerifyIgnore: []string{"organization"},
			},
			{
				Config: testAccKMSOrganizationKajPolicyConfig_update(context),
				ConfigPlanChecks: resource.ConfigPlanChecks{
					PreApply:	[]plancheck.PlanCheck{
						plancheck.ExpectResourceAction("google_kms_organization_kaj_policy_config.example", plancheck.ResourceActionUpdate),
					},
				},
			},
			{
				ResourceName:            "google_kms_organization_kaj_policy_config.example",
				ImportState:             true,
				ImportStateVerify:       true,
				ImportStateVerifyIgnore: []string{"organization"},
			},
		},
	})
}

func testAccKMSOrganizationKajPolicyConfig_basic(context map[string]interface{}) string {
	return acctest.Nprintf(`
resource "google_kms_organization_kaj_policy_config" "example" {
	provider 				= google-beta
	organization 				= "%{org_id}"
	default_key_access_justification_policy {
		allowed_access_reasons = [
			"CUSTOMER_INITIATED_ACCESS",
			"GOOGLE_INITIATED_SYSTEM_OPERATION",
		]
	}
}
`, context)
}

func testAccKMSOrganizationKajPolicyConfig_update(context map[string]interface{}) string {
	return acctest.Nprintf(`
resource "google_kms_organization_kaj_policy_config" "example" {
	provider 				= google-beta
	organization 				= "%{org_id}"
	default_key_access_justification_policy {
		allowed_access_reasons = [
			"CUSTOMER_INITIATED_ACCESS",
		]
	}
}
`, context)
}
{{- end }}
