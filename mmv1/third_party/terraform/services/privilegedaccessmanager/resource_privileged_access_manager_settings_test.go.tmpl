{{- if ne $.TargetVersionName "ga" }}

// Copyright (c) HashiCorp, Inc.
// SPDX-License-Identifier: MPL-2.0

// ----------------------------------------------------------------------------
//
//     ***     AUTO GENERATED CODE    ***    Type: MMv1     ***
//
// ----------------------------------------------------------------------------
//
//     This file is automatically generated by Magic Modules and manual
//     changes will be clobbered when the file is regenerated.
//
//     Please read more about how to change this file in
//     .github/CONTRIBUTING.md.
//
// ----------------------------------------------------------------------------

package privilegedaccessmanager_test

import (
	"testing"

	"github.com/hashicorp/terraform-plugin-testing/helper/resource"

	"github.com/hashicorp/terraform-provider-google/google/acctest"
	"github.com/hashicorp/terraform-provider-google/google/envvar"
)

func TestAccPrivilegedAccessManagerSettings_privilegedAccessManagerSettings_basic(t *testing.T) {
	t.Parallel()

	context := map[string]interface{}{
		"project":       envvar.GetTestProjectFromEnv(),
        "org_id":        envvar.GetTestOrgFromEnv(t),
		"random_suffix": acctest.RandString(t, 10),
	}

	acctest.VcrTest(t, resource.TestCase{
		PreCheck:                 func() { acctest.AccTestPreCheck(t) },
		ProtoV5ProviderFactories: acctest.ProtoV5ProviderBetaFactories(t),
        ExternalProviders: map[string]resource.ExternalProvider{
            "time": {},
        },
		Steps: []resource.TestStep{
			{
				Config: testAccPrivilegedAccessManagerSettings_privilegedAccessManagerSettings_basic(context),
			},
			{
				ResourceName:            "google_privileged_access_manager_settings.settings",
				ImportState:             true,
				ImportStateVerify:       true,
				ImportStateVerifyIgnore: []string{"location", "parent"},
			},
		},
	})
}

func testAccPrivilegedAccessManagerSettings_privilegedAccessManagerSettings_basic(context map[string]interface{}) string {
	return acctest.Nprintf(`
resource "google_folder" "folder" {
  provider            = google-beta
  display_name        = "tf-test-%{random_suffix}"
  parent              = "organizations/%{org_id}"
  deletion_protection = false
}

resource "time_sleep" "wait_90s" {
    depends_on = [google_folder.folder]
    create_duration = "90s"
}

resource "google_privileged_access_manager_settings" "settings" {
    provider = google-beta
    location = "global"
    parent   = "folders/${google_folder.folder.folder_id}"
    service_account_approver_settings {
        enabled = false
    }
    email_notification_settings {
        custom_notification_behavior {
            requester_notifications {
                entitlement_assigned = "DISABLED"
                grant_activated = "DISABLED"
                grant_denied = "ENABLED"
                grant_expired = "DISABLED"
                grant_ended = "DISABLED"
                grant_revoked = "DISABLED"
                grant_externally_modified = "DISABLED"
                grant_activation_failed = "DISABLED"
            }
        }
    }

    depends_on = [time_sleep.wait_90s]
}
`, context)
}

{{- end }}
