package gemini_test
{{- if ne $.TargetVersionName "ga" }}

import (
	"os"
	"testing"

	"github.com/hashicorp/terraform-plugin-testing/helper/resource"

	"github.com/hashicorp/terraform-provider-google/google/acctest"
)

func TestAccGeminiCodeRepositoryIndex_update(t *testing.T) {
	bootstrappedKMS := acctest.BootstrapKMSKeyInLocation(t, "us-central1")
	context := map[string]interface{}{
		"random_suffix": acctest.RandString(t, 10),
		"project_id": os.Getenv("GOOGLE_PROJECT"),
		"kms_key":    bootstrappedKMS.CryptoKey.Name,
	}

	acctest.VcrTest(t, resource.TestCase{
		PreCheck:                 func() { acctest.AccTestPreCheck(t) },
		ProtoV5ProviderFactories: acctest.ProtoV5ProviderBetaFactories(t),
		Steps: []resource.TestStep{
			{
				Config: testAccGeminiCodeRepositoryIndex_basic(context),
			},
			{
				ResourceName:            "google_gemini_code_repository_index.example",
				ImportState:             true,
				ImportStateVerify:       true,
				ImportStateVerifyIgnore: []string{"code_repository_index_id", "labels", "location", "terraform_labels"},
			},
			{
				Config: testAccGeminiCodeRepositoryIndex_update(context),
			},
			{
				ResourceName:            "google_gemini_code_repository_index.example",
				ImportState:             true,
				ImportStateVerify:       true,
				ImportStateVerifyIgnore: []string{"code_repository_index_id", "labels", "location", "terraform_labels"},
			},
		},
	})
}

func testAccGeminiCodeRepositoryIndex_basic(context map[string]interface{}) string {
	return acctest.Nprintf(`
resource "google_gemini_code_repository_index" "example" {
  provider = google-beta
  labels = {"ccfe_debug_note": "terraform_e2e_should_be_deleted"}
  location = "us-central1"
  code_repository_index_id = "tf-test-cri-index-example-%{random_suffix}"
  kms_key = "%{kms_key}"
  depends_on = [google_kms_crypto_key_iam_binding.crypto_key_binding]
}

data "google_project" "project" {
  provider = google-beta
}

resource "google_kms_crypto_key_iam_binding" "crypto_key_binding" {
  provider = google-beta
  crypto_key_id = "%{kms_key}"
  role          = "roles/cloudkms.cryptoKeyEncrypterDecrypter"
  members = [
    "serviceAccount:service-${data.google_project.project.number}@gcp-sa-cloudaicompanion.iam.gserviceaccount.com",
  ]
}
`, context)
}

func testAccGeminiCodeRepositoryIndex_update(context map[string]interface{}) string {
	return acctest.Nprintf(`
resource "google_gemini_code_repository_index" "example" {
  provider = google-beta
  labels = {"ccfe_debug_note": "terraform_e2e_should_be_deleted", "new_label": "new_val"}
  location = "us-central1"
  code_repository_index_id = "tf-test-cri-index-example-%{random_suffix}"
  kms_key = "%{kms_key}"
}
`, context)
}
{{ end }}
