<%# The license inside this block applies to this file.
# Copyright 2017 Google Inc.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
-%>
# frozen_string_literal: false

<%= lines(autogen_notice :ruby) -%>
<%
  requires = generate_requires(nested_properties)
-%>
<%= lines(emit_requires(requires)) -%>
module GoogleInSpec
  module <%= product_ns %>
    module Property
      class <%= class_name -%>
<% if !nested_properties.empty? -%>
<% nested_properties.each do |prop| -%>

        attr_reader :<%= prop.out_name %>
<% end # nested_properties.each -%>

<% end # if !nested_properties.empty? -%>
        def initialize(args = nil)
          return if args.nil?
<% nested_properties.each do |prop| -%>
<%
  parse_code = "@#{prop.out_name} = #{parse_code(prop, 'args')}"
-%>
<%= lines(indent(parse_code, 10)) -%>
<% end # nested_properties.each -%>
        end
      end
<% if emit_array -%>

      class <%= class_name %>Array
        def self.parse(value)
          return if value.nil?
          return <%= class_name %>.new(value) unless value.is_a?(::Array)
          value.map { |v| <%= class_name %>.new(v) }
        end
      end
<% end #if emit_array -%>
    end
  end
end