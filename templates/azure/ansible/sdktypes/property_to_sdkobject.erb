<%
    # We support the following different SDK marshalling types (property path -> sdk path):
    #   1. x -> x        (e.g. enum, or "a" in case 5 - 7)
    #   2. x -> a        (e.g. property rename)
    #   3. x/y -> a      (e.g. property restructure, we handle x using its own definition)
    #   4. x -> a/b      (e.g. property restructure)
    #   5. a/x -> a/b    (actually equivalent to case 2 after we handled "a")
    #   6. a/x/y -> a/b  (actually equivalent to case 3 after we handled "a")
    #   7. a/x -> a/b/c  (actually equivalent to case 4 after we handled "a")

    sdk_marshal.properties.each do |prop|
      reference = get_applicable_reference(prop.azure_sdk_references, sdk_marshal.operation.request)
      sdk_type = sdk_marshal.operation.request[reference]
      var_name = azure_python_variable_name(prop, sdk_marshal.operation)
      parent_ref = get_parent_reference(reference)

      if require_type_marshal?(prop, sdk_marshal)
        if self_require_type_marshal?(prop, sdk_marshal)
-%>
<%=       lines(build_property_normalization(prop, sdk_marshal)) -%>
<%      else -%>
if <%= sdk_marshal.input -%>.get('<%= var_name -%>') is not None:
<%
          child_marshal = sdk_marshal.create_child_descriptor(prop, reference, sdk_type)
          output_expression = "#{sdk_marshal.marshalled_references[parent_ref]}['#{sdk_type.python_field_name}']"
          sdk_marshal.add_marshalled_reference(reference, output_expression)
-%>
<%=       lines(build_property_to_sdk_object(child_marshal, 4)) -%>
<%
        end
      else
        output_expression = "#{sdk_marshal.marshalled_references[parent_ref]}['#{sdk_type.python_field_name}']"
        sdk_marshal.add_marshalled_reference(reference, output_expression)
      end
    end
-%>