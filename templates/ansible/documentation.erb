################################################################################
# Documentation
################################################################################

<%
  metadata_version = quote_string(@config.manifest.get('metadata_version',
                                                       object))
  supported_by = quote_string(@config.manifest.get('supported_by', object))
  supported_by = quote_string(@config.manifest.get('supported_by', config))
-%>
ANSIBLE_METADATA = {'metadata_version': <%= metadata_version -%>,
                    'status': <%= @config.manifest.get('status', object) -%>,
                    'supported_by': <%= supported_by -%>}

DOCUMENTATION = '''
---
<%= to_yaml({
  'module' => module_name(object),
  'description' => format_description(object.description),
  'short_description' => "Creates a GCP #{object.name}",
  'version_added' => @config.manifest.get('version_added', object).to_f,
  'author' => @config.manifest.get('author', object),
  'requirements' => @config.manifest.get('requirements', object),
  'options' => [
    {
      'state' => {
        'description' => ['Whether the given object should exist in GCP'],
        'choices' => ['present', 'absent'],
        'default' => 'present'
      },
    },
    object.all_user_properties.reject(&:output).map { |p| documentation_for_property(p) }
  ].flatten.compact.reduce({}, :merge),
  'extends_documentation_fragment' => 'gcp',
  'notes' => (
    [
      ("API Reference: U(#{object.references.api})" if object.references.api),
      object.references.guides.map { |guide, link| "#{guide}: U(#{link})" }
    ].flatten.compact if object.references
  )
})-%>
'''

<% if example -%>
EXAMPLES = '''
<% res_readable_name = object.name.uncombine -%>
<% if example.dependencies -%>
<%   example.dependencies.each do |depend| -%>
<%= lines(depend.build_test('present', object, false), 1) -%>
<%   end # example.dependencies.each -%>
<% end # if example.dependencies -%>
<%= lines(example.task.build_example('present', object)) -%>
'''
<% end -%>

RETURN = '''
<%= to_yaml(object.all_user_properties.map { |p| returns_for_property(p) }.reduce({}, :merge)) -%>
'''
