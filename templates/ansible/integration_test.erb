---
<%= lines(autogen_notice :yaml) -%>
# Pre-test setup
<% unless example.dependencies.nil? -%>
<% example.dependencies.each do |depend| -%>
<%= lines(depend.build_test('present', object, false)) -%>
<% end # example.dependencies.each -%>
<% end # if example.dependencies -%>
<%= lines(example.task.build_test('absent', object, false)) -%>
#----------------------------------------------------------
<% resource_name = object.name.titleize.downcase -%>
<%= lines(example.task.build_test('present', object, false)) -%>
  register: result
<% if object.readonly -%>
- name: assert changed is false
<% else # if object.readonly -%>
- name: assert changed is true
<% end # if object.readonly -%>
  assert:
    that:
<% if object.readonly -%>
      # <%= object.name -%> is not altered, just verified.
      - result.changed == false
<% else # if object.readonly -%>
      - result.changed == true
<% end # if object.readonly -%>
<% unless example.verifier.nil? -%>
<%= lines(example.verifier.build_task('present', object)) -%>
<% end -%>
<% unless object.readonly -%>
# ----------------------------------------------------------------------------
<%= lines(example.task.build_test('present', object, true)) -%>
  register: result
- name: assert changed is false
  assert:
    that:
      - result.changed == false
#----------------------------------------------------------
<%= lines(example.task.build_test('absent', object, false)) -%>
  register: result
- name: assert changed is true
  assert:
    that:
      - result.changed == true
<% unless example.verifier.nil? -%>
<%= lines(example.verifier.build_task('absent', object)) -%>
<% end -%>
# ----------------------------------------------------------------------------
<%= lines(example.task.build_test('absent', object, true)) -%>
  register: result
- name: assert changed is false
  assert:
    that:
      - result.changed == false
<% end # object.readonly -%>
<% if example.dependencies and !example.dependencies.empty? -%>
#---------------------------------------------------------
# Post-test teardown
# If errors happen, don't crash the playbook!
<% example.dependencies.reverse.each do |depend| -%>
<%= lines(depend.build_test('absent', object, false)) -%>
  ignore_errors: true
<% end # example.dependencies.each -%>
<% end # if example.dependencies -%>
