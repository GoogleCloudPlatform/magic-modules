if v, ok := res["diskEncryptionKey"]; ok {
  original := v.(map[string]interface{})
  transformed := make(map[string]interface{})
  // The raw key won't be returned, so we need to use the original.
  transformed["rawKey"] = d.Get("disk_encryption_key.0.raw_key")
  transformed["sha256"] = original["sha256"]
  <% if object.name == 'Disk' -%>
  if v, ok := d.GetOk("disk_encryption_key_raw"); ok {
    transformed["rawKey"] = v
  }
  d.Set("disk_encryption_key_sha256", original["sha256"])
  <% end -%>
  res["diskEncryptionKey"] = transformed
}

if v, ok := res["sourceImageEncryptionKey"]; ok {
  original := v.(map[string]interface{})
  transformed := make(map[string]interface{})
  // The raw key won't be returned, so we need to use the original.
  transformed["rawKey"] = d.Get("source_image_encryption_key.0.raw_key")
  transformed["sha256"] = original["sha256"]
  res["sourceImageEncryptionKey"] = transformed
}

if v, ok := res["sourceSnapshotEncryptionKey"]; ok {
  original := v.(map[string]interface{})
  transformed := make(map[string]interface{})
  // The raw key won't be returned, so we need to use the original.
  transformed["rawKey"] = d.Get("source_snapshot_encryption_key.0.raw_key")
  transformed["sha256"] = original["sha256"]
  res["sourceSnapshotEncryptionKey"] = transformed
}

return res, nil
