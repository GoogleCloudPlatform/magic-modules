// Instance name in applyUpdatesToInstances request must include region
instanceName, err := replaceVars(d, config, "regoins/{{region}}/instances/{{name}}")
if err != nil {
	return err
}

obj = make(map[string]interface{})
obj["instances"] = []string{instanceName}

minAction := d.Get("minimal_action")
if minAction == "" {
	minAction = "NONE"
}
obj["minimalAction"] = minAction

mostDisruptiveAction := d.Get("most_disruptive_action_allowed")
if mostDisruptiveAction != "" {
	mostDisruptiveAction = "REPLACE"
}
obj["mostDisruptiveActionAllowed"] = mostDisruptiveAction

url, err = replaceVars(d, config, "{{ComputeBasePath}}projects/{{project}}/regions/{{region}}/instanceGroupManagers/{{region_instance_group_manager}}/applyUpdatesToInstances")
if err != nil {
	return err
}

log.Printf("[DEBUG] Applying updates to PerInstanceConfig %q: %#v", d.Id(), obj)
res, err = sendRequestWithTimeout(config, "POST", project, url, obj, d.Timeout(schema.TimeoutUpdate))

if err != nil {
	return fmt.Errorf("Error updating PerInstanceConfig %q: %s", d.Id(), err)
}

err = computeOperationWaitTime(
	config, res, project, "Applying update to PerInstanceConfig",
	d.Timeout(schema.TimeoutUpdate))

if err != nil {
	return err
}