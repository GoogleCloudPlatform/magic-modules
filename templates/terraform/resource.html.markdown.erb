<%- # the license inside this block applies to this file
# Copyright 2017 Google Inc.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
-%>
<%# NOTE NOTE NOTE
    The newlines in this file are *load bearing*.  This file outputs
    Markdown, which is extremely sensitive to newlines.  You have got
    to have a newline after every attribute and property, because
    otherwise MD will think the next element is part of the previous
    property's bullet point.  You cannot have any double newlines in the
    middle of a property or attribute, because MD will think that the
    empty line ends the bullet point and the indentation will be off.
    You must have a newline before and after all --- document indicators,
    and you must have a newline before and after all - - - hlines.
    You cannot have more than one blank line between properties.
    The --- document indicator must be the first line of the file.
    As long as you only use `build_property_documentation`, it all works
    fine - but when you need to add custom docs (notes, etc), you need
    to remember these things.

    Know also that the `lines` function in heavy use in MagicModules will
    strip exactly one trailing newline - unless that's what you've designed
    your docstring for, it's easier to insert newlines where you need them
    manually.  That's why, in this file, we use `lines` on anything which
    is generated from a ruby function, but skip it on anything that is
    directly inserted from YAML.
-%>
<%
  resource_name = product_ns.underscore.downcase + '_' + object.name.underscore
  properties = object.all_user_properties
-%>
---
<%= lines(autogen_notice :yaml) -%>
layout: "google"
page_title: "Google: google_<%= resource_name -%>"
sidebar_current: "docs-google-<%= resource_name.gsub("_", "-") -%>"
description: |-
<%= indent(object.description.first_sentence, 2) %>
---

# google\_<%= resource_name.gsub("_", "\\_") %>

<%= lines(object.description) -%>

<% if object.min_version.name == 'beta' -%>
~> **Warning:** This resource is in beta, and should be used with the terraform-provider-google-beta provider.
See [Provider Versions](https://terraform.io/docs/providers/google/provider_versions.html) for more details on beta resources.
<% end -%>

<% if !object.references.nil? -%>
To get more information about <%= object.name -%>, see:

<%   if !object.references.api.nil? -%>
* [API documentation](<%= object.references.api -%>)
<%   end # object...api.nil? -%>
<%   if !object.references.guides.empty? -%>
* How-to Guides
<%     object.references.guides.each do |title, link| -%>
    * [<%= title -%>](<%= link -%>)
<%     end # object...guides.each -%>
<%   end # object...guides.empty? -%>
<% end # object...api.nil? -%>
<%- unless object.docs.warning.nil? -%>

~> **Warning:** <%= object.docs.warning -%>
<%- end -%>

<% unless object.examples.nil? -%>
## Example Usage
<%= "\n" + object.examples -%>

<% end -%>
<% unless object.example.empty? -%>
  <%- object.example.each do |example| -%>
    <%- unless example.skip_test -%>
<div class = "oics-button" style="float: right; margin: 0 0 -15px">
  <a href="<%= example.oics_link %>" target="_blank">
    <img alt="Open in Cloud Shell" src="//gstatic.com/cloudssh/images/open-btn.svg" style="max-height: 44px; margin: 32px auto; max-width: 100%;">
  </a>
</div>
    <%- end -%>
## Example Usage - <%= example.name.camelize(:upper).uncombine %>


<%= example.config_documentation -%>
  <%- end %>
<%- end -%>
## Argument Reference

The following arguments are supported:

<% properties.select(&:required).each do |prop| -%>
<%= lines(build_property_documentation(prop)) -%>
<% end -%>

<% properties.select(&:required).each do |prop| -%>
<%= lines(build_nested_property_documentation(prop)) -%>
<% end -%>
<%- unless object.docs.required_properties.nil? -%>
<%= "\n" + object.docs.required_properties -%>
<% end -%>

- - -

<% properties.reject(&:required).reject(&:output).each do |prop| -%>
<%= lines(build_property_documentation(prop)) -%>
<% end -%>
<% if object.base_url.include?("{{project}}") -%>
* `project` - (Optional) The ID of the project in which the resource belongs.
    If it is not provided, the provider project is used.
<% end -%>

<% properties.reject(&:required).reject(&:output).each do |prop| -%>
<%= lines(build_nested_property_documentation(prop)) -%>
<% end -%>
<%- unless object.docs.optional_properties.nil? -%>
<%= "\n" + object.docs.optional_properties -%>
<% end -%>

<% unless properties.select(&:output).empty? && object.docs.attributes.nil? -%>
## Attributes Reference

In addition to the arguments listed above, the following computed attributes are exported:

<% properties.select(&:output).each do |prop| -%>
<%= lines(build_property_documentation(prop)) -%>
<% end -%>
<% if (object.exports || []).any? { |e| e.is_a?(Api::Type::SelfLink)} -%>
* `self_link` - The URI of the created resource.
<% end -%>

<% properties.select(&:output).each do |prop| -%>
<%= lines(build_nested_property_documentation(prop)) -%>
<% end -%>
<%- unless object.docs.attributes.nil? -%>
<%= "\n" + object.docs.attributes -%>
<% end -%>
<% end -%>

<% unless object.async.nil? -%>
## Timeouts

This resource provides the following
[Timeouts](/docs/configuration/resources.html#timeouts) configuration options:

- `create` - Default is <%= object.async.operation.timeouts.insert_sec / 60 -%> minutes.
<% if updatable?(object, properties) -%>
- `update` - Default is <%= object.async.operation.timeouts.update_sec / 60 -%> minutes.
<% end -%>
- `delete` - Default is <%= object.async.operation.timeouts.delete_sec / 60 -%> minutes.
<% end -%>

## Import

<%= object.name -%> can be imported using any of these accepted formats:

```
<% import_id_formats(object).each do |id_format| -%>
$ terraform import google_<%= resource_name -%>.default <%= id_format %>
<% end -%>
```
