<% if false # the license inside this if block pertains to this file -%>
  # Copyright 2017 Google Inc.
  # Licensed under the Apache License, Version 2.0 (the "License");
  # you may not use this file except in compliance with the License.
  # You may obtain a copy of the License at
  #
  #     http://www.apache.org/licenses/LICENSE-2.0
  #
  # Unless required by applicable law or agreed to in writing, software
  # distributed under the License is distributed on an "AS IS" BASIS,
  # WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  # See the License for the specific language governing permissions and
  # limitations under the License.
<% end -%>
func flatten<%= prefix %><%= titlelize_property(property) %>(v interface{}) interface{} {
  <% if property.is_a?(Api::Type::Primitive) || property.is_a?(Api::Type::ResourceRef) -%>
    return v
  <% elsif property.is_a?(Api::Type::NestedObject) -%>
    original := v.(map[string]interface{})
    transformed := make(map[string]interface{})
    // TODO: Handle ignored nested property
    <% property.properties.each do |prop| -%>
      transformed["<%= Google::StringUtils.underscore(prop.name) %>"] =
          flatten<%= prefix %><%= titlelize_property(property) %><%= titlelize_property(prop) %>(original["<%= prop.name %>"])
    <% end -%>
    return []interface{}{transformed}
  <% else -%>
    // TODO: Property '<%= property.name %>' of type <%= property.class %> is not supported"
    return nil
  <% end -%>
}
<% if property.is_a?(Api::Type::NestedObject) -%>
  <% property.properties.each do |prop| -%>
    // TODO: Handle ignored nested property
    <%= build_flatten_method(config, prefix + titlelize_property(property), prop) %>
  <% end -%>
<% end -%>