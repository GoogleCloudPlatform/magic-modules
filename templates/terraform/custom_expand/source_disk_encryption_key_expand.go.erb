<%# The license inside this block applies to this file.
	# Copyright 2018 Google Inc.
	# Licensed under the Apache License, Version 2.0 (the "License");
	# you may not use this file except in compliance with the License.
	# You may obtain a copy of the License at
	#
	#     http://www.apache.org/licenses/LICENSE-2.0
	#
	# Unless required by applicable law or agreed to in writing, software
	# distributed under the License is distributed on an "AS IS" BASIS,
	# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	# See the License for the specific language governing permissions and
	# limitations under the License.
-%>
func expand<%= prefix -%><%= titlelize_property(property) -%>(v interface{}, d *schema.ResourceData, config *Config) (interface{}, error) {
	l := v.([]interface{})
	req := make([]interface{}, 0, 1)
	if len(l) == 1 {
		// There is a value
		outMap := make(map[string]interface{})
		outMap["rawKey"] = l[0].(map[string]interface{})["raw_key"]
		req = append(req, outMap)
	} else {
		// Check alternative setting?
		if altV, ok := d.GetOk("source_disk_encryption_key_raw"); ok && altV != "" {
			outMap := make(map[string]interface{})
			outMap["rawKey"] = altV
			req = append(req, outMap)
    }
	}
 	return req, nil
}
