<% if false # the license inside this if block pertains to this file -%>
	# Copyright 2017 Google Inc.
	# Licensed under the Apache License, Version 2.0 (the "License");
	# you may not use this file except in compliance with the License.
	# You may obtain a copy of the License at
	#
	#     http://www.apache.org/licenses/LICENSE-2.0
	#
	# Unless required by applicable law or agreed to in writing, software
	# distributed under the License is distributed on an "AS IS" BASIS,
	# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	# See the License for the specific language governing permissions and
	# limitations under the License.
<% end -%>
func expand<%= prefix -%><%= titlelize_property(property) -%>(v interface{}, d *schema.ResourceData, config *Config) (interface{}, error) {
<% url_name = String.new(prefix)
   url_name[0] = url_name[0].downcase
-%>
  if v == nil || v.(string) == "" {
    return "", nil
  } else if strings.HasPrefix(v.(string), "https://") {
    return v, nil
  } else if strings.HasPrefix(v.(string), "projects/") {
    return "https://www.googleapis.com/compute/v1/" + v.(string), nil
  } else if strings.HasPrefix(v.(string), "regions/") {
    url, err := replaceVars(d, config, "https://www.googleapis.com/compute/v1/projects/{{project}}/")
    if err != nil {
      return nil, err
    }
    return url + v.(string), nil
  } else if strings.HasPrefix(v.(string), "<%= url_name -%>") {
    url, err := replaceVars(d, config, "https://www.googleapis.com/compute/v1/projects/{{project}}/regions/{{region}}/")
    if err != nil {
      return nil, err
    }
    return url + v.(string), nil
  }
  url, err := replaceVars(d, config, "https://www.googleapis.com/compute/v1/projects/{{project}}/regions/{{region}}/<%= url_name -%>/")
  if err != nil {
    return nil, err
  }
  return url + v.(string), nil
}
