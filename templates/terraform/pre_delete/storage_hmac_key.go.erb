obj := make(map[string]interface{})
metadataProp, err := expandStorageHmacKeyMetadata(nil, d, config)
if err != nil {
	return err
} else if v, ok := d.GetOkExists("metadata"); !isEmptyValue(reflect.ValueOf(v)) && (ok || !reflect.DeepEqual(v, metadataProp)) {
	obj["metadata"] = metadataProp
}

obj["metadata"]["state"] = "INACTIVE"

url, err := replaceVars(d, config, "{{StorageBasePath}}projects/{{project}}/hmacKeys/{{accessId}}")
if err != nil {
	return err
}

log.Printf("[DEBUG] Deactivating HmacKey %q: %#v", d.Id(), obj)
_, err = sendRequestWithTimeout(config, "PUT", project, url, obj, d.Timeout(schema.TimeoutUpdate))
if err != nil {
		return fmt.Errorf("Error deactivating HmacKey %q: %s", d.Id(), err)
}
