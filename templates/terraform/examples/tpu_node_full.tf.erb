data "google_tpu_tensorflow_versions" "available" {
}

<%#-
  WARNING: cidr_block must not overlap with other existing TPU blocks
  Make sure if you change this value that it does not overlap with the
  autogenerated examples.
-%>

resource "google_tpu_node" "<%= ctx[:primary_resource_id] %>" {
  name = "<%= ctx[:vars]["node_name"] %>"
  zone = "us-central1-b"

  accelerator_type = "v3-8"

  tensorflow_version = data.google_tpu_tensorflow_versions.available.versions[0]

  description = "Terraform Google Provider test TPU"
  use_service_networking = true
<%#-
  We previously used a separate network resource here, but TPUs only allow using 50
  different network names, ever. This caused our tests to start failing, so just
  use the default network in order to still demonstrate using as many fields as
  possible on the resource.
-%>
  network = google_service_networking_connection.private_service_connection.network

  labels = {
    foo = "bar"
  }

  scheduling_config {
    preemptible = true
  }
}

data "google_compute_network" "network" {
  name = "default"
}

resource "google_compute_global_address" "service_range" {
  name          = "tf-test%{random_suffix}"
  purpose       = "VPC_PEERING"
  address_type  = "INTERNAL"
  prefix_length = 16
  network       = data.google_compute_network.network.id
}

resource "google_service_networking_connection" "private_service_connection" {
  network                 = data.google_compute_network.network.id
  service                 = "servicenetworking.googleapis.com"
  reserved_peering_ranges = [google_compute_global_address.service_range.name]
}