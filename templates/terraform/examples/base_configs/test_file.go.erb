<%= lines(autogen_notice :go) -%>

package google

import (
  "fmt"
  "testing"

  "github.com/hashicorp/terraform/helper/acctest"
  "github.com/hashicorp/terraform/helper/resource"
)
<% object.example.reject(&:skip_test).each do |example| -%>
<%
	resource_name = product_ns + object.name
	# {Compute}{Address}_{addressBasic}
	test_slug = "#{resource_name}_#{example.name.camelize}Example"
	  ignore_read = data[:object].all_user_properties
                 .select(&:ignore_read)
                 .map { |p| p.name.underscore }
                 .concat(example.ignore_read_extra)
-%>

func TestAcc<%= test_slug -%>(t *testing.T) {
  t.Parallel()

	resource.Test(t, resource.TestCase{
		PreCheck:     func() { testAccPreCheck(t) },
		Providers:    testAccProviders,
		CheckDestroy: testAccCheck<%= "#{resource_name}" -%>Destroy,
		Steps: []resource.TestStep{
			{
				Config: testAcc<%= test_slug -%>(acctest.RandString(10)),
			},
			{
				ResourceName:      "<%= "google_#{resource_name.underscore}" -%>.<%= example.primary_resource_id -%>",
				ImportState:       true,
				ImportStateVerify: true,
        <%- unless ignore_read.empty? -%>
        ImportStateVerifyIgnore: <%= go_literal(ignore_read) %>,
        <%- end -%>
			},
		},
	})
}

func testAcc<%= test_slug -%>(val string) string {
<%= example.config_test -%>
}
<%- end %>
