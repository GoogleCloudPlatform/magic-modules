<% if false # the license inside this if block pertains to this file -%>
# Copyright 2017 Google Inc.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
<% end -%>
<%= compile 'templates/license.erb' -%>

<%= lines(autogen_notice :ruby) -%>

require 'google/<%= prop_ns_dir -%>/property/base'

module Google
  module <%= product_ns %>
    module Data
      # A Time that always returns a ISO8601 String
      class Time < ::Time
<%# TODO(alexstephen): Add a .to_resource method to replace .to_s -%>
<%
  # Overriden .to_s ensures that value coercison does not need to be placed
  # within the providers. Providers do not have to worry about the time formats
-%>
        def to_s
          # All GCP APIs expect timestamps in the ISO-8601 / RFC3339 format

          # Overriding the .to_s method ensures that Ruby will get a
          # ISO-8601 timestamp at the last moment and ensures the timestamp
          # format is abstracted away.
          iso8601
        end
      end
    end

    module Property
      # A Puppet property that holds a date & time value
      class Time < Google::<%= product_ns %>::Property::Base
        def self.unsafe_munge(value)
          return if value.nil?
          Data::Time.parse(value)
        end

        def unsafe_munge(value)
          self.class.unsafe_munge(value)
        end

        def self.api_munge(value)
          return if value.nil?
          Data::Time.parse(value)
        end
      end
    end
  end
end
